summary(oak.clim)
missouri
t.mean <- read.csv("processed_data/ch2_tmin.csv", header=T)
t.mean <- read.csv("processed_data/ch2_tmean.csv", header=T)
t.mean <- read.csv("processed_data/ch2_tmean.csv", header=T)#
t.min <- read.csv("processed_data/ch2_tmin.csv", header=T)#
t.max <- read.csv("processed_data/ch2_tmax.csv", header=T)#
precip <- read.csv("processed_data/ch2_ppt.csv", header=T)
precip <- read.csv("processed_data/ch2_precip.csv", header=T)
summary(t.mean)
t.mean <- t.mean[t.mean$Year >= 1950 & t.mean$Year <= 2012,]
summary(t.mean)
t.mean <- t.mean[t.mean$Year >= 1950 & t.mean$Year <= 2012,]#
t.min <- t.min[t.min$Year >= 1950 & t.min$Year <= 2012,]#
t.max <- t.max[t.max$Year >= 1950 & t.max$Year <= 2012,]#
precip <- precip[precip$Year >= 1950 & precip$Year <= 2012,]
summary(t.mean)
summary(t.min)
summary(t.max)
summary(precip)
summary(climate.site)
summary(sites.crn)
summary(site.chron)
summary(sites.rw)
summary(tree.rw)
rw.use <- tree.rw[,c("Site", "TreeID", "RW")]
summary(rw.use)
rw.use <- tree.rw[tree.rw$Site %in% sites.use,c("Site", "TreeID", "RW")]
summary(rw.use)
summary(site.chron)
harvard.crn <- as.data.frame(site.chron[[1]])
summary(sites.crn)
summary(site.chron)
summary(site.chron[[1]])
site.chron[[1]][,"Year"]
sites.crn <- data.frame(Harvard = harvard.crn[, "Harres"], #
						Howland = howland.crn[,"Howres"], #
						Missouri = misso.crn[,"Misres"],#
						Morgan_Monroe = mmf.crn[,"Morres"], #
						Oak_openings = oakop.crn[,"Oakres"],#
						Year = site.chron[[1]][,"Year"])#
#
summary(sites.crn)
sites.crn <- data.frame(Harvard = harvard.crn[, "Harres"], #
						Howland = howland.crn[,"Howres"], #
						Missouri = misso.crn[,"Misres"],#
						Morgan_Monroe = mmf.crn[,"Morres"], #
						Oak_openings = oakop.crn[,"Oakres"]#
						)
summary(sites.crn)
summary(sites.chron)
summary(sites.chrn)
summary(sites.crn)
sites.crn$Year <- site.chron[[1]][,"Year"]
summary(sites.crn)
summary(climate.site)
harv.clim
harvard.crn
summary(sites.crn)
head(sites.crn)
sites.crn
summary(tree.rw)
head(tree.rw)
summary(sites.rw)
summary(sites.rw[[1]])
head(sites.rw[[1]])
head(sites.crn)
head(t.mean)
summary(sites.crn)
unique(t.mean$Site.Name)
t.mean$Site.Name <- recode(t.mean$Site.Name, "'Missouri Ozark' = 'Missouri'; 'Morgan Monroe State Park'='Morgan_Monroe'; 'Oak Openings Toledo' = 'Oak_openings'")
t.mean$Site.Name <- recode(t.mean$Site.Name, "'Missouri Ozark' = 'Missouri'; 'Morgan Monroe State Park'='Morgan_Monroe'; 'Oak Openings Toledo' = 'Oak_openings'")#
#
t.min$Site.Name <- recode(t.min$Site.Name, "'Missouri Ozark' = 'Missouri'; 'Morgan Monroe State Park'='Morgan_Monroe'; 'Oak Openings Toledo' = 'Oak_openings'")#
t.max$Site.Name <- recode(t.max$Site.Name, "'Missouri Ozark' = 'Missouri'; 'Morgan Monroe State Park'='Morgan_Monroe'; 'Oak Openings Toledo' = 'Oak_openings'")#
precip$Site.Name <- recode(precip$Site.Name, "'Missouri Ozark' = 'Missouri'; 'Morgan Monroe State Park'='Morgan_Monroe'; 'Oak Openings Toledo' = 'Oak_openings'")
sites <- names(sites.crn[,c("Harvard", "Howland", "Missouri", "Morgan_Monroe", "Oak_Openings")])
sites.crn[,c("Harvard", "Howland", "Missouri", "Morgan_Monroe", "Oak_Openings")]
sites <- c("Harvard", "Howland", "Missouri", "Morgan_Monroe", "Oak_Openings")
sites
test<-list()
head(sites.crn)
i = "Harvard"
i
sites
cor(sites.crn[,i], t.mean[Site.Name %in% i,], mehtod="pearson")
cor(sites.crn[,i], t.mean[Site.Name %in% i,], method="pearson")
cor(sites.crn[,i], t.mean[t.mean$Site.Name %in% i,], method="pearson")
t.mean$Site.Name %in% i
t.mean[t.mean$Site.Name %in% i,]
t.mean[t.mean$Site.Name %in% i,!c("Site.Name", "Year")]
t.mean[t.mean$Site.Name %in% i,c(!"Site.Name", "Year")]
t.mean[t.mean$Site.Name %in% i,!c("Site.Name", "Year")]
t.mean[t.mean$Site.Name %in% i,c("Site.Name", "Year")]
t.mean[t.mean$Site.Name %in% i,c(!"Site.Name", !"Year")]
t.mean[t.mean$Site.Name %in% i,!names(t.mean) %in% c("Site.Name", "Year")]
cor(sites.crn[,i], t.mean[t.mean$Site.Name %in% i,!names(t.mean) %in% c("Site.Name", "Year")], method="pearson")
cor(sites.crn[,i], t.mean[t.mean$Site.Name %in% i,!names(t.mean) %in% c("Site.Name", "Year")], method="pearson", na.rm=T)
sites.crn[,i]
head(sites.crn)
sites.crn <- sites.crn[sites.crn$Year > 1950,]
head(sites.crn)
cor(sites.crn[,i], t.mean[t.mean$Site.Name %in% i,!names(t.mean) %in% c("Site.Name", "Year")], method="pearson")
t.mean <- t.mean[t.mean$Year >= 1951 & t.mean$Year <= 2012,]#
t.min <- t.min[t.min$Year >= 1951 & t.min$Year <= 2012,]#
t.max <- t.max[t.max$Year >= 1951 & t.max$Year <= 2012,]#
precip <- precip[precip$Year >= 1951 & precip$Year <= 2012,]#
summary(t.mean)#
summary(t.min)#
summary(t.max)#
summary(precip)#
#
head(t.mean)#
unique(t.mean$Site.Name)
t.mean$Site.Name <- recode(t.mean$Site.Name, "'Missouri Ozark' = 'Missouri'; 'Morgan Monroe State Park'='Morgan_Monroe'; 'Oak Openings Toledo' = 'Oak_openings'")#
#
t.min$Site.Name <- recode(t.min$Site.Name, "'Missouri Ozark' = 'Missouri'; 'Morgan Monroe State Park'='Morgan_Monroe'; 'Oak Openings Toledo' = 'Oak_openings'")#
t.max$Site.Name <- recode(t.max$Site.Name, "'Missouri Ozark' = 'Missouri'; 'Morgan Monroe State Park'='Morgan_Monroe'; 'Oak Openings Toledo' = 'Oak_openings'")#
precip$Site.Name <- recode(precip$Site.Name, "'Missouri Ozark' = 'Missouri'; 'Morgan Monroe State Park'='Morgan_Monroe'; 'Oak Openings Toledo' = 'Oak_openings'")
cor(sites.crn[,i], t.mean[t.mean$Site.Name %in% i,!names(t.mean) %in% c("Site.Name", "Year")], method="pearson")
for(i in sites){#
	test[[i]] <- cor(sites.crn[,i], t.mean[t.mean$Site.Name %in% i,!names(t.mean) %in% c("Site.Name", "Year")], method="pearson")#
}
test<-list()
for(i in sites){#
	test[[i]] <- cor(sites.crn[,i], t.mean[t.mean$Site.Name %in% i,!names(t.mean) %in% c("Site.Name", "Year")], method="pearson")#
}
i
head(sites.crn)
t.mean$Site.Name <- recode(t.mean$Site.Name, "'Missouri Ozark' = 'Missouri'; 'Morgan Monroe State Park'='Morgan_Monroe'; 'Oak Openings Toledo' = 'Oak_openings'")#
#
t.min$Site.Name <- recode(t.min$Site.Name, "'Missouri Ozark' = 'Missouri'; 'Morgan Monroe State Park'='Morgan_Monroe'; 'Oak Openings Toledo' = 'Oak_openings'")#
t.max$Site.Name <- recode(t.max$Site.Name, "'Missouri Ozark' = 'Missouri'; 'Morgan Monroe State Park'='Morgan_Monroe'; 'Oak Openings Toledo' = 'Oak_openings'")#
precip$Site.Name <- recode(precip$Site.Name, "'Missouri Ozark' = 'Missouri'; 'Morgan Monroe State Park'='Morgan_Monroe'; 'Oak Openings Toledo' = 'Oak_openings'")
sites <- c("Harvard", "Howland", "Missouri", "Morgan_Monroe", "Oak_openings")
for(i in sites){#
	test[[i]] <- cor(sites.crn[,i], t.mean[t.mean$Site.Name %in% i,!names(t.mean) %in% c("Site.Name", "Year")], method="pearson")#
}
summary(test)
for(i in sites){#
	tmean.corr[[i]] <- cor(sites.crn[,i], t.mean[t.mean$Site.Name %in% i,!names(t.mean) %in% c("Site.Name", "Year")], method="pearson")#
}
tmean.corr<-list()
for(i in sites){#
	tmean.corr[[i]] <- cor(sites.crn[,i], t.mean[t.mean$Site.Name %in% i,!names(t.mean) %in% c("Site.Name", "Year")], method="pearson")#
}
summary(tmean.corr)
harvard.tmean <- as.data.frame(tmean.corr[[1]])#
#
howland.tmean <- as.data.frame(tmean.corr[[2]])#
#
misso.tmean <- as.data.frame(tmean.corr[[3]])#
#
mmf.tmean <- as.data.frame(tmean.corr[[4]])#
#
oakop.tmean <- as.data.frame(tmean.corr[[5]])
summary(harvard.tmean)
harvard.tmean
harvard.tmean$Site <- "Harvard"
harvard.tmean$type <- "tmean"
harvard.tmean
harvard.tmean <- as.data.frame(tmean.corr[[1]])
harvar.tmean.stack <- stack(harvard.tmean)
harvard.tmean.stack <- stack(harvard.tmean)
harvard.tmean.stack
names(harvard.tmean.stack)<- c("cor", "month")
harvard.tmean$Site <- "Harvard"
harvard.tmean$type <- "tmean"
harvard.tmean$type
harvard.tmean
harvard.tmean.stack$type <- "tmean"
harvard.tmean.stack$Site <- "Harvard"
harvard.tmean.stack
mmo.tmean <- as.data.frame(tmean.corr[[3]])
mo.tmean <- as.data.frame(tmean.corr[[3]])
# Making each site it's own dataframe#
harvard.tmean <- as.data.frame(tmean.corr[[1]])#
#
harvard.tmean.stack <- stack(harvard.tmean)#
names(harvard.tmean.stack)<- c("cor", "month")#
harvard.tmean.stack$Site <- "Harvard"#
harvard.tmean.stack$type <- "tmean"#
#
howland.tmean <- as.data.frame(tmean.corr[[2]])#
#
howland.tmean.stack <- stack(howland.tmean)#
names(howland.tmean.stack)<- c("cor", "month")#
howland.tmean.stack$Site <- "Howland"#
howland.tmean.stack$type <- "tmean"#
#
mo.tmean <- as.data.frame(tmean.corr[[3]])#
#
mo.tmean.stack <- stack(mo.tmean)#
names(mo.tmean.stack)<- c("cor", "month")#
mo.tmean.stack$Site <- "Missouri"#
mo.tmean.stack$type <- "tmean"#
#
mmf.tmean <- as.data.frame(tmean.corr[[4]])#
#
mmf.tmean.stack <- stack(mmf.tmean)#
names(mmf.tmean.stack)<- c("cor", "month")#
mmf.tmean.stack$Site <- "MMF"#
mmf.tmean.stack$type <- "tmean"#
#
oakop.tmean <- as.data.frame(tmean.corr[[5]])#
#
oakop.tmean.stack <- stack(oakop.tmean)#
names(oakop.tmean.stack)<- c("cor", "month")#
oakop.tmean.stack$Site <- "Oak_openings"#
oakop.tmean.stack$type <- "tmean"
all.sites.tmean <- rbind(harvard.tmean.stack, howland.tmean.stack, mo.tmean.stack, mmf.tmean.stack, oakop.tmean.stack)
summary(all.sites.tmean.stack)
summary(all.sites.tmean)
harvard.tmean.stack$Site <- as.factor("Harvard")
harvard.tmean.stack$type <- as.factor("tmean")
# Making each site it's own dataframe#
harvard.tmean <- as.data.frame(tmean.corr[[1]])#
#
harvard.tmean.stack <- stack(harvard.tmean)#
names(harvard.tmean.stack)<- c("cor", "month")#
harvard.tmean.stack$Site <- as.factor("Harvard")#
harvard.tmean.stack$type <- as.factor("tmean")#
#
howland.tmean <- as.data.frame(tmean.corr[[2]])#
#
howland.tmean.stack <- stack(howland.tmean)#
names(howland.tmean.stack)<- c("cor", "month")#
howland.tmean.stack$Site <- as.factor("Howland")#
howland.tmean.stack$type <- as.factor("tmean")#
#
mo.tmean <- as.data.frame(tmean.corr[[3]])#
#
mo.tmean.stack <- stack(mo.tmean)#
names(mo.tmean.stack)<- c("cor", "month")#
mo.tmean.stack$Site <- as.factor("Missouri")#
mo.tmean.stack$type <- as.factor("tmean")#
#
mmf.tmean <- as.data.frame(tmean.corr[[4]])#
#
mmf.tmean.stack <- stack(mmf.tmean)#
names(mmf.tmean.stack)<- c("cor", "month")#
mmf.tmean.stack$Site <- as.factor("MMF")#
mmf.tmean.stack$type <- as.factor("tmean")#
#
oakop.tmean <- as.data.frame(tmean.corr[[5]])#
#
oakop.tmean.stack <- stack(oakop.tmean)#
names(oakop.tmean.stack)<- c("cor", "month")#
oakop.tmean.stack$Site <- as.factor("Oak_openings")#
oakop.tmean.stack$type <- as.factor("tmean")#
#
all.sites.tmean <- rbind(harvard.tmean.stack, howland.tmean.stack, mo.tmean.stack, mmf.tmean.stack, oakop.tmean.stack)
summary(all.sites.tmean)
sites <- c("Harvard", "Howland", "Missouri", "Morgan_Monroe", "Oak_openings")
tmin.corr<-list()
for(i in sites){#
	tmin.corr[[i]] <- cor(sites.crn[,i], t.min[t.min$Site.Name %in% i,!names(t.min) %in% c("Site.Name", "Year")], method="pearson")#
}
dim(sites.crn)
dim(t.min)
t.min[t.min$Site.Name %in% i,!names(t.min) %in% c("Site.Name", "Year")]
summary(t.min)
# Limiting time frame--1950-2012#
t.mean <- t.mean[t.mean$Year >= 1951 & t.mean$Year <= 2012,]#
t.min <- t.min[t.min$Year >= 1951 & t.min$Year <= 2012,]#
t.max <- t.max[t.max$Year >= 1951 & t.max$Year <= 2012,]#
precip <- precip[precip$Year >= 1951 & precip$Year <= 2012,]#
summary(t.mean)#
summary(t.min)#
summary(t.max)#
summary(precip)#
#
head(t.mean)#
unique(t.mean$Site.Name)
summary(t.min)
summary(t.max)
summary(precip)
i="Harvard"
cor(sites.crn[,i], t.min[t.min$Site.Name %in% i,!names(t.min) %in% c("Site.Name", "Year")], method="pearson")
t.min[t.min$Site.Name %in% i,!names(t.min) %in% c("Site.Name", "Year")]
summary(t.min)
summary(t.min[t.min$Site.Name %in% i])
summary(t.min[t.min$Site.Name %in% i,])
harvard <- c("Harvard Forest (Tower Plot 1)", "Harvard Forest (Tower Plot 2)")
t.min$Site.Name <- as.factor(ifelse(t.min$Site.Name %in% harvard, "Harvard", paste(t.min$Site.Name)))
summary(t.min)
t.min2 <- aggregate(t.min[,3:ncol(t.min)], by=t.min[,c("Site.Name", "Year")], FUN=mean)
harvard <- c("Harvard Forest (Tower Plot 1)", "Harvard Forest (Tower Plot 2)")#
#
t.max$Site.Name <- as.factor(ifelse(t.max$Site.Name %in% harvard, "Harvard", paste(t.max$Site.Name)))#
summary(t.max)#
#
t.max2 <- aggregate(t.max[,3:ncol(t.max)], by=t.max[,c("Site.Name", "Year")], FUN=mean)#
# summary(t.max2)#
#
t.max2$grow.seas <- rowMeans(t.max2[,c("May", "Jun", "Jul", "Aug", "Sep")])#
t.max2$pfall <- rowMeans(t.max2[,c("pSep", "pOct", "pNov")])#
t.max2$winter <- rowMeans(t.max2[,c("pDec", "Jan", "Feb")])#
t.max2$spring <- rowMeans(t.max2[,c("Mar", "Apr", "May")])#
t.max2$summer <- rowMeans(t.max2[,c("Jun", "Jul", "Aug")])#
write.csv(t.max2, file="processed_data/ch2_tmax.csv", row.names=F)
summary(t.mean2)#
summary(precip2)#
#
# Minimum temp#
harvard <- c("Harvard Forest (Tower Plot 1)", "Harvard Forest (Tower Plot 2)")#
#
t.min$Site.Name <- as.factor(ifelse(t.min$Site.Name %in% harvard, "Harvard", paste(t.min$Site.Name)))#
summary(t.min)#
t.min2 <- aggregate(t.min[,3:ncol(t.min)], by=t.min[,c("Site.Name", "Year")], FUN=mean)#
# summary(t.min2)#
#
t.min2$grow.seas <- rowMeans(t.min2[,c("May", "Jun", "Jul", "Aug", "Sep")])#
t.min2$pfall <- rowMeans(t.min2[,c("pSep", "pOct", "pNov")])#
t.min2$winter <- rowMeans(t.min2[,c("pDec", "Jan", "Feb")])#
t.min2$spring <- rowMeans(t.min2[,c("Mar", "Apr", "May")])#
t.min2$summer <- rowMeans(t.min2[,c("Jun", "Jul", "Aug")])#
summary(t.min2)#
write.csv(t.min2, file="processed_data/ch2_tmin.csv", row.names=F)#
#
# Maximum temp#
#
harvard <- c("Harvard Forest (Tower Plot 1)", "Harvard Forest (Tower Plot 2)")#
#
t.max$Site.Name <- as.factor(ifelse(t.max$Site.Name %in% harvard, "Harvard", paste(t.max$Site.Name)))#
summary(t.max)#
#
t.max2 <- aggregate(t.max[,3:ncol(t.max)], by=t.max[,c("Site.Name", "Year")], FUN=mean)#
# summary(t.max2)#
#
t.max2$grow.seas <- rowMeans(t.max2[,c("May", "Jun", "Jul", "Aug", "Sep")])#
t.max2$pfall <- rowMeans(t.max2[,c("pSep", "pOct", "pNov")])#
t.max2$winter <- rowMeans(t.max2[,c("pDec", "Jan", "Feb")])#
t.max2$spring <- rowMeans(t.max2[,c("Mar", "Apr", "May")])#
t.max2$summer <- rowMeans(t.max2[,c("Jun", "Jul", "Aug")])#
write.csv(t.max2, file="processed_data/ch2_tmax.csv", row.names=F)
# Loading in climate data#
t.mean <- read.csv("processed_data/ch2_tmean.csv", header=T)#
t.min <- read.csv("processed_data/ch2_tmin.csv", header=T)#
t.max <- read.csv("processed_data/ch2_tmax.csv", header=T)#
precip <- read.csv("processed_data/ch2_precip.csv", header=T)#
summary(t.mean)#
#
# Limiting time frame--1950-2012#
t.mean <- t.mean[t.mean$Year >= 1951 & t.mean$Year <= 2012,]#
t.min <- t.min[t.min$Year >= 1951 & t.min$Year <= 2012,]#
t.max <- t.max[t.max$Year >= 1951 & t.max$Year <= 2012,]#
precip <- precip[precip$Year >= 1951 & precip$Year <= 2012,]#
summary(t.mean)#
summary(t.min)#
summary(t.max)#
summary(precip)#
#
head(t.mean)#
unique(t.mean$Site.Name)#
#
t.mean$Site.Name <- recode(t.mean$Site.Name, "'Missouri Ozark' = 'Missouri'; 'Morgan Monroe State Park'='Morgan_Monroe'; 'Oak Openings Toledo' = 'Oak_openings'")#
#
t.min$Site.Name <- recode(t.min$Site.Name, "'Missouri Ozark' = 'Missouri'; 'Morgan Monroe State Park'='Morgan_Monroe'; 'Oak Openings Toledo' = 'Oak_openings'")#
t.max$Site.Name <- recode(t.max$Site.Name, "'Missouri Ozark' = 'Missouri'; 'Morgan Monroe State Park'='Morgan_Monroe'; 'Oak Openings Toledo' = 'Oak_openings'")#
precip$Site.Name <- recode(precip$Site.Name, "'Missouri Ozark' = 'Missouri'; 'Morgan Monroe State Park'='Morgan_Monroe'; 'Oak Openings Toledo' = 'Oak_openings'")#
# getting the ring widths in a data frame#
summary(sites.crn)#
sites.crn$Year <- site.chron[[1]][,"Year"]#
head(sites.crn)#
sites.crn <- sites.crn[sites.crn$Year > 1950,]#
#--------------------------------------------#
# Tmean correlation#
#--------------------------------------------#
#
sites <- c("Harvard", "Howland", "Missouri", "Morgan_Monroe", "Oak_openings")#
#
tmean.corr<-list()#
#
for(i in sites){#
	tmean.corr[[i]] <- cor(sites.crn[,i], t.mean[t.mean$Site.Name %in% i,!names(t.mean) %in% c("Site.Name", "Year")], method="pearson")#
}#
summary(tmean.corr)#
#
# Making each site it's own dataframe#
harvard.tmean <- as.data.frame(tmean.corr[[1]])#
#
harvard.tmean.stack <- stack(harvard.tmean)#
names(harvard.tmean.stack)<- c("cor", "month")#
harvard.tmean.stack$Site <- as.factor("Harvard")#
harvard.tmean.stack$type <- as.factor("tmean")#
#
howland.tmean <- as.data.frame(tmean.corr[[2]])#
#
howland.tmean.stack <- stack(howland.tmean)#
names(howland.tmean.stack)<- c("cor", "month")#
howland.tmean.stack$Site <- as.factor("Howland")#
howland.tmean.stack$type <- as.factor("tmean")#
#
mo.tmean <- as.data.frame(tmean.corr[[3]])#
#
mo.tmean.stack <- stack(mo.tmean)#
names(mo.tmean.stack)<- c("cor", "month")#
mo.tmean.stack$Site <- as.factor("Missouri")#
mo.tmean.stack$type <- as.factor("tmean")#
#
mmf.tmean <- as.data.frame(tmean.corr[[4]])#
#
mmf.tmean.stack <- stack(mmf.tmean)#
names(mmf.tmean.stack)<- c("cor", "month")#
mmf.tmean.stack$Site <- as.factor("MMF")#
mmf.tmean.stack$type <- as.factor("tmean")#
#
oakop.tmean <- as.data.frame(tmean.corr[[5]])#
#
oakop.tmean.stack <- stack(oakop.tmean)#
names(oakop.tmean.stack)<- c("cor", "month")#
oakop.tmean.stack$Site <- as.factor("Oak_openings")#
oakop.tmean.stack$type <- as.factor("tmean")#
#
all.sites.tmean <- rbind(harvard.tmean.stack, howland.tmean.stack, mo.tmean.stack, mmf.tmean.stack, oakop.tmean.stack)#
#
summary(all.sites.tmean)
summary(sites.crn)
sites.crn$Year <- site.chron[[1]][,"Year"]
head(sites.crn)
sites.crn <- sites.crn[sites.crn$Year > 1950,]
sites <- c("Harvard", "Howland", "Missouri", "Morgan_Monroe", "Oak_openings")#
#
tmin.corr<-list()
i = "Harvard"
cor(sites.crn[,i], t.min[t.min$Site.Name %in% i,!names(t.min) %in% c("Site.Name", "Year")], method="pearson")
for(i in sites){#
	tmin.corr[[i]] <- cor(sites.crn[,i], t.min[t.min$Site.Name %in% i,!names(t.min) %in% c("Site.Name", "Year")], method="pearson")#
}#
summary(tmin.corr)
harvard.tmin <- as.data.frame(tmin.corr[[1]])#
#
harvard.tmin.stack <- stack(harvard.tmin)#
names(harvard.tmin.stack)<- c("cor", "month")#
harvard.tmin.stack$Site <- as.factor("Harvard")#
harvard.tmin.stack$type <- as.factor("tmin")#
#
howland.tmin <- as.data.frame(tmin.corr[[2]])#
#
howland.tmin.stack <- stack(howland.tmin)#
names(howland.tmin.stack)<- c("cor", "month")#
howland.tmin.stack$Site <- as.factor("Howland")#
howland.tmin.stack$type <- as.factor("tmin")#
#
mo.tmin <- as.data.frame(tmin.corr[[3]])#
#
mo.tmin.stack <- stack(mo.tmin)#
names(mo.tmin.stack)<- c("cor", "month")#
mo.tmin.stack$Site <- as.factor("Missouri")#
mo.tmin.stack$type <- as.factor("tmin")#
#
mmf.tmin <- as.data.frame(tmin.corr[[4]])#
#
mmf.tmin.stack <- stack(mmf.tmin)#
names(mmf.tmin.stack)<- c("cor", "month")#
mmf.tmin.stack$Site <- as.factor("MMF")#
mmf.tmin.stack$type <- as.factor("tmin")#
#
oakop.tmin <- as.data.frame(tmin.corr[[5]])#
#
oakop.tmin.stack <- stack(oakop.tmin)#
names(oakop.tmin.stack)<- c("cor", "month")#
oakop.tmin.stack$Site <- as.factor("Oak_openings")#
oakop.tmin.stack$type <- as.factor("tmin")#
#
all.sites.tmin <- rbind(harvard.tmin.stack, howland.tmin.stack, mo.tmin.stack, mmf.tmin.stack, oakop.tmin.stack)#
#
summary(all.sites.tmin)
sites <- c("Harvard", "Howland", "Missouri", "Morgan_Monroe", "Oak_openings")#
#
tmax.corr<-list()#
#
for(i in sites){#
	tmax.corr[[i]] <- cor(sites.crn[,i], t.max[t.max$Site.Name %in% i,!names(t.max) %in% c("Site.Name", "Year")], method="pearson")#
}#
summary(tmax.corr)#
#
# Making each site it's own dataframe#
harvard.tmax <- as.data.frame(tmax.corr[[1]])#
#
harvard.tmax.stack <- stack(harvard.tmax)#
names(harvard.tmax.stack)<- c("cor", "month")#
harvard.tmax.stack$Site <- as.factor("Harvard")#
harvard.tmax.stack$type <- as.factor("tmax")#
#
howland.tmax <- as.data.frame(tmax.corr[[2]])#
#
howland.tmax.stack <- stack(howland.tmax)#
names(howland.tmax.stack)<- c("cor", "month")#
howland.tmax.stack$Site <- as.factor("Howland")#
howland.tmax.stack$type <- as.factor("tmax")#
#
mo.tmax <- as.data.frame(tmax.corr[[3]])#
#
mo.tmax.stack <- stack(mo.tmax)#
names(mo.tmax.stack)<- c("cor", "month")#
mo.tmax.stack$Site <- as.factor("Missouri")#
mo.tmax.stack$type <- as.factor("tmax")#
#
mmf.tmax <- as.data.frame(tmax.corr[[4]])#
#
mmf.tmax.stack <- stack(mmf.tmax)#
names(mmf.tmax.stack)<- c("cor", "month")#
mmf.tmax.stack$Site <- as.factor("MMF")#
mmf.tmax.stack$type <- as.factor("tmax")#
#
oakop.tmax <- as.data.frame(tmax.corr[[5]])#
#
oakop.tmax.stack <- stack(oakop.tmax)#
names(oakop.tmax.stack)<- c("cor", "month")#
oakop.tmax.stack$Site <- as.factor("Oak_openings")#
oakop.tmax.stack$type <- as.factor("tmax")#
#
all.sites.tmax <- rbind(harvard.tmax.stack, howland.tmax.stack, mo.tmax.stack, mmf.tmax.stack, oakop.tmax.stack)#
#
summary(all.sites.tmax)
summary(all.sites.tmin)
summary(all.sites.tmean)
sites <- c("Harvard", "Howland", "Missouri", "Morgan_Monroe", "Oak_openings")#
#
precip.corr<-list()#
#
for(i in sites){#
	precip.corr[[i]] <- cor(sites.crn[,i], precip[precip$Site.Name %in% i,!names(precip) %in% c("Site.Name", "Year")], method="pearson")#
}#
summary(precip.corr)
# Making each site it's own dataframe#
harvard.precip <- as.data.frame(precip.corr[[1]])#
#
harvard.precip.stack <- stack(harvard.precip)#
names(harvard.precip.stack)<- c("cor", "month")#
harvard.precip.stack$Site <- as.factor("Harvard")#
harvard.precip.stack$type <- as.factor("precip")#
#
howland.precip <- as.data.frame(precip.corr[[2]])#
#
howland.precip.stack <- stack(howland.precip)#
names(howland.precip.stack)<- c("cor", "month")#
howland.precip.stack$Site <- as.factor("Howland")#
howland.precip.stack$type <- as.factor("precip")#
#
mo.precip <- as.data.frame(precip.corr[[3]])#
#
mo.precip.stack <- stack(mo.precip)#
names(mo.precip.stack)<- c("cor", "month")#
mo.precip.stack$Site <- as.factor("Missouri")#
mo.precip.stack$type <- as.factor("precip")#
#
mmf.precip <- as.data.frame(precip.corr[[4]])#
#
mmf.precip.stack <- stack(mmf.precip)#
names(mmf.precip.stack)<- c("cor", "month")#
mmf.precip.stack$Site <- as.factor("MMF")#
mmf.precip.stack$type <- as.factor("precip")#
#
oakop.precip <- as.data.frame(precip.corr[[5]])#
#
oakop.precip.stack <- stack(oakop.precip)#
names(oakop.precip.stack)<- c("cor", "month")#
oakop.precip.stack$Site <- as.factor("Oak_openings")#
oakop.precip.stack$type <- as.factor("precip")#
#
all.sites.precip <- rbind(harvard.precip.stack, howland.precip.stack, mo.precip.stack, mmf.precip.stack, oakop.precip.stack)#
#
summary(all.sites.precip)
all.sites.climate <- rbind(all.sites.precip, all.sites.tmax, all.sites.tmin, all.sites.tmean)
summary(all.sites.climatex)
summary(all.sites.climate)
names(tmean)
names(t.mean)
names(t.mean[!names(precip) %in% c("Site.Name", "Year")]
names(t.mean[!names(precip) %in% c("Site.Name", "Year")])
all.sites.climate <- as.factor(all.sites.climate$month, levels = names(t.mean[!names(precip) %in% c("Site.Name", "Year")]))
all.sites.climate <- as.factor(all.sites.climate$month, levels = c("pJan", "pFeb", "pMar", "pApr", "pMay", "pJun", "pJul", "pAug", "pSep", "pOct", "pNov", "pDec", "Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Nov", "Dec", "pfall", "winter", "spring", "summer", "grow.seas")))
all.sites.climate <- as.factor(all.sites.climate$month, levels = c("pJan", "pFeb", "pMar", "pApr", "pMay", "pJun", "pJul", "pAug", "pSep", "pOct", "pNov", "pDec", "Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Nov", "Dec", "pfall", "winter", "spring", "summer", "grow.seas"))
all.sites.climate <- factor(all.sites.climate$month, levels = c("pJan", "pFeb", "pMar", "pApr", "pMay", "pJun", "pJul", "pAug", "pSep", "pOct", "pNov", "pDec", "Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Nov", "Dec", "pfall", "winter", "spring", "summer", "grow.seas"))
all.sites.climate$month <- factor(all.sites.climate$month, levels = c("pJan", "pFeb", "pMar", "pApr", "pMay", "pJun", "pJul", "pAug", "pSep", "pOct", "pNov", "pDec", "Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Nov", "Dec", "pfall", "winter", "spring", "summer", "grow.seas"))
all.sites.climate <- rbind(all.sites.precip, all.sites.tmax, all.sites.tmin, all.sites.tmean)#
summary(all.sites.climate)
all.sites.climate$month <- factor(all.sites.climate$month, levels = c("pJan", "pFeb", "pMar", "pApr", "pMay", "pJun", "pJul", "pAug", "pSep", "pOct", "pNov", "pDec", "Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Nov", "Dec", "pfall", "winter", "spring", "summer", "grow.seas"))
all.sites.climate$Site <- factor(all.sites.climate$Site, levels = c("Missouri", "MMF", "Oak_Openings", "Harvard", "Howland"))
dim(sites.crn)
all.sites.climate$sig <- ifelse(all.sites.climate$cor < -0.25 | all.sites.climate$cor > 0.25, "Y", "N")#
all.sites.climate$sig <- factor(all.sites.climate$sig, levels = c("Y", "N"))
ggplot(data=all.sites.climate) + facet_grid(type ~. ) +#
	geom_bar(aes(x=Site, y=cor, fill=sig), stat="identity", position="dodge", colour="black") +#
	geom_hline(yintercept=0.25, linetype="dashed") + #
	geom_hline(yintercept=-0.25, linetype="dashed") + 	#
	geom_hline(yintercept=0, linetype="solid") +#
	scale_fill_manual(values= c("green", "grey50"))
ggplot(data=all.sites.climate) + facet_grid(Site ~. ) +#
	geom_bar(aes(x=month, y=cor, fill=sig), stat="identity", position="dodge", colour="black") +#
	geom_hline(yintercept=0.25, linetype="dashed") + #
	geom_hline(yintercept=-0.25, linetype="dashed") + 	#
	geom_hline(yintercept=0, linetype="solid") +#
	scale_fill_manual(values= c("green", "grey50"))
ggplot(data=all.sites.climate) + facet_grid(Site ~ type ) +#
	geom_bar(aes(x=month, y=cor, fill=sig), stat="identity", position="dodge", colour="black") +#
	geom_hline(yintercept=0.25, linetype="dashed") + #
	geom_hline(yintercept=-0.25, linetype="dashed") + 	#
	geom_hline(yintercept=0, linetype="solid") +#
	scale_fill_manual(values= c("green", "grey50"))
ggplot(data=all.sites.climate) + facet_grid(type ~ Site ) +#
	geom_bar(aes(x=month, y=cor, fill=sig), stat="identity", position="dodge", colour="black") +#
	geom_hline(yintercept=0.25, linetype="dashed") + #
	geom_hline(yintercept=-0.25, linetype="dashed") + 	#
	geom_hline(yintercept=0, linetype="solid") +#
	scale_fill_manual(values= c("green", "grey50"))
ggplot(data=all.sites.climate) + facet_grid(type ~ Site ) +#
	geom_bar(aes(x=month, y=cor, fill=sig), stat="identity", position="dodge", colour="black") +#
	geom_hline(yintercept=0.25, linetype="dashed") + #
	geom_hline(yintercept=-0.25, linetype="dashed") + 	#
	geom_hline(yintercept=0, linetype="solid") +#
	scale_fill_manual(values= c("green", "grey50"))+#
	theme(axis.text.x = element_text(angle = 45, hjust = 1))
all.sites.climate$month <- factor(all.sites.climate$month, levels = c("pJan", "pFeb", "pMar", "pApr", "pMay", "pJun", "pJul", "pAug", "pSep", "pOct", "pNov", "pDec", "Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct" "Nov", "Dec", "pfall", "winter", "spring", "summer", "grow.seas"))
all.sites.climate$Site <- factor(all.sites.climate$Site, levels = c("Missouri", "MMF", "Oak_Openings", "Harvard", "Howland"))
ggplot(data=all.sites.climate) + facet_grid(type ~ Site ) +#
	geom_bar(aes(x=month, y=cor, fill=sig), stat="identity", position="dodge", colour="black") +#
	geom_hline(yintercept=0.25, linetype="dashed") + #
	geom_hline(yintercept=-0.25, linetype="dashed") + 	#
	geom_hline(yintercept=0, linetype="solid") +#
	scale_fill_manual(values= c("green", "grey50"))+#
	theme(axis.text.x = element_text(angle = 45, hjust = 1))
summary(all.sites.climate)
summary(all.sites.climate[is.na(all.sites.climate$month),])
all.sites.precip <- rbind(harvard.precip.stack, howland.precip.stack, mo.precip.stack, mmf.precip.stack, oakop.precip.stack)#
#
summary(all.sites.precip)
all.sites.climate <- rbind(all.sites.precip, all.sites.tmax, all.sites.tmin, all.sites.tmean)#
summary(all.sites.climate)
all.sites.climate$sig <- ifelse(all.sites.climate$cor < -0.25 | all.sites.climate$cor > 0.25, "Y", "N")#
all.sites.climate$sig <- factor(all.sites.climate$sig, levels = c("Y", "N"))
all.sites.climate$month <- factor(all.sites.climate$month, levels = c("pJan", "pFeb", "pMar", "pApr", "pMay", "pJun", "pJul", "pAug", "pSep", "pOct", "pNov", "pDec", "Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct" "Nov", "Dec", "pfall", "winter", "spring", "summer", "grow.seas"))#
#
all.sites.climate$Site <- factor(all.sites.climate$Site, levels = c("Missouri", "MMF", "Oak_Openings", "Harvard", "Howland"))
all.sites.climate$month <- factor(all.sites.climate$month, levels = c("pJan", "pFeb", "pMar", "pApr", "pMay", "pJun", "pJul", "pAug", "pSep", "pOct", "pNov", "pDec", "Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec", "pfall", "winter", "spring", "summer", "grow.seas"))
summary(all.sites.cliamte)
summary(all.sites.climate)
ggplot(data=all.sites.climate) + facet_grid(type ~ Site ) +#
	geom_bar(aes(x=month, y=cor, fill=sig), stat="identity", position="dodge", colour="black") +#
	geom_hline(yintercept=0.25, linetype="dashed") + #
	geom_hline(yintercept=-0.25, linetype="dashed") + 	#
	geom_hline(yintercept=0, linetype="solid") +#
	scale_fill_manual(values= c("green", "grey50"))+#
	theme(axis.text.x = element_text(angle = 45, hjust = 1))
summary(all.sites.precip)
all.sites.climate <- rbind(all.sites.precip, all.sites.tmax, all.sites.tmin, all.sites.tmean)#
summary(all.sites.climate)
all.sites.climate$sig <- ifelse(all.sites.climate$cor < -0.25 | all.sites.climate$cor > 0.25, "Y", "N")#
all.sites.climate$sig <- factor(all.sites.climate$sig, levels = c("Y", "N"))
all.sites.climate$month <- factor(all.sites.climate$month, levels = c("pJan", "pFeb", "pMar", "pApr", "pMay", "pJun", "pJul", "pAug", "pSep", "pOct", "pNov", "pDec", "Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec", "pfall", "winter", "spring", "summer", "grow.seas"))
all.sites.climate$Site <- factor(all.sites.climate$Site, levels = c("Missouri", "MMF", "Oak_openings", "Harvard", "Howland"))
ggplot(data=all.sites.climate) + facet_grid(type ~ Site ) +#
	geom_bar(aes(x=month, y=cor, fill=sig), stat="identity", position="dodge", colour="black") +#
	geom_hline(yintercept=0.25, linetype="dashed") + #
	geom_hline(yintercept=-0.25, linetype="dashed") + 	#
	geom_hline(yintercept=0, linetype="solid") +#
	scale_fill_manual(values= c("green", "grey50"))+#
	theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(data=all.sites.climate) + facet_grid(Site ~ type ) +#
	geom_bar(aes(x=month, y=cor, fill=sig), stat="identity", position="dodge", colour="black") +#
	geom_hline(yintercept=0.25, linetype="dashed") + #
	geom_hline(yintercept=-0.25, linetype="dashed") + 	#
	geom_hline(yintercept=0, linetype="solid") +#
	scale_fill_manual(values= c("green", "grey50"))+#
	theme(axis.text.x = element_text(angle = 45, hjust = 1))
head(sites.crn)
head(t.mean)
library(dplR)#
library(ggplot2)#
library(stringr)#
library(car)#
# -------------------------------------------------------------------------------------#
# Using MMF and Harvard as two examples#
# -------------------------------------------------------------------------------------#
load("processed_data/sites_rw.Rdata")#
load("processed_data/test_tree_data_1950_2012.Rdata")#
load("processed_data/sites_use_climate.Rdata")#
summary(climate.site[[1]])#
summary(test)#
# Creating lists for harvard and mmf species#
#
sites.use2 <- c("Harvard", "Morgan Monroe State Park")#
#
summary(sites.rw[[1]])#
names(sites.rw)#
# species.data <- sites.rw[names(sites.rw) %in% sites.use2]#
species.data <- sites.rw#
summary(species.data)#
#
# Gettign mmf data#
#
short.spp <- list()#
#
for(s in names(species.data)){#
	for(i in unique(test[test$Site ==s, "group"])){#
		cols.use <- unique(test[test$Site==s & test$group==i,"TreeID"])#
		short.spp[[paste(s, i, sep=".")]] <- species.data[[s]][,paste(cols.use)]#
	} #
}#
summary(short.spp)#
summary(short.spp[["Morgan Monroe State Park.TIAM"]])#
# Making each tree an index using a 30 yr. spline#
short.spp.index <- list()#
for(s in names(short.spp)){#
	short.spp.index[[s]] <- detrend(short.spp[[s]], method="Spline", nyrs=30)#
}#
summary(short.spp.index[[1]])#
# Making chronologies from these indicies#
short.spp.chr <- list()#
#
for(s in names(short.spp.index)){#
	short.spp.chr[[s]] <- chron(short.spp.index[[s]], prewhiten=T)#
}#
summary(short.spp.chr[[1]])
library(dplR)#
library(ggplot2)#
library(stringr)#
library(car)
load("processed_data/sites_rw.Rdata")#
load("processed_data/test_tree_data_1950_2012.Rdata")#
load("processed_data/sites_use_climate.Rdata")#
summary(climate.site[[1]])#
summary(test)
sites.use2 <- c("Harvard", "Morgan Monroe State Park")
summary(sites.rw[[1]])#
names(sites.rw)#
# species.data <- sites.rw[names(sites.rw) %in% sites.use2]#
species.data <- sites.rw#
summary(species.data)
summary(sites.rw[[1]])
summary(climate.site[[1]])
summary(test)
summary(climate.site[[1]])
load("processed_data/sites_rw.Rdata")
ls()
load("processed_data/sites_rw.Rdata")#
load("processed_data/test_tree_data_1950_2012.Rdata")#
load("processed_data/sites_use_climate.Rdata")
ls()
summary(sites.rw[[1]])
summary(sites.rw)
library(mgcv)#
library(ggplot2)#
library(car)#
library(reshape)#
library(dplR)#
# Christy's GAMM code#
#
# gam1 <- gamm(Y ~  s(Biomass, bs="cr", k=3, by=PFT) + s(tair, k=k, by=PFT) + s(precipf, k=k, by=PFT) + s(CO2, k=k, by=PFT), random=list(PlotID=~1), data=data) #
#
# Loading in my data#
#
data.use <- read.csv("processed_data/AllSites_tree_plus_climate_and_BA.csv", header=T)#
#
data.use$group <- data.use$Species#
data.use$group <- recode(data.use$group, "'CAOV' = 'CARYA'; 'CACO' = 'CARYA'; #
  							'CATE' = 'CARYA'; 'ACSAC' = 'ACSA'; 'BEAL' = 'BETULA'; 'BELE' = 'BETULA'; 'QUMU' = 'QUAL'")#
#
data.use$group.plot <- as.factor(paste(data.use$group, data.use$PlotID, sep="."))#
#
data.use$Canopy.Class <- recode(data.use$Canopy.Class, "'C' = 'D'")#
summary(data.use)#
# reducing the amount of data for the test runs#
sites.use <- c("Harvard", "Howland", "Morgan Monroe State Park", "Oak Openings Toledo", "Missouri Ozark")#
#
test <- data.use[data.use$Site %in% sites.use & !is.na(data.use$RW) & !is.na(data.use$BA.inc),]#
summary(test)#
#
test$group.cc <- as.factor(paste(test$group, test$Canopy.Class, sep="."))#
summary(test)#
# Get a list of what predictors & responses I'm using#
predictors.all <- c("tmean", "precip", "Species", "dbh.recon", "Canopy.Class", "spp.plot", "group", "group.plot", "group.cc")#
#
# Getting rid of observations that have NAs in the important variables#
test <- test[complete.cases(test[,predictors.all]),]#
test <- test[test$Live.Dead=="LIVE" & !test$Canopy.Class=="F",]#
#
# Subsetting to a set of species that we have enough data to feel good about#
#species.use <- c("TSCA", "QURU", "ACRU", "BEAL", "ACSA", "LITU", "QUAL", "CAOV", "CACO", "CATE", "JUVI", "QUVE", "PCRU", "THOC", "PIST")#
group.use <- c("ACRU", "ACSA", "BETULA", "CARYA", "FAGR", "FRAX", "PIST", "QUAL", "QURU", "QUVE", "SAAL", "TSCA", "ULRU")#
#
test <- test[test$group %in% group.use,]#
#
summary(test)#
#
par(new=F)#
plot(test[test$TreeID=="MMA003", "BA.inc"]~ test[test$TreeID=="MMA003","Year"], type="l")#
summary(test)#
# Truncatign at 1950#
test <- test[test$Year >= 1950 & test$Year <= 2012,]#
#
tree.rw <- test#
summary(tree.rw)#
#
summary(test)#
save(test, file="processed_data/test_tree_data_1950_2012.Rdata")#
#
sites.rw <- list()#
#
tree.rw$Year <- as.factor(tree.rw$Year)#
#
for(s in unique(tree.rw$Site)){#
	sites.rw[[s]] <- recast(tree.rw[tree.rw$Site==s,c("Year", "TreeID", "RW")], Year ~ TreeID)	#
}#
summary(sites.rw)
save(sites.rw, file="processed_data/sites_rw.Rdata")
summary(sites.rw[[4]])#
sites.rw#
# Making Indices of all the different sites using a 30 yr cubic smoothing spline#
sites.i <- list()#
#
for(s in names(sites.rw)){#
	sites.i[[s]] <- detrend(sites.rw[[s]][,2:ncol(sites.rw[[s]])], method="Mean")#
}#
summary(sites.i[[1]])#
#
# making chronologies for each site#
#
site.chron <- list()#
#
for(s in names(sites.i)){#
	site.chron[[s]] <- chron(sites.i[[s]][,2:ncol(sites.i[[s]])], prefix = substr(s, 1, 3), prewhiten = T) #
	site.chron[[s]][,"Year"]<- c(1950:2012) #
}#
#
summary(site.chron)#
# Making each site it's own dataframe#
harvard.crn <- as.data.frame(site.chron[[1]])#
#
howland.crn <- as.data.frame(site.chron[[2]])#
#
misso.crn <- as.data.frame(site.chron[[3]])#
#
mmf.crn <- as.data.frame(site.chron[[4]])#
#
oakop.crn <- as.data.frame(site.chron[[5]])#
# Merging the residual chronologies back together#
sites.crn <- data.frame(Harvard = harvard.crn[, "Harres"], #
						Howland = howland.crn[,"Howres"], #
						Missouri = misso.crn[,"Misres"],#
						Morgan_Monroe = mmf.crn[,"Morres"], #
						Oak_openings = oakop.crn[,"Oakres"]#
						)#
#
summary(sites.crn)#
# Load in climate data#
#
climate.use <- read.csv("processed_data/climate_growing_season.csv")#
#
summary(climate.use)#
#
climate.use <- climate.use[climate.use$Site %in% sites.use,]#
climate.use <- climate.use[climate.use$Year>=1950 & climate.use$Year <=2012,]#
#
climate.site <- list()#
#
for(s in unique(climate.use$Site)){#
	climate.site[[s]] <- climate.use[climate.use$Site==s,]#
}#
#
summary(climate.site)#
save(climate.site, file="processed_data/sites_use_climate.Rdata")#
class(climate.site[[1]][,"Year"])#
#
head(climate.site[[1]])#
#
summary(climate.site)#
#
harv.clim <- climate.site[["Harvard"]][,c("tmean", "precip")]#
#
how.clim <- climate.site[["Howland"]][,c("tmean", "precip")]#
#
miss.clim <- climate.site[["Missouri Ozark"]][,c("tmean", "precip")]#
#
mmf.clim <- climate.site[["Morgan Monroe State Park"]][,c("tmean", "precip")]#
#
oak.clim <- climate.site[["Oak Openings Toledo"]][,c("tmean", "precip")]#
dim(harv.clim)#
dim(harvard.crn)#
#
# harvard#
harv.cor<- cor(harvard.crn, harv.clim[,c("tmean", "precip")], method="pearson")#
harvard <- data.frame(cor = c(harv.cor[1:2,"tmean"],  harv.cor[1:2,"precip"]),#
					  var = c("tmean", "tmean", "precip", "precip"))#
harvard$type <- c("std", "res")#
harvard$site <- "Harvard" #
# Howland#
how.cor <- cor(howland.crn, how.clim[,c("tmean", "precip")], method="pearson")#
how.cor#
#
howland <- data.frame(cor = c(how.cor[1:2,"tmean"],  how.cor[1:2,"precip"]),#
					  var = c("tmean", "tmean", "precip", "precip"))#
howland$type <- c("std", "res")#
howland$site <- "Howland" #
# Missouri#
mo.cor <- cor(misso.crn, miss.clim[,c("tmean", "precip")], method="pearson")#
mo.cor#
#
missouri <- data.frame(cor = c(mo.cor[1:2,"tmean"],  mo.cor[1:2,"precip"]),#
					  var = c("tmean", "tmean", "precip", "precip"))#
missouri$type <- c("std", "res")#
missouri$site <- "Missouri" #
#
# Morgan Monroe#
mmf.cor <- cor(mmf.crn, mmf.clim[,c("tmean", "precip")], method="pearson")#
mmf.cor#
#
morgan <- data.frame(cor = c(mmf.cor[1:2,"tmean"],  mmf.cor[1:2,"precip"]),#
					  var = c("tmean", "tmean", "precip", "precip"))#
morgan$type <- c("std", "res")#
morgan$site <- "Morgan-Monroe" #
#
# Oak openings#
oakop.cor <- cor(oakop.crn, oak.clim[,c("tmean", "precip")], method="pearson")#
oakop.cor#
#
oakop <- data.frame(cor = c(oakop.cor[1:2,"tmean"],  oakop.cor[1:2,"precip"]),#
					  var = c("tmean", "tmean", "precip", "precip"))#
oakop$type <- c("std", "res")#
oakop$site <- "Oak-Openings" #
#
# Merging standard chronologies into one file#
#
clim.cor <- merge(harvard, howland, all.x=T, all.y=T)#
clim.cor2 <- merge(clim.cor, missouri,all.x=T, all.y=T)#
clim.cor3 <- merge(clim.cor2, morgan,all.x=T, all.y=T)#
clim.cor4 <- merge(clim.cor3, oakop,all.x=T, all.y=T)#
#
summary(clim.cor4)#
clim.cor4$site <- as.factor(clim.cor4$site)#
clim.cor4$type <- as.factor(clim.cor4$type)#
clim.cor4$cor <- as.numeric(clim.cor4$cor)#
#
# Sig value for 61 df = 0.209#
clim.cor4$sig <- ifelse(clim.cor4$cor < -0.246 | clim.cor4$cor > 0.246, "Y", "N")#
clim.cor4$sig <- factor(clim.cor4$sig, levels = c("Y", "N"))#
#
clim.cor4$site <- factor(clim.cor4$site, levels = c("Missouri", "Morgan-Monroe", "Oak-Openings", "Harvard", "Howland"))#
#
clim.cor4$Site <- clim.cor4$site#
clim.cor4$Site <- recode(clim.cor4$Site, "'Missouri' = 'MO'; 'Morgan-Monroe' = 'IN'; 'Oak-Openings' = 'OH'; 'Harvard' = 'MA'; 'Howland' = 'ME'")#
clim.cor4$Site <- factor(clim.cor4$Site, levels = c("MO", "IN", "OH", "MA", "ME"))#
pdf("figures/site_correlations.pdf", width= 13, height = 8.5)#
ggplot(data=clim.cor4[clim.cor4$type=="std",]) + facet_grid(var~. , scales="free_x") +#
	geom_bar(aes(x=Site, y=cor, fill=sig), stat="identity", position="dodge", colour="black") +#
	geom_hline(yintercept=0.209, linetype="dashed") + #
	geom_hline(yintercept=-0.209, linetype="dashed") + 	#
	geom_hline(yintercept=0, linetype="solid") +#
	scale_fill_manual(values= c("green", "grey50")) + #
	poster.theme2#
dev.off()#
#
#######################################################################
# Gettign correlations for all for all of the available climate data data#
#######################################################################
# Loading in climate data#
t.mean <- read.csv("processed_data/ch2_tmean.csv", header=T)#
t.min <- read.csv("processed_data/ch2_tmin.csv", header=T)#
t.max <- read.csv("processed_data/ch2_tmax.csv", header=T)#
precip <- read.csv("processed_data/ch2_precip.csv", header=T)#
summary(t.mean)#
#
# Limiting time frame--1950-2012#
t.mean <- t.mean[t.mean$Year >= 1951 & t.mean$Year <= 2012,]#
t.min <- t.min[t.min$Year >= 1951 & t.min$Year <= 2012,]#
t.max <- t.max[t.max$Year >= 1951 & t.max$Year <= 2012,]#
precip <- precip[precip$Year >= 1951 & precip$Year <= 2012,]#
summary(t.mean)#
summary(t.min)#
summary(t.max)#
summary(precip)#
#
head(t.mean)#
unique(t.mean$Site.Name)#
#
t.mean$Site.Name <- recode(t.mean$Site.Name, "'Missouri Ozark' = 'Missouri'; 'Morgan Monroe State Park'='Morgan_Monroe'; 'Oak Openings Toledo' = 'Oak_openings'")#
#
t.min$Site.Name <- recode(t.min$Site.Name, "'Missouri Ozark' = 'Missouri'; 'Morgan Monroe State Park'='Morgan_Monroe'; 'Oak Openings Toledo' = 'Oak_openings'")#
t.max$Site.Name <- recode(t.max$Site.Name, "'Missouri Ozark' = 'Missouri'; 'Morgan Monroe State Park'='Morgan_Monroe'; 'Oak Openings Toledo' = 'Oak_openings'")#
precip$Site.Name <- recode(precip$Site.Name, "'Missouri Ozark' = 'Missouri'; 'Morgan Monroe State Park'='Morgan_Monroe'; 'Oak Openings Toledo' = 'Oak_openings'")#
# getting the ring widths in a data frame#
summary(sites.crn)#
sites.crn$Year <- site.chron[[1]][,"Year"]#
head(sites.crn)#
sites.crn <- sites.crn[sites.crn$Year > 1950,]#
#--------------------------------------------#
# Tmean correlation#
#--------------------------------------------#
#
sites <- c("Harvard", "Howland", "Missouri", "Morgan_Monroe", "Oak_openings")#
#
tmean.corr<-list()#
#
for(i in sites){#
	tmean.corr[[i]] <- cor(sites.crn[,i], t.mean[t.mean$Site.Name %in% i,!names(t.mean) %in% c("Site.Name", "Year")], method="pearson")#
}#
summary(tmean.corr)#
#
# Making each site it's own dataframe#
harvard.tmean <- as.data.frame(tmean.corr[[1]])#
#
harvard.tmean.stack <- stack(harvard.tmean)#
names(harvard.tmean.stack)<- c("cor", "month")#
harvard.tmean.stack$Site <- as.factor("Harvard")#
harvard.tmean.stack$type <- as.factor("tmean")#
#
howland.tmean <- as.data.frame(tmean.corr[[2]])#
#
howland.tmean.stack <- stack(howland.tmean)#
names(howland.tmean.stack)<- c("cor", "month")#
howland.tmean.stack$Site <- as.factor("Howland")#
howland.tmean.stack$type <- as.factor("tmean")#
#
mo.tmean <- as.data.frame(tmean.corr[[3]])#
#
mo.tmean.stack <- stack(mo.tmean)#
names(mo.tmean.stack)<- c("cor", "month")#
mo.tmean.stack$Site <- as.factor("Missouri")#
mo.tmean.stack$type <- as.factor("tmean")#
#
mmf.tmean <- as.data.frame(tmean.corr[[4]])#
#
mmf.tmean.stack <- stack(mmf.tmean)#
names(mmf.tmean.stack)<- c("cor", "month")#
mmf.tmean.stack$Site <- as.factor("MMF")#
mmf.tmean.stack$type <- as.factor("tmean")#
#
oakop.tmean <- as.data.frame(tmean.corr[[5]])#
#
oakop.tmean.stack <- stack(oakop.tmean)#
names(oakop.tmean.stack)<- c("cor", "month")#
oakop.tmean.stack$Site <- as.factor("Oak_openings")#
oakop.tmean.stack$type <- as.factor("tmean")#
#
all.sites.tmean <- rbind(harvard.tmean.stack, howland.tmean.stack, mo.tmean.stack, mmf.tmean.stack, oakop.tmean.stack)#
#
summary(all.sites.tmean)#
#
#--------------------------------------------#
# Tmin correlation#
#--------------------------------------------#
#
sites <- c("Harvard", "Howland", "Missouri", "Morgan_Monroe", "Oak_openings")#
#
tmin.corr<-list()#
#
for(i in sites){#
	tmin.corr[[i]] <- cor(sites.crn[,i], t.min[t.min$Site.Name %in% i,!names(t.min) %in% c("Site.Name", "Year")], method="pearson")#
}#
summary(tmin.corr)#
#
# Making each site it's own dataframe#
harvard.tmin <- as.data.frame(tmin.corr[[1]])#
#
harvard.tmin.stack <- stack(harvard.tmin)#
names(harvard.tmin.stack)<- c("cor", "month")#
harvard.tmin.stack$Site <- as.factor("Harvard")#
harvard.tmin.stack$type <- as.factor("tmin")#
#
howland.tmin <- as.data.frame(tmin.corr[[2]])#
#
howland.tmin.stack <- stack(howland.tmin)#
names(howland.tmin.stack)<- c("cor", "month")#
howland.tmin.stack$Site <- as.factor("Howland")#
howland.tmin.stack$type <- as.factor("tmin")#
#
mo.tmin <- as.data.frame(tmin.corr[[3]])#
#
mo.tmin.stack <- stack(mo.tmin)#
names(mo.tmin.stack)<- c("cor", "month")#
mo.tmin.stack$Site <- as.factor("Missouri")#
mo.tmin.stack$type <- as.factor("tmin")#
#
mmf.tmin <- as.data.frame(tmin.corr[[4]])#
#
mmf.tmin.stack <- stack(mmf.tmin)#
names(mmf.tmin.stack)<- c("cor", "month")#
mmf.tmin.stack$Site <- as.factor("MMF")#
mmf.tmin.stack$type <- as.factor("tmin")#
#
oakop.tmin <- as.data.frame(tmin.corr[[5]])#
#
oakop.tmin.stack <- stack(oakop.tmin)#
names(oakop.tmin.stack)<- c("cor", "month")#
oakop.tmin.stack$Site <- as.factor("Oak_openings")#
oakop.tmin.stack$type <- as.factor("tmin")#
#
all.sites.tmin <- rbind(harvard.tmin.stack, howland.tmin.stack, mo.tmin.stack, mmf.tmin.stack, oakop.tmin.stack)#
#
summary(all.sites.tmin)#
#--------------------------------------------#
# Tmax correlation#
#--------------------------------------------#
#
sites <- c("Harvard", "Howland", "Missouri", "Morgan_Monroe", "Oak_openings")#
#
tmax.corr<-list()#
#
for(i in sites){#
	tmax.corr[[i]] <- cor(sites.crn[,i], t.max[t.max$Site.Name %in% i,!names(t.max) %in% c("Site.Name", "Year")], method="pearson")#
}#
summary(tmax.corr)#
#
# Making each site it's own dataframe#
harvard.tmax <- as.data.frame(tmax.corr[[1]])#
#
harvard.tmax.stack <- stack(harvard.tmax)#
names(harvard.tmax.stack)<- c("cor", "month")#
harvard.tmax.stack$Site <- as.factor("Harvard")#
harvard.tmax.stack$type <- as.factor("tmax")#
#
howland.tmax <- as.data.frame(tmax.corr[[2]])#
#
howland.tmax.stack <- stack(howland.tmax)#
names(howland.tmax.stack)<- c("cor", "month")#
howland.tmax.stack$Site <- as.factor("Howland")#
howland.tmax.stack$type <- as.factor("tmax")#
#
mo.tmax <- as.data.frame(tmax.corr[[3]])#
#
mo.tmax.stack <- stack(mo.tmax)#
names(mo.tmax.stack)<- c("cor", "month")#
mo.tmax.stack$Site <- as.factor("Missouri")#
mo.tmax.stack$type <- as.factor("tmax")#
#
mmf.tmax <- as.data.frame(tmax.corr[[4]])#
#
mmf.tmax.stack <- stack(mmf.tmax)#
names(mmf.tmax.stack)<- c("cor", "month")#
mmf.tmax.stack$Site <- as.factor("MMF")#
mmf.tmax.stack$type <- as.factor("tmax")#
#
oakop.tmax <- as.data.frame(tmax.corr[[5]])#
#
oakop.tmax.stack <- stack(oakop.tmax)#
names(oakop.tmax.stack)<- c("cor", "month")#
oakop.tmax.stack$Site <- as.factor("Oak_openings")#
oakop.tmax.stack$type <- as.factor("tmax")#
#
all.sites.tmax <- rbind(harvard.tmax.stack, howland.tmax.stack, mo.tmax.stack, mmf.tmax.stack, oakop.tmax.stack)#
#
summary(all.sites.tmax)#
#--------------------------------------------#
# Precip correlation#
#--------------------------------------------#
sites <- c("Harvard", "Howland", "Missouri", "Morgan_Monroe", "Oak_openings")#
#
precip.corr<-list()#
#
for(i in sites){#
	precip.corr[[i]] <- cor(sites.crn[,i], precip[precip$Site.Name %in% i,!names(precip) %in% c("Site.Name", "Year")], method="pearson")#
}#
summary(precip.corr)#
#
# Making each site it's own dataframe#
harvard.precip <- as.data.frame(precip.corr[[1]])#
#
harvard.precip.stack <- stack(harvard.precip)#
names(harvard.precip.stack)<- c("cor", "month")#
harvard.precip.stack$Site <- as.factor("Harvard")#
harvard.precip.stack$type <- as.factor("precip")#
#
howland.precip <- as.data.frame(precip.corr[[2]])#
#
howland.precip.stack <- stack(howland.precip)#
names(howland.precip.stack)<- c("cor", "month")#
howland.precip.stack$Site <- as.factor("Howland")#
howland.precip.stack$type <- as.factor("precip")#
#
mo.precip <- as.data.frame(precip.corr[[3]])#
#
mo.precip.stack <- stack(mo.precip)#
names(mo.precip.stack)<- c("cor", "month")#
mo.precip.stack$Site <- as.factor("Missouri")#
mo.precip.stack$type <- as.factor("precip")#
#
mmf.precip <- as.data.frame(precip.corr[[4]])#
#
mmf.precip.stack <- stack(mmf.precip)#
names(mmf.precip.stack)<- c("cor", "month")#
mmf.precip.stack$Site <- as.factor("MMF")#
mmf.precip.stack$type <- as.factor("precip")#
#
oakop.precip <- as.data.frame(precip.corr[[5]])#
#
oakop.precip.stack <- stack(oakop.precip)#
names(oakop.precip.stack)<- c("cor", "month")#
oakop.precip.stack$Site <- as.factor("Oak_openings")#
oakop.precip.stack$type <- as.factor("precip")#
#
all.sites.precip <- rbind(harvard.precip.stack, howland.precip.stack, mo.precip.stack, mmf.precip.stack, oakop.precip.stack)#
#
summary(all.sites.precip)#
#
# Merging all stacked dataframes together to make plotting easier#
#
all.sites.climate <- rbind(all.sites.precip, all.sites.tmax, all.sites.tmin, all.sites.tmean)#
summary(all.sites.climate)#
#
# Sig value for 61 df = 0.209#
all.sites.climate$sig <- ifelse(all.sites.climate$cor < -0.25 | all.sites.climate$cor > 0.25, "Y", "N")#
all.sites.climate$sig <- factor(all.sites.climate$sig, levels = c("Y", "N"))#
all.sites.climate$month <- factor(all.sites.climate$month, levels = c("pJan", "pFeb", "pMar", "pApr", "pMay", "pJun", "pJul", "pAug", "pSep", "pOct", "pNov", "pDec", "Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec", "pfall", "winter", "spring", "summer", "grow.seas"))#
#
all.sites.climate$Site <- factor(all.sites.climate$Site, levels = c("Missouri", "MMF", "Oak_openings", "Harvard", "Howland"))
ggplot(data=all.sites.climate) + facet_grid(Site ~ type ) +#
	geom_bar(aes(x=month, y=cor, fill=sig), stat="identity", position="dodge", colour="black") +#
	geom_hline(yintercept=0.25, linetype="dashed") + #
	geom_hline(yintercept=-0.25, linetype="dashed") + 	#
	geom_hline(yintercept=0, linetype="solid") +#
	scale_fill_manual(values= c("green", "grey50"))+#
	theme(axis.text.x = element_text(angle = 45, hjust = 1))
load("processed_data/sites_rw.Rdata")
summary(sites.rw[[1]])
names(sites.rw)
species.data <- sites.rw
summary(species.data)
short.spp <- list()
for(s in names(species.data)){#
	for(i in unique(test[test$Site ==s, "group"])){#
		cols.use <- unique(test[test$Site==s & test$group==i,"TreeID"])#
		short.spp[[paste(s, i, sep=".")]] <- species.data[[s]][,paste(cols.use)]#
	} #
}
summary(short.spp)
summary(short.spp[["Morgan Monroe State Park.TIAM"]])#
# Making each tree an index using a 30 yr. spline#
short.spp.index <- list()#
for(s in names(short.spp)){#
	short.spp.index[[s]] <- detrend(short.spp[[s]], method="Spline", nyrs=30)#
}#
summary(short.spp.index[[1]])#
# Making chronologies from these indicies#
short.spp.chr <- list()#
#
for(s in names(short.spp.index)){#
	short.spp.chr[[s]] <- chron(short.spp.index[[s]], prewhiten=T)#
}#
summary(short.spp.chr[[1]])
summary(short.spp.chr)
library(mgcv)#
library(ggplot2)#
library(car)#
library(reshape)#
library(dplR)#
# Christy's GAMM code#
#
# gam1 <- gamm(Y ~  s(Biomass, bs="cr", k=3, by=PFT) + s(tair, k=k, by=PFT) + s(precipf, k=k, by=PFT) + s(CO2, k=k, by=PFT), random=list(PlotID=~1), data=data) #
#
# Loading in my data#
#
data.use <- read.csv("processed_data/AllSites_tree_plus_climate_and_BA.csv", header=T)#
#
data.use$group <- data.use$Species#
data.use$group <- recode(data.use$group, "'CAOV' = 'CARYA'; 'CACO' = 'CARYA'; #
  							'CATE' = 'CARYA'; 'ACSAC' = 'ACSA'; 'BEAL' = 'BETULA'; 'BELE' = 'BETULA'; 'QUMU' = 'QUAL'")#
#
data.use$group.plot <- as.factor(paste(data.use$group, data.use$PlotID, sep="."))#
#
data.use$Canopy.Class <- recode(data.use$Canopy.Class, "'C' = 'D'")#
summary(data.use)#
# reducing the amount of data for the test runs#
sites.use <- c("Harvard", "Howland", "Morgan Monroe State Park", "Oak Openings Toledo", "Missouri Ozark")#
#
test <- data.use[data.use$Site %in% sites.use & !is.na(data.use$RW) & !is.na(data.use$BA.inc),]#
summary(test)#
#
test$group.cc <- as.factor(paste(test$group, test$Canopy.Class, sep="."))#
summary(test)#
# Get a list of what predictors & responses I'm using#
predictors.all <- c("tmean", "precip", "Species", "dbh.recon", "Canopy.Class", "spp.plot", "group", "group.plot", "group.cc")#
#
# Getting rid of observations that have NAs in the important variables#
test <- test[complete.cases(test[,predictors.all]),]#
test <- test[test$Live.Dead=="LIVE" & !test$Canopy.Class=="F",]#
#
# Subsetting to a set of species that we have enough data to feel good about#
#species.use <- c("TSCA", "QURU", "ACRU", "BEAL", "ACSA", "LITU", "QUAL", "CAOV", "CACO", "CATE", "JUVI", "QUVE", "PCRU", "THOC", "PIST")#
group.use <- c("ACRU", "ACSA", "BETULA", "CARYA", "FAGR", "FRAX", "PIST", "QUAL", "QURU", "QUVE", "SAAL", "TSCA", "ULRU")#
#
test <- test[test$group %in% group.use,]#
#
summary(test)#
#
par(new=F)#
plot(test[test$TreeID=="MMA003", "BA.inc"]~ test[test$TreeID=="MMA003","Year"], type="l")#
summary(test)#
# Truncatign at 1950#
test <- test[test$Year >= 1950 & test$Year <= 2012,]#
#
tree.rw <- test#
summary(tree.rw)#
#
summary(test)#
save(test, file="processed_data/test_tree_data_1950_2012.Rdata")#
#
sites.rw <- list()#
#
tree.rw$Year <- as.factor(tree.rw$Year)#
#
for(s in unique(tree.rw$Site)){#
	sites.rw[[s]] <- recast(tree.rw[tree.rw$Site==s,c("Year", "TreeID", "RW")], Year ~ TreeID)	#
}#
summary(sites.rw)#
#
save(sites.rw, file="processed_data/sites_rw.Rdata")#
summary(sites.rw[[4]])#
sites.rw#
# Making Indices of all the different sites using a 30 yr cubic smoothing spline#
sites.i <- list()#
#
for(s in names(sites.rw)){#
	sites.i[[s]] <- detrend(sites.rw[[s]][,2:ncol(sites.rw[[s]])], method="Mean")#
}#
summary(sites.i[[1]])#
#
# making chronologies for each site#
#
site.chron <- list()#
#
for(s in names(sites.i)){#
	site.chron[[s]] <- chron(sites.i[[s]][,2:ncol(sites.i[[s]])], prefix = substr(s, 1, 3), prewhiten = T) #
	site.chron[[s]][,"Year"]<- c(1950:2012) #
}#
#
summary(site.chron)#
# Making each site it's own dataframe#
harvard.crn <- as.data.frame(site.chron[[1]])#
#
howland.crn <- as.data.frame(site.chron[[2]])#
#
misso.crn <- as.data.frame(site.chron[[3]])#
#
mmf.crn <- as.data.frame(site.chron[[4]])#
#
oakop.crn <- as.data.frame(site.chron[[5]])#
# Merging the residual chronologies back together#
sites.crn <- data.frame(Harvard = harvard.crn[, "Harres"], #
						Howland = howland.crn[,"Howres"], #
						Missouri = misso.crn[,"Misres"],#
						Morgan_Monroe = mmf.crn[,"Morres"], #
						Oak_openings = oakop.crn[,"Oakres"]#
						)#
#
summary(sites.crn)#
# Load in climate data#
#
climate.use <- read.csv("processed_data/climate_growing_season.csv")#
#
summary(climate.use)#
#
climate.use <- climate.use[climate.use$Site %in% sites.use,]#
climate.use <- climate.use[climate.use$Year>=1950 & climate.use$Year <=2012,]#
#
climate.site <- list()#
#
for(s in unique(climate.use$Site)){#
	climate.site[[s]] <- climate.use[climate.use$Site==s,]#
}#
#
summary(climate.site)#
save(climate.site, file="processed_data/sites_use_climate.Rdata")#
class(climate.site[[1]][,"Year"])#
#
head(climate.site[[1]])#
#
summary(climate.site)#
#
harv.clim <- climate.site[["Harvard"]][,c("tmean", "precip")]#
#
how.clim <- climate.site[["Howland"]][,c("tmean", "precip")]#
#
miss.clim <- climate.site[["Missouri Ozark"]][,c("tmean", "precip")]#
#
mmf.clim <- climate.site[["Morgan Monroe State Park"]][,c("tmean", "precip")]#
#
oak.clim <- climate.site[["Oak Openings Toledo"]][,c("tmean", "precip")]#
dim(harv.clim)#
dim(harvard.crn)#
#
# harvard#
harv.cor<- cor(harvard.crn, harv.clim[,c("tmean", "precip")], method="pearson")#
harvard <- data.frame(cor = c(harv.cor[1:2,"tmean"],  harv.cor[1:2,"precip"]),#
					  var = c("tmean", "tmean", "precip", "precip"))#
harvard$type <- c("std", "res")#
harvard$site <- "Harvard" #
# Howland#
how.cor <- cor(howland.crn, how.clim[,c("tmean", "precip")], method="pearson")#
how.cor#
#
howland <- data.frame(cor = c(how.cor[1:2,"tmean"],  how.cor[1:2,"precip"]),#
					  var = c("tmean", "tmean", "precip", "precip"))#
howland$type <- c("std", "res")#
howland$site <- "Howland" #
# Missouri#
mo.cor <- cor(misso.crn, miss.clim[,c("tmean", "precip")], method="pearson")#
mo.cor#
#
missouri <- data.frame(cor = c(mo.cor[1:2,"tmean"],  mo.cor[1:2,"precip"]),#
					  var = c("tmean", "tmean", "precip", "precip"))#
missouri$type <- c("std", "res")#
missouri$site <- "Missouri" #
#
# Morgan Monroe#
mmf.cor <- cor(mmf.crn, mmf.clim[,c("tmean", "precip")], method="pearson")#
mmf.cor#
#
morgan <- data.frame(cor = c(mmf.cor[1:2,"tmean"],  mmf.cor[1:2,"precip"]),#
					  var = c("tmean", "tmean", "precip", "precip"))#
morgan$type <- c("std", "res")#
morgan$site <- "Morgan-Monroe" #
#
# Oak openings#
oakop.cor <- cor(oakop.crn, oak.clim[,c("tmean", "precip")], method="pearson")#
oakop.cor#
#
oakop <- data.frame(cor = c(oakop.cor[1:2,"tmean"],  oakop.cor[1:2,"precip"]),#
					  var = c("tmean", "tmean", "precip", "precip"))#
oakop$type <- c("std", "res")#
oakop$site <- "Oak-Openings" #
#
# Merging standard chronologies into one file#
#
clim.cor <- merge(harvard, howland, all.x=T, all.y=T)#
clim.cor2 <- merge(clim.cor, missouri,all.x=T, all.y=T)#
clim.cor3 <- merge(clim.cor2, morgan,all.x=T, all.y=T)#
clim.cor4 <- merge(clim.cor3, oakop,all.x=T, all.y=T)#
#
summary(clim.cor4)#
clim.cor4$site <- as.factor(clim.cor4$site)#
clim.cor4$type <- as.factor(clim.cor4$type)#
clim.cor4$cor <- as.numeric(clim.cor4$cor)#
#
# Sig value for 61 df = 0.209#
clim.cor4$sig <- ifelse(clim.cor4$cor < -0.246 | clim.cor4$cor > 0.246, "Y", "N")#
clim.cor4$sig <- factor(clim.cor4$sig, levels = c("Y", "N"))#
#
clim.cor4$site <- factor(clim.cor4$site, levels = c("Missouri", "Morgan-Monroe", "Oak-Openings", "Harvard", "Howland"))#
#
clim.cor4$Site <- clim.cor4$site#
clim.cor4$Site <- recode(clim.cor4$Site, "'Missouri' = 'MO'; 'Morgan-Monroe' = 'IN'; 'Oak-Openings' = 'OH'; 'Harvard' = 'MA'; 'Howland' = 'ME'")#
clim.cor4$Site <- factor(clim.cor4$Site, levels = c("MO", "IN", "OH", "MA", "ME"))#
pdf("figures/site_correlations.pdf", width= 13, height = 8.5)#
ggplot(data=clim.cor4[clim.cor4$type=="std",]) + facet_grid(var~. , scales="free_x") +#
	geom_bar(aes(x=Site, y=cor, fill=sig), stat="identity", position="dodge", colour="black") +#
	geom_hline(yintercept=0.209, linetype="dashed") + #
	geom_hline(yintercept=-0.209, linetype="dashed") + 	#
	geom_hline(yintercept=0, linetype="solid") +#
	scale_fill_manual(values= c("green", "grey50")) + #
	poster.theme2#
dev.off()#
#
#######################################################################
# Gettign correlations for all for all of the available climate data data#
#######################################################################
# Loading in climate data#
t.mean <- read.csv("processed_data/ch2_tmean.csv", header=T)#
t.min <- read.csv("processed_data/ch2_tmin.csv", header=T)#
t.max <- read.csv("processed_data/ch2_tmax.csv", header=T)#
precip <- read.csv("processed_data/ch2_precip.csv", header=T)#
summary(t.mean)#
#
# Limiting time frame--1950-2012#
t.mean <- t.mean[t.mean$Year >= 1951 & t.mean$Year <= 2012,]#
t.min <- t.min[t.min$Year >= 1951 & t.min$Year <= 2012,]#
t.max <- t.max[t.max$Year >= 1951 & t.max$Year <= 2012,]#
precip <- precip[precip$Year >= 1951 & precip$Year <= 2012,]#
summary(t.mean)#
summary(t.min)#
summary(t.max)#
summary(precip)#
#
head(t.mean)#
unique(t.mean$Site.Name)#
#
t.mean$Site.Name <- recode(t.mean$Site.Name, "'Missouri Ozark' = 'Missouri'; 'Morgan Monroe State Park'='Morgan_Monroe'; 'Oak Openings Toledo' = 'Oak_openings'")#
#
t.min$Site.Name <- recode(t.min$Site.Name, "'Missouri Ozark' = 'Missouri'; 'Morgan Monroe State Park'='Morgan_Monroe'; 'Oak Openings Toledo' = 'Oak_openings'")#
t.max$Site.Name <- recode(t.max$Site.Name, "'Missouri Ozark' = 'Missouri'; 'Morgan Monroe State Park'='Morgan_Monroe'; 'Oak Openings Toledo' = 'Oak_openings'")#
precip$Site.Name <- recode(precip$Site.Name, "'Missouri Ozark' = 'Missouri'; 'Morgan Monroe State Park'='Morgan_Monroe'; 'Oak Openings Toledo' = 'Oak_openings'")#
# getting the ring widths in a data frame#
summary(sites.crn)#
sites.crn$Year <- site.chron[[1]][,"Year"]#
head(sites.crn)#
sites.crn <- sites.crn[sites.crn$Year > 1950,]#
#--------------------------------------------#
# Tmean correlation#
#--------------------------------------------#
#
sites <- c("Harvard", "Howland", "Missouri", "Morgan_Monroe", "Oak_openings")#
#
tmean.corr<-list()#
#
for(i in sites){#
	tmean.corr[[i]] <- cor(sites.crn[,i], t.mean[t.mean$Site.Name %in% i,!names(t.mean) %in% c("Site.Name", "Year")], method="pearson")#
}#
summary(tmean.corr)#
#
# Making each site it's own dataframe#
harvard.tmean <- as.data.frame(tmean.corr[[1]])#
#
harvard.tmean.stack <- stack(harvard.tmean)#
names(harvard.tmean.stack)<- c("cor", "month")#
harvard.tmean.stack$Site <- as.factor("Harvard")#
harvard.tmean.stack$type <- as.factor("tmean")#
#
howland.tmean <- as.data.frame(tmean.corr[[2]])#
#
howland.tmean.stack <- stack(howland.tmean)#
names(howland.tmean.stack)<- c("cor", "month")#
howland.tmean.stack$Site <- as.factor("Howland")#
howland.tmean.stack$type <- as.factor("tmean")#
#
mo.tmean <- as.data.frame(tmean.corr[[3]])#
#
mo.tmean.stack <- stack(mo.tmean)#
names(mo.tmean.stack)<- c("cor", "month")#
mo.tmean.stack$Site <- as.factor("Missouri")#
mo.tmean.stack$type <- as.factor("tmean")#
#
mmf.tmean <- as.data.frame(tmean.corr[[4]])#
#
mmf.tmean.stack <- stack(mmf.tmean)#
names(mmf.tmean.stack)<- c("cor", "month")#
mmf.tmean.stack$Site <- as.factor("MMF")#
mmf.tmean.stack$type <- as.factor("tmean")#
#
oakop.tmean <- as.data.frame(tmean.corr[[5]])#
#
oakop.tmean.stack <- stack(oakop.tmean)#
names(oakop.tmean.stack)<- c("cor", "month")#
oakop.tmean.stack$Site <- as.factor("Oak_openings")#
oakop.tmean.stack$type <- as.factor("tmean")#
#
all.sites.tmean <- rbind(harvard.tmean.stack, howland.tmean.stack, mo.tmean.stack, mmf.tmean.stack, oakop.tmean.stack)#
#
summary(all.sites.tmean)#
#
#--------------------------------------------#
# Tmin correlation#
#--------------------------------------------#
#
sites <- c("Harvard", "Howland", "Missouri", "Morgan_Monroe", "Oak_openings")#
#
tmin.corr<-list()#
#
for(i in sites){#
	tmin.corr[[i]] <- cor(sites.crn[,i], t.min[t.min$Site.Name %in% i,!names(t.min) %in% c("Site.Name", "Year")], method="pearson")#
}#
summary(tmin.corr)#
#
# Making each site it's own dataframe#
harvard.tmin <- as.data.frame(tmin.corr[[1]])#
#
harvard.tmin.stack <- stack(harvard.tmin)#
names(harvard.tmin.stack)<- c("cor", "month")#
harvard.tmin.stack$Site <- as.factor("Harvard")#
harvard.tmin.stack$type <- as.factor("tmin")#
#
howland.tmin <- as.data.frame(tmin.corr[[2]])#
#
howland.tmin.stack <- stack(howland.tmin)#
names(howland.tmin.stack)<- c("cor", "month")#
howland.tmin.stack$Site <- as.factor("Howland")#
howland.tmin.stack$type <- as.factor("tmin")#
#
mo.tmin <- as.data.frame(tmin.corr[[3]])#
#
mo.tmin.stack <- stack(mo.tmin)#
names(mo.tmin.stack)<- c("cor", "month")#
mo.tmin.stack$Site <- as.factor("Missouri")#
mo.tmin.stack$type <- as.factor("tmin")#
#
mmf.tmin <- as.data.frame(tmin.corr[[4]])#
#
mmf.tmin.stack <- stack(mmf.tmin)#
names(mmf.tmin.stack)<- c("cor", "month")#
mmf.tmin.stack$Site <- as.factor("MMF")#
mmf.tmin.stack$type <- as.factor("tmin")#
#
oakop.tmin <- as.data.frame(tmin.corr[[5]])#
#
oakop.tmin.stack <- stack(oakop.tmin)#
names(oakop.tmin.stack)<- c("cor", "month")#
oakop.tmin.stack$Site <- as.factor("Oak_openings")#
oakop.tmin.stack$type <- as.factor("tmin")#
#
all.sites.tmin <- rbind(harvard.tmin.stack, howland.tmin.stack, mo.tmin.stack, mmf.tmin.stack, oakop.tmin.stack)#
#
summary(all.sites.tmin)#
#--------------------------------------------#
# Tmax correlation#
#--------------------------------------------#
#
sites <- c("Harvard", "Howland", "Missouri", "Morgan_Monroe", "Oak_openings")#
#
tmax.corr<-list()#
#
for(i in sites){#
	tmax.corr[[i]] <- cor(sites.crn[,i], t.max[t.max$Site.Name %in% i,!names(t.max) %in% c("Site.Name", "Year")], method="pearson")#
}#
summary(tmax.corr)#
#
# Making each site it's own dataframe#
harvard.tmax <- as.data.frame(tmax.corr[[1]])#
#
harvard.tmax.stack <- stack(harvard.tmax)#
names(harvard.tmax.stack)<- c("cor", "month")#
harvard.tmax.stack$Site <- as.factor("Harvard")#
harvard.tmax.stack$type <- as.factor("tmax")#
#
howland.tmax <- as.data.frame(tmax.corr[[2]])#
#
howland.tmax.stack <- stack(howland.tmax)#
names(howland.tmax.stack)<- c("cor", "month")#
howland.tmax.stack$Site <- as.factor("Howland")#
howland.tmax.stack$type <- as.factor("tmax")#
#
mo.tmax <- as.data.frame(tmax.corr[[3]])#
#
mo.tmax.stack <- stack(mo.tmax)#
names(mo.tmax.stack)<- c("cor", "month")#
mo.tmax.stack$Site <- as.factor("Missouri")#
mo.tmax.stack$type <- as.factor("tmax")#
#
mmf.tmax <- as.data.frame(tmax.corr[[4]])#
#
mmf.tmax.stack <- stack(mmf.tmax)#
names(mmf.tmax.stack)<- c("cor", "month")#
mmf.tmax.stack$Site <- as.factor("MMF")#
mmf.tmax.stack$type <- as.factor("tmax")#
#
oakop.tmax <- as.data.frame(tmax.corr[[5]])#
#
oakop.tmax.stack <- stack(oakop.tmax)#
names(oakop.tmax.stack)<- c("cor", "month")#
oakop.tmax.stack$Site <- as.factor("Oak_openings")#
oakop.tmax.stack$type <- as.factor("tmax")#
#
all.sites.tmax <- rbind(harvard.tmax.stack, howland.tmax.stack, mo.tmax.stack, mmf.tmax.stack, oakop.tmax.stack)#
#
summary(all.sites.tmax)#
#--------------------------------------------#
# Precip correlation#
#--------------------------------------------#
sites <- c("Harvard", "Howland", "Missouri", "Morgan_Monroe", "Oak_openings")#
#
precip.corr<-list()#
#
for(i in sites){#
	precip.corr[[i]] <- cor(sites.crn[,i], precip[precip$Site.Name %in% i,!names(precip) %in% c("Site.Name", "Year")], method="pearson")#
}#
summary(precip.corr)#
#
# Making each site it's own dataframe#
harvard.precip <- as.data.frame(precip.corr[[1]])#
#
harvard.precip.stack <- stack(harvard.precip)#
names(harvard.precip.stack)<- c("cor", "month")#
harvard.precip.stack$Site <- as.factor("Harvard")#
harvard.precip.stack$type <- as.factor("precip")#
#
howland.precip <- as.data.frame(precip.corr[[2]])#
#
howland.precip.stack <- stack(howland.precip)#
names(howland.precip.stack)<- c("cor", "month")#
howland.precip.stack$Site <- as.factor("Howland")#
howland.precip.stack$type <- as.factor("precip")#
#
mo.precip <- as.data.frame(precip.corr[[3]])#
#
mo.precip.stack <- stack(mo.precip)#
names(mo.precip.stack)<- c("cor", "month")#
mo.precip.stack$Site <- as.factor("Missouri")#
mo.precip.stack$type <- as.factor("precip")#
#
mmf.precip <- as.data.frame(precip.corr[[4]])#
#
mmf.precip.stack <- stack(mmf.precip)#
names(mmf.precip.stack)<- c("cor", "month")#
mmf.precip.stack$Site <- as.factor("MMF")#
mmf.precip.stack$type <- as.factor("precip")#
#
oakop.precip <- as.data.frame(precip.corr[[5]])#
#
oakop.precip.stack <- stack(oakop.precip)#
names(oakop.precip.stack)<- c("cor", "month")#
oakop.precip.stack$Site <- as.factor("Oak_openings")#
oakop.precip.stack$type <- as.factor("precip")#
#
all.sites.precip <- rbind(harvard.precip.stack, howland.precip.stack, mo.precip.stack, mmf.precip.stack, oakop.precip.stack)#
#
summary(all.sites.precip)#
#
# Merging all stacked dataframes together to make plotting easier#
#
all.sites.climate <- rbind(all.sites.precip, all.sites.tmax, all.sites.tmin, all.sites.tmean)#
summary(all.sites.climate)#
#
# Sig value for 61 df = 0.209#
all.sites.climate$sig <- ifelse(all.sites.climate$cor < -0.25 | all.sites.climate$cor > 0.25, "Y", "N")#
all.sites.climate$sig <- factor(all.sites.climate$sig, levels = c("Y", "N"))#
all.sites.climate$month <- factor(all.sites.climate$month, levels = c("pJan", "pFeb", "pMar", "pApr", "pMay", "pJun", "pJul", "pAug", "pSep", "pOct", "pNov", "pDec", "Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec", "pfall", "winter", "spring", "summer", "grow.seas"))#
#
all.sites.climate$Site <- factor(all.sites.climate$Site, levels = c("Missouri", "MMF", "Oak_openings", "Harvard", "Howland"))
pdf("figures/site_correlations_allmonths.pdf", width= 13, height = 8.5)#
ggplot(data=all.sites.climate) + facet_grid(Site ~ type ) +#
	geom_bar(aes(x=month, y=cor, fill=sig), stat="identity", position="dodge", colour="black") +#
	geom_hline(yintercept=0.25, linetype="dashed") + #
	geom_hline(yintercept=-0.25, linetype="dashed") + 	#
	geom_hline(yintercept=0, linetype="solid") +#
	scale_fill_manual(values= c("green", "grey50"))+#
	theme(axis.text.x = element_text(angle = 45, hjust = 1))#
dev.off()
library(mgcv)#
library(ggplot2)#
library(car)#
library(reshape)#
library(dplR)#
# Christy's GAMM code#
#
# gam1 <- gamm(Y ~  s(Biomass, bs="cr", k=3, by=PFT) + s(tair, k=k, by=PFT) + s(precipf, k=k, by=PFT) + s(CO2, k=k, by=PFT), random=list(PlotID=~1), data=data) #
#
# Loading in my data#
#
data.use <- read.csv("processed_data/AllSites_tree_plus_climate_and_BA.csv", header=T)#
#
data.use$group <- data.use$Species#
data.use$group <- recode(data.use$group, "'CAOV' = 'CARYA'; 'CACO' = 'CARYA'; #
  							'CATE' = 'CARYA'; 'ACSAC' = 'ACSA'; 'BEAL' = 'BETULA'; 'BELE' = 'BETULA'; 'QUMU' = 'QUAL'")#
#
data.use$group.plot <- as.factor(paste(data.use$group, data.use$PlotID, sep="."))#
#
data.use$Canopy.Class <- recode(data.use$Canopy.Class, "'C' = 'D'")#
summary(data.use)#
# reducing the amount of data for the test runs#
sites.use <- c("Harvard", "Howland", "Morgan Monroe State Park", "Oak Openings Toledo", "Missouri Ozark")#
#
test <- data.use[data.use$Site %in% sites.use & !is.na(data.use$RW) & !is.na(data.use$BA.inc),]#
summary(test)#
#
test$group.cc <- as.factor(paste(test$group, test$Canopy.Class, sep="."))#
summary(test)#
# Get a list of what predictors & responses I'm using#
predictors.all <- c("tmean", "precip", "Species", "dbh.recon", "Canopy.Class", "spp.plot", "group", "group.plot", "group.cc")#
#
# Getting rid of observations that have NAs in the important variables#
test <- test[complete.cases(test[,predictors.all]),]#
test <- test[test$Live.Dead=="LIVE" & !test$Canopy.Class=="F",]#
#
# Subsetting to a set of species that we have enough data to feel good about#
#species.use <- c("TSCA", "QURU", "ACRU", "BEAL", "ACSA", "LITU", "QUAL", "CAOV", "CACO", "CATE", "JUVI", "QUVE", "PCRU", "THOC", "PIST")#
group.use <- c("ACRU", "ACSA", "BETULA", "CARYA", "FAGR", "FRAX", "PIST", "QUAL", "QURU", "QUVE", "SAAL", "TSCA", "ULRU")#
#
test <- test[test$group %in% group.use,]#
#
summary(test)#
#
par(new=F)#
plot(test[test$TreeID=="MMA003", "BA.inc"]~ test[test$TreeID=="MMA003","Year"], type="l")#
summary(test)#
# Truncatign at 1950#
test <- test[test$Year >= 1950 & test$Year <= 2012,]#
#
tree.rw <- test#
summary(tree.rw)#
#
summary(test)#
save(test, file="processed_data/test_tree_data_1950_2012.Rdata")#
#
sites.rw <- list()#
#
tree.rw$Year <- as.factor(tree.rw$Year)#
#
for(s in unique(tree.rw$Site)){#
	sites.rw[[s]] <- recast(tree.rw[tree.rw$Site==s,c("Year", "TreeID", "RW")], Year ~ TreeID)	#
}#
summary(sites.rw)#
#
save(sites.rw, file="processed_data/sites_rw.Rdata")#
summary(sites.rw[[4]])#
sites.rw#
# Making Indices of all the different sites using a 30 yr cubic smoothing spline#
sites.i <- list()#
#
for(s in names(sites.rw)){#
	sites.i[[s]] <- detrend(sites.rw[[s]][,2:ncol(sites.rw[[s]])], method="Mean")#
}#
summary(sites.i[[1]])#
#
# making chronologies for each site#
#
site.chron <- list()#
#
for(s in names(sites.i)){#
	site.chron[[s]] <- chron(sites.i[[s]][,2:ncol(sites.i[[s]])], prefix = substr(s, 1, 3), prewhiten = T) #
	site.chron[[s]][,"Year"]<- c(1950:2012) #
}#
#
summary(site.chron)#
# Making each site it's own dataframe#
harvard.crn <- as.data.frame(site.chron[[1]])#
#
howland.crn <- as.data.frame(site.chron[[2]])#
#
misso.crn <- as.data.frame(site.chron[[3]])#
#
mmf.crn <- as.data.frame(site.chron[[4]])#
#
oakop.crn <- as.data.frame(site.chron[[5]])#
# Merging the residual chronologies back together#
sites.crn <- data.frame(Harvard = harvard.crn[, "Harres"], #
						Howland = howland.crn[,"Howres"], #
						Missouri = misso.crn[,"Misres"],#
						Morgan_Monroe = mmf.crn[,"Morres"], #
						Oak_openings = oakop.crn[,"Oakres"]#
						)#
#
summary(sites.crn)#
# Load in climate data#
#
climate.use <- read.csv("processed_data/climate_growing_season.csv")#
#
summary(climate.use)#
#
climate.use <- climate.use[climate.use$Site %in% sites.use,]#
climate.use <- climate.use[climate.use$Year>=1950 & climate.use$Year <=2012,]#
#
climate.site <- list()#
#
for(s in unique(climate.use$Site)){#
	climate.site[[s]] <- climate.use[climate.use$Site==s,]#
}#
#
summary(climate.site)#
save(climate.site, file="processed_data/sites_use_climate.Rdata")#
class(climate.site[[1]][,"Year"])#
#
head(climate.site[[1]])#
#
summary(climate.site)#
#
harv.clim <- climate.site[["Harvard"]][,c("tmean", "precip")]#
#
how.clim <- climate.site[["Howland"]][,c("tmean", "precip")]#
#
miss.clim <- climate.site[["Missouri Ozark"]][,c("tmean", "precip")]#
#
mmf.clim <- climate.site[["Morgan Monroe State Park"]][,c("tmean", "precip")]#
#
oak.clim <- climate.site[["Oak Openings Toledo"]][,c("tmean", "precip")]#
dim(harv.clim)#
dim(harvard.crn)#
#
# harvard#
harv.cor<- cor(harvard.crn, harv.clim[,c("tmean", "precip")], method="pearson")#
harvard <- data.frame(cor = c(harv.cor[1:2,"tmean"],  harv.cor[1:2,"precip"]),#
					  var = c("tmean", "tmean", "precip", "precip"))#
harvard$type <- c("std", "res")#
harvard$site <- "Harvard" #
# Howland#
how.cor <- cor(howland.crn, how.clim[,c("tmean", "precip")], method="pearson")#
how.cor#
#
howland <- data.frame(cor = c(how.cor[1:2,"tmean"],  how.cor[1:2,"precip"]),#
					  var = c("tmean", "tmean", "precip", "precip"))#
howland$type <- c("std", "res")#
howland$site <- "Howland" #
# Missouri#
mo.cor <- cor(misso.crn, miss.clim[,c("tmean", "precip")], method="pearson")#
mo.cor#
#
missouri <- data.frame(cor = c(mo.cor[1:2,"tmean"],  mo.cor[1:2,"precip"]),#
					  var = c("tmean", "tmean", "precip", "precip"))#
missouri$type <- c("std", "res")#
missouri$site <- "Missouri" #
#
# Morgan Monroe#
mmf.cor <- cor(mmf.crn, mmf.clim[,c("tmean", "precip")], method="pearson")#
mmf.cor#
#
morgan <- data.frame(cor = c(mmf.cor[1:2,"tmean"],  mmf.cor[1:2,"precip"]),#
					  var = c("tmean", "tmean", "precip", "precip"))#
morgan$type <- c("std", "res")#
morgan$site <- "Morgan-Monroe" #
#
# Oak openings#
oakop.cor <- cor(oakop.crn, oak.clim[,c("tmean", "precip")], method="pearson")#
oakop.cor#
#
oakop <- data.frame(cor = c(oakop.cor[1:2,"tmean"],  oakop.cor[1:2,"precip"]),#
					  var = c("tmean", "tmean", "precip", "precip"))#
oakop$type <- c("std", "res")#
oakop$site <- "Oak-Openings" #
#
# Merging standard chronologies into one file#
#
clim.cor <- merge(harvard, howland, all.x=T, all.y=T)#
clim.cor2 <- merge(clim.cor, missouri,all.x=T, all.y=T)#
clim.cor3 <- merge(clim.cor2, morgan,all.x=T, all.y=T)#
clim.cor4 <- merge(clim.cor3, oakop,all.x=T, all.y=T)#
#
summary(clim.cor4)#
clim.cor4$site <- as.factor(clim.cor4$site)#
clim.cor4$type <- as.factor(clim.cor4$type)#
clim.cor4$cor <- as.numeric(clim.cor4$cor)#
#
# Sig value for 61 df = 0.209#
clim.cor4$sig <- ifelse(clim.cor4$cor < -0.246 | clim.cor4$cor > 0.246, "Y", "N")#
clim.cor4$sig <- factor(clim.cor4$sig, levels = c("Y", "N"))#
#
clim.cor4$site <- factor(clim.cor4$site, levels = c("Missouri", "Morgan-Monroe", "Oak-Openings", "Harvard", "Howland"))#
#
clim.cor4$Site <- clim.cor4$site#
clim.cor4$Site <- recode(clim.cor4$Site, "'Missouri' = 'MO'; 'Morgan-Monroe' = 'IN'; 'Oak-Openings' = 'OH'; 'Harvard' = 'MA'; 'Howland' = 'ME'")#
clim.cor4$Site <- factor(clim.cor4$Site, levels = c("MO", "IN", "OH", "MA", "ME"))#
pdf("figures/site_correlations.pdf", width= 13, height = 8.5)#
ggplot(data=clim.cor4[clim.cor4$type=="std",]) + facet_grid(var~. , scales="free_x") +#
	geom_bar(aes(x=Site, y=cor, fill=sig), stat="identity", position="dodge", colour="black") +#
	geom_hline(yintercept=0.209, linetype="dashed") + #
	geom_hline(yintercept=-0.209, linetype="dashed") + 	#
	geom_hline(yintercept=0, linetype="solid") +#
	scale_fill_manual(values= c("green", "grey50")) + #
	poster.theme2#
dev.off()#
#
#######################################################################
# Gettign correlations for all for all of the available climate data data#
#######################################################################
# Loading in climate data#
t.mean <- read.csv("processed_data/ch2_tmean.csv", header=T)#
t.min <- read.csv("processed_data/ch2_tmin.csv", header=T)#
t.max <- read.csv("processed_data/ch2_tmax.csv", header=T)#
precip <- read.csv("processed_data/ch2_precip.csv", header=T)#
summary(t.mean)#
#
# Limiting time frame--1950-2012#
t.mean <- t.mean[t.mean$Year >= 1951 & t.mean$Year <= 2012,]#
t.min <- t.min[t.min$Year >= 1951 & t.min$Year <= 2012,]#
t.max <- t.max[t.max$Year >= 1951 & t.max$Year <= 2012,]#
precip <- precip[precip$Year >= 1951 & precip$Year <= 2012,]#
summary(t.mean)#
summary(t.min)#
summary(t.max)#
summary(precip)#
#
head(t.mean)#
unique(t.mean$Site.Name)#
#
t.mean$Site.Name <- recode(t.mean$Site.Name, "'Missouri Ozark' = 'Missouri'; 'Morgan Monroe State Park'='Morgan_Monroe'; 'Oak Openings Toledo' = 'Oak_openings'")#
#
t.min$Site.Name <- recode(t.min$Site.Name, "'Missouri Ozark' = 'Missouri'; 'Morgan Monroe State Park'='Morgan_Monroe'; 'Oak Openings Toledo' = 'Oak_openings'")#
t.max$Site.Name <- recode(t.max$Site.Name, "'Missouri Ozark' = 'Missouri'; 'Morgan Monroe State Park'='Morgan_Monroe'; 'Oak Openings Toledo' = 'Oak_openings'")#
precip$Site.Name <- recode(precip$Site.Name, "'Missouri Ozark' = 'Missouri'; 'Morgan Monroe State Park'='Morgan_Monroe'; 'Oak Openings Toledo' = 'Oak_openings'")#
# getting the ring widths in a data frame#
summary(sites.crn)#
sites.crn$Year <- site.chron[[1]][,"Year"]#
head(sites.crn)#
sites.crn <- sites.crn[sites.crn$Year > 1950,]#
#--------------------------------------------#
# Tmean correlation#
#--------------------------------------------#
#
sites <- c("Harvard", "Howland", "Missouri", "Morgan_Monroe", "Oak_openings")#
#
tmean.corr<-list()#
#
for(i in sites){#
	tmean.corr[[i]] <- cor(sites.crn[,i], t.mean[t.mean$Site.Name %in% i,!names(t.mean) %in% c("Site.Name", "Year")], method="pearson")#
}#
summary(tmean.corr)#
#
# Making each site it's own dataframe#
harvard.tmean <- as.data.frame(tmean.corr[[1]])#
#
harvard.tmean.stack <- stack(harvard.tmean)#
names(harvard.tmean.stack)<- c("cor", "month")#
harvard.tmean.stack$Site <- as.factor("Harvard")#
harvard.tmean.stack$type <- as.factor("tmean")#
#
howland.tmean <- as.data.frame(tmean.corr[[2]])#
#
howland.tmean.stack <- stack(howland.tmean)#
names(howland.tmean.stack)<- c("cor", "month")#
howland.tmean.stack$Site <- as.factor("Howland")#
howland.tmean.stack$type <- as.factor("tmean")#
#
mo.tmean <- as.data.frame(tmean.corr[[3]])#
#
mo.tmean.stack <- stack(mo.tmean)#
names(mo.tmean.stack)<- c("cor", "month")#
mo.tmean.stack$Site <- as.factor("Missouri")#
mo.tmean.stack$type <- as.factor("tmean")#
#
mmf.tmean <- as.data.frame(tmean.corr[[4]])#
#
mmf.tmean.stack <- stack(mmf.tmean)#
names(mmf.tmean.stack)<- c("cor", "month")#
mmf.tmean.stack$Site <- as.factor("MMF")#
mmf.tmean.stack$type <- as.factor("tmean")#
#
oakop.tmean <- as.data.frame(tmean.corr[[5]])#
#
oakop.tmean.stack <- stack(oakop.tmean)#
names(oakop.tmean.stack)<- c("cor", "month")#
oakop.tmean.stack$Site <- as.factor("Oak_openings")#
oakop.tmean.stack$type <- as.factor("tmean")#
#
all.sites.tmean <- rbind(harvard.tmean.stack, howland.tmean.stack, mo.tmean.stack, mmf.tmean.stack, oakop.tmean.stack)#
#
summary(all.sites.tmean)#
#
#--------------------------------------------#
# Tmin correlation#
#--------------------------------------------#
#
sites <- c("Harvard", "Howland", "Missouri", "Morgan_Monroe", "Oak_openings")#
#
tmin.corr<-list()#
#
for(i in sites){#
	tmin.corr[[i]] <- cor(sites.crn[,i], t.min[t.min$Site.Name %in% i,!names(t.min) %in% c("Site.Name", "Year")], method="pearson")#
}#
summary(tmin.corr)#
#
# Making each site it's own dataframe#
harvard.tmin <- as.data.frame(tmin.corr[[1]])#
#
harvard.tmin.stack <- stack(harvard.tmin)#
names(harvard.tmin.stack)<- c("cor", "month")#
harvard.tmin.stack$Site <- as.factor("Harvard")#
harvard.tmin.stack$type <- as.factor("tmin")#
#
howland.tmin <- as.data.frame(tmin.corr[[2]])#
#
howland.tmin.stack <- stack(howland.tmin)#
names(howland.tmin.stack)<- c("cor", "month")#
howland.tmin.stack$Site <- as.factor("Howland")#
howland.tmin.stack$type <- as.factor("tmin")#
#
mo.tmin <- as.data.frame(tmin.corr[[3]])#
#
mo.tmin.stack <- stack(mo.tmin)#
names(mo.tmin.stack)<- c("cor", "month")#
mo.tmin.stack$Site <- as.factor("Missouri")#
mo.tmin.stack$type <- as.factor("tmin")#
#
mmf.tmin <- as.data.frame(tmin.corr[[4]])#
#
mmf.tmin.stack <- stack(mmf.tmin)#
names(mmf.tmin.stack)<- c("cor", "month")#
mmf.tmin.stack$Site <- as.factor("MMF")#
mmf.tmin.stack$type <- as.factor("tmin")#
#
oakop.tmin <- as.data.frame(tmin.corr[[5]])#
#
oakop.tmin.stack <- stack(oakop.tmin)#
names(oakop.tmin.stack)<- c("cor", "month")#
oakop.tmin.stack$Site <- as.factor("Oak_openings")#
oakop.tmin.stack$type <- as.factor("tmin")#
#
all.sites.tmin <- rbind(harvard.tmin.stack, howland.tmin.stack, mo.tmin.stack, mmf.tmin.stack, oakop.tmin.stack)#
#
summary(all.sites.tmin)#
#--------------------------------------------#
# Tmax correlation#
#--------------------------------------------#
#
sites <- c("Harvard", "Howland", "Missouri", "Morgan_Monroe", "Oak_openings")#
#
tmax.corr<-list()#
#
for(i in sites){#
	tmax.corr[[i]] <- cor(sites.crn[,i], t.max[t.max$Site.Name %in% i,!names(t.max) %in% c("Site.Name", "Year")], method="pearson")#
}#
summary(tmax.corr)#
#
# Making each site it's own dataframe#
harvard.tmax <- as.data.frame(tmax.corr[[1]])#
#
harvard.tmax.stack <- stack(harvard.tmax)#
names(harvard.tmax.stack)<- c("cor", "month")#
harvard.tmax.stack$Site <- as.factor("Harvard")#
harvard.tmax.stack$type <- as.factor("tmax")#
#
howland.tmax <- as.data.frame(tmax.corr[[2]])#
#
howland.tmax.stack <- stack(howland.tmax)#
names(howland.tmax.stack)<- c("cor", "month")#
howland.tmax.stack$Site <- as.factor("Howland")#
howland.tmax.stack$type <- as.factor("tmax")#
#
mo.tmax <- as.data.frame(tmax.corr[[3]])#
#
mo.tmax.stack <- stack(mo.tmax)#
names(mo.tmax.stack)<- c("cor", "month")#
mo.tmax.stack$Site <- as.factor("Missouri")#
mo.tmax.stack$type <- as.factor("tmax")#
#
mmf.tmax <- as.data.frame(tmax.corr[[4]])#
#
mmf.tmax.stack <- stack(mmf.tmax)#
names(mmf.tmax.stack)<- c("cor", "month")#
mmf.tmax.stack$Site <- as.factor("MMF")#
mmf.tmax.stack$type <- as.factor("tmax")#
#
oakop.tmax <- as.data.frame(tmax.corr[[5]])#
#
oakop.tmax.stack <- stack(oakop.tmax)#
names(oakop.tmax.stack)<- c("cor", "month")#
oakop.tmax.stack$Site <- as.factor("Oak_openings")#
oakop.tmax.stack$type <- as.factor("tmax")#
#
all.sites.tmax <- rbind(harvard.tmax.stack, howland.tmax.stack, mo.tmax.stack, mmf.tmax.stack, oakop.tmax.stack)#
#
summary(all.sites.tmax)#
#--------------------------------------------#
# Precip correlation#
#--------------------------------------------#
sites <- c("Harvard", "Howland", "Missouri", "Morgan_Monroe", "Oak_openings")#
#
precip.corr<-list()#
#
for(i in sites){#
	precip.corr[[i]] <- cor(sites.crn[,i], precip[precip$Site.Name %in% i,!names(precip) %in% c("Site.Name", "Year")], method="pearson")#
}#
summary(precip.corr)#
#
# Making each site it's own dataframe#
harvard.precip <- as.data.frame(precip.corr[[1]])#
#
harvard.precip.stack <- stack(harvard.precip)#
names(harvard.precip.stack)<- c("cor", "month")#
harvard.precip.stack$Site <- as.factor("Harvard")#
harvard.precip.stack$type <- as.factor("precip")#
#
howland.precip <- as.data.frame(precip.corr[[2]])#
#
howland.precip.stack <- stack(howland.precip)#
names(howland.precip.stack)<- c("cor", "month")#
howland.precip.stack$Site <- as.factor("Howland")#
howland.precip.stack$type <- as.factor("precip")#
#
mo.precip <- as.data.frame(precip.corr[[3]])#
#
mo.precip.stack <- stack(mo.precip)#
names(mo.precip.stack)<- c("cor", "month")#
mo.precip.stack$Site <- as.factor("Missouri")#
mo.precip.stack$type <- as.factor("precip")#
#
mmf.precip <- as.data.frame(precip.corr[[4]])#
#
mmf.precip.stack <- stack(mmf.precip)#
names(mmf.precip.stack)<- c("cor", "month")#
mmf.precip.stack$Site <- as.factor("MMF")#
mmf.precip.stack$type <- as.factor("precip")#
#
oakop.precip <- as.data.frame(precip.corr[[5]])#
#
oakop.precip.stack <- stack(oakop.precip)#
names(oakop.precip.stack)<- c("cor", "month")#
oakop.precip.stack$Site <- as.factor("Oak_openings")#
oakop.precip.stack$type <- as.factor("precip")#
#
all.sites.precip <- rbind(harvard.precip.stack, howland.precip.stack, mo.precip.stack, mmf.precip.stack, oakop.precip.stack)#
#
summary(all.sites.precip)#
#
# Merging all stacked dataframes together to make plotting easier#
#
all.sites.climate <- rbind(all.sites.precip, all.sites.tmax, all.sites.tmin, all.sites.tmean)#
summary(all.sites.climate)#
#
# Sig value for 61 df = 0.209#
all.sites.climate$sig <- ifelse(all.sites.climate$cor < -0.25 | all.sites.climate$cor > 0.25, "Y", "N")#
all.sites.climate$sig <- factor(all.sites.climate$sig, levels = c("Y", "N"))#
all.sites.climate$month <- factor(all.sites.climate$month, levels = c("pJan", "pFeb", "pMar", "pApr", "pMay", "pJun", "pJul", "pAug", "pSep", "pOct", "pNov", "pDec", "Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec", "pfall", "winter", "spring", "summer", "grow.seas"))#
#
all.sites.climate$Site <- factor(all.sites.climate$Site, levels = c("Missouri", "MMF", "Oak_openings", "Harvard", "Howland"))
pdf("figures/site_correlations_allmonths.pdf", width= 13, height = 8.5)#
ggplot(data=all.sites.climate) + facet_grid(Site ~ type ) +#
	geom_bar(aes(x=month, y=cor, fill=sig), stat="identity", position="dodge", colour="black") +#
	geom_hline(yintercept=0.25, linetype="dashed") + #
	geom_hline(yintercept=-0.25, linetype="dashed") + 	#
	geom_hline(yintercept=0, linetype="solid") +#
	scale_fill_manual(values= c("green", "grey50"))+#
	theme(axis.text.x = element_text(angle = 45, hjust = 1))#
dev.off()
library(ggplot2)#
library(stringr)#
load(file="processed_data/gamm_weights/gam3_weights.Rdata")#
#
summary(gam3.weights)#
factors.fits <- c("fit.tmean", "fit.precip", "fit.dbh.recon", "fit.full", "BA.inc")#
factors.weights <- c("weight.tmean", "weight.dbh.recon", "weight.precip")#
othervars <- c("Year", "Site", "group.cc", "Model")#
#
data.graph1 <- aggregate(gam3.weights[,factors.fits], by = gam3.weights[,othervars], FUN= mean, na.rm=T)#
#
data.graph1[,paste(factors.fits, "upr", sep=".")] <- aggregate(gam3.weights[,factors.fits], by = gam3.weights[,othervars], FUN= quantile, prob= 0.975, na.rm=T)[,factors.fits]#
#
data.graph1[,paste(factors.fits, "lwr", sep=".")] <- aggregate(gam3.weights[,factors.fits], by = gam3.weights[,othervars], FUN= quantile, prob= 0.025, na.rm=T)[,factors.fits]#
#
summary(data.graph1)#
#
data.graph2 <- aggregate(abs(gam3.weights[,factors.weights]), by = gam3.weights[,othervars], FUN= mean, na.rm=T)#
#
data.graph2[,paste(factors.weights, "upr", sep=".")] <- aggregate(abs(gam3.weights[,factors.weights]), by = gam3.weights[,othervars], FUN= quantile, prob= 0.975, na.rm=T)[,factors.weights]#
#
data.graph2[,paste(factors.weights, "lwr", sep=".")] <- aggregate(abs(gam3.weights[,factors.weights]), by = gam3.weights[,othervars], FUN= quantile, prob= 0.025, na.rm=T)[,factors.weights]#
#
summary(data.graph2)#
#
data.graph <- merge(data.graph1, data.graph2, all.x=T, all.y=T)#
#
# data.graph <- gam3.weights[gam3.weights$TreeID== "MMA014",]#
summary(data.graph)#
gam3.weights$wts.check <- rowSums(abs(gam3.weights[,c("weight.tmean", "weight.precip", "weight.dbh.recon")]))#
data.graph$wts.check <- rowSums(abs(data.graph[,c("weight.tmean", "weight.precip", "weight.dbh.recon")]))#
#
summary(gam3.weights)#
summary(data.graph)#
#
# Ordering the data for graphing#
#
data.graph<- data.graph[order(data.graph$Year, data.graph$group.cc, data.graph$Site, decreasing=F),]#
plot.rgb <- function(STATE, GC, SIZE){	geom_line(data=data.graph[data.graph$State==STATE & data.graph$group.cc==GC,],aes(x=Year, y=fit.full), size=SIZE,#
  		        color=rgb(abs(data.graph[data.graph$State==STATE & data.graph$group.cc==GC,"weight.tmean"     ]), # red#
                        abs(data.graph[data.graph$State==STATE & data.graph$group.cc==GC,"weight.dbh.recon"     ]), # green#
                        abs(data.graph[data.graph$State==STATE & data.graph$group.cc==GC,"weight.precip"   ]))) }   # blue#
# Plotting the Obs and modeled with influence coloring#
data.graph$State <- recode(data.graph$Site, "'Howland' = 'ME';'Harvard' = 'MA';'Morgan Monroe State Park' = 'IN';'Missouri Ozark' = 'MO';'Oak Openings Toledo' = 'OH'")#
data.graph$State <- factor(data.graph$State, levels=c("MO", "IN", "OH", "MA", "ME"))#
#
for(i in unique(data.graph$group.cc)){#
	data.graph[data.graph$group.cc==i,"Canopy.Class"] <- str_sub(data.graph[data.graph$group.cc==i,"group.cc"], -1)#
	data.graph[data.graph$group.cc==i,"group"] <- substr(data.graph[data.graph$group.cc==i,"group.cc"], 1,4)#
}#
data.graph$Canopy.Class <- as.factor(data.graph$Canopy.Class)#
data.graph$group <- as.factor(data.graph$group)#
summary(data.graph)
ggplot(data = data.graph[data.graph$State %in% "MO",]) + facet_grid(Canopy.Class ~ group) +#
	scale_x_continuous(expand=c(0,0), name="Year") +#
	scale_y_continuous(expand=c(0,0), name="BAI") +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_line(aes(x=Year, y=BA.inc), size=2, alpha=0.5) +#
	geom_ribbon(aes(x=Year, ymin=BA.inc.lwr, ymax=BA.inc.upr), alpha=0.3) +#
	geom_line(aes(x=Year, y = 0), linetype="dashed") +#
	# Missouri Ozark#
		plot.rgb("MO", "ACRU.C", 3) +#
	plot.rgb("MO", "ACRU.D", 3) +#
	plot.rgb("MO", "ACRU.I", 3) +#
	plot.rgb("MO", "ACRU.S", 3) +#
	plot.rgb("MO", "PIST.C", 3) +#
	plot.rgb("MO", "PIST.D", 3) +#
	plot.rgb("MO", "PIST.I", 3) +#
	plot.rgb("MO", "PIST.S", 3) +#
#
	plot.rgb("MO", "TSCA.C", 3) +#
	plot.rgb("MO", "TSCA.D", 3) +#
	plot.rgb("MO", "TSCA.I", 3) +#
	plot.rgb("MO", "TSCA.S", 3) +#
	plot.rgb("MO", "QURU.C", 3) +#
	plot.rgb("MO", "QURU.D", 3) +#
	plot.rgb("MO", "QURU.I", 3) +#
	plot.rgb("MO", "QURU.S", 3) +#
	plot.rgb("MO", "QUVE.C", 3) +#
	plot.rgb("MO", "QUVE.D", 3) +#
	plot.rgb("MO", "QUVE.I", 3) +#
	plot.rgb("MO", "QUVE.S", 3) +#
	plot.rgb("MO", "FRAX.C", 3) +#
	plot.rgb("MO", "FRAX.D", 3) +#
	plot.rgb("MO", "FRAX.I", 3) +#
	plot.rgb("MO", "FRAX.S", 3) +#
#
	plot.rgb("MO", "BETULA.C", 3) +#
	plot.rgb("MO", "BETULA.D", 3) +#
	plot.rgb("MO", "BETULA.I", 3) +#
	plot.rgb("MO", "BETULA.S", 3) +#
	plot.rgb("MO", "ACSA.C", 3) +#
	plot.rgb("MO", "ACSA.D", 3) +#
	plot.rgb("MO", "ACSA.I", 3) +#
	plot.rgb("MO", "ACSA.S", 3) +#
	plot.rgb("MO", "QUAL.C", 3) +#
	plot.rgb("MO", "QUAL.D", 3) +#
	plot.rgb("MO", "QUAL.I", 3) +#
	plot.rgb("MO", "QUAL.S", 3) +#
	plot.rgb("MO", "FAGR.C", 3) +#
	plot.rgb("MO", "FAGR.D", 3) +#
	plot.rgb("MO", "FAGR.I", 3) +#
	plot.rgb("MO", "FAGR.S", 3) +#
	plot.rgb("MO", "ULRU.C", 3) +#
	plot.rgb("MO", "ULRU.D", 3) +#
	plot.rgb("MO", "ULRU.I", 3) +#
	plot.rgb("MO", "ULRU.S", 3) +#
	plot.rgb("MO", "CARYA.C", 3) +#
	plot.rgb("MO", "CARYA.D", 3) +#
	plot.rgb("MO", "CARYA.I", 3) +#
	plot.rgb("MO", "CARYA.S", 3) +#
#
	plot.rgb("MO", "SAAL.C", 3) +#
	plot.rgb("MO", "SAAL.D", 3) +#
	plot.rgb("MO", "SAAL.I", 3) +#
	plot.rgb("MO", "SAAL.S", 3)
pdf("figures/gam3/gam3_SPP_CC_BAI_limiting_factors_MO.pdf", width= 13, height = 8.5)#
ggplot(data = data.graph[data.graph$State %in% "MO",]) + facet_grid(Canopy.Class ~ group) +#
	scale_x_continuous(expand=c(0,0), name="Year") +#
	scale_y_continuous(expand=c(0,0), name="BAI") +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_line(aes(x=Year, y=BA.inc), size=2, alpha=0.5) +#
	geom_ribbon(aes(x=Year, ymin=BA.inc.lwr, ymax=BA.inc.upr), alpha=0.3) +#
	geom_line(aes(x=Year, y = 0), linetype="dashed") +#
	# Missouri Ozark#
		plot.rgb("MO", "ACRU.C", 3) +#
	plot.rgb("MO", "ACRU.D", 3) +#
	plot.rgb("MO", "ACRU.I", 3) +#
	plot.rgb("MO", "ACRU.S", 3) +#
	plot.rgb("MO", "PIST.C", 3) +#
	plot.rgb("MO", "PIST.D", 3) +#
	plot.rgb("MO", "PIST.I", 3) +#
	plot.rgb("MO", "PIST.S", 3) +#
#
	plot.rgb("MO", "TSCA.C", 3) +#
	plot.rgb("MO", "TSCA.D", 3) +#
	plot.rgb("MO", "TSCA.I", 3) +#
	plot.rgb("MO", "TSCA.S", 3) +#
	plot.rgb("MO", "QURU.C", 3) +#
	plot.rgb("MO", "QURU.D", 3) +#
	plot.rgb("MO", "QURU.I", 3) +#
	plot.rgb("MO", "QURU.S", 3) +#
	plot.rgb("MO", "QUVE.C", 3) +#
	plot.rgb("MO", "QUVE.D", 3) +#
	plot.rgb("MO", "QUVE.I", 3) +#
	plot.rgb("MO", "QUVE.S", 3) +#
	plot.rgb("MO", "FRAX.C", 3) +#
	plot.rgb("MO", "FRAX.D", 3) +#
	plot.rgb("MO", "FRAX.I", 3) +#
	plot.rgb("MO", "FRAX.S", 3) +#
#
	plot.rgb("MO", "BETULA.C", 3) +#
	plot.rgb("MO", "BETULA.D", 3) +#
	plot.rgb("MO", "BETULA.I", 3) +#
	plot.rgb("MO", "BETULA.S", 3) +#
	plot.rgb("MO", "ACSA.C", 3) +#
	plot.rgb("MO", "ACSA.D", 3) +#
	plot.rgb("MO", "ACSA.I", 3) +#
	plot.rgb("MO", "ACSA.S", 3) +#
	plot.rgb("MO", "QUAL.C", 3) +#
	plot.rgb("MO", "QUAL.D", 3) +#
	plot.rgb("MO", "QUAL.I", 3) +#
	plot.rgb("MO", "QUAL.S", 3) +#
	plot.rgb("MO", "FAGR.C", 3) +#
	plot.rgb("MO", "FAGR.D", 3) +#
	plot.rgb("MO", "FAGR.I", 3) +#
	plot.rgb("MO", "FAGR.S", 3) +#
	plot.rgb("MO", "ULRU.C", 3) +#
	plot.rgb("MO", "ULRU.D", 3) +#
	plot.rgb("MO", "ULRU.I", 3) +#
	plot.rgb("MO", "ULRU.S", 3) +#
	plot.rgb("MO", "CARYA.C", 3) +#
	plot.rgb("MO", "CARYA.D", 3) +#
	plot.rgb("MO", "CARYA.I", 3) +#
	plot.rgb("MO", "CARYA.S", 3) +#
#
	plot.rgb("MO", "SAAL.C", 3) +#
	plot.rgb("MO", "SAAL.D", 3) +#
	plot.rgb("MO", "SAAL.I", 3) +#
	plot.rgb("MO", "SAAL.S", 3)#
dev.off()
ggplot(data = data.graph[data.graph$State %in% "IN"]) + facet_grid(Canopy.Class ~ group) +#
	scale_x_continuous(expand=c(0,0), name="Year") +#
	scale_y_continuous(expand=c(0,0), name="BAI") +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_line(aes(x=Year, y=BA.inc), size=2, alpha=0.5) +#
	geom_ribbon(aes(x=Year, ymin=BA.inc.lwr, ymax=BA.inc.upr), alpha=0.3) +#
	geom_line(aes(x=Year, y = 0), linetype="dashed") +#
	# Morgan Monroe#
	plot.rgb("IN", "ACRU.C", 3) +#
	plot.rgb("IN", "ACRU.D", 3) +#
	plot.rgb("IN", "ACRU.I", 3) +#
	plot.rgb("IN", "ACRU.S", 3) +#
	plot.rgb("IN", "PIST.C", 3) +#
	plot.rgb("IN", "PIST.D", 3) +#
	plot.rgb("IN", "PIST.I", 3) +#
	plot.rgb("IN", "PIST.S", 3) +#
#
	plot.rgb("IN", "TSCA.C", 3) +#
	plot.rgb("IN", "TSCA.D", 3) +#
	plot.rgb("IN", "TSCA.I", 3) +#
	plot.rgb("IN", "TSCA.S", 3) +#
	plot.rgb("IN", "QURU.C", 3) +#
	plot.rgb("IN", "QURU.D", 3) +#
	plot.rgb("IN", "QURU.I", 3) +#
	plot.rgb("IN", "QURU.S", 3) +#
	plot.rgb("IN", "QUVE.C", 3) +#
	plot.rgb("IN", "QUVE.D", 3) +#
	plot.rgb("IN", "QUVE.I", 3) +#
	plot.rgb("IN", "QUVE.S", 3) +#
	plot.rgb("IN", "FRAX.C", 3) +#
	plot.rgb("IN", "FRAX.D", 3) +#
	plot.rgb("IN", "FRAX.I", 3) +#
	plot.rgb("IN", "FRAX.S", 3) +#
#
	plot.rgb("IN", "BETULA.C", 3) +#
	plot.rgb("IN", "BETULA.D", 3) +#
	plot.rgb("IN", "BETULA.I", 3) +#
	plot.rgb("IN", "BETULA.S", 3) +#
	plot.rgb("IN", "ACSA.C", 3) +#
	plot.rgb("IN", "ACSA.D", 3) +#
	plot.rgb("IN", "ACSA.I", 3) +#
	plot.rgb("IN", "ACSA.S", 3) +#
	plot.rgb("IN", "QUAL.C", 3) +#
	plot.rgb("IN", "QUAL.D", 3) +#
	plot.rgb("IN", "QUAL.I", 3) +#
	plot.rgb("IN", "QUAL.S", 3) +#
	plot.rgb("IN", "FAGR.C", 3) +#
	plot.rgb("IN", "FAGR.D", 3) +#
	plot.rgb("IN", "FAGR.I", 3) +#
	plot.rgb("IN", "FAGR.S", 3) +#
	plot.rgb("IN", "ULRU.C", 3) +#
	plot.rgb("IN", "ULRU.D", 3) +#
	plot.rgb("IN", "ULRU.I", 3) +#
	plot.rgb("IN", "ULRU.S", 3) +#
	plot.rgb("IN", "CARYA.C", 3) +#
	plot.rgb("IN", "CARYA.D", 3) +#
	plot.rgb("IN", "CARYA.I", 3) +#
	plot.rgb("IN", "CARYA.S", 3) +#
#
	plot.rgb("IN", "SAAL.C", 3) +#
	plot.rgb("IN", "SAAL.D", 3) +#
	plot.rgb("IN", "SAAL.I", 3) +#
	plot.rgb("IN", "SAAL.S", 3)
ggplot(data = data.graph[data.graph$State %in% "IN",]) + facet_grid(Canopy.Class ~ group) +#
	scale_x_continuous(expand=c(0,0), name="Year") +#
	scale_y_continuous(expand=c(0,0), name="BAI") +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_line(aes(x=Year, y=BA.inc), size=2, alpha=0.5) +#
	geom_ribbon(aes(x=Year, ymin=BA.inc.lwr, ymax=BA.inc.upr), alpha=0.3) +#
	geom_line(aes(x=Year, y = 0), linetype="dashed") +#
	# Morgan Monroe#
	plot.rgb("IN", "ACRU.C", 3) +#
	plot.rgb("IN", "ACRU.D", 3) +#
	plot.rgb("IN", "ACRU.I", 3) +#
	plot.rgb("IN", "ACRU.S", 3) +#
	plot.rgb("IN", "PIST.C", 3) +#
	plot.rgb("IN", "PIST.D", 3) +#
	plot.rgb("IN", "PIST.I", 3) +#
	plot.rgb("IN", "PIST.S", 3) +#
#
	plot.rgb("IN", "TSCA.C", 3) +#
	plot.rgb("IN", "TSCA.D", 3) +#
	plot.rgb("IN", "TSCA.I", 3) +#
	plot.rgb("IN", "TSCA.S", 3) +#
	plot.rgb("IN", "QURU.C", 3) +#
	plot.rgb("IN", "QURU.D", 3) +#
	plot.rgb("IN", "QURU.I", 3) +#
	plot.rgb("IN", "QURU.S", 3) +#
	plot.rgb("IN", "QUVE.C", 3) +#
	plot.rgb("IN", "QUVE.D", 3) +#
	plot.rgb("IN", "QUVE.I", 3) +#
	plot.rgb("IN", "QUVE.S", 3) +#
	plot.rgb("IN", "FRAX.C", 3) +#
	plot.rgb("IN", "FRAX.D", 3) +#
	plot.rgb("IN", "FRAX.I", 3) +#
	plot.rgb("IN", "FRAX.S", 3) +#
#
	plot.rgb("IN", "BETULA.C", 3) +#
	plot.rgb("IN", "BETULA.D", 3) +#
	plot.rgb("IN", "BETULA.I", 3) +#
	plot.rgb("IN", "BETULA.S", 3) +#
	plot.rgb("IN", "ACSA.C", 3) +#
	plot.rgb("IN", "ACSA.D", 3) +#
	plot.rgb("IN", "ACSA.I", 3) +#
	plot.rgb("IN", "ACSA.S", 3) +#
	plot.rgb("IN", "QUAL.C", 3) +#
	plot.rgb("IN", "QUAL.D", 3) +#
	plot.rgb("IN", "QUAL.I", 3) +#
	plot.rgb("IN", "QUAL.S", 3) +#
	plot.rgb("IN", "FAGR.C", 3) +#
	plot.rgb("IN", "FAGR.D", 3) +#
	plot.rgb("IN", "FAGR.I", 3) +#
	plot.rgb("IN", "FAGR.S", 3) +#
	plot.rgb("IN", "ULRU.C", 3) +#
	plot.rgb("IN", "ULRU.D", 3) +#
	plot.rgb("IN", "ULRU.I", 3) +#
	plot.rgb("IN", "ULRU.S", 3) +#
	plot.rgb("IN", "CARYA.C", 3) +#
	plot.rgb("IN", "CARYA.D", 3) +#
	plot.rgb("IN", "CARYA.I", 3) +#
	plot.rgb("IN", "CARYA.S", 3) +#
#
	plot.rgb("IN", "SAAL.C", 3) +#
	plot.rgb("IN", "SAAL.D", 3) +#
	plot.rgb("IN", "SAAL.I", 3) +#
	plot.rgb("IN", "SAAL.S", 3)
pdf("figures/gam3/gam3_SPP_CC_BAI_limiting_factors_IN.pdf", width= 13, height = 8.5)#
ggplot(data = data.graph[data.graph$State %in% "IN",]) + facet_grid(Canopy.Class ~ group) +#
	scale_x_continuous(expand=c(0,0), name="Year") +#
	scale_y_continuous(expand=c(0,0), name="BAI") +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_line(aes(x=Year, y=BA.inc), size=2, alpha=0.5) +#
	geom_ribbon(aes(x=Year, ymin=BA.inc.lwr, ymax=BA.inc.upr), alpha=0.3) +#
	geom_line(aes(x=Year, y = 0), linetype="dashed") +#
	# Morgan Monroe#
	plot.rgb("IN", "ACRU.C", 3) +#
	plot.rgb("IN", "ACRU.D", 3) +#
	plot.rgb("IN", "ACRU.I", 3) +#
	plot.rgb("IN", "ACRU.S", 3) +#
	plot.rgb("IN", "PIST.C", 3) +#
	plot.rgb("IN", "PIST.D", 3) +#
	plot.rgb("IN", "PIST.I", 3) +#
	plot.rgb("IN", "PIST.S", 3) +#
#
	plot.rgb("IN", "TSCA.C", 3) +#
	plot.rgb("IN", "TSCA.D", 3) +#
	plot.rgb("IN", "TSCA.I", 3) +#
	plot.rgb("IN", "TSCA.S", 3) +#
	plot.rgb("IN", "QURU.C", 3) +#
	plot.rgb("IN", "QURU.D", 3) +#
	plot.rgb("IN", "QURU.I", 3) +#
	plot.rgb("IN", "QURU.S", 3) +#
	plot.rgb("IN", "QUVE.C", 3) +#
	plot.rgb("IN", "QUVE.D", 3) +#
	plot.rgb("IN", "QUVE.I", 3) +#
	plot.rgb("IN", "QUVE.S", 3) +#
	plot.rgb("IN", "FRAX.C", 3) +#
	plot.rgb("IN", "FRAX.D", 3) +#
	plot.rgb("IN", "FRAX.I", 3) +#
	plot.rgb("IN", "FRAX.S", 3) +#
#
	plot.rgb("IN", "BETULA.C", 3) +#
	plot.rgb("IN", "BETULA.D", 3) +#
	plot.rgb("IN", "BETULA.I", 3) +#
	plot.rgb("IN", "BETULA.S", 3) +#
	plot.rgb("IN", "ACSA.C", 3) +#
	plot.rgb("IN", "ACSA.D", 3) +#
	plot.rgb("IN", "ACSA.I", 3) +#
	plot.rgb("IN", "ACSA.S", 3) +#
	plot.rgb("IN", "QUAL.C", 3) +#
	plot.rgb("IN", "QUAL.D", 3) +#
	plot.rgb("IN", "QUAL.I", 3) +#
	plot.rgb("IN", "QUAL.S", 3) +#
	plot.rgb("IN", "FAGR.C", 3) +#
	plot.rgb("IN", "FAGR.D", 3) +#
	plot.rgb("IN", "FAGR.I", 3) +#
	plot.rgb("IN", "FAGR.S", 3) +#
	plot.rgb("IN", "ULRU.C", 3) +#
	plot.rgb("IN", "ULRU.D", 3) +#
	plot.rgb("IN", "ULRU.I", 3) +#
	plot.rgb("IN", "ULRU.S", 3) +#
	plot.rgb("IN", "CARYA.C", 3) +#
	plot.rgb("IN", "CARYA.D", 3) +#
	plot.rgb("IN", "CARYA.I", 3) +#
	plot.rgb("IN", "CARYA.S", 3) +#
#
	plot.rgb("IN", "SAAL.C", 3) +#
	plot.rgb("IN", "SAAL.D", 3) +#
	plot.rgb("IN", "SAAL.I", 3) +#
	plot.rgb("IN", "SAAL.S", 3) #
dev.off()
ggplot(data = data.graph[data.graph$State %in% "OH",]) + facet_grid(Canopy.Class ~ group) +#
	scale_x_continuous(expand=c(0,0), name="Year") +#
	scale_y_continuous(expand=c(0,0), name="BAI") +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_line(aes(x=Year, y=BA.inc), size=2, alpha=0.5) +#
	geom_ribbon(aes(x=Year, ymin=BA.inc.lwr, ymax=BA.inc.upr), alpha=0.3) +#
	geom_line(aes(x=Year, y = 0), linetype="dashed") +#
	# Oak Openings#
			plot.rgb("OH", "ACRU.C", 3) +#
	plot.rgb("OH", "ACRU.D", 3) +#
	plot.rgb("OH", "ACRU.I", 3) +#
	plot.rgb("OH", "ACRU.S", 3) +#
	plot.rgb("OH", "PIST.C", 3) +#
	plot.rgb("OH", "PIST.D", 3) +#
	plot.rgb("OH", "PIST.I", 3) +#
	plot.rgb("OH", "PIST.S", 3) +#
#
	plot.rgb("OH", "TSCA.C", 3) +#
	plot.rgb("OH", "TSCA.D", 3) +#
	plot.rgb("OH", "TSCA.I", 3) +#
	plot.rgb("OH", "TSCA.S", 3) +#
	plot.rgb("OH", "QURU.C", 3) +#
	plot.rgb("OH", "QURU.D", 3) +#
	plot.rgb("OH", "QURU.I", 3) +#
	plot.rgb("OH", "QURU.S", 3) +#
	plot.rgb("OH", "QUVE.C", 3) +#
	plot.rgb("OH", "QUVE.D", 3) +#
	plot.rgb("OH", "QUVE.I", 3) +#
	plot.rgb("OH", "QUVE.S", 3) +#
	plot.rgb("OH", "FRAX.C", 3) +#
	plot.rgb("OH", "FRAX.D", 3) +#
	plot.rgb("OH", "FRAX.I", 3) +#
	plot.rgb("OH", "FRAX.S", 3) +#
#
	plot.rgb("OH", "BETULA.C", 3) +#
	plot.rgb("OH", "BETULA.D", 3) +#
	plot.rgb("OH", "BETULA.I", 3) +#
	plot.rgb("OH", "BETULA.S", 3) +#
	plot.rgb("OH", "ACSA.C", 3) +#
	plot.rgb("OH", "ACSA.D", 3) +#
	plot.rgb("OH", "ACSA.I", 3) +#
	plot.rgb("OH", "ACSA.S", 3) +#
	plot.rgb("OH", "QUAL.C", 3) +#
	plot.rgb("OH", "QUAL.D", 3) +#
	plot.rgb("OH", "QUAL.I", 3) +#
	plot.rgb("OH", "QUAL.S", 3) +#
	plot.rgb("OH", "FAGR.C", 3) +#
	plot.rgb("OH", "FAGR.D", 3) +#
	plot.rgb("OH", "FAGR.I", 3) +#
	plot.rgb("OH", "FAGR.S", 3) +#
	plot.rgb("OH", "ULRU.C", 3) +#
	plot.rgb("OH", "ULRU.D", 3) +#
	plot.rgb("OH", "ULRU.I", 3) +#
	plot.rgb("OH", "ULRU.S", 3) +#
	plot.rgb("OH", "CARYA.C", 3) +#
	plot.rgb("OH", "CARYA.D", 3) +#
	plot.rgb("OH", "CARYA.I", 3) +#
	plot.rgb("OH", "CARYA.S", 3) +#
#
	plot.rgb("OH", "SAAL.C", 3) +#
	plot.rgb("OH", "SAAL.D", 3) +#
	plot.rgb("OH", "SAAL.I", 3) +#
	plot.rgb("OH", "SAAL.S", 3)
ggplot(data = data.graph[data.graph$State %in% "MA",]) + facet_grid(Canopy.Class~group) +#
	scale_x_continuous(expand=c(0,0), name="Year") +#
	scale_y_continuous(expand=c(0,0), name="BAI") +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_line(aes(x=Year, y=BA.inc), size=2, alpha=0.5) +#
	geom_ribbon(aes(x=Year, ymin=BA.inc.lwr, ymax=BA.inc.upr), alpha=0.3) +#
	geom_line(aes(x=Year, y = 0), linetype="dashed") +#
	# Harvard#
	plot.rgb("MA", "ACRU.C", 3) +#
	plot.rgb("MA", "ACRU.D", 3) +#
	plot.rgb("MA", "ACRU.I", 3) +#
	plot.rgb("MA", "ACRU.S", 3) +#
	plot.rgb("MA", "PIST.C", 3) +#
	plot.rgb("MA", "PIST.D", 3) +#
	plot.rgb("MA", "PIST.I", 3) +#
	plot.rgb("MA", "PIST.S", 3) +#
#
	plot.rgb("MA", "TSCA.C", 3) +#
	plot.rgb("MA", "TSCA.D", 3) +#
	plot.rgb("MA", "TSCA.I", 3) +#
	plot.rgb("MA", "TSCA.S", 3) +#
	plot.rgb("MA", "QURU.C", 3) +#
	plot.rgb("MA", "QURU.D", 3) +#
	plot.rgb("MA", "QURU.I", 3) +#
	plot.rgb("MA", "QURU.S", 3) +#
	plot.rgb("MA", "QUVE.C", 3) +#
	plot.rgb("MA", "QUVE.D", 3) +#
	plot.rgb("MA", "QUVE.I", 3) +#
	plot.rgb("MA", "QUVE.S", 3) +#
	plot.rgb("MA", "FRAX.C", 3) +#
	plot.rgb("MA", "FRAX.D", 3) +#
	plot.rgb("MA", "FRAX.I", 3) +#
	plot.rgb("MA", "FRAX.S", 3) +#
#
	plot.rgb("MA", "BETULA.C", 3) +#
	plot.rgb("MA", "BETULA.D", 3) +#
	plot.rgb("MA", "BETULA.I", 3) +#
	plot.rgb("MA", "BETULA.S", 3) +#
	plot.rgb("MA", "ACSA.C", 3) +#
	plot.rgb("MA", "ACSA.D", 3) +#
	plot.rgb("MA", "ACSA.I", 3) +#
	plot.rgb("MA", "ACSA.S", 3) +#
	plot.rgb("MA", "QUAL.C", 3) +#
	plot.rgb("MA", "QUAL.D", 3) +#
	plot.rgb("MA", "QUAL.I", 3) +#
	plot.rgb("MA", "QUAL.S", 3) +#
	plot.rgb("MA", "FAGR.C", 3) +#
	plot.rgb("MA", "FAGR.D", 3) +#
	plot.rgb("MA", "FAGR.I", 3) +#
	plot.rgb("MA", "FAGR.S", 3) +#
	plot.rgb("MA", "ULRU.C", 3) +#
	plot.rgb("MA", "ULRU.D", 3) +#
	plot.rgb("MA", "ULRU.I", 3) +#
	plot.rgb("MA", "ULRU.S", 3) +#
	plot.rgb("MA", "CARYA.C", 3) +#
	plot.rgb("MA", "CARYA.D", 3) +#
	plot.rgb("MA", "CARYA.I", 3) +#
	plot.rgb("MA", "CARYA.S", 3) +#
#
	plot.rgb("MA", "SAAL.C", 3) +#
	plot.rgb("MA", "SAAL.D", 3) +#
	plot.rgb("MA", "SAAL.I", 3) +#
	plot.rgb("MA", "SAAL.S", 3)
ggplot(data = data.graph[data.graph$State %in% "ME",]) + facet_grid(Canopy.Class ~ group) +#
	scale_x_continuous(expand=c(0,0), name="Year") +#
	scale_y_continuous(expand=c(0,0), name="BAI") +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_line(aes(x=Year, y=BA.inc), size=2, alpha=0.5) +#
	geom_ribbon(aes(x=Year, ymin=BA.inc.lwr, ymax=BA.inc.upr), alpha=0.3) +#
	geom_line(aes(x=Year, y = 0), linetype="dashed") +#
	# Howland#
		plot.rgb("ME", "ACRU.C", 3) +#
	plot.rgb("ME", "ACRU.D", 3) +#
	plot.rgb("ME", "ACRU.I", 3) +#
	plot.rgb("ME", "ACRU.S", 3) +#
	plot.rgb("ME", "PIST.C", 3) +#
	plot.rgb("ME", "PIST.D", 3) +#
	plot.rgb("ME", "PIST.I", 3) +#
	plot.rgb("ME", "PIST.S", 3) +#
#
	plot.rgb("ME", "TSCA.C", 3) +#
	plot.rgb("ME", "TSCA.D", 3) +#
	plot.rgb("ME", "TSCA.I", 3) +#
	plot.rgb("ME", "TSCA.S", 3) +#
	plot.rgb("ME", "QURU.C", 3) +#
	plot.rgb("ME", "QURU.D", 3) +#
	plot.rgb("ME", "QURU.I", 3) +#
	plot.rgb("ME", "QURU.S", 3) +#
	plot.rgb("ME", "QUVE.C", 3) +#
	plot.rgb("ME", "QUVE.D", 3) +#
	plot.rgb("ME", "QUVE.I", 3) +#
	plot.rgb("ME", "QUVE.S", 3) +#
	plot.rgb("ME", "FRAX.C", 3) +#
	plot.rgb("ME", "FRAX.D", 3) +#
	plot.rgb("ME", "FRAX.I", 3) +#
	plot.rgb("ME", "FRAX.S", 3) +#
#
	plot.rgb("ME", "BETULA.C", 3) +#
	plot.rgb("ME", "BETULA.D", 3) +#
	plot.rgb("ME", "BETULA.I", 3) +#
	plot.rgb("ME", "BETULA.S", 3) +#
	plot.rgb("ME", "ACSA.C", 3) +#
	plot.rgb("ME", "ACSA.D", 3) +#
	plot.rgb("ME", "ACSA.I", 3) +#
	plot.rgb("ME", "ACSA.S", 3) +#
	plot.rgb("ME", "QUAL.C", 3) +#
	plot.rgb("ME", "QUAL.D", 3) +#
	plot.rgb("ME", "QUAL.I", 3) +#
	plot.rgb("ME", "QUAL.S", 3) +#
	plot.rgb("ME", "FAGR.C", 3) +#
	plot.rgb("ME", "FAGR.D", 3) +#
	plot.rgb("ME", "FAGR.I", 3) +#
	plot.rgb("ME", "FAGR.S", 3) +#
	plot.rgb("ME", "ULRU.C", 3) +#
	plot.rgb("ME", "ULRU.D", 3) +#
	plot.rgb("ME", "ULRU.I", 3) +#
	plot.rgb("ME", "ULRU.S", 3) +#
	plot.rgb("ME", "CARYA.C", 3) +#
	plot.rgb("ME", "CARYA.D", 3) +#
	plot.rgb("ME", "CARYA.I", 3) +#
	plot.rgb("ME", "CARYA.S", 3) +#
#
	plot.rgb("ME", "SAAL.C", 3) +#
	plot.rgb("ME", "SAAL.D", 3) +#
	plot.rgb("ME", "SAAL.I", 3) +#
	plot.rgb("ME", "SAAL.S", 3)
# Missouri#
# Plotting the Obs and modeled with influence coloring#
pdf("figures/gam3/gam3_SPP_CC_BAI_limiting_factors_MO.pdf", width= 13, height = 8.5)#
ggplot(data = data.graph[data.graph$State %in% "MO",]) + facet_grid(Canopy.Class ~ group) +#
	scale_x_continuous(expand=c(0,0), name="Year") +#
	scale_y_continuous(expand=c(0,0), name="BAI") +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_line(aes(x=Year, y=BA.inc), size=2, alpha=0.5) +#
	geom_ribbon(aes(x=Year, ymin=BA.inc.lwr, ymax=BA.inc.upr), alpha=0.3) +#
	geom_line(aes(x=Year, y = 0), linetype="dashed") +#
	# Missouri Ozark#
		plot.rgb("MO", "ACRU.C", 3) +#
	plot.rgb("MO", "ACRU.D", 3) +#
	plot.rgb("MO", "ACRU.I", 3) +#
	plot.rgb("MO", "ACRU.S", 3) +#
	plot.rgb("MO", "PIST.C", 3) +#
	plot.rgb("MO", "PIST.D", 3) +#
	plot.rgb("MO", "PIST.I", 3) +#
	plot.rgb("MO", "PIST.S", 3) +#
#
	plot.rgb("MO", "TSCA.C", 3) +#
	plot.rgb("MO", "TSCA.D", 3) +#
	plot.rgb("MO", "TSCA.I", 3) +#
	plot.rgb("MO", "TSCA.S", 3) +#
	plot.rgb("MO", "QURU.C", 3) +#
	plot.rgb("MO", "QURU.D", 3) +#
	plot.rgb("MO", "QURU.I", 3) +#
	plot.rgb("MO", "QURU.S", 3) +#
	plot.rgb("MO", "QUVE.C", 3) +#
	plot.rgb("MO", "QUVE.D", 3) +#
	plot.rgb("MO", "QUVE.I", 3) +#
	plot.rgb("MO", "QUVE.S", 3) +#
	plot.rgb("MO", "FRAX.C", 3) +#
	plot.rgb("MO", "FRAX.D", 3) +#
	plot.rgb("MO", "FRAX.I", 3) +#
	plot.rgb("MO", "FRAX.S", 3) +#
#
	plot.rgb("MO", "BETULA.C", 3) +#
	plot.rgb("MO", "BETULA.D", 3) +#
	plot.rgb("MO", "BETULA.I", 3) +#
	plot.rgb("MO", "BETULA.S", 3) +#
	plot.rgb("MO", "ACSA.C", 3) +#
	plot.rgb("MO", "ACSA.D", 3) +#
	plot.rgb("MO", "ACSA.I", 3) +#
	plot.rgb("MO", "ACSA.S", 3) +#
	plot.rgb("MO", "QUAL.C", 3) +#
	plot.rgb("MO", "QUAL.D", 3) +#
	plot.rgb("MO", "QUAL.I", 3) +#
	plot.rgb("MO", "QUAL.S", 3) +#
	plot.rgb("MO", "FAGR.C", 3) +#
	plot.rgb("MO", "FAGR.D", 3) +#
	plot.rgb("MO", "FAGR.I", 3) +#
	plot.rgb("MO", "FAGR.S", 3) +#
	plot.rgb("MO", "ULRU.C", 3) +#
	plot.rgb("MO", "ULRU.D", 3) +#
	plot.rgb("MO", "ULRU.I", 3) +#
	plot.rgb("MO", "ULRU.S", 3) +#
	plot.rgb("MO", "CARYA.C", 3) +#
	plot.rgb("MO", "CARYA.D", 3) +#
	plot.rgb("MO", "CARYA.I", 3) +#
	plot.rgb("MO", "CARYA.S", 3) +#
#
	plot.rgb("MO", "SAAL.C", 3) +#
	plot.rgb("MO", "SAAL.D", 3) +#
	plot.rgb("MO", "SAAL.I", 3) +#
	plot.rgb("MO", "SAAL.S", 3)#
dev.off()	#
#
#----------------------------------------#
# Indiana#
#
# Plotting the Obs and modeled with influence coloring#
pdf("figures/gam3/gam3_SPP_CC_BAI_limiting_factors_IN.pdf", width= 13, height = 8.5)#
ggplot(data = data.graph[data.graph$State %in% "IN",]) + facet_grid(Canopy.Class ~ group) +#
	scale_x_continuous(expand=c(0,0), name="Year") +#
	scale_y_continuous(expand=c(0,0), name="BAI") +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_line(aes(x=Year, y=BA.inc), size=2, alpha=0.5) +#
	geom_ribbon(aes(x=Year, ymin=BA.inc.lwr, ymax=BA.inc.upr), alpha=0.3) +#
	geom_line(aes(x=Year, y = 0), linetype="dashed") +#
	# Morgan Monroe#
	plot.rgb("IN", "ACRU.C", 3) +#
	plot.rgb("IN", "ACRU.D", 3) +#
	plot.rgb("IN", "ACRU.I", 3) +#
	plot.rgb("IN", "ACRU.S", 3) +#
	plot.rgb("IN", "PIST.C", 3) +#
	plot.rgb("IN", "PIST.D", 3) +#
	plot.rgb("IN", "PIST.I", 3) +#
	plot.rgb("IN", "PIST.S", 3) +#
#
	plot.rgb("IN", "TSCA.C", 3) +#
	plot.rgb("IN", "TSCA.D", 3) +#
	plot.rgb("IN", "TSCA.I", 3) +#
	plot.rgb("IN", "TSCA.S", 3) +#
	plot.rgb("IN", "QURU.C", 3) +#
	plot.rgb("IN", "QURU.D", 3) +#
	plot.rgb("IN", "QURU.I", 3) +#
	plot.rgb("IN", "QURU.S", 3) +#
	plot.rgb("IN", "QUVE.C", 3) +#
	plot.rgb("IN", "QUVE.D", 3) +#
	plot.rgb("IN", "QUVE.I", 3) +#
	plot.rgb("IN", "QUVE.S", 3) +#
	plot.rgb("IN", "FRAX.C", 3) +#
	plot.rgb("IN", "FRAX.D", 3) +#
	plot.rgb("IN", "FRAX.I", 3) +#
	plot.rgb("IN", "FRAX.S", 3) +#
#
	plot.rgb("IN", "BETULA.C", 3) +#
	plot.rgb("IN", "BETULA.D", 3) +#
	plot.rgb("IN", "BETULA.I", 3) +#
	plot.rgb("IN", "BETULA.S", 3) +#
	plot.rgb("IN", "ACSA.C", 3) +#
	plot.rgb("IN", "ACSA.D", 3) +#
	plot.rgb("IN", "ACSA.I", 3) +#
	plot.rgb("IN", "ACSA.S", 3) +#
	plot.rgb("IN", "QUAL.C", 3) +#
	plot.rgb("IN", "QUAL.D", 3) +#
	plot.rgb("IN", "QUAL.I", 3) +#
	plot.rgb("IN", "QUAL.S", 3) +#
	plot.rgb("IN", "FAGR.C", 3) +#
	plot.rgb("IN", "FAGR.D", 3) +#
	plot.rgb("IN", "FAGR.I", 3) +#
	plot.rgb("IN", "FAGR.S", 3) +#
	plot.rgb("IN", "ULRU.C", 3) +#
	plot.rgb("IN", "ULRU.D", 3) +#
	plot.rgb("IN", "ULRU.I", 3) +#
	plot.rgb("IN", "ULRU.S", 3) +#
	plot.rgb("IN", "CARYA.C", 3) +#
	plot.rgb("IN", "CARYA.D", 3) +#
	plot.rgb("IN", "CARYA.I", 3) +#
	plot.rgb("IN", "CARYA.S", 3) +#
#
	plot.rgb("IN", "SAAL.C", 3) +#
	plot.rgb("IN", "SAAL.D", 3) +#
	plot.rgb("IN", "SAAL.I", 3) +#
	plot.rgb("IN", "SAAL.S", 3) #
dev.off()	#
#
#-------------------------------------------#
# Ohio#
#
# Plotting the Obs and modeled with influence coloring#
pdf("figures/gam3/gam3_SPP_CC_BAI_limiting_factors_OH.pdf", width= 13, height = 8.5)#
ggplot(data = data.graph[data.graph$State %in% "OH",]) + facet_grid(Canopy.Class ~ group) +#
	scale_x_continuous(expand=c(0,0), name="Year") +#
	scale_y_continuous(expand=c(0,0), name="BAI") +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_line(aes(x=Year, y=BA.inc), size=2, alpha=0.5) +#
	geom_ribbon(aes(x=Year, ymin=BA.inc.lwr, ymax=BA.inc.upr), alpha=0.3) +#
	geom_line(aes(x=Year, y = 0), linetype="dashed") +#
	# Oak Openings#
			plot.rgb("OH", "ACRU.C", 3) +#
	plot.rgb("OH", "ACRU.D", 3) +#
	plot.rgb("OH", "ACRU.I", 3) +#
	plot.rgb("OH", "ACRU.S", 3) +#
	plot.rgb("OH", "PIST.C", 3) +#
	plot.rgb("OH", "PIST.D", 3) +#
	plot.rgb("OH", "PIST.I", 3) +#
	plot.rgb("OH", "PIST.S", 3) +#
#
	plot.rgb("OH", "TSCA.C", 3) +#
	plot.rgb("OH", "TSCA.D", 3) +#
	plot.rgb("OH", "TSCA.I", 3) +#
	plot.rgb("OH", "TSCA.S", 3) +#
	plot.rgb("OH", "QURU.C", 3) +#
	plot.rgb("OH", "QURU.D", 3) +#
	plot.rgb("OH", "QURU.I", 3) +#
	plot.rgb("OH", "QURU.S", 3) +#
	plot.rgb("OH", "QUVE.C", 3) +#
	plot.rgb("OH", "QUVE.D", 3) +#
	plot.rgb("OH", "QUVE.I", 3) +#
	plot.rgb("OH", "QUVE.S", 3) +#
	plot.rgb("OH", "FRAX.C", 3) +#
	plot.rgb("OH", "FRAX.D", 3) +#
	plot.rgb("OH", "FRAX.I", 3) +#
	plot.rgb("OH", "FRAX.S", 3) +#
#
	plot.rgb("OH", "BETULA.C", 3) +#
	plot.rgb("OH", "BETULA.D", 3) +#
	plot.rgb("OH", "BETULA.I", 3) +#
	plot.rgb("OH", "BETULA.S", 3) +#
	plot.rgb("OH", "ACSA.C", 3) +#
	plot.rgb("OH", "ACSA.D", 3) +#
	plot.rgb("OH", "ACSA.I", 3) +#
	plot.rgb("OH", "ACSA.S", 3) +#
	plot.rgb("OH", "QUAL.C", 3) +#
	plot.rgb("OH", "QUAL.D", 3) +#
	plot.rgb("OH", "QUAL.I", 3) +#
	plot.rgb("OH", "QUAL.S", 3) +#
	plot.rgb("OH", "FAGR.C", 3) +#
	plot.rgb("OH", "FAGR.D", 3) +#
	plot.rgb("OH", "FAGR.I", 3) +#
	plot.rgb("OH", "FAGR.S", 3) +#
	plot.rgb("OH", "ULRU.C", 3) +#
	plot.rgb("OH", "ULRU.D", 3) +#
	plot.rgb("OH", "ULRU.I", 3) +#
	plot.rgb("OH", "ULRU.S", 3) +#
	plot.rgb("OH", "CARYA.C", 3) +#
	plot.rgb("OH", "CARYA.D", 3) +#
	plot.rgb("OH", "CARYA.I", 3) +#
	plot.rgb("OH", "CARYA.S", 3) +#
#
	plot.rgb("OH", "SAAL.C", 3) +#
	plot.rgb("OH", "SAAL.D", 3) +#
	plot.rgb("OH", "SAAL.I", 3) +#
	plot.rgb("OH", "SAAL.S", 3)#
dev.off()	#
#
#-----------------------------------------------#
# Massachusetts#
#
# Plotting the Obs and modeled with influence coloring#
pdf("figures/gam3/gam3_SPP_CC_BAI_limiting_factors_MA.pdf", width= 13, height = 8.5)#
ggplot(data = data.graph[data.graph$State %in% "MA",]) + facet_grid(Canopy.Class~group) +#
	scale_x_continuous(expand=c(0,0), name="Year") +#
	scale_y_continuous(expand=c(0,0), name="BAI") +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_line(aes(x=Year, y=BA.inc), size=2, alpha=0.5) +#
	geom_ribbon(aes(x=Year, ymin=BA.inc.lwr, ymax=BA.inc.upr), alpha=0.3) +#
	geom_line(aes(x=Year, y = 0), linetype="dashed") +#
	# Harvard#
	plot.rgb("MA", "ACRU.C", 3) +#
	plot.rgb("MA", "ACRU.D", 3) +#
	plot.rgb("MA", "ACRU.I", 3) +#
	plot.rgb("MA", "ACRU.S", 3) +#
	plot.rgb("MA", "PIST.C", 3) +#
	plot.rgb("MA", "PIST.D", 3) +#
	plot.rgb("MA", "PIST.I", 3) +#
	plot.rgb("MA", "PIST.S", 3) +#
#
	plot.rgb("MA", "TSCA.C", 3) +#
	plot.rgb("MA", "TSCA.D", 3) +#
	plot.rgb("MA", "TSCA.I", 3) +#
	plot.rgb("MA", "TSCA.S", 3) +#
	plot.rgb("MA", "QURU.C", 3) +#
	plot.rgb("MA", "QURU.D", 3) +#
	plot.rgb("MA", "QURU.I", 3) +#
	plot.rgb("MA", "QURU.S", 3) +#
	plot.rgb("MA", "QUVE.C", 3) +#
	plot.rgb("MA", "QUVE.D", 3) +#
	plot.rgb("MA", "QUVE.I", 3) +#
	plot.rgb("MA", "QUVE.S", 3) +#
	plot.rgb("MA", "FRAX.C", 3) +#
	plot.rgb("MA", "FRAX.D", 3) +#
	plot.rgb("MA", "FRAX.I", 3) +#
	plot.rgb("MA", "FRAX.S", 3) +#
#
	plot.rgb("MA", "BETULA.C", 3) +#
	plot.rgb("MA", "BETULA.D", 3) +#
	plot.rgb("MA", "BETULA.I", 3) +#
	plot.rgb("MA", "BETULA.S", 3) +#
	plot.rgb("MA", "ACSA.C", 3) +#
	plot.rgb("MA", "ACSA.D", 3) +#
	plot.rgb("MA", "ACSA.I", 3) +#
	plot.rgb("MA", "ACSA.S", 3) +#
	plot.rgb("MA", "QUAL.C", 3) +#
	plot.rgb("MA", "QUAL.D", 3) +#
	plot.rgb("MA", "QUAL.I", 3) +#
	plot.rgb("MA", "QUAL.S", 3) +#
	plot.rgb("MA", "FAGR.C", 3) +#
	plot.rgb("MA", "FAGR.D", 3) +#
	plot.rgb("MA", "FAGR.I", 3) +#
	plot.rgb("MA", "FAGR.S", 3) +#
	plot.rgb("MA", "ULRU.C", 3) +#
	plot.rgb("MA", "ULRU.D", 3) +#
	plot.rgb("MA", "ULRU.I", 3) +#
	plot.rgb("MA", "ULRU.S", 3) +#
	plot.rgb("MA", "CARYA.C", 3) +#
	plot.rgb("MA", "CARYA.D", 3) +#
	plot.rgb("MA", "CARYA.I", 3) +#
	plot.rgb("MA", "CARYA.S", 3) +#
#
	plot.rgb("MA", "SAAL.C", 3) +#
	plot.rgb("MA", "SAAL.D", 3) +#
	plot.rgb("MA", "SAAL.I", 3) +#
	plot.rgb("MA", "SAAL.S", 3)#
dev.off()	#
#-----------------------------------------------------#
# Plotting the Obs and modeled with influence coloring#
pdf("figures/gam3/gam3_SPP_CC_BAI_limiting_factors_ME.pdf", width= 13, height = 8.5)#
ggplot(data = data.graph[data.graph$State %in% "ME",]) + facet_grid(Canopy.Class ~ group) +#
	scale_x_continuous(expand=c(0,0), name="Year") +#
	scale_y_continuous(expand=c(0,0), name="BAI") +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_line(aes(x=Year, y=BA.inc), size=2, alpha=0.5) +#
	geom_ribbon(aes(x=Year, ymin=BA.inc.lwr, ymax=BA.inc.upr), alpha=0.3) +#
	geom_line(aes(x=Year, y = 0), linetype="dashed") +#
	# Howland#
		plot.rgb("ME", "ACRU.C", 3) +#
	plot.rgb("ME", "ACRU.D", 3) +#
	plot.rgb("ME", "ACRU.I", 3) +#
	plot.rgb("ME", "ACRU.S", 3) +#
	plot.rgb("ME", "PIST.C", 3) +#
	plot.rgb("ME", "PIST.D", 3) +#
	plot.rgb("ME", "PIST.I", 3) +#
	plot.rgb("ME", "PIST.S", 3) +#
#
	plot.rgb("ME", "TSCA.C", 3) +#
	plot.rgb("ME", "TSCA.D", 3) +#
	plot.rgb("ME", "TSCA.I", 3) +#
	plot.rgb("ME", "TSCA.S", 3) +#
	plot.rgb("ME", "QURU.C", 3) +#
	plot.rgb("ME", "QURU.D", 3) +#
	plot.rgb("ME", "QURU.I", 3) +#
	plot.rgb("ME", "QURU.S", 3) +#
	plot.rgb("ME", "QUVE.C", 3) +#
	plot.rgb("ME", "QUVE.D", 3) +#
	plot.rgb("ME", "QUVE.I", 3) +#
	plot.rgb("ME", "QUVE.S", 3) +#
	plot.rgb("ME", "FRAX.C", 3) +#
	plot.rgb("ME", "FRAX.D", 3) +#
	plot.rgb("ME", "FRAX.I", 3) +#
	plot.rgb("ME", "FRAX.S", 3) +#
#
	plot.rgb("ME", "BETULA.C", 3) +#
	plot.rgb("ME", "BETULA.D", 3) +#
	plot.rgb("ME", "BETULA.I", 3) +#
	plot.rgb("ME", "BETULA.S", 3) +#
	plot.rgb("ME", "ACSA.C", 3) +#
	plot.rgb("ME", "ACSA.D", 3) +#
	plot.rgb("ME", "ACSA.I", 3) +#
	plot.rgb("ME", "ACSA.S", 3) +#
	plot.rgb("ME", "QUAL.C", 3) +#
	plot.rgb("ME", "QUAL.D", 3) +#
	plot.rgb("ME", "QUAL.I", 3) +#
	plot.rgb("ME", "QUAL.S", 3) +#
	plot.rgb("ME", "FAGR.C", 3) +#
	plot.rgb("ME", "FAGR.D", 3) +#
	plot.rgb("ME", "FAGR.I", 3) +#
	plot.rgb("ME", "FAGR.S", 3) +#
	plot.rgb("ME", "ULRU.C", 3) +#
	plot.rgb("ME", "ULRU.D", 3) +#
	plot.rgb("ME", "ULRU.I", 3) +#
	plot.rgb("ME", "ULRU.S", 3) +#
	plot.rgb("ME", "CARYA.C", 3) +#
	plot.rgb("ME", "CARYA.D", 3) +#
	plot.rgb("ME", "CARYA.I", 3) +#
	plot.rgb("ME", "CARYA.S", 3) +#
#
	plot.rgb("ME", "SAAL.C", 3) +#
	plot.rgb("ME", "SAAL.D", 3) +#
	plot.rgb("ME", "SAAL.I", 3) +#
	plot.rgb("ME", "SAAL.S", 3)#
dev.off()
