gam2.weights$Year <- as.factor(gam2.weights$Year)
sea.df <- recast(gam2.weights$BA.inc, Year~TreeID)
sea.df <- recast(gam2.weights[,c("Year", "TreeID", "Canopy.Class", "BA.inc")], Year~TreeID)
summary(sea.df)
sea.df <- recast(gam2.weights[,c("Year", "TreeID", "BA.inc")], Year~TreeID)
summary(sea.df)
D.names <- gam2.weights[gam2.weights$Canopy.Class=="D", "TreeID"]
D.names
D.names <- gam2.weights[gam2.weights$Canopy.Class=="D", "TreeID"]#
I.names <- gam2.weights[gam2.weights$Canopy.Class=="I", "TreeID"]#
S.names <- gam2.weights[gam2.weights$Canopy.Class=="S", "TreeID"]
sea.df[,names(sea.df) %in% D.names]
row.names(sea.df) <- sea.df$Year
gam2.weights$Temp.Mark
sea.test <- sea(sea.df[,names(sea.df) %in% D.names], gam2.weights$Temp.Mark, lag=5, resample=1000)
unique(gam2.weights$Year)
which(gam2.weights$Temp.Mark == "hot")
gam2.weights[gam2.weights$Temp.Mark == "hot", "Year"]
gam2.weights[gam2.weights$Temp.Mark == "hot", unique(gam2.weights$Year)]
gam2.weights$Temp.Mark == "hot"
hot.years <-  gam2.weights[gam2.weights$Temp.Mark == "hot"]"Year"
hot.years <-  gam2.weights[gam2.weights$Temp.Mark == "hot"]
gam2.weights$Year[gam2.weights$Temp.Mark == "hot"]
hot.years <-  unique(gam2.weights$Year[gam2.weights$Temp.Mark == "hot"])
hot.years
hot.years <-  unique(gam2.weights$Year[gam2.weights$Temp.Mark == "hot"])
hot.years <-  unique(gam2.weights$Year[gam2.weights$Temp.Mark == "hot"])#
cool years <-  unique(gam2.weights$Year[gam2.weights$Temp.Mark == "cool"])#
wet.years <-  unique(gam2.weights$Year[gam2.weights$Precip.Mark == "wet"])#
dry.years <-  unique(gam2.weights$Year[gam2.weights$Precip.Mark == "dry"])
gam2.weights$Temp.Mark
hot.years <- unique(gam2.weights$Year[gam2.weights$Temp.Mark == "hot"])
cool years <- unique(gam2.weights$Year[gam2.weights$Temp.Mark == "cold"])
gam2.weights$Temp.Mark == "cold"
gam2.weights$Year[gam2.weights$Temp.Mark == "cold"]
unique(gam2.weights$Year[gam2.weights$Temp.Mark == "cold"])
cool years<- unique(gam2.weights$Year[gam2.weights$Temp.Mark == "cold"])
cool.years<- unique(gam2.weights$Year[gam2.weights$Temp.Mark == "cold"])
wet.hot.years <- intersect(hot.years, wet.years)
wet.hot.years
wet.hot.years <- intersect(hot.years, wet.years)#
wet.cool.years <- intersect(cool.years, wet.years)#
dry.hot.years <- intersect(hot.years, dry.years)#
dry.cool.years <- intersect(cool.years, dry.years)
wet.hot.years
wet.cool.years
dry.hot.years
dry.cool.years
wet.hot.years <- as.numeric(intersect(hot.years, wet.years))
wet.hot.years
wet.hot.years <- as.numeric(intersect(hot.years, wet.years))#
wet.cool.years <- as.numeric(intersect(cool.years, wet.years))#
dry.hot.years <- as.numeric(intersect(hot.years, dry.years))#
dry.cool.years <- as.numeric(intersect(cool.years, dry.years))
hot.years
sea.test <- sea(sea.df[,names(sea.df) %in% D.names], hot.years , lag=5, resample=1000)
sea.df[,names(sea.df) %in% D.names]
sea.test <- sea(sea.df[,names(sea.df) %in% D.names], hot.years , lag=5, resample=1000)
hot.years
sea.test <- sea(sea.df[,names(sea.df) %in% D.names], cool.years , lag=5, resample=1000)
dom.bai <- sea.df[,names(sea.df) %in% D.names]
head(dom.bai)
int.bai <- sea.df[,names(sea.df) %in% I.names]#
#
sup.bai <- sea.df[,names(sea.df) %in% S.names]
sea.test <- sea(dom.abi, cool.years , lag=5, resample=1000)
sea.test <- sea(dom.bai, cool.years , lag=5, resample=1000)
data(cana157)
test <- data(cana157)
summary(test)
cana157
dom.bai
dom.bai[,"TP2086"]
sea.test <- sea(dom.bai[,"TP2086"], cool.years , lag=5, resample=1000)
test <- as.data.frame(dom.abi["TP2086"])
test <- as.data.frame(dom.bai["TP2086"])
test
sea.test <- sea(dom.bai[,"TP2086"], cool.years , lag=5, resample=1000)
sea.test <- sea(test, cool.years , lag=5, resample=1000)
warnings()
sea.test <- sea(test, cool.years , lag=2, resample=1000)
barplot(test)
barplot(sea.test)
summary(sea.test)
?chron
dom.bai.chron <- chron(dom.bai)
summary(dom.bai.chron)
sea.test <- sea(dom.bai.chron, cool.years , lag=2, resample=1000)
summary(sea.test)
sea.test <- sea(dom.bai.chron, hot.years , lag=5, resample=1000)
warnings()
summary(sea.test)
sea.test <- sea(dom.bai.chron, hot.years , lag=2, resample=1000)
summary(sea.test)
hot.years
dom.bai.chron
sea.test <- sea(dom.bai.chron, hot.years , lag=2, resample=1000)
summary(sea.test)
warnings()
event.years < - c(1960, 1970)
c(1960, 1970)
event.years < - c(1960, 1970)
meow < - c(1960, 1970)
meow < - as.vector(c(1960, 1970))
meow < - c(1960, 1970)
meow <- c(1960, 1970, 1980)
sea.test <- sea(dom.bai.chron,meow , lag=2, resample=1000)
summary(sea.test)
sea.test <- sea(dom.bai,meow , lag=2, resample=1000)
hot.years
cool.years
wet.years
sea.test <- sea(dom.bai.chron, wet.years , lag=2, resample=1000)
sea.test <- sea(dom.bai.chron, wet.hot.years , lag=2, resample=1000)
summary(sea.test)
foo <- sea.test$unscaled
names(foo) <- sea.test$lag
names(foo)
sea.test$lag
foo
sea.test$unscaled
foo <- sea.test$se.unscaled
names(foo) <- sea.test$lag
barplot(foo, col=ifeslse(sea.test$p < 0.05, "grey30", "grey75"), ylab = "BAI", xlab="Superposed Epoch")
barplot(foo, col=ifelse(sea.test$p < 0.05, "grey30", "grey75"), ylab = "BAI", xlab="Superposed Epoch")
data(cana157)#
event.years <- c(1631, 1742, 1845)#
cana157.sea <- sea(cana157, event.years)#
foo <- cana157.sea$se.unscaled#
names(foo) <- cana157.sea$lag#
barplot(foo, col = ifelse(cana157.sea$p < 0.05, "grey30", "grey75"), #
        ylab = "RWI", xlab = "Superposed Epoch")
D.names <- gam2.weights[gam2.weights$Canopy.Class=="D" & game.weights$State=="IN", "TreeID"]
D.names <- gam2.weights[gam2.weights$Canopy.Class=="D" & gam2.weights$State=="IN", "TreeID"]
hot.years <- unique(gam2.weights$Year[gam2.weights$Temp.Mark == "hot"])#
cool.years<- unique(gam2.weights$Year[gam2.weights$Temp.Mark == "cold"])#
wet.years <- unique(gam2.weights$Year[gam2.weights$Precip.Mark == "wet"])#
dry.years <- unique(gam2.weights$Year[gam2.weights$Precip.Mark == "dry"])#
#
wet.hot.years <- as.numeric(intersect(hot.years, wet.years))#
wet.cool.years <- as.numeric(intersect(cool.years, wet.years))#
dry.hot.years <- as.numeric(intersect(hot.years, dry.years))#
dry.cool.years <- as.numeric(intersect(cool.years, dry.years))#
#
dom.bai <- sea.df[,names(sea.df) %in% D.names]#
head(dom.bai)#
#
dom.bai.chron <- chron(dom.bai)#
summary(dom.bai.chron)#
#
int.bai <- sea.df[,names(sea.df) %in% I.names]#
#
sup.bai <- sea.df[,names(sea.df) %in% S.names]#
#
test <- as.data.frame(dom.bai["TP2086"])#
meow <- c(1960, 1970, 1980)
sea.test <- sea(dom.bai.chron, wet.hot.years , lag=2, resample=1000)
D.names <- gam2.weights[gam2.weights$Canopy.Class=="D" & gam2.weights$State=="IN", "TreeID"]
dom.bai <- sea.df[,names(sea.df) %in% D.names]
dom.bai.chron <- chron(dom.bai)
sea.test <- sea(dom.bai.chron, wet.hot.years , lag=2, resample=1000)
dom.bai
head(dom.bai)
dom.bai.chron <- chron(dom.bai)
dom.bai.chron
sea.test <- sea(dom.bai.chron, wet.hot.years , lag=2, resample=1000)
sea.test <- sea(dom.bai.chron, wet.cool.years , lag=2, resample=1000)
wet.cool.years
dom.bai.chron
sea.test <- sea(dom.bai.chron, wet.cool.years , lag=2, resample=1000)
summary(sea.test)
D.names <- gam2.weights[gam2.weights$Canopy.Class=="D", "TreeID"]
dom.bai <- sea.df[,names(sea.df) %in% D.names]#
head(dom.bai)
dom.bai.chron <- chron(dom.bai)
summary(dom.bai.chron)
sea.test <- sea(dom.bai.chron, wet.cool.years , lag=2, resample=1000)
meow <- c(1960, 1970, 1980)
sea.test <- sea(dom.bai.chron, wet.cool.years , lag=2, resample=1000)
sea(dom.bai.chron, wet.cool.years , lag=2, resample=1000)
dom.bai.chron <- chron(dom.bai)
summary(dom.bai.chron)
sea.test <- sea(dom.bai.chron, wet.cool.years , lag=2, resample=1000)
summary(sea.test)
# Scripts for supplemental figure#
# S1 <- Species Response curves#
# S2 <- Species weights#
# S3 <- Site Response curves#
# S4 <- Site Weights#
# S5 <- Canopy.Class * Site weights#
library(ggplot2)#
library(gridExtra)#
#
################################################################
# Supplemental Fig. 1 Species GAM response Curves#
################################################################
load("processed_data/gam1_response_graph.Rdata")#
library(RColorBrewer)#
summary(ci.terms.graph)#
spp.use <- c("ACSA", "CARYA", "QUAL", "QURU", "TSCA", "PIST")#
#
spp.colors <- read.csv("spp.Colors.csv", header=T)	#
summary(spp.colors)	#
#
group.fig <- spp.use#
group.fig <- group.fig[order(group.fig)]#
colors.use <- as.vector(c(paste(spp.colors[spp.colors$Species %in% group.fig, "color"])))#
cbbPalette <- c("#000000", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")#
#
# Only plotting 2 major species at each site#
S1.t <-		ggplot(data=ci.terms.graph[ci.terms.graph$Effect %in% c("tmean") & ci.terms.graph$group %in% spp.use,]) + #
			#facet_grid(~Effect, scales = "free") +#
			geom_hline(yintercept=0, linetype="dashed")+#
			geom_ribbon(aes(x=x, ymin=lwr.bai, ymax=upr.bai, fill=group), alpha=0.5) +#
			geom_line(aes(x=x, y=mean.bai, color=group)) +#
			scale_color_manual(values=brewer.pal(6, "Dark2")) +#
			scale_fill_manual(values=brewer.pal(6, "Dark2"))+#
			labs(x = expression(bold(paste("Temperature ("^"o", "C)"))), y = expression(bold(paste("Effect on BAI (mm"^"2","y"^"-1",")"))))+#
			 theme(axis.line=element_line(color="black"), #
		panel.grid.major=element_blank(), #
		panel.grid.minor=element_blank(), #
		panel.border=element_blank(),  #
		panel.background=element_blank(), #
		axis.text.x=element_text(angle=0, color="black", size=rel(1)), #
		#axis.text.y=element_text(angle=0, color="black", size=rel(1)), #
		strip.text=element_text(face="bold", size=rel(1.0)),#
		axis.line.x = element_line(color="black", size = 0.5),#
        axis.line.y = element_line(color="black", size = 0.5),#
        legend.position="right",#
        legend.key.size = unit(0.75, "cm"),#
        legend.text = element_text(size=rel(1.1)),#
        legend.key = element_rect(fill = "white")) + #
        guides(color=guide_legend(ncol=1)) +#
        theme(axis.title.x = element_text(size=rel(1.1), face="bold"),#
        axis.title.y= element_text(size=rel(1.1), face="bold"))+#
        scale_x_continuous(expand=c(0,0)) +       #theme(axis.text.y=element_blank())	#
		ylim(0,6) #
#
S1.p <- ggplot(data=ci.terms.graph[ci.terms.graph$Effect %in% c("precip") & ci.terms.graph$group %in% spp.use,]) + #
			#facet_grid(~Effect, scales = "free") +#
			geom_hline(yintercept=0, linetype="dashed")+#
			geom_ribbon(aes(x=x, ymin=lwr.bai, ymax=upr.bai, fill=group), alpha=0.5) +#
			geom_line(aes(x=x, y=mean.bai, color=group)) +#
			scale_color_manual(values=brewer.pal(6, "Dark2")) +#
			scale_fill_manual(values=brewer.pal(6, "Dark2"))+#
			labs(x = "Precipitation (mm)", y = element_blank())+#
			 theme(axis.line=element_line(color="black"), #
		panel.grid.major=element_blank(), #
		panel.grid.minor=element_blank(), #
		panel.border=element_blank(),  #
		panel.background=element_blank(), #
		axis.text.x=element_text(angle=0, color="black", size=rel(1)), #
		#axis.text.y=element_text(angle=0, color="black", size=rel(1)), #
		strip.text=element_text(face="bold", size=rel(1.0)),#
		axis.line.x = element_line(color="black", size = 0.5),#
        axis.line.y = element_line(color="black", size = 0.5),#
        legend.position="none",#
        legend.key.size = unit(0.75, "cm"),#
        legend.text = element_text(size=rel(1.1)),#
        legend.key = element_rect(fill = "white")) + #
        guides(color=guide_legend(ncol=1)) +#
        theme(axis.title.x = element_text(size=rel(1.1), face="bold"),#
        axis.title.y= element_text(size=rel(1.1), face="bold"))+#
        scale_x_continuous(expand=c(0,0)) +       #
        theme(axis.text.y=element_blank())	+#
		ylim(0,6) #
S1.size <- ggplot(data=ci.terms.graph[ci.terms.graph$Effect %in% c("dbh.recon") & ci.terms.graph$group %in% spp.use,]) + #
			#facet_grid(~Effect, scales = "free") +#
			geom_hline(yintercept=0, linetype="dashed")+#
			geom_ribbon(aes(x=x, ymin=lwr.bai, ymax=upr.bai, fill=group), alpha=0.5) +#
			geom_line(aes(x=x, y=mean.bai, color=group)) +#
			scale_color_manual(values=brewer.pal(6, "Dark2")) +#
			scale_fill_manual(values=brewer.pal(6, "Dark2"))+#
			labs(x = "DBH (cm)", y = expression(bold(paste("Effect on BAI (mm"^"2","y"^"-1",")"))))+#
			 theme(axis.line=element_line(color="black"), #
		panel.grid.major=element_blank(), #
		panel.grid.minor=element_blank(), #
		panel.border=element_blank(),  #
		panel.background=element_blank(), #
		axis.text.x=element_text(angle=0, color="black", size=rel(1)), #
		#axis.text.y=element_text(angle=0, color="black", size=rel(1)), #
		strip.text=element_text(face="bold", size=rel(1.0)),#
		axis.line.x = element_line(color="black", size = 0.5),#
        axis.line.y = element_line(color="black", size = 0.5),#
        legend.position="right",#
        legend.key.size = unit(0.75, "cm"),#
        legend.text = element_text(size=rel(1.1)),#
        legend.key = element_rect(fill = "white")) + #
        guides(color=guide_legend(ncol=1)) +#
        theme(axis.title.x = element_text(size=rel(1.1), face="bold"),#
        axis.title.y= element_text(size=rel(1.1), face="bold"))+#
        scale_x_continuous(expand=c(0,0)) +       #theme(axis.text.y=element_blank())	#
		scale_y_continuous(expand=c(0,0)) #
#
pdf("figures/prelim_figures/pub_figs/S1_spp_response.pdf", width= 13, height = 8.5)		#
	grid.newpage()#
	pushViewport(viewport(layout=grid.layout(nrow=1, ncol=3, widths=c(1.3,1,2))))#
	print(S1.t, vp = viewport(layout.pos.row = 1, layout.pos.col=1))#
  	print(S1.p, vp = viewport(layout.pos.row = 1, layout.pos.col=2))#
  	print(S1.size, vp = viewport(layout.pos.row = 1, layout.pos.col=3))	#
dev.off()#
#
png(file.path("figures/Prelim_Figures/pub_figs/", "S1.png"), width=13, height=8.5, units="in", res=180)#
	grid.newpage()#
	pushViewport(viewport(layout=grid.layout(nrow=1, ncol=3, widths=c(1.3,1,2))))#
	print(S1.t, vp = viewport(layout.pos.row = 1, layout.pos.col=1))#
  	print(S1.p, vp = viewport(layout.pos.row = 1, layout.pos.col=2))#
  	print(S1.size, vp = viewport(layout.pos.row = 1, layout.pos.col=3))	#
dev.off()#
################################################################
# Supplemental Fig. 2 Site GAM response Curves#
################################################################
load("processed_data/gam4_response_graph.Rdata")#
library(RColorBrewer)#
summary(ci.terms.graph)#
cbbPalette <- c("#009E73", "#e79f00", "#9ad0f3", "#0072B2", "#D55E00")#
S2.t <- ggplot(data=ci.terms.graph[ci.terms.graph$Effect %in% c("tmean"), ]) + #
			#facet_wrap(~Effect, scales="free") +#
			geom_ribbon(aes(x=x, ymin=exp(lwr), ymax=exp(upr), fill=Site), alpha=0.5) +#
			geom_line(aes(x=x, y=exp(mean), color=Site))+#
			geom_hline(yintercept=0, linetype="dashed") +#
			scale_colour_manual("", values = cbbPalette) +#
			scale_fill_manual("", values = cbbPalette) +#
			theme_bw()+#
			labs(x = expression(bold(paste("Temperature ("^"o", "C)"))), y = expression(bold(paste("Effect on BAI (mm"^"2","y"^"-1",")"))))+#
			 theme(axis.line=element_line(color="black"), #
		panel.grid.major=element_blank(), #
		panel.grid.minor=element_blank(), #
		panel.border=element_blank(),  #
		panel.background=element_blank(), #
		axis.text.x=element_text(angle=0, color="black", size=rel(1)), #
		#axis.text.y=element_text(angle=0, color="black", size=rel(1)), #
		strip.text=element_text(face="bold", size=rel(1.0)),#
		axis.line.x = element_line(color="black", size = 0.5),#
        axis.line.y = element_line(color="black", size = 0.5),#
        legend.position="none",#
        legend.key.size = unit(0.75, "cm"),#
        legend.text = element_text(size=rel(1.1)),#
        legend.key = element_rect(fill = "white")) + #
        guides(color=guide_legend(ncol=1)) +#
        theme(axis.title.x = element_text(size=rel(1.1), face="bold"),#
        axis.title.y= element_text(size=rel(1.1), face="bold"))+#
        scale_x_continuous(expand=c(0,0)) +       #theme(axis.text.y=element_blank())	#
		ylim(0,3) #
S2.p <- ggplot(data=ci.terms.graph[ci.terms.graph$Effect %in% c("precip"), ]) + #
			#facet_wrap(~Effect, scales="free") +#
			geom_ribbon(aes(x=x, ymin=exp(lwr), ymax=exp(upr), fill=Site), alpha=0.5) +#
			geom_line(aes(x=x, y=exp(mean), color=Site))+#
			geom_hline(yintercept=0, linetype="dashed") +#
			scale_colour_manual("", values = cbbPalette) +#
			scale_fill_manual("", values = cbbPalette) +#
			theme_bw()+#
			labs(x = "Precip (mm)", y = element_blank())+#
			 theme(axis.line=element_line(color="black"), #
		panel.grid.major=element_blank(), #
		panel.grid.minor=element_blank(), #
		panel.border=element_blank(),  #
		panel.background=element_blank(), #
		axis.text.x=element_text(angle=0, color="black", size=rel(1)), #
		#axis.text.y=element_text(angle=0, color="black", size=rel(1)), #
		strip.text=element_text(face="bold", size=rel(1.0)),#
		axis.line.x = element_line(color="black", size = 0.5),#
        axis.line.y = element_line(color="black", size = 0.5),#
        legend.position="none",#
        legend.key.size = unit(0.75, "cm"),#
        legend.text = element_text(size=rel(1.1)),#
        legend.key = element_rect(fill = "white")) + #
        guides(color=guide_legend(ncol=1)) +#
        theme(axis.title.x = element_text(size=rel(1.1), face="bold"),#
        axis.title.y= element_text(size=rel(1.1), face="bold"))+#
        scale_x_continuous(expand=c(0,0)) +       #
		ylim(0,3)+#
		theme(axis.text.y=element_blank())	 #
S2.size <- ggplot(data=ci.terms.graph[ci.terms.graph$Effect %in% c("dbh.recon"), ]) + #
			#facet_wrap(~Effect, scales="free") +#
			geom_ribbon(aes(x=x, ymin=exp(lwr), ymax=exp(upr), fill=Site), alpha=0.5) +#
			geom_line(aes(x=x, y=exp(mean), color=Site))+#
			geom_hline(yintercept=0, linetype="dashed") +#
			scale_colour_manual("", values = cbbPalette) +#
			scale_fill_manual("", values = cbbPalette) +#
			theme_bw()+#
			labs(x = "DBH (cm)", y = element_blank())+#
			 theme(axis.line=element_line(color="black"), #
		panel.grid.major=element_blank(), #
		panel.grid.minor=element_blank(), #
		panel.border=element_blank(),  #
		panel.background=element_blank(), #
		axis.text.x=element_text(angle=0, color="black", size=rel(1)), #
		#axis.text.y=element_text(angle=0, color="black", size=rel(1)), #
		strip.text=element_text(face="bold", size=rel(1.0)),#
		axis.line.x = element_line(color="black", size = 0.5),#
        axis.line.y = element_line(color="black", size = 0.5),#
        legend.position="right",#
        legend.key.size = unit(0.75, "cm"),#
        legend.text = element_text(size=rel(1.1)),#
        legend.key = element_rect(fill = "white")) + #
        guides(color=guide_legend(ncol=1)) +#
        theme(axis.title.x = element_text(size=rel(1.1), face="bold"),#
        axis.title.y= element_text(size=rel(1.1), face="bold"))+#
        scale_x_continuous(expand=c(0,0)) +       #
		scale_y_continuous(expand=c(0,0))	 #
pdf("figures/Prelim_Figures/pub_figs/S2_combined.pdf", height = 8, width = 13)#
	grid.newpage()#
	pushViewport(viewport(layout=grid.layout(nrow=1, ncol=3, widths=c(1.3,1,2))))#
	print(S2.t, vp = viewport(layout.pos.row = 1, layout.pos.col=1))#
  	print(S2.p, vp = viewport(layout.pos.row = 1, layout.pos.col=2))#
  	print(S2.size, vp = viewport(layout.pos.row = 1, layout.pos.col=3))	#
dev.off()#
#
png(file.path("figures/Prelim_Figures/pub_figs/", "S2.png"), width=13, height=8.5, units="in", res=180)#
	grid.newpage()#
	pushViewport(viewport(layout=grid.layout(nrow=1,ncol=3, widths=c(1.3,1,2))))#
	print(S2.t, vp = viewport(layout.pos.row = 1, layout.pos.col=1))#
  	print(S2.p, vp = viewport(layout.pos.row = 1, layout.pos.col=2))#
  	print(S2.size, vp = viewport(layout.pos.row = 1, layout.pos.col=3))#
dev.off()#
################################################################
# Supplemental Fig. 3 Spp weights#
################################################################
load("processed_data/gam1_weights_graph.R")#
#
S3 <- ggplot(data.graph[data.graph$group %in% spp.use,]) + facet_grid(group~State) +#
		geom_ribbon(aes(x=Year, ymin=weight.tmean2 - weight.tmean2.SE, ymax=weight.tmean2 + weight.tmean2.SE), fill="red", alpha=0.25) +#
		geom_ribbon(aes(x=Year, ymin=weight.precip2 - weight.precip2.SE, ymax=weight.precip2 + weight.precip2.SE), fill="blue", alpha=0.25) +#
		geom_ribbon(aes(x=Year, ymin=weight.dbh.recon2- weight.dbh.recon2.SE, ymax=weight.dbh.recon2 + weight.dbh.recon2.SE), fill="darkgreen", alpha=0.25) +#
		geom_line(aes(x=Year, y=weight.tmean2), size=1, color="red") +#
		geom_line(aes(x=Year, y=weight.precip2), size=1, color="blue") +#
		geom_line(aes(x=Year, y=weight.dbh.recon2), size=1, color="darkgreen")+#
		labs(x=expression(bold(paste("Year"))), y = expression(bold(paste("Limiting Factor Influence")))) +#
	theme(axis.line=element_line(color="black"), #
		panel.grid.major=element_blank(), #
		panel.grid.minor=element_blank(), #
		panel.border=element_blank(),  #
		panel.background=element_blank(), #
		axis.text.x=element_text(angle=0, color="black", size=rel(1)), #
		#axis.text.y=element_text(angle=0, color="black", size=rel(1)), #
		strip.text=element_text(face="bold", size=rel(1.0)),#
		axis.line.x = element_line(color="black", size = 0.5),#
        axis.line.y = element_line(color="black", size = 0.5),#
        legend.position="right",#
        legend.key.size = unit(0.75, "cm"),#
        legend.text = element_text(size=rel(1.1)),#
        legend.key = element_rect(fill = "white")) + #
        guides(color=guide_legend(ncol=1)) +#
        theme(axis.title.x = element_text(size=rel(1.1), face="bold"),#
        axis.title.y= element_text(size=rel(1.1), face="bold"))+#
        scale_x_continuous(expand=c(0,0)) +       #
		scale_y_continuous(expand=c(0,0))	 	#
#
pdf("figures/Prelim_Figures/pub_figs/S3.pdf", height = 8, width = 13)#
	S3#
dev.off()#
#
png(file.path("figures/Prelim_Figures/pub_figs/", "S3.png"), width=13, height=8.5, units="in", res=180)#
	S3#
#
dev.off()#
################################################################
# Supplemental Fig. 4 Site Weights#
################################################################
load("processed_data/gam4_weights_graph.Rdata")#
#
S4 <- ggplot(data.graph) + facet_grid(State~.) +#
	geom_ribbon(aes(x=Year, ymin=weight.tmean2 - weight.tmean2.SE, ymax=weight.tmean2 + weight.tmean2.SE), alpha=0.25, fill="red") +#
	geom_ribbon(aes(x=Year, ymin=weight.precip2 - weight.precip2.SE, ymax=weight.precip2 + weight.precip2.SE), alpha=0.25, fill="blue") +#
	geom_ribbon(aes(x=Year, ymin=weight.dbh.recon2 - weight.dbh.recon2.SE, ymax=weight.dbh.recon2 + weight.dbh.recon2.SE), alpha=0.25, fill="darkgreen") +#
	geom_line(aes(x=Year, y=weight.tmean2), size=1, color="red") +#
	geom_line(aes(x=Year, y=weight.precip2), size=1, color="blue") +#
	geom_line(aes(x=Year, y=weight.dbh.recon2), size=1, color="darkgreen")+#
		labs(x=expression(bold(paste("Year"))), y = expression(bold(paste("Limiting Factor Influence"))))+#
	theme(axis.line=element_line(color="black"), #
		panel.grid.major=element_blank(), #
		panel.grid.minor=element_blank(), #
		panel.border=element_blank(),  #
		panel.background=element_blank(), #
		axis.text.x=element_text(angle=0, color="black", size=rel(1)), #
		#axis.text.y=element_text(angle=0, color="black", size=rel(1)), #
		strip.text=element_text(face="bold", size=rel(1.0)),#
		axis.line.x = element_line(color="black", size = 0.5),#
        axis.line.y = element_line(color="black", size = 0.5),#
        legend.position="right",#
        legend.key.size = unit(0.75, "cm"),#
        legend.text = element_text(size=rel(1.1)),#
        legend.key = element_rect(fill = "white")) + #
        guides(color=guide_legend(ncol=1)) +#
        theme(axis.title.x = element_text(size=rel(1.1), face="bold"),#
        axis.title.y= element_text(size=rel(1.1), face="bold"))+#
        scale_x_continuous(expand=c(0,0)) +       #
		scale_y_continuous(expand=c(0,0))	 	#
pdf("figures/Prelim_Figures/pub_figs/S4.pdf", height = 8, width = 13)#
	S4#
dev.off()#
#
png(file.path("figures/Prelim_Figures/pub_figs/", "S4.png"), width=13, height=8.5, units="in", res=180)#
	S4#
#
dev.off()#
#
################################################################
# Supplemental Fig. 5 Site * Canopy.Class Weights#
################################################################
load("processed_data/gam2_weights_graph_withSites.Rdata")#
data.graph$Canopy.Class <- recode(data.graph$Canopy.Class, "'D'='Dominant';'I'='Intermediate';'S'='Suppressed'")#
#
S5 <- ggplot(data.graph) + facet_grid(Canopy.Class~State) +#
	geom_ribbon(aes(x=Year, ymin=weight.tmean2 - weight.tmean2.SE, ymax=weight.tmean2 + weight.tmean2.SE), alpha=0.25, fill="red") +#
	geom_ribbon(aes(x=Year, ymin=weight.precip2 - weight.precip2.SE, ymax=weight.precip2 + weight.precip2.SE), alpha=0.25, fill="blue") +#
	geom_ribbon(aes(x=Year, ymin=weight.dbh.recon2 - weight.dbh.recon2.SE, ymax=weight.dbh.recon2 + weight.dbh.recon2.SE), alpha=0.25, fill="darkgreen") +#
	geom_line(aes(x=Year, y=weight.tmean2), size=1, color="red") +#
	geom_line(aes(x=Year, y=weight.precip2), size=1, color="blue") +#
	geom_line(aes(x=Year, y=weight.dbh.recon2), size=1, color="darkgreen")+#
		labs(x=expression(bold(paste("Year"))), y = expression(bold(paste("Limiting Factor Influence"))))+#
	theme(axis.line=element_line(color="black"), #
		panel.grid.major=element_blank(), #
		panel.grid.minor=element_blank(), #
		panel.border=element_blank(),  #
		panel.background=element_blank(), #
		axis.text.x=element_text(angle=0, color="black", size=rel(1)), #
		#axis.text.y=element_text(angle=0, color="black", size=rel(1)), #
		strip.text=element_text(face="bold", size=rel(1.0)),#
		axis.line.x = element_line(color="black", size = 0.5),#
        axis.line.y = element_line(color="black", size = 0.5),#
        legend.position="right",#
        legend.key.size = unit(0.75, "cm"),#
        legend.text = element_text(size=rel(1.1)),#
        legend.key = element_rect(fill = "white")) + #
        guides(color=guide_legend(ncol=1)) +#
        theme(axis.title.x = element_text(size=rel(1.1), face="bold"),#
        axis.title.y= element_text(size=rel(1.1), face="bold"))+#
        scale_x_continuous(expand=c(0,0)) +       #
		scale_y_continuous(expand=c(0,0))	 	#
#
pdf("figures/Prelim_Figures/pub_figs/S5.pdf", height = 8, width = 13)#
	S5#
dev.off()#
#
png(file.path("figures/Prelim_Figures/pub_figs/", "S5.png"), width=13, height=8.5, units="in", res=180)#
	S5#
#
dev.off()
library(ggplot2)#
require(mgcv)#
require(lsmeans)#
require(car)#
require(moments)#
# Running ANOVA between Extreme years and normal years BAI for Canopy.Class#
load("processed_data/gam2_weights_processed.Rdata")#
summary(gam2.weights)#
#
# Running ANOVA's to determine differences between ambient years and extreme years#
# Using a lme here to take into account the differences between sites as random effeects#
summary(gam2.weights)#
# Truncating to 1950 becasue that's the extent of the climate analysis#
gam2.weights <- gam2.weights[gam2.weights$Year >=1950,]#
# cr.test <- lme(log(BA.inc) ~ Precip.Mark*Canopy.Class, random=list(group=~1, Site=~1, PlotID=~1, TreeID=~1), data=gam2.weights)#
# lsmeans(cr.test, pairwise~Precip.Mark*Canopy.Class, adjust="tukey")	#
# cr.test2 <- lme(log(BA.inc) ~ Temp.Mark*Canopy.Class, random=list(TreeID=~1), data=gam2.weights)#
# lsmeans(cr.test2, pairwise~Temp.Mark*Canopy.Class, adjust="tukey")	#
#
# Same fixed effects structure as the gams; add an interaction between temp & precip #
# because we fit those jointly in the gam#
cr.testD <- aov(log(BA.inc) ~ Precip.Mark*Temp.Mark + Site + PlotID + TreeID + group, data=gam2.weights[gam2.weights$Canopy.Class=="D",])#
cr.testI <- aov(log(BA.inc) ~ Precip.Mark*Temp.Mark + Site + PlotID + TreeID + group, data=gam2.weights[gam2.weights$Canopy.Class=="I",])#
cr.testS <- aov(log(BA.inc) ~ Precip.Mark*Temp.Mark + Site + PlotID + TreeID + group, data=gam2.weights[gam2.weights$Canopy.Class=="S",])#
plot(resid(cr.testD) ~ predict(cr.testD))#
plot(resid(cr.testI) ~ predict(cr.testI))#
plot(resid(cr.testS) ~ predict(cr.testS))#
#
summary(cr.testD)#
tukey.d <- TukeyHSD(cr.testD)#
# tukey.d["Precip.Mark:Temp.Mark"] # not significant, so we won't look at it#
tukey.d["Precip.Mark"]#
tukey.d["Temp.Mark"]#
# Saving table to publication folder#
#write.table(summary(cr.testD), file="~/PhD/publications/2016/Ch2_multiple_limiting_factors/D_anova.txt")#
#
summary(cr.testI)#
tukey.i <- TukeyHSD(cr.testI)#
# tukey.i["Precip.Mark:Temp.Mark"] # not significant, so we won't look at it#
tukey.i["Precip.Mark"]#
tukey.i["Temp.Mark"]#
#
summary(cr.testS)#
tukey.s <- TukeyHSD(cr.testS)#
tukey.s["Precip.Mark:Temp.Mark"] # Significant (for better or worse)#
tukey.s["Precip.Mark"]#
tukey.s["Temp.Mark"]#
# lsmeans(cr.testD, pairwise~Precip.Mark, adjust="tukey")	#
# lsmeans(cr.testD, pairwise~Temp.Mark, adjust="tukey")	#
# lsmeans(cr.testI, pairwise~Precip.Mark, adjust="tukey")	#
# lsmeans(cr.testS, pairwise~Precip.Mark, adjust="tukey")	#
#
############################################################
# Attemping an SEA analysis#
############################################################
#
summary(gam2.weights)#
gam2.weights$Year <- as.factor(gam2.weights$Year)#
#
sea.df <- recast(gam2.weights[,c("Year", "TreeID", "BA.inc")], Year~TreeID)#
summary(sea.df)#
row.names(sea.df) <- sea.df$Year#
D.names <- gam2.weights[gam2.weights$Canopy.Class=="D", "TreeID"]#
I.names <- gam2.weights[gam2.weights$Canopy.Class=="I", "TreeID"]#
S.names <- gam2.weights[gam2.weights$Canopy.Class=="S", "TreeID"]#
#
hot.years <- unique(gam2.weights$Year[gam2.weights$Temp.Mark == "hot"])#
cool.years<- unique(gam2.weights$Year[gam2.weights$Temp.Mark == "cold"])#
wet.years <- unique(gam2.weights$Year[gam2.weights$Precip.Mark == "wet"])#
dry.years <- unique(gam2.weights$Year[gam2.weights$Precip.Mark == "dry"])#
#
wet.hot.years <- as.numeric(intersect(hot.years, wet.years))#
wet.cool.years <- as.numeric(intersect(cool.years, wet.years))#
dry.hot.years <- as.numeric(intersect(hot.years, dry.years))#
dry.cool.years <- as.numeric(intersect(cool.years, dry.years))#
#
dom.bai <- sea.df[,names(sea.df) %in% D.names]#
head(dom.bai)#
#
dom.bai.chron <- chron(dom.bai)#
summary(dom.bai.chron)#
#
int.bai <- sea.df[,names(sea.df) %in% I.names]#
#
sup.bai <- sea.df[,names(sea.df) %in% S.names]#
#
test <- as.data.frame(dom.bai["TP2086"])#
meow <- c(1960, 1970, 1980)#
#
sea.test <- sea(dom.bai.chron, wet.cool.years , lag=2, resample=1000)#
summary(sea.test)#
#
foo <- sea.test$se.unscaled#
names(foo) <- sea.test$lag#
#
barplot(foo, col=ifelse(sea.test$p < 0.05, "grey30", "grey75"), ylab = "BAI", xlab="Superposed Epoch")
summary(gam2.weights)#
gam2.weights$Year <- as.factor(gam2.weights$Year)#
#
sea.df <- recast(gam2.weights[,c("Year", "TreeID", "BA.inc")], Year~TreeID)#
summary(sea.df)#
row.names(sea.df) <- sea.df$Year
library(reshape)
sea.df <- recast(gam2.weights[,c("Year", "TreeID", "BA.inc")], Year~TreeID)
summary(sea.df)#
row.names(sea.df) <- sea.df$Year#
D.names <- gam2.weights[gam2.weights$Canopy.Class=="D", "TreeID"]#
I.names <- gam2.weights[gam2.weights$Canopy.Class=="I", "TreeID"]#
S.names <- gam2.weights[gam2.weights$Canopy.Class=="S", "TreeID"]
hot.years <- unique(gam2.weights$Year[gam2.weights$Temp.Mark == "hot"])#
cool.years<- unique(gam2.weights$Year[gam2.weights$Temp.Mark == "cold"])#
wet.years <- unique(gam2.weights$Year[gam2.weights$Precip.Mark == "wet"])#
dry.years <- unique(gam2.weights$Year[gam2.weights$Precip.Mark == "dry"])#
#
wet.hot.years <- as.numeric(intersect(hot.years, wet.years))#
wet.cool.years <- as.numeric(intersect(cool.years, wet.years))#
dry.hot.years <- as.numeric(intersect(hot.years, dry.years))#
dry.cool.years <- as.numeric(intersect(cool.years, dry.years))#
#
dom.bai <- sea.df[,names(sea.df) %in% D.names]#
head(dom.bai)#
#
dom.bai.chron <- chron(dom.bai)#
summary(dom.bai.chron)#
#
int.bai <- sea.df[,names(sea.df) %in% I.names]#
#
sup.bai <- sea.df[,names(sea.df) %in% S.names]#
#
test <- as.data.frame(dom.bai["TP2086"])#
meow <- c(1960, 1970, 1980)
library(dplR)
dom.bai <- sea.df[,names(sea.df) %in% D.names]#
head(dom.bai)#
#
dom.bai.chron <- chron(dom.bai)#
summary(dom.bai.chron)
sea.test <- sea(dom.bai.chron, wet.cool.years , lag=2, resample=1000)
head(dom.bai)
dom.bai.chron <- chron(dom.bai[,1:10])
summary(dom.bai.chron)
sea.test <- sea(dom.bai.chron, wet.cool.years , lag=2, resample=1000)
sea.test <- sea(dom.bai.chron, wet.hot.years , lag=2, resample=1000)
sea.test <- sea(dom.bai.chron, hot.years , lag=2, resample=1000)
summary(sea.test)
foo <- sea.test$se.unscaled#
names(foo) <- sea.test$lag
barplot(foo, col=ifelse(sea.test$p < 0.05, "grey30", "grey75"), ylab = "BAI", xlab="Superposed Epoch")
sea.test <- sea(dom.bai.chron, cool.years , lag=2, resample=1000)
warnings()
sea.test <- sea(dom.bai.chron, meow , lag=2, resample=1000)
hot.years <- unique(gam2.weights$Year[gam2.weights$Temp.Mark == "hot" & gam2.weights$State=="IN"])
hot.years
D.names <- gam2.weights[gam2.weights$Canopy.Class=="D" & gam2.weights$State=="IN", "TreeID"]
hot.years <- unique(gam2.weights$Year[gam2.weights$Temp.Mark == "hot" & gam2.weights$State=="IN"])
dom.bai <- sea.df[,names(sea.df) %in% D.names]#
head(dom.bai)#
#
dom.bai.chron <- chron(dom.bai[,1:10])#
summary(dom.bai.chron)
sea.test <- sea(dom.bai.chron, hot.years , lag=2, resample=1000)
hot.years
sea.test <- sea(dom.bai.chron, meow , lag=2, resample=1000)
sea.test <- sea(dom.bai.chron, meow , lag=2, resample=1000)
summary(sea.test)
foo <- sea.test$se.unscaled#
names(foo) <- sea.test$lag#
#
barplot(foo, col=ifelse(sea.test$p < 0.05, "grey30", "grey75"), ylab = "BAI", xlab="Superposed Epoch")
sea.test <- sea(dom.bai.chron, hot.years , lag=2, resample=1000)
sea.test <- sea(dom.bai.chron, hot.years , lag=2, resample=1000)
hot.years
meow <- c(1955, 1959)
sea.test <- sea(dom.bai.chron, meow , lag=2, resample=1000)
summary(sea.test)
foo <- sea.test$se.unscaled#
names(foo) <- sea.test$lag#
#
barplot(foo, col=ifelse(sea.test$p < 0.05, "grey30", "grey75"), ylab = "BAI", xlab="Superposed Epoch")
line(x=sea.test, y = sea.test$se.unscaled)
sea.test$se.unscaled
barplot(foo, col=ifelse(sea.test$p < 0.05, "grey30", "grey75"), ylab = "BAI", xlab="Superposed Epoch")
line(x=sea.test$lag, y = sea.test$se.unscaled)
lines(x=sea.test$lag, y = sea.test$se.unscaled)
barplot(foo, col=ifelse(sea.test$p < 0.05, "grey30", "grey75"), ylab = "BAI", xlab="Superposed Epoch", ylim = c) 0, 10)#
	lines(x=sea.test$lag, y = sea.test$se.unscaled)
barplot(foo, col=ifelse(sea.test$p < 0.05, "grey30", "grey75"), ylab = "BAI", xlab="Superposed Epoch", ylim = c(0, 10))
lines(x=sea.test$lag, y = sea.test$se.unscaled)
D.names <- gam2.weights[gam2.weights$Canopy.Class=="D" & gam2.weights$State=="IN", "TreeID"]#
I.names <- gam2.weights[gam2.weights$Canopy.Class=="I" & gam2.weights$State=="IN", "TreeID", "TreeID"]#
S.names <- gam2.weights[gam2.weights$Canopy.Class=="S" & gam2.weights$State=="IN", "TreeID", "TreeID"]
barplot(foo, col=ifelse(sea.test$p < 0.05, "grey30", "grey75"), ylab = "BAI", xlab="Superposed Epoch")
I.names <- gam2.weights[gam2.weights$Canopy.Class=="I" & gam2.weights$State=="IN", "TreeID"]
D.names <- gam2.weights[gam2.weights$Canopy.Class=="D" & gam2.weights$State=="IN", "TreeID"]#
I.names <- gam2.weights[gam2.weights$Canopy.Class=="I" & gam2.weights$State=="IN", "TreeID"]#
S.names <- gam2.weights[gam2.weights$Canopy.Class=="S" & gam2.weights$State=="IN", "TreeID"]
dom.bai.chron <- chron(dom.bai)
summary(dom.bai.chron)
sea.test <- sea(dom.bai.chron, meow , lag=2, resample=1000)
sea.test <- sea(dom.bai.chron, meow , lag=2, resample=1000)
sea.test <- sea(dom.bai.chron, meow , lag=2, resample=1000)
sea.test <- sea(dom.bai.chron, meow , lag=2, resample=1000)
summary(dom.bai.chron)
dim(dom.bai.chron)
sea.test <- sea(dom.bai.chron, meow , lag=2, resample=1000)
sea.test <- sea(dom.bai.chron, meow , lag=2, resample=1000)
sea.test <- sea(dom.bai.chron, meow , lag=2, resample=1000)
sea.test <- sea(dom.bai.chron, meow , lag=2, resample=1000)
sea.test <- sea(dom.bai.chron, meow , lag=2, resample=1000)
sea.test <- sea(dom.bai.chron, meow , lag=2, resample=1000)
sea.test <- sea(dom.bai.chron, meow , lag=2, resample=1000)
sea.test <- sea(dom.bai.chron, meow , lag=2, resample=1000)
sea.test <- sea(dom.bai.chron, meow , lag=2, resample=1000)
sea.test <- sea(dom.bai.chron, meow , lag=2, resample=1000)
sea.test <- sea(dom.bai.chron, meow , lag=2, resample=1000)
sea.test <- sea(dom.bai.chron, meow , lag=2, resample=1000)
sea.test <- sea(dom.bai.chron, meow , lag=2, resample=1000)
sea.test <- sea(dom.bai.chron, meow , lag=2, resample=1000)
sea.test <- sea(dom.bai.chron, meow , lag=2, resample=1000)
sea.test <- sea(dom.bai.chron, meow , lag=2, resample=1000)
summary(sea.test)
foo <- sea.test$se.unscaled#
names(foo) <- sea.test$lag#
#
barplot(foo, col=ifelse(sea.test$p < 0.05, "grey30", "grey75"), ylab = "BAI", xlab="Superposed Epoch")
D.names <- gam2.weights[gam2.weights$Canopy.Class=="D" & gam2.weights$State=="ME", "TreeID"]
hot.years <- unique(gam2.weights$Year[gam2.weights$Temp.Mark == "hot" & gam2.weights$State=="ME"])
dom.bai <- sea.df[,names(sea.df) %in% D.names]#
head(dom.bai)
head(dom.bai)#
#
dom.bai.chron <- chron(dom.bai)#
summary(dom.bai.chron)
sea.test <- sea(dom.bai.chron, meow , lag=2, resample=1000)
sea.test <- sea(dom.bai.chron, meow , lag=2, resample=1000)
sea.test <- sea(dom.bai.chron, meow , lag=2, resample=1000)
sea.test <- sea(dom.bai.chron, meow , lag=2, resample=1000)
sea.test <- sea(dom.bai.chron, meow , lag=2, resample=1000)
sea.test <- sea(dom.bai.chron, meow , lag=2, resample=1000)
sea.test <- sea(dom.bai.chron, meow , lag=2, resample=1000)
sea.test <- sea(dom.bai.chron, meow , lag=2, resample=1000)
sea.test <- sea(dom.bai.chron, meow , lag=2, resample=1000)
sea.test <- sea(dom.bai.chron, meow , lag=2, resample=1000)
sea.test <- sea(dom.bai.chron, meow , lag=2, resample=1000)
sea.test <- sea(dom.bai.chron, meow , lag=2, resample=1000)
summary(sea.test)
foo <- sea.test$se.unscaled
names(foo) <- sea.test$lag
barplot(foo, col=ifelse(sea.test$p < 0.05, "grey30", "grey75"), ylab = "BAI", xlab="Superposed Epoch")
5*3*8
D.names <- gam2.weights[gam2.weights$Canopy.Class=="D" & gam2.weights$State=="MO", "TreeID"]#
I.names <- gam2.weights[gam2.weights$Canopy.Class=="I" & gam2.weights$State=="IN", "TreeID"]#
S.names <- gam2.weights[gam2.weights$Canopy.Class=="S" & gam2.weights$State=="IN", "TreeID"]#
#
hot.years <- unique(gam2.weights$Year[gam2.weights$Temp.Mark == "hot" & gam2.weights$State=="MO"])#
cool.years<- unique(gam2.weights$Year[gam2.weights$Temp.Mark == "cold"])#
wet.years <- unique(gam2.weights$Year[gam2.weights$Precip.Mark == "wet"])#
dry.years <- unique(gam2.weights$Year[gam2.weights$Precip.Mark == "dry"])#
#
wet.hot.years <- as.numeric(intersect(hot.years, wet.years))#
wet.cool.years <- as.numeric(intersect(cool.years, wet.years))#
dry.hot.years <- as.numeric(intersect(hot.years, dry.years))#
dry.cool.years <- as.numeric(intersect(cool.years, dry.years))#
#
dom.bai <- sea.df[,names(sea.df) %in% D.names]#
head(dom.bai)#
#
dom.bai.chron <- chron(dom.bai)#
summary(dom.bai.chron)#
#
int.bai <- sea.df[,names(sea.df) %in% I.names]#
int.bai.chron <- chron(int.bai)#
sup.bai <- sea.df[,names(sea.df) %in% S.names]#
#
test <- as.data.frame(dom.bai["TP2086"])#
meow <- c(1955, 1959)#
#
sea.test <- sea(dom.bai.chron, meow , lag=2, resample=1000)
summary(sea.test)
foo <- sea.test$se.unscaled#
names(foo) <- sea.test$lag#
#
barplot(foo, col=ifelse(sea.test$p < 0.05, "grey30", "grey75"), ylab = "BAI", xlab="Superposed Epoch")
sea.test <- sea(dom.bai.chron, hot.years , lag=2, resample=1000)
sea.test <- sea(dom.bai.chron, hot.years , lag=2, resample=1000)
sea.test <- sea(dom.bai.chron, hot.years , lag=2, resample=1000)
sea.test <- sea(dom.bai.chron, hot.years , lag=2, resample=1000)
sea.test <- sea(dom.bai.chron, hot.years , lag=2, resample=1000)
