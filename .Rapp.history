g3.ci.out <- g3.ci.terms.pred$ci # separting out the confidence interval #
		g3.ci.out[,predictors.all[!predictors.all %in% vars.num]] <- new.dat[,predictors.all[!predictors.all %in% vars.num]] # copying over our factor labels#
		g3.ci.out$x <- as.numeric(g3.ci.out$x) # making x numeric; will make factors NA#
		summary(g3.ci.out)
ggplot(data=g3.ci.out[g3.ci.out$Effect %in% c("tmean", "precip"), ]) + #
			facet_wrap(Canopy.Class~Effect, scales="free_x") +#
			geom_ribbon(aes(x=x, ymin=lwr, ymax=upr, fill=group), alpha=0.5) +#
			geom_line(aes(x=x, y=mean, color=group))
g31.ci.terms.pred <- post.distns(model.gam=gam3.1, model.name="harv_mmf_cc.test", n=n, newdata=new.dat, vars=predictors.all, terms=T)#
		g31.ci.out <- g31.ci.terms.pred$ci # separting out the confidence interval #
		g31.ci.out[,predictors.all[!predictors.all %in% vars.num]] <- new.dat[,predictors.all[!predictors.all %in% vars.num]] # copying over our factor labels#
		g31.ci.out$x <- as.numeric(g31.ci.out$x) # making x numeric; will make factors NA#
		summary(g31.ci.out)#
		ggplot(data=g31.ci.out[g31.ci.out$Effect %in% c("tmean", "precip"), ]) + #
			facet_wrap(Canopy.Class~Effect, scales="free_x") +#
			geom_ribbon(aes(x=x, ymin=lwr, ymax=upr, fill=group), alpha=0.5) +#
			geom_line(aes(x=x, y=mean, color=group))
data <- test#
		n.out = n#
#
		new.dat <- data.frame(Model="species_response",#
							  Extent=as.factor(paste(min(data$Year), max(data$Year), sep="-")))#
		# Figure out which vars are numeric vs. factor#
		vars.num <- vector()#
		for(v in predictors.all){#
			if(class(data[,v]) %in% c("numeric", "integer")) vars.num <- c(vars.num, v)#
		}#
		# Getting the unique values of our factor variables and adding them to the data frame#
		# need to skip group & group.cc so we aren't trying to match Carya & Quercus etc#
		predictors.all <- predictors.all[!predictors.all %in% c("Species", "spp.plot")]#
		for(v in predictors.all[!predictors.all %in% vars.num & !(predictors.all %in% c("group", "group.cc"))]){#
			# if v is a factor, merge all unique values into the dataframe#
			var.temp <- data.frame(x=unique(data[,v])) #
			names(var.temp) <- v#
			new.dat <- merge(new.dat, var.temp, all.x=T, all.y=T)#
		}#
		# getting species from species.plot#
		new.dat$group <- as.factor(substr(new.dat$group.plot, 1, 4))#
		# Adding in the group.canopy class then getting rid of combinations we don't actually have in our data#
		new.dat$group.cc <- as.factor(paste(new.dat$group, new.dat$Canopy.Class, sep="."))#
		new.dat <- new.dat[new.dat$group.cc %in% unique(test$group.cc),]#
		summary(new.dat)#
		# Putting the numerical variables into an array and adding it in #
		var.temp <- data.frame(array(dim=c(n.out, length(vars.num))))#
		names(var.temp) <- vars.num#
		for(v in vars.num){#
			var.temp[,v] <- seq(min(data[,v], na.rm=T), max(data[,v], na.rm=T), length.out=n.out)#
		}								#
		new.dat <- merge(new.dat, var.temp, all.x=T, all.y=T)#
		summary(new.dat)#
write.csv(new.dat, file="processed_data/sensitivity_extaction_dataframe.csv", row.names=F)								#
# Change which gamm you look at here!#
n <- 100						#
		# SOurce & run the function#
		source("0_Calculate_GAMM_Posteriors.R")#
		g1.ci.terms.pred <- post.distns(model.gam=gam1, model.name="species_response", n=n, newdata=new.dat, vars=predictors.all, terms=T)#
		g1.ci.out <- g1.ci.terms.pred$ci # separting out the confidence interval #
		g1.ci.out[,predictors.all[!predictors.all %in% vars.num]] <- new.dat[,predictors.all[!predictors.all %in% vars.num]] # copying over our factor labels#
		g1.ci.out$x <- as.numeric(g1.ci.out$x) # making x numeric; will make factors NA#
		summary(g1.ci.out)#
spp.colors <- read.csv("spp.Colors.csv", header=T)	#
summary(spp.colors)	#
#
group.fig <- unique(g1.ci.out$group)#
group.fig <- group.fig[order(group.fig)]#
colors.use <- as.vector(c(paste(spp.colors[spp.colors$Species %in% group.fig, "color"])))#
		ggplot(data=g1.ci.out[g1.ci.out$Effect %in% c("tmean", "precip"), ]) + #
			facet_grid(Canopy.Class~Effect, scales="free_x") +#
			geom_line(aes(x=x, y=0), linetype="dashed")+#
			geom_ribbon(aes(x=x, ymin=lwr, ymax=upr, fill=group), alpha=0.5) +#
			geom_line(aes(x=x, y=mean, color=group)) +#
			scale_color_manual(values=colors.use) +#
			scale_fill_manual(values=colors.use)
load("processed_data/gam_results/gam1_climate_by_species.Rdata")
n <- 100#
data <- test#
		n.out = n#
#
		new.dat <- data.frame(Model="species_response",#
							  Extent=as.factor(paste(min(data$Year), max(data$Year), sep="-")))#
		# Figure out which vars are numeric vs. factor#
		vars.num <- vector()#
		for(v in predictors.all){#
			if(class(data[,v]) %in% c("numeric", "integer")) vars.num <- c(vars.num, v)#
		}#
		# Getting the unique values of our factor variables and adding them to the data frame#
		# need to skip group & group.cc so we aren't trying to match Carya & Quercus etc#
		predictors.all <- predictors.all[!predictors.all %in% c("Species", "spp.plot")]#
		for(v in predictors.all[!predictors.all %in% vars.num & !(predictors.all %in% c("group", "group.cc"))]){#
			# if v is a factor, merge all unique values into the dataframe#
			var.temp <- data.frame(x=unique(data[,v])) #
			names(var.temp) <- v#
			new.dat <- merge(new.dat, var.temp, all.x=T, all.y=T)#
		}#
		# getting species from species.plot#
		new.dat$group <- as.factor(substr(new.dat$group.plot, 1, 4))#
		# Adding in the group.canopy class then getting rid of combinations we don't actually have in our data#
		new.dat$group.cc <- as.factor(paste(new.dat$group, new.dat$Canopy.Class, sep="."))#
		new.dat <- new.dat[new.dat$group.cc %in% unique(test$group.cc),]#
		summary(new.dat)#
		# Putting the numerical variables into an array and adding it in #
		var.temp <- data.frame(array(dim=c(n.out, length(vars.num))))#
		names(var.temp) <- vars.num#
		for(v in vars.num){#
			var.temp[,v] <- seq(min(data[,v], na.rm=T), max(data[,v], na.rm=T), length.out=n.out)#
		}								#
		new.dat <- merge(new.dat, var.temp, all.x=T, all.y=T)#
		summary(new.dat)#
write.csv(new.dat, file="processed_data/sensitivity_extaction_dataframe.csv", row.names=F)
load("processed_data/gam_results/gam3_climate_by_canopyclass_interactions.Rdata")
# GAM 3								#
		# SOurce & run the function#
		source("0_Calculate_GAMM_Posteriors.R")#
		g3.ci.terms.pred <- post.distns(model.gam=gam3, model.name="harv_mmf_cc.test", n=n, newdata=new.dat, vars=predictors.all, terms=T)#
		g3.ci.out <- g3.ci.terms.pred$ci # separting out the confidence interval #
		g3.ci.out[,predictors.all[!predictors.all %in% vars.num]] <- new.dat[,predictors.all[!predictors.all %in% vars.num]] # copying over our factor labels#
		g3.ci.out$x <- as.numeric(g3.ci.out$x) # making x numeric; will make factors NA#
		summary(g3.ci.out)#
		ggplot(data=g3.ci.out[g3.ci.out$Effect %in% c("tmean", "precip"), ]) + #
			facet_wrap(Canopy.Class~Effect, scales="free_x") +#
			geom_ribbon(aes(x=x, ymin=lwr, ymax=upr, fill=group), alpha=0.5) +#
			geom_line(aes(x=x, y=mean, color=group))
ls()
n <- 100#
model.pred <- post.distns(model.gam=gam3.1, model.name="species_response", newdata=test, vars=predictors.all, n=n, terms=F)#
summary(model.pred$ci)#
#
# Need help dealing with the list that is set up here.  Need help with the aggregation#
model.pred2 <- model.pred$ci#
summary(model.pred2)#
dim(model.pred2)#
# Aggregating to the group level in teh same way we do below with the ring widths#
# We can then compare our modeled RW to our measured RW and see how things look#
# Sanity Check #1#
#
mean.model <- aggregate(model.pred2$mean, by = model.pred2[, c("group.cc", "Site", "Year")], FUN=mean, na.rm=T)#
names(mean.model)[names(mean.model)=="x"] <- c("BAI.mean") #
mean.model[,"BAI.lwr"] <- aggregate(model.pred2$mean, by=model.pred2[,c("group.cc", "Site", "Year")], FUN=quantile, probs=0.025, na.rm=T)[,"x"]#
mean.model[,"BAI.upr"] <- aggregate(model.pred2$mean, by=model.pred2[,c("group.cc", "Site", "Year")], FUN=quantile, probs=0.975, na.rm=T)[,"x"]#
head(mean.model)#
# aggregating the raw data for graphing#
mean.rw <- aggregate(test$BA.inc, by=test[, c("group.cc", "Site", "Year")], FUN=mean, na.rm=T)#
names(mean.rw)[names(mean.rw)=="x"]<- c("BAI.mean")                  #
# mean.rw[,"rw.lwr"] <- aggregate(test$RW, by=test[,c("group", "Site", "Year")], FUN=quantile, probs=0.025, na.rm=T)[,"x"]#
# mean.rw[,"rw.upr"] <- aggregate(test$RW, by=test[,c("group", "Site", "Year")], FUN=quantile, probs=0.975, na.rm=T)[,"x"]#
# mean.rw[,"BAI.mean"] <- aggregate(test$BA.inc, by=test[,c("group", "Site", "Year")], FUN=mean, na.rm=T)[,"x"]#
mean.rw[,"BAI.lwr"] <- aggregate(test$BA.inc, by=test[,c("group.cc", "Site", "Year")], FUN=quantile, probs=0.025, na.rm=T)[,"x"]#
mean.rw[,"BAI.upr"] <- aggregate(test$BA.inc, by=test[,c("group.cc", "Site", "Year")], FUN=quantile, probs=0.975, na.rm=T)[,"x"]#
head(mean.rw)#
#
mean.rw <- mean.rw[mean.rw$Site %in% sites.use,]#
#
#mean.rw$Species <- mean.rw$group#
#
# Setting up lm between the modeled values and the observed	#
dim(mean.rw)#
dim(mean.model)#
#
# mean.rw <- mean.rw[mean.rw$group %in% mean.model$group,]#
# mean.rw <- mean.rw[mean.rw$Year %in% mean.model$Year,]#
#
summary(mean.rw); #
summary(mean.model)#
#
mean.model2 <- mean.model#
names(mean.model2)[4:6] <- c("mod.mean", "mod.lwr", "mod.up")#
#
sanity.gam1.df <- merge(mean.model2, mean.rw, all.x=T, all.y=T)#
summary(sanity.gam1.df)#
summary(sanity.gam1.df[is.na(sanity.gam1.df$mod.mean),])#
head(sanity.gam1.df[is.na(sanity.gam1.df$mod.mean),])#
#
# LM on aggregated BAI#
sanity.lm1 <- lm(mod.mean ~ BAI.mean, data=sanity.gam1.df)#
summary(sanity.lm1)#
# Sanity Check #1 graph#
pdf("figures/gam_sanity_check/gam3_sanitycheck1.pdf", width= 13, height = 8.5)#
ggplot(data=mean.rw) + facet_wrap(group.cc ~ Site, scales="fixed") + theme_bw() +#
	# plot the data#
	geom_ribbon(aes(x=Year, ymin=BAI.lwr, ymax=BAI.upr), alpha=0.5) +#
	geom_line(aes(x=Year, y=BAI.mean), size=1) +#
	# Plot our model#
	geom_ribbon(data=mean.model, aes(x=Year, ymin=BAI.lwr, ymax=BAI.upr), fill="red3", alpha=0.3) +#
	geom_line(data=mean.model, aes(x=Year, y=BAI.mean), color="red3", alpha=0.8, size=1) +#
	labs(title="Gamm Model vs. Data", x="Year", y="BAI")#
dev.off()#
# Sanity Check #2#
# Pulling random trees from both the data.use and the model.pred2 to see how they compare#
#
n <- 10#
data.use2 <- data.use[data.use$Site %in% sites.use,]#
data.use2 <- data.use2[data.use2$group %in% group.use,]#
#
sanity2.trees <- sample(test2$TreeID, size=n, replace=F) #
summary(sanity2.trees)#
#
summary(mean.rw)#
summary(data.use)#
summary(model.pred2)#
#
# Sanity Check #2 graph#
pdf("figures/gam_sanity_check/gam3_sanitycheck2.pdf", width= 13, height = 8.5)#
ggplot(data=test[test$TreeID %in% sanity2.trees,]) + facet_wrap(TreeID~ Site, scales="fixed") + theme_bw() +#
	# plot the data#
	#geom_ribbon(aes(x=Year, ymin=rw.lwr, ymax=rw.upr), alpha=0.5) +#
	geom_line(aes(x=Year, y=BA.inc), size=1) +#
	# Plot our model#
	#geom_ribbon(data=model.pred2[model.pred2$TreeID %in% sanity2.trees,], aes(x=Year, ymin=rw.lwr, ymax=rw.upr), fill="red3", alpha=0.3) +#
	geom_line(data=model.pred2[model.pred2$TreeID %in% sanity2.trees,], aes(x=Year, y=mean), color="red3", alpha=0.8, size=1) +#
	labs(title="Gamm Model vs. Data Indiv. Trees", x="Year", y="RW")#
dev.off()#
# lm2 for sanity check 2#
summary(model.pred2)#
summary(data.use)#
summary(test)#
#
model.pred2$RW <- test$RW#
model.pred2$BAI <- test$BA.inc#
#
# LM for indiv. trees#
sanity.lm2 <- lm(BAI ~ mean, data=model.pred2)#
summary(sanity.lm2)#
#
# sanity.lm2.quru <- lm(RW ~ mean, data=model.pred2[model.pred2$group=="quru",])#
# summary(sanity.lm2)#
# running scripts to get the weights#
source("0_Calculate_GAMM_Weights.R")#
# test2 <- test[test$group %in% c("QURU", "ACRU") & test$Year>=1980,]#
# test2 <- test[test$group %in% c("QURU") & test$Year>=1980,]#
# summary(test2)#
# gam1.test <- gamm(RW ~ s(tmean, k=3, by=group) + # tmean*Species #
#                   s(precip, k=3, by=group) +#
#                   s(dbh.recon, k=3, by=group.plot) +#
#                   Canopy.Class, #
#                   random=list(Site=~1, PlotID=~1),#
#                   data=test2)#
#
predictors.all#
vars <- c("tmean", "precip", "dbh.recon", "Canopy.Class", "group.plot", "group", "group.cc")#
gam3.weights <- factor.weights(model.gam = gam3, model.name = "species_response", newdata = test, extent = "", vars = vars, limiting=T)#
#
summary(gam3.weights)#
summary(test2)#
gam3.weights[,c("BA.inc", "group", "group.cc")] <- test[,c("BA.inc", "group", "group.cc")] # Adding in factors we forgot#
# Just the weights of tmean and Precip, ignoring size#
vars2 <- c("fit.tmean", "fit.precip")#
fit.spline2 <- rowSums(abs(gam3.weights[,vars2]), na.rm=T)#
for(v in vars2){#
	gam3.weights[,paste("weight", v, "2", sep=".")] <- gam3.weights[,v]/fit.spline2#
}#
summary(gam3.weights)#
#
cols.weights <- c("weight.fit.tmean.2", "weight.fit.precip.2")#
for(i in 1:nrow(gam3.weights)){#
	fweight <- abs(gam3.weights[i,cols.weights])#
	gam3.weights[i,"max2"] <- max(fweight, na.rm=T)#
	gam3.weights[i,"factor.max2"] <- c("tmean", "precip")[which(fweight==max(fweight))]#
}#
gam3.weights$factor.max2 <- as.factor(gam3.weights$factor.max2)#
summary(gam3.weights)
n <- 100#
model.pred <- post.distns(model.gam=gam3.1, model.name="species_response", newdata=test, vars=predictors.all, n=n, terms=F)#
summary(model.pred$ci)#
#
# Need help dealing with the list that is set up here.  Need help with the aggregation#
model.pred2 <- model.pred$ci#
summary(model.pred2)#
dim(model.pred2)#
# Aggregating to the group level in teh same way we do below with the ring widths#
# We can then compare our modeled RW to our measured RW and see how things look#
# Sanity Check #1#
#
mean.model <- aggregate(model.pred2$mean, by = model.pred2[, c("group.cc", "Site", "Year")], FUN=mean, na.rm=T)#
names(mean.model)[names(mean.model)=="x"] <- c("BAI.mean") #
mean.model[,"BAI.lwr"] <- aggregate(model.pred2$mean, by=model.pred2[,c("group.cc", "Site", "Year")], FUN=quantile, probs=0.025, na.rm=T)[,"x"]#
mean.model[,"BAI.upr"] <- aggregate(model.pred2$mean, by=model.pred2[,c("group.cc", "Site", "Year")], FUN=quantile, probs=0.975, na.rm=T)[,"x"]#
head(mean.model)#
# aggregating the raw data for graphing#
mean.rw <- aggregate(test$BA.inc, by=test[, c("group.cc", "Site", "Year")], FUN=mean, na.rm=T)#
names(mean.rw)[names(mean.rw)=="x"]<- c("BAI.mean")                  #
# mean.rw[,"rw.lwr"] <- aggregate(test$RW, by=test[,c("group", "Site", "Year")], FUN=quantile, probs=0.025, na.rm=T)[,"x"]#
# mean.rw[,"rw.upr"] <- aggregate(test$RW, by=test[,c("group", "Site", "Year")], FUN=quantile, probs=0.975, na.rm=T)[,"x"]#
# mean.rw[,"BAI.mean"] <- aggregate(test$BA.inc, by=test[,c("group", "Site", "Year")], FUN=mean, na.rm=T)[,"x"]#
mean.rw[,"BAI.lwr"] <- aggregate(test$BA.inc, by=test[,c("group.cc", "Site", "Year")], FUN=quantile, probs=0.025, na.rm=T)[,"x"]#
mean.rw[,"BAI.upr"] <- aggregate(test$BA.inc, by=test[,c("group.cc", "Site", "Year")], FUN=quantile, probs=0.975, na.rm=T)[,"x"]#
head(mean.rw)#
#
mean.rw <- mean.rw[mean.rw$Site %in% sites.use,]#
#
#mean.rw$Species <- mean.rw$group#
#
# Setting up lm between the modeled values and the observed	#
dim(mean.rw)#
dim(mean.model)#
#
# mean.rw <- mean.rw[mean.rw$group %in% mean.model$group,]#
# mean.rw <- mean.rw[mean.rw$Year %in% mean.model$Year,]#
#
summary(mean.rw); #
summary(mean.model)#
#
mean.model2 <- mean.model#
names(mean.model2)[4:6] <- c("mod.mean", "mod.lwr", "mod.up")#
#
sanity.gam1.df <- merge(mean.model2, mean.rw, all.x=T, all.y=T)#
summary(sanity.gam1.df)#
summary(sanity.gam1.df[is.na(sanity.gam1.df$mod.mean),])#
head(sanity.gam1.df[is.na(sanity.gam1.df$mod.mean),])#
#
# LM on aggregated BAI#
sanity.lm1 <- lm(mod.mean ~ BAI.mean, data=sanity.gam1.df)#
summary(sanity.lm1)
################################################### #
# Copied over from 0_process_gamm.R#
# This will give us the sensitivities of RW in a pretty format.#
#
# Set up a dummy dataset for the script to run correctly#
# number of simulations to run#
#
load("processed_data/gam_results/gam3_climate_by_canopyclass_interactions.Rdata")#
source("0_Calculate_GAMM_Posteriors.R")#
# Fitting our model to the data to see if we're doing a pasable job of capturing the variance#
# If things don't match, we shoudl take our sensitiivty curves with a grain of salt#
#
n <- 100#
model.pred <- post.distns(model.gam=gam3.1, model.name="species_response", newdata=test, vars=predictors.all, n=n, terms=F)#
summary(model.pred$ci)#
#
# Need help dealing with the list that is set up here.  Need help with the aggregation#
model.pred2 <- model.pred$ci#
summary(model.pred2)#
dim(model.pred2)#
# Aggregating to the group level in teh same way we do below with the ring widths#
# We can then compare our modeled RW to our measured RW and see how things look#
# Sanity Check #1#
#
mean.model <- aggregate(model.pred2$mean, by = model.pred2[, c("group.cc", "Site", "Year")], FUN=mean, na.rm=T)#
names(mean.model)[names(mean.model)=="x"] <- c("BAI.mean") #
mean.model[,"BAI.lwr"] <- aggregate(model.pred2$mean, by=model.pred2[,c("group.cc", "Site", "Year")], FUN=quantile, probs=0.025, na.rm=T)[,"x"]#
mean.model[,"BAI.upr"] <- aggregate(model.pred2$mean, by=model.pred2[,c("group.cc", "Site", "Year")], FUN=quantile, probs=0.975, na.rm=T)[,"x"]#
head(mean.model)#
# aggregating the raw data for graphing#
mean.rw <- aggregate(test$BA.inc, by=test[, c("group.cc", "Site", "Year")], FUN=mean, na.rm=T)#
names(mean.rw)[names(mean.rw)=="x"]<- c("BAI.mean")                  #
# mean.rw[,"rw.lwr"] <- aggregate(test$RW, by=test[,c("group", "Site", "Year")], FUN=quantile, probs=0.025, na.rm=T)[,"x"]#
# mean.rw[,"rw.upr"] <- aggregate(test$RW, by=test[,c("group", "Site", "Year")], FUN=quantile, probs=0.975, na.rm=T)[,"x"]#
# mean.rw[,"BAI.mean"] <- aggregate(test$BA.inc, by=test[,c("group", "Site", "Year")], FUN=mean, na.rm=T)[,"x"]#
mean.rw[,"BAI.lwr"] <- aggregate(test$BA.inc, by=test[,c("group.cc", "Site", "Year")], FUN=quantile, probs=0.025, na.rm=T)[,"x"]#
mean.rw[,"BAI.upr"] <- aggregate(test$BA.inc, by=test[,c("group.cc", "Site", "Year")], FUN=quantile, probs=0.975, na.rm=T)[,"x"]#
head(mean.rw)#
#
mean.rw <- mean.rw[mean.rw$Site %in% sites.use,]#
#
#mean.rw$Species <- mean.rw$group#
#
# Setting up lm between the modeled values and the observed	#
dim(mean.rw)#
dim(mean.model)#
#
# mean.rw <- mean.rw[mean.rw$group %in% mean.model$group,]#
# mean.rw <- mean.rw[mean.rw$Year %in% mean.model$Year,]#
#
summary(mean.rw); #
summary(mean.model)#
#
mean.model2 <- mean.model#
names(mean.model2)[4:6] <- c("mod.mean", "mod.lwr", "mod.up")#
#
sanity.gam1.df <- merge(mean.model2, mean.rw, all.x=T, all.y=T)#
summary(sanity.gam1.df)#
summary(sanity.gam1.df[is.na(sanity.gam1.df$mod.mean),])#
head(sanity.gam1.df[is.na(sanity.gam1.df$mod.mean),])#
#
# LM on aggregated BAI#
sanity.lm1 <- lm(mod.mean ~ BAI.mean, data=sanity.gam1.df)#
summary(sanity.lm1)
source("0_Calculate_GAMM_Posteriors.R")#
# Fitting our model to the data to see if we're doing a pasable job of capturing the variance#
# If things don't match, we shoudl take our sensitiivty curves with a grain of salt#
#
n <- 100#
model.pred <- post.distns(model.gam=gam3.1.1, model.name="species_response", newdata=test, vars=predictors.all, n=n, terms=F)#
summary(model.pred$ci)#
#
# Need help dealing with the list that is set up here.  Need help with the aggregation#
model.pred2 <- model.pred$ci#
summary(model.pred2)#
dim(model.pred2)#
# Aggregating to the group level in teh same way we do below with the ring widths#
# We can then compare our modeled RW to our measured RW and see how things look#
# Sanity Check #1#
#
mean.model <- aggregate(model.pred2$mean, by = model.pred2[, c("group.cc", "Site", "Year")], FUN=mean, na.rm=T)#
names(mean.model)[names(mean.model)=="x"] <- c("BAI.mean") #
mean.model[,"BAI.lwr"] <- aggregate(model.pred2$mean, by=model.pred2[,c("group.cc", "Site", "Year")], FUN=quantile, probs=0.025, na.rm=T)[,"x"]#
mean.model[,"BAI.upr"] <- aggregate(model.pred2$mean, by=model.pred2[,c("group.cc", "Site", "Year")], FUN=quantile, probs=0.975, na.rm=T)[,"x"]#
head(mean.model)#
# aggregating the raw data for graphing#
mean.rw <- aggregate(test$BA.inc, by=test[, c("group.cc", "Site", "Year")], FUN=mean, na.rm=T)#
names(mean.rw)[names(mean.rw)=="x"]<- c("BAI.mean")                  #
# mean.rw[,"rw.lwr"] <- aggregate(test$RW, by=test[,c("group", "Site", "Year")], FUN=quantile, probs=0.025, na.rm=T)[,"x"]#
# mean.rw[,"rw.upr"] <- aggregate(test$RW, by=test[,c("group", "Site", "Year")], FUN=quantile, probs=0.975, na.rm=T)[,"x"]#
# mean.rw[,"BAI.mean"] <- aggregate(test$BA.inc, by=test[,c("group", "Site", "Year")], FUN=mean, na.rm=T)[,"x"]#
mean.rw[,"BAI.lwr"] <- aggregate(test$BA.inc, by=test[,c("group.cc", "Site", "Year")], FUN=quantile, probs=0.025, na.rm=T)[,"x"]#
mean.rw[,"BAI.upr"] <- aggregate(test$BA.inc, by=test[,c("group.cc", "Site", "Year")], FUN=quantile, probs=0.975, na.rm=T)[,"x"]#
head(mean.rw)#
#
mean.rw <- mean.rw[mean.rw$Site %in% sites.use,]#
#
#mean.rw$Species <- mean.rw$group#
#
# Setting up lm between the modeled values and the observed	#
dim(mean.rw)#
dim(mean.model)#
#
# mean.rw <- mean.rw[mean.rw$group %in% mean.model$group,]#
# mean.rw <- mean.rw[mean.rw$Year %in% mean.model$Year,]#
#
summary(mean.rw); #
summary(mean.model)#
#
mean.model2 <- mean.model#
names(mean.model2)[4:6] <- c("mod.mean", "mod.lwr", "mod.up")#
#
sanity.gam1.df <- merge(mean.model2, mean.rw, all.x=T, all.y=T)#
summary(sanity.gam1.df)#
summary(sanity.gam1.df[is.na(sanity.gam1.df$mod.mean),])#
head(sanity.gam1.df[is.na(sanity.gam1.df$mod.mean),])#
#
# LM on aggregated BAI#
sanity.lm1 <- lm(mod.mean ~ BAI.mean, data=sanity.gam1.df)#
summary(sanity.lm1)
ggplot(data=mean.rw) + facet_wrap(group.cc ~ Site, scales="fixed") + theme_bw() +#
	# plot the data#
	geom_ribbon(aes(x=Year, ymin=BAI.lwr, ymax=BAI.upr), alpha=0.5) +#
	geom_line(aes(x=Year, y=BAI.mean), size=1) +#
	# Plot our model#
	geom_ribbon(data=mean.model, aes(x=Year, ymin=BAI.lwr, ymax=BAI.upr), fill="red3", alpha=0.3) +#
	geom_line(data=mean.model, aes(x=Year, y=BAI.mean), color="red3", alpha=0.8, size=1) +#
	labs(title="Gamm Model vs. Data", x="Year", y="BAI")
n <- 10#
data.use2 <- data.use[data.use$Site %in% sites.use,]#
data.use2 <- data.use2[data.use2$group %in% group.use,]#
#
sanity2.trees <- sample(test2$TreeID, size=n, replace=F) #
summary(sanity2.trees)#
#
summary(mean.rw)#
summary(data.use)#
summary(model.pred2)
ggplot(data=test[test$TreeID %in% sanity2.trees,]) + facet_wrap(TreeID~ Site, scales="fixed") + theme_bw() +#
	# plot the data#
	#geom_ribbon(aes(x=Year, ymin=rw.lwr, ymax=rw.upr), alpha=0.5) +#
	geom_line(aes(x=Year, y=BA.inc), size=1) +#
	# Plot our model#
	#geom_ribbon(data=model.pred2[model.pred2$TreeID %in% sanity2.trees,], aes(x=Year, ymin=rw.lwr, ymax=rw.upr), fill="red3", alpha=0.3) +#
	geom_line(data=model.pred2[model.pred2$TreeID %in% sanity2.trees,], aes(x=Year, y=mean), color="red3", alpha=0.8, size=1) +#
	labs(title="Gamm Model vs. Data Indiv. Trees", x="Year", y="RW")
# lm2 for sanity check 2#
summary(model.pred2)#
summary(data.use)#
summary(test)#
#
model.pred2$RW <- test$RW#
model.pred2$BAI <- test$BA.inc#
#
# LM for indiv. trees#
sanity.lm2 <- lm(BAI ~ mean, data=model.pred2)#
summary(sanity.lm2)#
#
# sanity.lm2.quru <- lm(RW ~ mean, data=model.pred2[model.pred2$group=="quru",])#
# summary(sanity.lm2)#
# running scripts to get the weights#
source("0_Calculate_GAMM_Weights.R")#
# test2 <- test[test$group %in% c("QURU", "ACRU") & test$Year>=1980,]#
# test2 <- test[test$group %in% c("QURU") & test$Year>=1980,]#
# summary(test2)#
# gam1.test <- gamm(RW ~ s(tmean, k=3, by=group) + # tmean*Species #
#                   s(precip, k=3, by=group) +#
#                   s(dbh.recon, k=3, by=group.plot) +#
#                   Canopy.Class, #
#                   random=list(Site=~1, PlotID=~1),#
#                   data=test2)#
#
predictors.all#
vars <- c("tmean", "precip", "dbh.recon", "Canopy.Class", "group.plot", "group", "group.cc")#
gam3.1.1.weights <- factor.weights(model.gam = gam3.1.1, model.name = "species_response", newdata = test, extent = "", vars = vars, limiting=T)#
#
summary(gam3.1.1.weights)#
summary(test2)#
gam3.1.1.weights[,c("BA.inc", "group", "group.cc")] <- test[,c("BA.inc", "group", "group.cc")] # Adding in factors we forgot#
# Just the weights of tmean and Precip, ignoring size#
vars2 <- c("fit.tmean", "fit.precip")#
fit.spline2 <- rowSums(abs(gam3.1.1.weights[,vars2]), na.rm=T)#
for(v in vars2){#
	gam3.1.1.weights[,paste("weight", v, "2", sep=".")] <- gam3.1.1.weights[,v]/fit.spline2#
}#
summary(gam3.1.1.weights)#
#
cols.weights <- c("weight.fit.tmean.2", "weight.fit.precip.2")#
for(i in 1:nrow(gam3.1.weights)){#
	fweight <- abs(gam3.1.weights[i,cols.weights])#
	gam3.1.weights[i,"max2"] <- max(fweight, na.rm=T)#
	gam3.1.weights[i,"factor.max2"] <- c("tmean", "precip")[which(fweight==max(fweight))]#
}#
gam3.1.weights$factor.max2 <- as.factor(gam3.1.weights$factor.max2)#
summary(gam3.1.weights)#
#
save(gam3.1.weights, file="processed_data/gamm_weights/gam3.1_weights.Rdata")
predictors.all#
vars <- c("tmean", "precip", "dbh.recon", "Canopy.Class", "group.plot", "group", "group.cc")#
gam3.1.weights <- factor.weights(model.gam = gam3.1, model.name = "species_response", newdata = test, extent = "", vars = vars, limiting=T)#
#
summary(gam3.1.weights)#
summary(test2)#
gam3.1.weights[,c("BA.inc", "group", "group.cc")] <- test[,c("BA.inc", "group", "group.cc")] # Adding in factors we forgot#
# Just the weights of tmean and Precip, ignoring size#
vars2 <- c("fit.tmean", "fit.precip")#
fit.spline2 <- rowSums(abs(gam3.1.weights[,vars2]), na.rm=T)#
for(v in vars2){#
	gam3.1.weights[,paste("weight", v, "2", sep=".")] <- gam3.1.weights[,v]/fit.spline2#
}#
summary(gam3.1.weights)#
#
cols.weights <- c("weight.fit.tmean.2", "weight.fit.precip.2")#
for(i in 1:nrow(gam3.1.weights)){#
	fweight <- abs(gam3.1.weights[i,cols.weights])#
	gam3.1.weights[i,"max2"] <- max(fweight, na.rm=T)#
	gam3.1.weights[i,"factor.max2"] <- c("tmean", "precip")[which(fweight==max(fweight))]#
}#
gam3.1.weights$factor.max2 <- as.factor(gam3.1.weights$factor.max2)#
summary(gam3.1.weights)#
#
save(gam3.1.weights, file="processed_data/gamm_weights/gam3.1_weights.Rdata")
save(gam3.1, file = "processed_data/gam_results/gam3.1_NeilTest.Rdata")
load(file="processed_data/gamm_weights/gam3.1_weights.Rdata")
summary(gam3.1.weights)#
factors.fits <- c("fit.tmean", "fit.precip", "fit.dbh.recon", "fit.full", "BA.inc")#
factors.weights <- c("weight.tmean", "weight.dbh.recon", "weight.precip")
othervars <- c("Year", "Site", "group.cc", "Model")#
#
data.graph1 <- aggregate(gam3.1.weights[,factors.fits], by = gam3.1.weights[,othervars], FUN= mean, na.rm=T)
data.graph1[,paste(factors.fits, "upr", sep=".")] <- aggregate(gam3.1.weights[,factors.fits], by = gam3.1.weights[,othervars], FUN= quantile, prob= 0.975, na.rm=T)[,factors.fits]#
#
data.graph1[,paste(factors.fits, "lwr", sep=".")] <- aggregate(gam3.1.weights[,factors.fits], by = gam3.1.weights[,othervars], FUN= quantile, prob= 0.025, na.rm=T)[,factors.fits]#
#
summary(data.graph1)#
#
data.graph2 <- aggregate(abs(gam3.1.weights[,factors.weights]), by = gam3.1.weights[,othervars], FUN= mean, na.rm=T)#
#
data.graph2[,paste(factors.weights, "upr", sep=".")] <- aggregate(abs(gam3.1.weights[,factors.weights]), by = gam3.1.weights[,othervars], FUN= quantile, prob= 0.975, na.rm=T)[,factors.weights]#
#
data.graph2[,paste(factors.weights, "lwr", sep=".")] <- aggregate(abs(gam3.1.weights[,factors.weights]), by = gam3.1.weights[,othervars], FUN= quantile, prob= 0.025, na.rm=T)[,factors.weights]#
#
summary(data.graph2)#
#
data.graph <- merge(data.graph1, data.graph2, all.x=T, all.y=T)#
#
# data.graph <- gam3.1.weights[gam3.1.weights$TreeID== "MMA014",]#
summary(data.graph)#
gam3.1.weights$wts.check <- rowSums(abs(gam3.1.weights[,c("weight.tmean", "weight.precip", "weight.dbh.recon")]))#
data.graph$wts.check <- rowSums(abs(data.graph[,c("weight.tmean", "weight.precip", "weight.dbh.recon")]))#
#
summary(gam3.1.weights)#
summary(data.graph)#
#
# Ordering the data for graphing#
#
data.graph<- data.graph[order(data.graph$Year, data.graph$group.cc, data.graph$Site, decreasing=F),]#
plot.rgb <- function(STATE, GC, SIZE){	geom_line(data=data.graph[data.graph$State==STATE & data.graph$group.cc==GC,],aes(x=Year, y=fit.full), size=SIZE,#
  		        color=rgb(abs(data.graph[data.graph$State==STATE & data.graph$group.cc==GC,"weight.tmean"     ]), # red#
                        abs(data.graph[data.graph$State==STATE & data.graph$group.cc==GC,"weight.dbh.recon"     ]), # green#
                        abs(data.graph[data.graph$State==STATE & data.graph$group.cc==GC,"weight.precip"   ]))) }   # blue#
# Plotting the Obs and modeled with influence coloring#
data.graph$State <- recode(data.graph$Site, "'Howland' = 'ME';'Harvard' = 'MA';'Morgan Monroe State Park' = 'IN';'Missouri Ozark' = 'MO';'Oak Openings Toledo' = 'OH'")#
data.graph$State <- factor(data.graph$State, levels=c("MO", "IN", "OH", "MA", "ME"))#
#
for(i in unique(data.graph$group.cc)){#
	data.graph[data.graph$group.cc==i,"Canopy.Class"] <- str_sub(data.graph[data.graph$group.cc==i,"group.cc"], -1)#
	data.graph[data.graph$group.cc==i,"group"] <- substr(data.graph[data.graph$group.cc==i,"group.cc"], 1,4)#
}#
data.graph$Canopy.Class <- as.factor(data.graph$Canopy.Class)#
data.graph$group <- as.factor(data.graph$group)#
summary(data.graph)
ggplot(data = data.graph) + facet_grid(group.cc ~ State) +#
	scale_x_continuous(expand=c(0,0), name="Year") +#
	scale_y_continuous(expand=c(0,0), name="BAI") +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_line(aes(x=Year, y=BA.inc), size=2, alpha=0.5) +#
	geom_ribbon(aes(x=Year, ymin=BA.inc.lwr, ymax=BA.inc.upr), alpha=0.3) +#
	geom_line(aes(x=Year, y = 0), linetype="dashed") +#
	# Harvard#
	plot.rgb("MA", "ACRU.C", 3) +#
	plot.rgb("MA", "ACRU.D", 3) +#
	plot.rgb("MA", "ACRU.I", 3) +#
	plot.rgb("MA", "ACRU.S", 3) +#
	plot.rgb("MA", "PIST.C", 3) +#
	plot.rgb("MA", "PIST.D", 3) +#
	plot.rgb("MA", "PIST.I", 3) +#
	plot.rgb("MA", "PIST.S", 3) +#
#
	plot.rgb("MA", "TSCA.C", 3) +#
	plot.rgb("MA", "TSCA.D", 3) +#
	plot.rgb("MA", "TSCA.I", 3) +#
	plot.rgb("MA", "TSCA.S", 3) +#
	plot.rgb("MA", "QURU.C", 3) +#
	plot.rgb("MA", "QURU.D", 3) +#
	plot.rgb("MA", "QURU.I", 3) +#
	plot.rgb("MA", "QURU.S", 3) +#
	plot.rgb("MA", "QUVE.C", 3) +#
	plot.rgb("MA", "QUVE.D", 3) +#
	plot.rgb("MA", "QUVE.I", 3) +#
	plot.rgb("MA", "QUVE.S", 3) +#
	plot.rgb("MA", "FRAX.C", 3) +#
	plot.rgb("MA", "FRAX.D", 3) +#
	plot.rgb("MA", "FRAX.I", 3) +#
	plot.rgb("MA", "FRAX.S", 3) +#
#
	plot.rgb("MA", "BETULA.C", 3) +#
	plot.rgb("MA", "BETULA.D", 3) +#
	plot.rgb("MA", "BETULA.I", 3) +#
	plot.rgb("MA", "BETULA.S", 3) +#
	plot.rgb("MA", "ACSA.C", 3) +#
	plot.rgb("MA", "ACSA.D", 3) +#
	plot.rgb("MA", "ACSA.I", 3) +#
	plot.rgb("MA", "ACSA.S", 3) +#
	plot.rgb("MA", "QUAL.C", 3) +#
	plot.rgb("MA", "QUAL.D", 3) +#
	plot.rgb("MA", "QUAL.I", 3) +#
	plot.rgb("MA", "QUAL.S", 3) +#
	plot.rgb("MA", "FAGR.C", 3) +#
	plot.rgb("MA", "FAGR.D", 3) +#
	plot.rgb("MA", "FAGR.I", 3) +#
	plot.rgb("MA", "FAGR.S", 3) +#
	plot.rgb("MA", "ULRU.C", 3) +#
	plot.rgb("MA", "ULRU.D", 3) +#
	plot.rgb("MA", "ULRU.I", 3) +#
	plot.rgb("MA", "ULRU.S", 3) +#
	plot.rgb("MA", "CARYA.C", 3) +#
	plot.rgb("MA", "CARYA.D", 3) +#
	plot.rgb("MA", "CARYA.I", 3) +#
	plot.rgb("MA", "CARYA.S", 3) +#
#
	plot.rgb("MA", "SAAL.C", 3) +#
	plot.rgb("MA", "SAAL.D", 3) +#
	plot.rgb("MA", "SAAL.I", 3) +#
	plot.rgb("MA", "SAAL.S", 3) +#
#
	# Howland#
		plot.rgb("ME", "ACRU.C", 3) +#
	plot.rgb("ME", "ACRU.D", 3) +#
	plot.rgb("ME", "ACRU.I", 3) +#
	plot.rgb("ME", "ACRU.S", 3) +#
	plot.rgb("ME", "PIST.C", 3) +#
	plot.rgb("ME", "PIST.D", 3) +#
	plot.rgb("ME", "PIST.I", 3) +#
	plot.rgb("ME", "PIST.S", 3) +#
#
	plot.rgb("ME", "TSCA.C", 3) +#
	plot.rgb("ME", "TSCA.D", 3) +#
	plot.rgb("ME", "TSCA.I", 3) +#
	plot.rgb("ME", "TSCA.S", 3) +#
	plot.rgb("ME", "QURU.C", 3) +#
	plot.rgb("ME", "QURU.D", 3) +#
	plot.rgb("ME", "QURU.I", 3) +#
	plot.rgb("ME", "QURU.S", 3) +#
	plot.rgb("ME", "QUVE.C", 3) +#
	plot.rgb("ME", "QUVE.D", 3) +#
	plot.rgb("ME", "QUVE.I", 3) +#
	plot.rgb("ME", "QUVE.S", 3) +#
	plot.rgb("ME", "FRAX.C", 3) +#
	plot.rgb("ME", "FRAX.D", 3) +#
	plot.rgb("ME", "FRAX.I", 3) +#
	plot.rgb("ME", "FRAX.S", 3) +#
#
	plot.rgb("ME", "BETULA.C", 3) +#
	plot.rgb("ME", "BETULA.D", 3) +#
	plot.rgb("ME", "BETULA.I", 3) +#
	plot.rgb("ME", "BETULA.S", 3) +#
	plot.rgb("ME", "ACSA.C", 3) +#
	plot.rgb("ME", "ACSA.D", 3) +#
	plot.rgb("ME", "ACSA.I", 3) +#
	plot.rgb("ME", "ACSA.S", 3) +#
	plot.rgb("ME", "QUAL.C", 3) +#
	plot.rgb("ME", "QUAL.D", 3) +#
	plot.rgb("ME", "QUAL.I", 3) +#
	plot.rgb("ME", "QUAL.S", 3) +#
	plot.rgb("ME", "FAGR.C", 3) +#
	plot.rgb("ME", "FAGR.D", 3) +#
	plot.rgb("ME", "FAGR.I", 3) +#
	plot.rgb("ME", "FAGR.S", 3) +#
	plot.rgb("ME", "ULRU.C", 3) +#
	plot.rgb("ME", "ULRU.D", 3) +#
	plot.rgb("ME", "ULRU.I", 3) +#
	plot.rgb("ME", "ULRU.S", 3) +#
	plot.rgb("ME", "CARYA.C", 3) +#
	plot.rgb("ME", "CARYA.D", 3) +#
	plot.rgb("ME", "CARYA.I", 3) +#
	plot.rgb("ME", "CARYA.S", 3) +#
#
	plot.rgb("ME", "SAAL.C", 3) +#
	plot.rgb("ME", "SAAL.D", 3) +#
	plot.rgb("ME", "SAAL.I", 3) +#
	plot.rgb("ME", "SAAL.S", 3) +#
	# Morgan Monroe#
	plot.rgb("IN", "ACRU.C", 3) +#
	plot.rgb("IN", "ACRU.D", 3) +#
	plot.rgb("IN", "ACRU.I", 3) +#
	plot.rgb("IN", "ACRU.S", 3) +#
	plot.rgb("IN", "PIST.C", 3) +#
	plot.rgb("IN", "PIST.D", 3) +#
	plot.rgb("IN", "PIST.I", 3) +#
	plot.rgb("IN", "PIST.S", 3) +#
#
	plot.rgb("IN", "TSCA.C", 3) +#
	plot.rgb("IN", "TSCA.D", 3) +#
	plot.rgb("IN", "TSCA.I", 3) +#
	plot.rgb("IN", "TSCA.S", 3) +#
	plot.rgb("IN", "QURU.C", 3) +#
	plot.rgb("IN", "QURU.D", 3) +#
	plot.rgb("IN", "QURU.I", 3) +#
	plot.rgb("IN", "QURU.S", 3) +#
	plot.rgb("IN", "QUVE.C", 3) +#
	plot.rgb("IN", "QUVE.D", 3) +#
	plot.rgb("IN", "QUVE.I", 3) +#
	plot.rgb("IN", "QUVE.S", 3) +#
	plot.rgb("IN", "FRAX.C", 3) +#
	plot.rgb("IN", "FRAX.D", 3) +#
	plot.rgb("IN", "FRAX.I", 3) +#
	plot.rgb("IN", "FRAX.S", 3) +#
#
	plot.rgb("IN", "BETULA.C", 3) +#
	plot.rgb("IN", "BETULA.D", 3) +#
	plot.rgb("IN", "BETULA.I", 3) +#
	plot.rgb("IN", "BETULA.S", 3) +#
	plot.rgb("IN", "ACSA.C", 3) +#
	plot.rgb("IN", "ACSA.D", 3) +#
	plot.rgb("IN", "ACSA.I", 3) +#
	plot.rgb("IN", "ACSA.S", 3) +#
	plot.rgb("IN", "QUAL.C", 3) +#
	plot.rgb("IN", "QUAL.D", 3) +#
	plot.rgb("IN", "QUAL.I", 3) +#
	plot.rgb("IN", "QUAL.S", 3) +#
	plot.rgb("IN", "FAGR.C", 3) +#
	plot.rgb("IN", "FAGR.D", 3) +#
	plot.rgb("IN", "FAGR.I", 3) +#
	plot.rgb("IN", "FAGR.S", 3) +#
	plot.rgb("IN", "ULRU.C", 3) +#
	plot.rgb("IN", "ULRU.D", 3) +#
	plot.rgb("IN", "ULRU.I", 3) +#
	plot.rgb("IN", "ULRU.S", 3) +#
	plot.rgb("IN", "CARYA.C", 3) +#
	plot.rgb("IN", "CARYA.D", 3) +#
	plot.rgb("IN", "CARYA.I", 3) +#
	plot.rgb("IN", "CARYA.S", 3) +#
#
	plot.rgb("IN", "SAAL.C", 3) +#
	plot.rgb("IN", "SAAL.D", 3) +#
	plot.rgb("IN", "SAAL.I", 3) +#
	plot.rgb("IN", "SAAL.S", 3) +#
	# Missouri Ozark#
		plot.rgb("MO", "ACRU.C", 3) +#
	plot.rgb("MO", "ACRU.D", 3) +#
	plot.rgb("MO", "ACRU.I", 3) +#
	plot.rgb("MO", "ACRU.S", 3) +#
	plot.rgb("MO", "PIST.C", 3) +#
	plot.rgb("MO", "PIST.D", 3) +#
	plot.rgb("MO", "PIST.I", 3) +#
	plot.rgb("MO", "PIST.S", 3) +#
#
	plot.rgb("MO", "TSCA.C", 3) +#
	plot.rgb("MO", "TSCA.D", 3) +#
	plot.rgb("MO", "TSCA.I", 3) +#
	plot.rgb("MO", "TSCA.S", 3) +#
	plot.rgb("MO", "QURU.C", 3) +#
	plot.rgb("MO", "QURU.D", 3) +#
	plot.rgb("MO", "QURU.I", 3) +#
	plot.rgb("MO", "QURU.S", 3) +#
	plot.rgb("MO", "QUVE.C", 3) +#
	plot.rgb("MO", "QUVE.D", 3) +#
	plot.rgb("MO", "QUVE.I", 3) +#
	plot.rgb("MO", "QUVE.S", 3) +#
	plot.rgb("MO", "FRAX.C", 3) +#
	plot.rgb("MO", "FRAX.D", 3) +#
	plot.rgb("MO", "FRAX.I", 3) +#
	plot.rgb("MO", "FRAX.S", 3) +#
#
	plot.rgb("MO", "BETULA.C", 3) +#
	plot.rgb("MO", "BETULA.D", 3) +#
	plot.rgb("MO", "BETULA.I", 3) +#
	plot.rgb("MO", "BETULA.S", 3) +#
	plot.rgb("MO", "ACSA.C", 3) +#
	plot.rgb("MO", "ACSA.D", 3) +#
	plot.rgb("MO", "ACSA.I", 3) +#
	plot.rgb("MO", "ACSA.S", 3) +#
	plot.rgb("MO", "QUAL.C", 3) +#
	plot.rgb("MO", "QUAL.D", 3) +#
	plot.rgb("MO", "QUAL.I", 3) +#
	plot.rgb("MO", "QUAL.S", 3) +#
	plot.rgb("MO", "FAGR.C", 3) +#
	plot.rgb("MO", "FAGR.D", 3) +#
	plot.rgb("MO", "FAGR.I", 3) +#
	plot.rgb("MO", "FAGR.S", 3) +#
	plot.rgb("MO", "ULRU.C", 3) +#
	plot.rgb("MO", "ULRU.D", 3) +#
	plot.rgb("MO", "ULRU.I", 3) +#
	plot.rgb("MO", "ULRU.S", 3) +#
	plot.rgb("MO", "CARYA.C", 3) +#
	plot.rgb("MO", "CARYA.D", 3) +#
	plot.rgb("MO", "CARYA.I", 3) +#
	plot.rgb("MO", "CARYA.S", 3) +#
#
	plot.rgb("MO", "SAAL.C", 3) +#
	plot.rgb("MO", "SAAL.D", 3) +#
	plot.rgb("MO", "SAAL.I", 3) +#
	plot.rgb("MO", "SAAL.S", 3) +#
	# Oak Openings#
			plot.rgb("OH", "ACRU.C", 3) +#
	plot.rgb("OH", "ACRU.D", 3) +#
	plot.rgb("OH", "ACRU.I", 3) +#
	plot.rgb("OH", "ACRU.S", 3) +#
	plot.rgb("OH", "PIST.C", 3) +#
	plot.rgb("OH", "PIST.D", 3) +#
	plot.rgb("OH", "PIST.I", 3) +#
	plot.rgb("OH", "PIST.S", 3) +#
#
	plot.rgb("OH", "TSCA.C", 3) +#
	plot.rgb("OH", "TSCA.D", 3) +#
	plot.rgb("OH", "TSCA.I", 3) +#
	plot.rgb("OH", "TSCA.S", 3) +#
	plot.rgb("OH", "QURU.C", 3) +#
	plot.rgb("OH", "QURU.D", 3) +#
	plot.rgb("OH", "QURU.I", 3) +#
	plot.rgb("OH", "QURU.S", 3) +#
	plot.rgb("OH", "QUVE.C", 3) +#
	plot.rgb("OH", "QUVE.D", 3) +#
	plot.rgb("OH", "QUVE.I", 3) +#
	plot.rgb("OH", "QUVE.S", 3) +#
	plot.rgb("OH", "FRAX.C", 3) +#
	plot.rgb("OH", "FRAX.D", 3) +#
	plot.rgb("OH", "FRAX.I", 3) +#
	plot.rgb("OH", "FRAX.S", 3) +#
#
	plot.rgb("OH", "BETULA.C", 3) +#
	plot.rgb("OH", "BETULA.D", 3) +#
	plot.rgb("OH", "BETULA.I", 3) +#
	plot.rgb("OH", "BETULA.S", 3) +#
	plot.rgb("OH", "ACSA.C", 3) +#
	plot.rgb("OH", "ACSA.D", 3) +#
	plot.rgb("OH", "ACSA.I", 3) +#
	plot.rgb("OH", "ACSA.S", 3) +#
	plot.rgb("OH", "QUAL.C", 3) +#
	plot.rgb("OH", "QUAL.D", 3) +#
	plot.rgb("OH", "QUAL.I", 3) +#
	plot.rgb("OH", "QUAL.S", 3) +#
	plot.rgb("OH", "FAGR.C", 3) +#
	plot.rgb("OH", "FAGR.D", 3) +#
	plot.rgb("OH", "FAGR.I", 3) +#
	plot.rgb("OH", "FAGR.S", 3) +#
	plot.rgb("OH", "ULRU.C", 3) +#
	plot.rgb("OH", "ULRU.D", 3) +#
	plot.rgb("OH", "ULRU.I", 3) +#
	plot.rgb("OH", "ULRU.S", 3) +#
	plot.rgb("OH", "CARYA.C", 3) +#
	plot.rgb("OH", "CARYA.D", 3) +#
	plot.rgb("OH", "CARYA.I", 3) +#
	plot.rgb("OH", "CARYA.S", 3) +#
#
	plot.rgb("OH", "SAAL.C", 3) +#
	plot.rgb("OH", "SAAL.D", 3) +#
	plot.rgb("OH", "SAAL.I", 3) +#
	plot.rgb("OH", "SAAL.S", 3)
ggplot(data = data.graph[data.graph$Canopy.Class=="D",]) + facet_grid(group ~ State) +#
	scale_x_continuous(expand=c(0,0), name="Year") +#
	scale_y_continuous(expand=c(0,0), name="BAI") +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_line(aes(x=Year, y=BA.inc), size=2, alpha=0.5) +#
	geom_ribbon(aes(x=Year, ymin=BA.inc.lwr, ymax=BA.inc.upr), alpha=0.3) +#
	geom_line(aes(x=Year, y = 0), linetype="dashed") +#
	# Harvard#
	plot.rgb("MA", "ACRU.D", 3) +#
	plot.rgb("MA", "PIST.D", 3) +#
	plot.rgb("MA", "TSCA.D", 3) +#
	plot.rgb("MA", "QURU.D", 3) +#
	plot.rgb("MA", "QUVE.D", 3) +#
	plot.rgb("MA", "FRAX.D", 3) +#
	plot.rgb("MA", "BETULA.D", 3) +#
	plot.rgb("MA", "ACSA.D", 3) +#
	plot.rgb("MA", "QUAL.D", 3) +#
	plot.rgb("MA", "FAGR.D", 3) +#
	plot.rgb("MA", "ULRU.D", 3) +#
	plot.rgb("MA", "CARYA.D", 3) +#
	plot.rgb("MA", "SAAL.D", 3) +#
	# Howland#
	plot.rgb("ME", "ACRU.D", 3) +#
	plot.rgb("ME", "PIST.D", 3) +#
	plot.rgb("ME", "TSCA.D", 3) +#
	plot.rgb("ME", "QURU.D", 3) +#
	plot.rgb("ME", "QUVE.D", 3) +#
	plot.rgb("ME", "FRAX.D", 3) +#
	plot.rgb("ME", "BETULA.D", 3) +#
	plot.rgb("ME", "ACSA.D", 3) +#
	plot.rgb("ME", "QUAL.D", 3) +#
	plot.rgb("ME", "FAGR.D", 3) +#
	plot.rgb("ME", "ULRU.D", 3) +#
	plot.rgb("ME", "CARYA.D", 3) +#
	plot.rgb("ME", "SAAL.D", 3) +#
	# Morgan Monroe#
	plot.rgb("IN", "ACRU.D", 3) +#
	plot.rgb("IN", "PIST.D", 3) +#
	plot.rgb("IN", "TSCA.D", 3) +#
	plot.rgb("IN", "QURU.D", 3) +#
	plot.rgb("IN", "QUVE.D", 3) +#
	plot.rgb("IN", "FRAX.D", 3) +#
	plot.rgb("IN", "BETULA.D", 3) +#
	plot.rgb("IN", "ACSA.D", 3) +#
	plot.rgb("IN", "QUAL.D", 3) +#
	plot.rgb("IN", "FAGR.D", 3) +#
	plot.rgb("IN", "ULRU.D", 3) +#
	plot.rgb("IN", "CARYA.D", 3) +#
	plot.rgb("IN", "SAAL.D", 3) +#
	# Missouri Ozark#
	plot.rgb("MO", "ACRU.D", 3) +#
	plot.rgb("MO", "PIST.D", 3) +#
	plot.rgb("MO", "TSCA.D", 3) +#
	plot.rgb("MO", "QURU.D", 3) +#
	plot.rgb("MO", "QUVE.D", 3) +#
	plot.rgb("MO", "FRAX.D", 3) +#
	plot.rgb("MO", "BETULA.D", 3) +#
	plot.rgb("MO", "ACSA.D", 3) +#
	plot.rgb("MO", "QUAL.D", 3) +#
	plot.rgb("MO", "FAGR.D", 3) +#
	plot.rgb("MO", "ULRU.D", 3) +#
	plot.rgb("MO", "CARYA.D", 3) +#
	plot.rgb("MO", "SAAL.D", 3) +#
	# Oak Openings#
	plot.rgb("OH", "ACRU.D", 3) +#
	plot.rgb("OH", "PIST.D", 3) +#
	plot.rgb("OH", "TSCA.D", 3) +#
	plot.rgb("OH", "QURU.D", 3) +#
	plot.rgb("OH", "QUVE.D", 3) +#
	plot.rgb("OH", "FRAX.D", 3) +#
	plot.rgb("OH", "BETULA.D", 3) +#
	plot.rgb("OH", "ACSA.D", 3) +#
	plot.rgb("OH", "QUAL.D", 3) +#
	plot.rgb("OH", "FAGR.D", 3) +#
	plot.rgb("OH", "ULRU.D", 3) +#
	plot.rgb("OH", "CARYA.D", 3) +#
	plot.rgb("OH", "SAAL.D", 3) +#
	labs(title= "Dominant Trees (group.cc)", x="Year", y=expression(bold(paste("BAI (mm2 / year)"))))
################################################### #
# Copied over from 0_process_gamm.R#
# This will give us the sensitivities of RW in a pretty format.#
#
# Set up a dummy dataset for the script to run correctly#
# number of simulations to run#
#
load("processed_data/gam_results/gam3.1_NeilTest.Rdata")#
source("0_Calculate_GAMM_Posteriors.R")#
# Fitting our model to the data to see if we're doing a pasable job of capturing the variance#
# If things don't match, we shoudl take our sensitiivty curves with a grain of salt#
#
n <- 100#
model.pred <- post.distns(model.gam=gam3.1, model.name="species_response", newdata=test2, vars=predictors.all, n=n, terms=F)#
summary(model.pred$ci)#
#
# Need help dealing with the list that is set up here.  Need help with the aggregation#
model.pred2 <- model.pred$ci#
summary(model.pred2)#
dim(model.pred2)#
# Aggregating to the group level in teh same way we do below with the ring widths#
# We can then compare our modeled RW to our measured RW and see how things look#
# Sanity Check #1#
#
mean.model <- aggregate(model.pred2$mean, by = model.pred2[, c("group.cc", "Site", "Year")], FUN=mean, na.rm=T)#
names(mean.model)[names(mean.model)=="x"] <- c("BAI.mean") #
mean.model[,"BAI.lwr"] <- aggregate(model.pred2$mean, by=model.pred2[,c("group.cc", "Site", "Year")], FUN=quantile, probs=0.025, na.rm=T)[,"x"]#
mean.model[,"BAI.upr"] <- aggregate(model.pred2$mean, by=model.pred2[,c("group.cc", "Site", "Year")], FUN=quantile, probs=0.975, na.rm=T)[,"x"]#
head(mean.model)#
# aggregating the raw data for graphing#
mean.rw <- aggregate(test2$BA.inc, by=test2[, c("group.cc", "Site", "Year")], FUN=mean, na.rm=T)#
names(mean.rw)[names(mean.rw)=="x"]<- c("BAI.mean")                  #
# mean.rw[,"rw.lwr"] <- aggregate(test$RW, by=test[,c("group", "Site", "Year")], FUN=quantile, probs=0.025, na.rm=T)[,"x"]#
# mean.rw[,"rw.upr"] <- aggregate(test$RW, by=test[,c("group", "Site", "Year")], FUN=quantile, probs=0.975, na.rm=T)[,"x"]#
# mean.rw[,"BAI.mean"] <- aggregate(test$BA.inc, by=test[,c("group", "Site", "Year")], FUN=mean, na.rm=T)[,"x"]#
mean.rw[,"BAI.lwr"] <- aggregate(test2$BA.inc, by=test2[,c("group.cc", "Site", "Year")], FUN=quantile, probs=0.025, na.rm=T)[,"x"]#
mean.rw[,"BAI.upr"] <- aggregate(test2$BA.inc, by=test2[,c("group.cc", "Site", "Year")], FUN=quantile, probs=0.975, na.rm=T)[,"x"]#
head(mean.rw)#
#
mean.rw <- mean.rw[mean.rw$Site %in% sites.use,]#
#
#mean.rw$Species <- mean.rw$group#
#
# Setting up lm between the modeled values and the observed	#
dim(mean.rw)#
dim(mean.model)#
#
# mean.rw <- mean.rw[mean.rw$group %in% mean.model$group,]#
# mean.rw <- mean.rw[mean.rw$Year %in% mean.model$Year,]#
#
summary(mean.rw); #
summary(mean.model)#
#
mean.model2 <- mean.model#
names(mean.model2)[4:6] <- c("mod.mean", "mod.lwr", "mod.up")#
#
sanity.gam1.df <- merge(mean.model2, mean.rw, all.x=T, all.y=T)#
summary(sanity.gam1.df)#
summary(sanity.gam1.df[is.na(sanity.gam1.df$mod.mean),])#
head(sanity.gam1.df[is.na(sanity.gam1.df$mod.mean),])#
#
# LM on aggregated BAI#
sanity.lm1 <- lm(mod.mean ~ BAI.mean, data=sanity.gam1.df)#
summary(sanity.lm1)#
# Sanity Check #1 graph#
pdf("figures/gam_sanity_check/gam3.1_sanitycheck1.pdf", width= 13, height = 8.5)#
ggplot(data=mean.rw) + facet_wrap(group.cc ~ Site, scales="fixed") + theme_bw() +#
	# plot the data#
	geom_ribbon(aes(x=Year, ymin=BAI.lwr, ymax=BAI.upr), alpha=0.5) +#
	geom_line(aes(x=Year, y=BAI.mean), size=1) +#
	# Plot our model#
	geom_ribbon(data=mean.model, aes(x=Year, ymin=BAI.lwr, ymax=BAI.upr), fill="red3", alpha=0.3) +#
	geom_line(data=mean.model, aes(x=Year, y=BAI.mean), color="red3", alpha=0.8, size=1) +#
	labs(title="Gamm Model vs. Data", x="Year", y="BAI")#
dev.off()#
# Sanity Check #2#
# Pulling random trees from both the data.use and the model.pred2 to see how they compare#
#
n <- 10#
data.use2 <- data.use[data.use$Site %in% sites.use,]#
data.use2 <- data.use2[data.use2$group %in% group.use,]#
#
sanity2.trees <- sample(test2$TreeID, size=n, replace=F) #
summary(sanity2.trees)#
#
summary(mean.rw)#
summary(data.use)#
summary(model.pred2)#
#
# Sanity Check #2 graph#
pdf("figures/gam_sanity_check/gam3.1_sanitycheck2.pdf", width= 13, height = 8.5)#
ggplot(data=test2[test2$TreeID %in% sanity2.trees,]) + facet_wrap(TreeID~ Site, scales="fixed") + theme_bw() +#
	# plot the data#
	#geom_ribbon(aes(x=Year, ymin=rw.lwr, ymax=rw.upr), alpha=0.5) +#
	geom_line(aes(x=Year, y=BA.inc), size=1) +#
	# Plot our model#
	#geom_ribbon(data=model.pred2[model.pred2$TreeID %in% sanity2.trees,], aes(x=Year, ymin=rw.lwr, ymax=rw.upr), fill="red3", alpha=0.3) +#
	geom_line(data=model.pred2[model.pred2$TreeID %in% sanity2.trees,], aes(x=Year, y=mean), color="red3", alpha=0.8, size=1) +#
	labs(title="Gamm Model vs. Data Indiv. Trees", x="Year", y="RW")#
dev.off()#
# lm2 for sanity check 2#
summary(model.pred2)#
summary(data.use)#
summary(test2)#
#
model.pred2$RW <- test2$RW#
model.pred2$BAI <- test2$BA.inc#
#
# LM for indiv. trees#
sanity.lm2 <- lm(BAI ~ mean, data=model.pred2)#
summary(sanity.lm2)#
#
# sanity.lm2.quru <- lm(RW ~ mean, data=model.pred2[model.pred2$group=="quru",])#
# summary(sanity.lm2)#
# running scripts to get the weights#
source("0_Calculate_GAMM_Weights.R")#
# test2 <- test[test$group %in% c("QURU", "ACRU") & test$Year>=1980,]#
# test2 <- test[test$group %in% c("QURU") & test$Year>=1980,]#
# summary(test2)#
# gam1.test <- gamm(RW ~ s(tmean, k=3, by=group) + # tmean*Species #
#                   s(precip, k=3, by=group) +#
#                   s(dbh.recon, k=3, by=group.plot) +#
#                   Canopy.Class, #
#                   random=list(Site=~1, PlotID=~1),#
#                   data=test2)#
#
predictors.all#
vars <- c("tmean", "precip", "dbh.recon", "Canopy.Class", "group.plot", "group", "group.cc")#
gam3.1.weights <- factor.weights(model.gam = gam3.1, model.name = "species_response", newdata = test2, extent = "", vars = vars, limiting=T)#
#
summary(gam3.1.weights)#
summary(test2)#
gam3.1.weights[,c("BA.inc", "group", "group.cc")] <- test2[,c("BA.inc", "group", "group.cc")] # Adding in factors we forgot#
# Just the weights of tmean and Precip, ignoring size#
vars2 <- c("fit.tmean", "fit.precip")#
fit.spline2 <- rowSums(abs(gam3.1.weights[,vars2]), na.rm=T)#
for(v in vars2){#
	gam3.1.weights[,paste("weight", v, "2", sep=".")] <- gam3.1.weights[,v]/fit.spline2#
}#
summary(gam3.1.weights)#
#
cols.weights <- c("weight.fit.tmean.2", "weight.fit.precip.2")#
for(i in 1:nrow(gam3.1.weights)){#
	fweight <- abs(gam3.1.weights[i,cols.weights])#
	gam3.1.weights[i,"max2"] <- max(fweight, na.rm=T)#
	gam3.1.weights[i,"factor.max2"] <- c("tmean", "precip")[which(fweight==max(fweight))]#
}#
gam3.1.weights$factor.max2 <- as.factor(gam3.1.weights$factor.max2)#
summary(gam3.1.weights)#
#
save(gam3.1.weights, file="processed_data/gamm_weights/gam3.1_weights.Rdata")
load(file="processed_data/gamm_weights/gam3.1_weights.Rdata")
summary(gam3.1.weights)#
factors.fits <- c("fit.tmean", "fit.precip", "fit.dbh.recon", "fit.full", "BA.inc")#
factors.weights <- c("weight.tmean", "weight.dbh.recon", "weight.precip")#
othervars <- c("Year", "Site", "group.cc", "Model")#
#
data.graph1 <- aggregate(gam3.1.weights[,factors.fits], by = gam3.1.weights[,othervars], FUN= mean, na.rm=T)#
#
data.graph1[,paste(factors.fits, "upr", sep=".")] <- aggregate(gam3.1.weights[,factors.fits], by = gam3.1.weights[,othervars], FUN= quantile, prob= 0.975, na.rm=T)[,factors.fits]#
#
data.graph1[,paste(factors.fits, "lwr", sep=".")] <- aggregate(gam3.1.weights[,factors.fits], by = gam3.1.weights[,othervars], FUN= quantile, prob= 0.025, na.rm=T)[,factors.fits]#
#
summary(data.graph1)#
#
data.graph2 <- aggregate(abs(gam3.1.weights[,factors.weights]), by = gam3.1.weights[,othervars], FUN= mean, na.rm=T)#
#
data.graph2[,paste(factors.weights, "upr", sep=".")] <- aggregate(abs(gam3.1.weights[,factors.weights]), by = gam3.1.weights[,othervars], FUN= quantile, prob= 0.975, na.rm=T)[,factors.weights]#
#
data.graph2[,paste(factors.weights, "lwr", sep=".")] <- aggregate(abs(gam3.1.weights[,factors.weights]), by = gam3.1.weights[,othervars], FUN= quantile, prob= 0.025, na.rm=T)[,factors.weights]#
#
summary(data.graph2)#
#
data.graph <- merge(data.graph1, data.graph2, all.x=T, all.y=T)#
#
# data.graph <- gam3.1.weights[gam3.1.weights$TreeID== "MMA014",]#
summary(data.graph)#
gam3.1.weights$wts.check <- rowSums(abs(gam3.1.weights[,c("weight.tmean", "weight.precip", "weight.dbh.recon")]))#
data.graph$wts.check <- rowSums(abs(data.graph[,c("weight.tmean", "weight.precip", "weight.dbh.recon")]))#
#
summary(gam3.1.weights)#
summary(data.graph)#
#
# Ordering the data for graphing#
#
data.graph<- data.graph[order(data.graph$Year, data.graph$group.cc, data.graph$Site, decreasing=F),]#
plot.rgb <- function(STATE, GC, SIZE){	geom_line(data=data.graph[data.graph$State==STATE & data.graph$group.cc==GC,],aes(x=Year, y=fit.full), size=SIZE,#
  		        color=rgb(abs(data.graph[data.graph$State==STATE & data.graph$group.cc==GC,"weight.tmean"     ]), # red#
                        abs(data.graph[data.graph$State==STATE & data.graph$group.cc==GC,"weight.dbh.recon"     ]), # green#
                        abs(data.graph[data.graph$State==STATE & data.graph$group.cc==GC,"weight.precip"   ]))) }   # blue#
# Plotting the Obs and modeled with influence coloring#
data.graph$State <- recode(data.graph$Site, "'Howland' = 'ME';'Harvard' = 'MA';'Morgan Monroe State Park' = 'IN';'Missouri Ozark' = 'MO';'Oak Openings Toledo' = 'OH'")#
data.graph$State <- factor(data.graph$State, levels=c("MO", "IN", "OH", "MA", "ME"))#
#
for(i in unique(data.graph$group.cc)){#
	data.graph[data.graph$group.cc==i,"Canopy.Class"] <- str_sub(data.graph[data.graph$group.cc==i,"group.cc"], -1)#
	data.graph[data.graph$group.cc==i,"group"] <- substr(data.graph[data.graph$group.cc==i,"group.cc"], 1,4)#
}#
data.graph$Canopy.Class <- as.factor(data.graph$Canopy.Class)#
data.graph$group <- as.factor(data.graph$group)#
summary(data.graph)
ggplot(data = data.graph[substr(data.graph$group, 1,2)=="QU",]) + facet_grid(group.cc ~ State) +#
	scale_x_continuous(expand=c(0,0), name="Year") +#
	scale_y_continuous(expand=c(0,0), name="BAI") +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_line(aes(x=Year, y=BA.inc), size=2, alpha=0.5) +#
	geom_ribbon(aes(x=Year, ymin=BA.inc.lwr, ymax=BA.inc.upr), alpha=0.3) +#
	geom_line(aes(x=Year, y = 0), linetype="dashed") +#
	# Harvard#
	plot.rgb("MA", "QURU.C", 3) +#
	plot.rgb("MA", "QURU.D", 3) +#
	plot.rgb("MA", "QURU.I", 3) +#
	plot.rgb("MA", "QURU.S", 3) +#
	plot.rgb("MA", "QUVE.C", 3) +#
	plot.rgb("MA", "QUVE.D", 3) +#
	plot.rgb("MA", "QUVE.I", 3) +#
	plot.rgb("MA", "QUVE.S", 3) +#
	plot.rgb("MA", "QUAL.C", 3) +#
	plot.rgb("MA", "QUAL.D", 3) +#
	plot.rgb("MA", "QUAL.I", 3) +#
	plot.rgb("MA", "QUAL.S", 3) +#
	# Howland#
	plot.rgb("ME", "QURU.C", 3) +#
	plot.rgb("ME", "QURU.D", 3) +#
	plot.rgb("ME", "QURU.I", 3) +#
	plot.rgb("ME", "QURU.S", 3) +#
	plot.rgb("ME", "QUVE.C", 3) +#
	plot.rgb("ME", "QUVE.D", 3) +#
	plot.rgb("ME", "QUVE.I", 3) +#
	plot.rgb("ME", "QUVE.S", 3) +#
	plot.rgb("ME", "QUAL.C", 3) +#
	plot.rgb("ME", "QUAL.D", 3) +#
	plot.rgb("ME", "QUAL.I", 3) +#
	plot.rgb("ME", "QUAL.S", 3) +#
	# Morgan Monroe#
	plot.rgb("IN", "QURU.C", 3) +#
	plot.rgb("IN", "QURU.D", 3) +#
	plot.rgb("IN", "QURU.I", 3) +#
	plot.rgb("IN", "QURU.S", 3) +#
	plot.rgb("IN", "QUVE.C", 3) +#
	plot.rgb("IN", "QUVE.D", 3) +#
	plot.rgb("IN", "QUVE.I", 3) +#
	plot.rgb("IN", "QUVE.S", 3) +#
	plot.rgb("IN", "QUAL.C", 3) +#
	plot.rgb("IN", "QUAL.D", 3) +#
	plot.rgb("IN", "QUAL.I", 3) +#
	plot.rgb("IN", "QUAL.S", 3) +#
	# Missouri Ozark#
	plot.rgb("MO", "QURU.C", 3) +#
	plot.rgb("MO", "QURU.D", 3) +#
	plot.rgb("MO", "QURU.I", 3) +#
	plot.rgb("MO", "QURU.S", 3) +#
	plot.rgb("MO", "QUVE.C", 3) +#
	plot.rgb("MO", "QUVE.D", 3) +#
	plot.rgb("MO", "QUVE.I", 3) +#
	plot.rgb("MO", "QUVE.S", 3) +#
	plot.rgb("MO", "QUAL.C", 3) +#
	plot.rgb("MO", "QUAL.D", 3) +#
	plot.rgb("MO", "QUAL.I", 3) +#
	plot.rgb("MO", "QUAL.S", 3) +#
	# Oak Openings#
	plot.rgb("OH", "QURU.C", 3) +#
	plot.rgb("OH", "QURU.D", 3) +#
	plot.rgb("OH", "QURU.I", 3) +#
	plot.rgb("OH", "QURU.S", 3) +#
	plot.rgb("OH", "QUVE.C", 3) +#
	plot.rgb("OH", "QUVE.D", 3) +#
	plot.rgb("OH", "QUVE.I", 3) +#
	plot.rgb("OH", "QUVE.S", 3) +#
	plot.rgb("OH", "QUAL.C", 3) +#
	plot.rgb("OH", "QUAL.D", 3) +#
	plot.rgb("OH", "QUAL.I", 3) +#
	plot.rgb("OH", "QUAL.S", 3)
ggplot(data = data.graph[data.graph$Canopy.Class=="D",]) + facet_grid(group ~ State) +#
	scale_x_continuous(expand=c(0,0), name="Year") +#
	scale_y_continuous(expand=c(0,0), name="BAI") +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_line(aes(x=Year, y=BA.inc), size=2, alpha=0.5) +#
	geom_ribbon(aes(x=Year, ymin=BA.inc.lwr, ymax=BA.inc.upr), alpha=0.3) +#
	geom_line(aes(x=Year, y = 0), linetype="dashed") +#
	# Harvard#
	plot.rgb("MA", "ACRU.D", 3) +#
	plot.rgb("MA", "PIST.D", 3) +#
	plot.rgb("MA", "TSCA.D", 3) +#
	plot.rgb("MA", "QURU.D", 3) +#
	plot.rgb("MA", "QUVE.D", 3) +#
	plot.rgb("MA", "FRAX.D", 3) +#
	plot.rgb("MA", "BETULA.D", 3) +#
	plot.rgb("MA", "ACSA.D", 3) +#
	plot.rgb("MA", "QUAL.D", 3) +#
	plot.rgb("MA", "FAGR.D", 3) +#
	plot.rgb("MA", "ULRU.D", 3) +#
	plot.rgb("MA", "CARYA.D", 3) +#
	plot.rgb("MA", "SAAL.D", 3) +#
	# Howland#
	plot.rgb("ME", "ACRU.D", 3) +#
	plot.rgb("ME", "PIST.D", 3) +#
	plot.rgb("ME", "TSCA.D", 3) +#
	plot.rgb("ME", "QURU.D", 3) +#
	plot.rgb("ME", "QUVE.D", 3) +#
	plot.rgb("ME", "FRAX.D", 3) +#
	plot.rgb("ME", "BETULA.D", 3) +#
	plot.rgb("ME", "ACSA.D", 3) +#
	plot.rgb("ME", "QUAL.D", 3) +#
	plot.rgb("ME", "FAGR.D", 3) +#
	plot.rgb("ME", "ULRU.D", 3) +#
	plot.rgb("ME", "CARYA.D", 3) +#
	plot.rgb("ME", "SAAL.D", 3) +#
	# Morgan Monroe#
	plot.rgb("IN", "ACRU.D", 3) +#
	plot.rgb("IN", "PIST.D", 3) +#
	plot.rgb("IN", "TSCA.D", 3) +#
	plot.rgb("IN", "QURU.D", 3) +#
	plot.rgb("IN", "QUVE.D", 3) +#
	plot.rgb("IN", "FRAX.D", 3) +#
	plot.rgb("IN", "BETULA.D", 3) +#
	plot.rgb("IN", "ACSA.D", 3) +#
	plot.rgb("IN", "QUAL.D", 3) +#
	plot.rgb("IN", "FAGR.D", 3) +#
	plot.rgb("IN", "ULRU.D", 3) +#
	plot.rgb("IN", "CARYA.D", 3) +#
	plot.rgb("IN", "SAAL.D", 3) +#
	# Missouri Ozark#
	plot.rgb("MO", "ACRU.D", 3) +#
	plot.rgb("MO", "PIST.D", 3) +#
	plot.rgb("MO", "TSCA.D", 3) +#
	plot.rgb("MO", "QURU.D", 3) +#
	plot.rgb("MO", "QUVE.D", 3) +#
	plot.rgb("MO", "FRAX.D", 3) +#
	plot.rgb("MO", "BETULA.D", 3) +#
	plot.rgb("MO", "ACSA.D", 3) +#
	plot.rgb("MO", "QUAL.D", 3) +#
	plot.rgb("MO", "FAGR.D", 3) +#
	plot.rgb("MO", "ULRU.D", 3) +#
	plot.rgb("MO", "CARYA.D", 3) +#
	plot.rgb("MO", "SAAL.D", 3) +#
	# Oak Openings#
	plot.rgb("OH", "ACRU.D", 3) +#
	plot.rgb("OH", "PIST.D", 3) +#
	plot.rgb("OH", "TSCA.D", 3) +#
	plot.rgb("OH", "QURU.D", 3) +#
	plot.rgb("OH", "QUVE.D", 3) +#
	plot.rgb("OH", "FRAX.D", 3) +#
	plot.rgb("OH", "BETULA.D", 3) +#
	plot.rgb("OH", "ACSA.D", 3) +#
	plot.rgb("OH", "QUAL.D", 3) +#
	plot.rgb("OH", "FAGR.D", 3) +#
	plot.rgb("OH", "ULRU.D", 3) +#
	plot.rgb("OH", "CARYA.D", 3) +#
	plot.rgb("OH", "SAAL.D", 3) +#
	labs(title= "Dominant Trees (group.cc)", x="Year", y=expression(bold(paste("BAI (mm2 / year)"))))
ggplot(data = data.graph[data.graph$Canopy.Class=="I",]) + facet_grid(group ~ State) +#
	scale_x_continuous(expand=c(0,0), name="Year") +#
	scale_y_continuous(expand=c(0,0), name="BAI") +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_line(aes(x=Year, y=BA.inc), size=2, alpha=0.5) +#
	geom_ribbon(aes(x=Year, ymin=BA.inc.lwr, ymax=BA.inc.upr), alpha=0.3) +#
	geom_line(aes(x=Year, y = 0), linetype="dashed") +#
	# Harvard#
	plot.rgb("MA", "ACRU.I", 3) +#
	plot.rgb("MA", "PIST.I", 3) +#
	plot.rgb("MA", "TSCA.I", 3) +#
	plot.rgb("MA", "QURU.I", 3) +#
	plot.rgb("MA", "QUVE.I", 3) +#
	plot.rgb("MA", "FRAX.I", 3) +#
	plot.rgb("MA", "BETULA.I", 3) +#
	plot.rgb("MA", "ACSA.I", 3) +#
	plot.rgb("MA", "QUAL.I", 3) +#
	plot.rgb("MA", "FAGR.I", 3) +#
	plot.rgb("MA", "ULRU.I", 3) +#
	plot.rgb("MA", "CARYA.I", 3) +#
	plot.rgb("MA", "SAAL.I", 3) +#
	# Howland#
	plot.rgb("ME", "ACRU.I", 3) +#
	plot.rgb("ME", "PIST.I", 3) +#
	plot.rgb("ME", "TSCA.I", 3) +#
	plot.rgb("ME", "QURU.I", 3) +#
	plot.rgb("ME", "QUVE.I", 3) +#
	plot.rgb("ME", "FRAX.I", 3) +#
	plot.rgb("ME", "BETULA.I", 3) +#
	plot.rgb("ME", "ACSA.I", 3) +#
	plot.rgb("ME", "QUAL.I", 3) +#
	plot.rgb("ME", "FAGR.I", 3) +#
	plot.rgb("ME", "ULRU.I", 3) +#
	plot.rgb("ME", "CARYA.I", 3) +#
	plot.rgb("ME", "SAAL.I", 3) +#
	# Morgan Monroe#
	plot.rgb("IN", "ACRU.I", 3) +#
	plot.rgb("IN", "PIST.I", 3) +#
	plot.rgb("IN", "TSCA.I", 3) +#
	plot.rgb("IN", "QURU.I", 3) +#
	plot.rgb("IN", "QUVE.I", 3) +#
	plot.rgb("IN", "FRAX.I", 3) +#
	plot.rgb("IN", "BETULA.I", 3) +#
	plot.rgb("IN", "ACSA.I", 3) +#
	plot.rgb("IN", "QUAL.I", 3) +#
	plot.rgb("IN", "FAGR.I", 3) +#
	plot.rgb("IN", "ULRU.I", 3) +#
	plot.rgb("IN", "CARYA.I", 3) +#
	plot.rgb("IN", "SAAL.I", 3) +#
	# Missouri Ozark#
	plot.rgb("MO", "ACRU.I", 3) +#
	plot.rgb("MO", "PIST.I", 3) +#
	plot.rgb("MO", "TSCA.I", 3) +#
	plot.rgb("MO", "QURU.I", 3) +#
	plot.rgb("MO", "QUVE.I", 3) +#
	plot.rgb("MO", "FRAX.I", 3) +#
	plot.rgb("MO", "BETULA.I", 3) +#
	plot.rgb("MO", "ACSA.I", 3) +#
	plot.rgb("MO", "QUAL.I", 3) +#
	plot.rgb("MO", "FAGR.I", 3) +#
	plot.rgb("MO", "ULRU.I", 3) +#
	plot.rgb("MO", "CARYA.I", 3) +#
	plot.rgb("MO", "SAAL.I", 3) +#
	# Oak Openings#
	plot.rgb("OH", "ACRU.I", 3) +#
	plot.rgb("OH", "PIST.I", 3) +#
	plot.rgb("OH", "TSCA.I", 3) +#
	plot.rgb("OH", "QURU.I", 3) +#
	plot.rgb("OH", "QUVE.I", 3) +#
	plot.rgb("OH", "FRAX.I", 3) +#
	plot.rgb("OH", "BETULA.I", 3) +#
	plot.rgb("OH", "ACSA.I", 3) +#
	plot.rgb("OH", "QUAL.I", 3) +#
	plot.rgb("OH", "FAGR.I", 3) +#
	plot.rgb("OH", "ULRU.I", 3) +#
	plot.rgb("OH", "CARYA.I", 3) +#
	plot.rgb("OH", "SAAL.I", 3) +#
	labs(title= "Intermediate Trees (group.cc)", x="Year", y=expression(bold(paste("BAI (mm2 / year)"))))
ggplot(data = data.graph[data.graph$Canopy.Class=="S",]) + facet_grid(group ~ State) +#
	scale_x_continuous(expand=c(0,0), name="Year") +#
	scale_y_continuous(expand=c(0,0), name="BAI") +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_line(aes(x=Year, y=BA.inc), size=2, alpha=0.5) +#
	geom_ribbon(aes(x=Year, ymin=BA.inc.lwr, ymax=BA.inc.upr), alpha=0.3) +#
	geom_line(aes(x=Year, y = 0), linetype="dashed") +#
	# Harvard#
	plot.rgb("MA", "ACRU.S", 3) +#
	plot.rgb("MA", "PIST.S", 3) +#
	plot.rgb("MA", "TSCA.S", 3) +#
	plot.rgb("MA", "QURU.S", 3) +#
	plot.rgb("MA", "QUVE.S", 3) +#
	plot.rgb("MA", "FRAX.S", 3) +#
	plot.rgb("MA", "BETULA.S", 3) +#
	plot.rgb("MA", "ACSA.S", 3) +#
	plot.rgb("MA", "QUAL.S", 3) +#
	plot.rgb("MA", "FAGR.S", 3) +#
	plot.rgb("MA", "ULRU.S", 3) +#
	plot.rgb("MA", "CARYA.S", 3) +#
	plot.rgb("MA", "SAAL.S", 3) +#
	# Howland#
	plot.rgb("ME", "ACRU.S", 3) +#
	plot.rgb("ME", "PIST.S", 3) +#
	plot.rgb("ME", "TSCA.S", 3) +#
	plot.rgb("ME", "QURU.S", 3) +#
	plot.rgb("ME", "QUVE.S", 3) +#
	plot.rgb("ME", "FRAX.S", 3) +#
	plot.rgb("ME", "BETULA.S", 3) +#
	plot.rgb("ME", "ACSA.S", 3) +#
	plot.rgb("ME", "QUAL.S", 3) +#
	plot.rgb("ME", "FAGR.S", 3) +#
	plot.rgb("ME", "ULRU.S", 3) +#
	plot.rgb("ME", "CARYA.S", 3) +#
	plot.rgb("ME", "SAAL.S", 3) +#
	# Morgan Monroe#
	plot.rgb("IN", "ACRU.S", 3) +#
	plot.rgb("IN", "PIST.S", 3) +#
	plot.rgb("IN", "TSCA.S", 3) +#
	plot.rgb("IN", "QURU.S", 3) +#
	plot.rgb("IN", "QUVE.S", 3) +#
	plot.rgb("IN", "FRAX.S", 3) +#
	plot.rgb("IN", "BETULA.S", 3) +#
	plot.rgb("IN", "ACSA.S", 3) +#
	plot.rgb("IN", "QUAL.S", 3) +#
	plot.rgb("IN", "FAGR.S", 3) +#
	plot.rgb("IN", "ULRU.S", 3) +#
	plot.rgb("IN", "CARYA.S", 3) +#
	plot.rgb("IN", "SAAL.S", 3) +#
	# Missouri Ozark#
	plot.rgb("MO", "ACRU.S", 3) +#
	plot.rgb("MO", "PIST.S", 3) +#
	plot.rgb("MO", "TSCA.S", 3) +#
	plot.rgb("MO", "QURU.S", 3) +#
	plot.rgb("MO", "QUVE.S", 3) +#
	plot.rgb("MO", "FRAX.S", 3) +#
	plot.rgb("MO", "BETULA.S", 3) +#
	plot.rgb("MO", "ACSA.S", 3) +#
	plot.rgb("MO", "QUAL.S", 3) +#
	plot.rgb("MO", "FAGR.S", 3) +#
	plot.rgb("MO", "ULRU.S", 3) +#
	plot.rgb("MO", "CARYA.S", 3) +#
	plot.rgb("MO", "SAAL.S", 3) +#
	# Oak Openings#
	plot.rgb("OH", "ACRU.S", 3) +#
	plot.rgb("OH", "PIST.S", 3) +#
	plot.rgb("OH", "TSCA.S", 3) +#
	plot.rgb("OH", "QURU.S", 3) +#
	plot.rgb("OH", "QUVE.S", 3) +#
	plot.rgb("OH", "FRAX.S", 3) +#
	plot.rgb("OH", "BETULA.S", 3) +#
	plot.rgb("OH", "ACSA.S", 3) +#
	plot.rgb("OH", "QUAL.S", 3) +#
	plot.rgb("OH", "FAGR.S", 3) +#
	plot.rgb("OH", "ULRU.S", 3) +#
	plot.rgb("OH", "CARYA.S", 3) +#
	plot.rgb("OH", "SAAL.S", 3) +#
	labs(title= "Suppressed Trees (group.cc)", x="Year", y=expression(bold(paste("BAI (mm2 / year)"))))
library(ggplot2)#
library(stringr)#
load(file="processed_data/gamm_weights/gam3_weights.Rdata")#
#
summary(gam3.weights)#
factors.fits <- c("fit.tmean", "fit.precip", "fit.dbh.recon", "fit.full", "BA.inc")#
factors.weights <- c("weight.tmean", "weight.dbh.recon", "weight.precip")#
othervars <- c("Year", "Site", "group.cc", "Model")#
#
data.graph1 <- aggregate(gam3.weights[,factors.fits], by = gam3.weights[,othervars], FUN= mean, na.rm=T)#
#
data.graph1[,paste(factors.fits, "upr", sep=".")] <- aggregate(gam3.weights[,factors.fits], by = gam3.weights[,othervars], FUN= quantile, prob= 0.975, na.rm=T)[,factors.fits]#
#
data.graph1[,paste(factors.fits, "lwr", sep=".")] <- aggregate(gam3.weights[,factors.fits], by = gam3.weights[,othervars], FUN= quantile, prob= 0.025, na.rm=T)[,factors.fits]#
#
summary(data.graph1)#
#
data.graph2 <- aggregate(abs(gam3.weights[,factors.weights]), by = gam3.weights[,othervars], FUN= mean, na.rm=T)#
#
data.graph2[,paste(factors.weights, "upr", sep=".")] <- aggregate(abs(gam3.weights[,factors.weights]), by = gam3.weights[,othervars], FUN= quantile, prob= 0.975, na.rm=T)[,factors.weights]#
#
data.graph2[,paste(factors.weights, "lwr", sep=".")] <- aggregate(abs(gam3.weights[,factors.weights]), by = gam3.weights[,othervars], FUN= quantile, prob= 0.025, na.rm=T)[,factors.weights]#
#
summary(data.graph2)#
#
data.graph <- merge(data.graph1, data.graph2, all.x=T, all.y=T)#
#
# data.graph <- gam3.weights[gam3.weights$TreeID== "MMA014",]#
summary(data.graph)#
gam3.weights$wts.check <- rowSums(abs(gam3.weights[,c("weight.tmean", "weight.precip", "weight.dbh.recon")]))#
data.graph$wts.check <- rowSums(abs(data.graph[,c("weight.tmean", "weight.precip", "weight.dbh.recon")]))#
#
summary(gam3.weights)#
summary(data.graph)#
#
# Ordering the data for graphing#
#
data.graph<- data.graph[order(data.graph$Year, data.graph$group.cc, data.graph$Site, decreasing=F),]#
plot.rgb <- function(STATE, GC, SIZE){	geom_line(data=data.graph[data.graph$State==STATE & data.graph$group.cc==GC,],aes(x=Year, y=fit.full), size=SIZE,#
  		        color=rgb(abs(data.graph[data.graph$State==STATE & data.graph$group.cc==GC,"weight.tmean"     ]), # red#
                        abs(data.graph[data.graph$State==STATE & data.graph$group.cc==GC,"weight.dbh.recon"     ]), # green#
                        abs(data.graph[data.graph$State==STATE & data.graph$group.cc==GC,"weight.precip"   ]))) }   # blue#
# Plotting the Obs and modeled with influence coloring#
data.graph$State <- recode(data.graph$Site, "'Howland' = 'ME';'Harvard' = 'MA';'Morgan Monroe State Park' = 'IN';'Missouri Ozark' = 'MO';'Oak Openings Toledo' = 'OH'")#
data.graph$State <- factor(data.graph$State, levels=c("MO", "IN", "OH", "MA", "ME"))#
#
for(i in unique(data.graph$group.cc)){#
	data.graph[data.graph$group.cc==i,"Canopy.Class"] <- str_sub(data.graph[data.graph$group.cc==i,"group.cc"], -1)#
	data.graph[data.graph$group.cc==i,"group"] <- substr(data.graph[data.graph$group.cc==i,"group.cc"], 1,4)#
}#
data.graph$Canopy.Class <- as.factor(data.graph$Canopy.Class)#
data.graph$group <- as.factor(data.graph$group)#
summary(data.graph)#
# Plotting the Obs and modeled with influence coloring#
pdf("figures/gam3/gam3_SPP_CC_BAI_limiting_factors_All.pdf", width= 13, height = 8.5)#
ggplot(data = data.graph) + facet_grid(group.cc ~ State) +#
	scale_x_continuous(expand=c(0,0), name="Year") +#
	scale_y_continuous(expand=c(0,0), name="BAI") +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_line(aes(x=Year, y=BA.inc), size=2, alpha=0.5) +#
	geom_ribbon(aes(x=Year, ymin=BA.inc.lwr, ymax=BA.inc.upr), alpha=0.3) +#
	geom_line(aes(x=Year, y = 0), linetype="dashed") +#
	# Harvard#
	plot.rgb("MA", "ACRU.C", 3) +#
	plot.rgb("MA", "ACRU.D", 3) +#
	plot.rgb("MA", "ACRU.I", 3) +#
	plot.rgb("MA", "ACRU.S", 3) +#
	plot.rgb("MA", "PIST.C", 3) +#
	plot.rgb("MA", "PIST.D", 3) +#
	plot.rgb("MA", "PIST.I", 3) +#
	plot.rgb("MA", "PIST.S", 3) +#
#
	plot.rgb("MA", "TSCA.C", 3) +#
	plot.rgb("MA", "TSCA.D", 3) +#
	plot.rgb("MA", "TSCA.I", 3) +#
	plot.rgb("MA", "TSCA.S", 3) +#
	plot.rgb("MA", "QURU.C", 3) +#
	plot.rgb("MA", "QURU.D", 3) +#
	plot.rgb("MA", "QURU.I", 3) +#
	plot.rgb("MA", "QURU.S", 3) +#
	plot.rgb("MA", "QUVE.C", 3) +#
	plot.rgb("MA", "QUVE.D", 3) +#
	plot.rgb("MA", "QUVE.I", 3) +#
	plot.rgb("MA", "QUVE.S", 3) +#
	plot.rgb("MA", "FRAX.C", 3) +#
	plot.rgb("MA", "FRAX.D", 3) +#
	plot.rgb("MA", "FRAX.I", 3) +#
	plot.rgb("MA", "FRAX.S", 3) +#
#
	plot.rgb("MA", "BETULA.C", 3) +#
	plot.rgb("MA", "BETULA.D", 3) +#
	plot.rgb("MA", "BETULA.I", 3) +#
	plot.rgb("MA", "BETULA.S", 3) +#
	plot.rgb("MA", "ACSA.C", 3) +#
	plot.rgb("MA", "ACSA.D", 3) +#
	plot.rgb("MA", "ACSA.I", 3) +#
	plot.rgb("MA", "ACSA.S", 3) +#
	plot.rgb("MA", "QUAL.C", 3) +#
	plot.rgb("MA", "QUAL.D", 3) +#
	plot.rgb("MA", "QUAL.I", 3) +#
	plot.rgb("MA", "QUAL.S", 3) +#
	plot.rgb("MA", "FAGR.C", 3) +#
	plot.rgb("MA", "FAGR.D", 3) +#
	plot.rgb("MA", "FAGR.I", 3) +#
	plot.rgb("MA", "FAGR.S", 3) +#
	plot.rgb("MA", "ULRU.C", 3) +#
	plot.rgb("MA", "ULRU.D", 3) +#
	plot.rgb("MA", "ULRU.I", 3) +#
	plot.rgb("MA", "ULRU.S", 3) +#
	plot.rgb("MA", "CARYA.C", 3) +#
	plot.rgb("MA", "CARYA.D", 3) +#
	plot.rgb("MA", "CARYA.I", 3) +#
	plot.rgb("MA", "CARYA.S", 3) +#
#
	plot.rgb("MA", "SAAL.C", 3) +#
	plot.rgb("MA", "SAAL.D", 3) +#
	plot.rgb("MA", "SAAL.I", 3) +#
	plot.rgb("MA", "SAAL.S", 3) +#
#
	# Howland#
		plot.rgb("ME", "ACRU.C", 3) +#
	plot.rgb("ME", "ACRU.D", 3) +#
	plot.rgb("ME", "ACRU.I", 3) +#
	plot.rgb("ME", "ACRU.S", 3) +#
	plot.rgb("ME", "PIST.C", 3) +#
	plot.rgb("ME", "PIST.D", 3) +#
	plot.rgb("ME", "PIST.I", 3) +#
	plot.rgb("ME", "PIST.S", 3) +#
#
	plot.rgb("ME", "TSCA.C", 3) +#
	plot.rgb("ME", "TSCA.D", 3) +#
	plot.rgb("ME", "TSCA.I", 3) +#
	plot.rgb("ME", "TSCA.S", 3) +#
	plot.rgb("ME", "QURU.C", 3) +#
	plot.rgb("ME", "QURU.D", 3) +#
	plot.rgb("ME", "QURU.I", 3) +#
	plot.rgb("ME", "QURU.S", 3) +#
	plot.rgb("ME", "QUVE.C", 3) +#
	plot.rgb("ME", "QUVE.D", 3) +#
	plot.rgb("ME", "QUVE.I", 3) +#
	plot.rgb("ME", "QUVE.S", 3) +#
	plot.rgb("ME", "FRAX.C", 3) +#
	plot.rgb("ME", "FRAX.D", 3) +#
	plot.rgb("ME", "FRAX.I", 3) +#
	plot.rgb("ME", "FRAX.S", 3) +#
#
	plot.rgb("ME", "BETULA.C", 3) +#
	plot.rgb("ME", "BETULA.D", 3) +#
	plot.rgb("ME", "BETULA.I", 3) +#
	plot.rgb("ME", "BETULA.S", 3) +#
	plot.rgb("ME", "ACSA.C", 3) +#
	plot.rgb("ME", "ACSA.D", 3) +#
	plot.rgb("ME", "ACSA.I", 3) +#
	plot.rgb("ME", "ACSA.S", 3) +#
	plot.rgb("ME", "QUAL.C", 3) +#
	plot.rgb("ME", "QUAL.D", 3) +#
	plot.rgb("ME", "QUAL.I", 3) +#
	plot.rgb("ME", "QUAL.S", 3) +#
	plot.rgb("ME", "FAGR.C", 3) +#
	plot.rgb("ME", "FAGR.D", 3) +#
	plot.rgb("ME", "FAGR.I", 3) +#
	plot.rgb("ME", "FAGR.S", 3) +#
	plot.rgb("ME", "ULRU.C", 3) +#
	plot.rgb("ME", "ULRU.D", 3) +#
	plot.rgb("ME", "ULRU.I", 3) +#
	plot.rgb("ME", "ULRU.S", 3) +#
	plot.rgb("ME", "CARYA.C", 3) +#
	plot.rgb("ME", "CARYA.D", 3) +#
	plot.rgb("ME", "CARYA.I", 3) +#
	plot.rgb("ME", "CARYA.S", 3) +#
#
	plot.rgb("ME", "SAAL.C", 3) +#
	plot.rgb("ME", "SAAL.D", 3) +#
	plot.rgb("ME", "SAAL.I", 3) +#
	plot.rgb("ME", "SAAL.S", 3) +#
	# Morgan Monroe#
	plot.rgb("IN", "ACRU.C", 3) +#
	plot.rgb("IN", "ACRU.D", 3) +#
	plot.rgb("IN", "ACRU.I", 3) +#
	plot.rgb("IN", "ACRU.S", 3) +#
	plot.rgb("IN", "PIST.C", 3) +#
	plot.rgb("IN", "PIST.D", 3) +#
	plot.rgb("IN", "PIST.I", 3) +#
	plot.rgb("IN", "PIST.S", 3) +#
#
	plot.rgb("IN", "TSCA.C", 3) +#
	plot.rgb("IN", "TSCA.D", 3) +#
	plot.rgb("IN", "TSCA.I", 3) +#
	plot.rgb("IN", "TSCA.S", 3) +#
	plot.rgb("IN", "QURU.C", 3) +#
	plot.rgb("IN", "QURU.D", 3) +#
	plot.rgb("IN", "QURU.I", 3) +#
	plot.rgb("IN", "QURU.S", 3) +#
	plot.rgb("IN", "QUVE.C", 3) +#
	plot.rgb("IN", "QUVE.D", 3) +#
	plot.rgb("IN", "QUVE.I", 3) +#
	plot.rgb("IN", "QUVE.S", 3) +#
	plot.rgb("IN", "FRAX.C", 3) +#
	plot.rgb("IN", "FRAX.D", 3) +#
	plot.rgb("IN", "FRAX.I", 3) +#
	plot.rgb("IN", "FRAX.S", 3) +#
#
	plot.rgb("IN", "BETULA.C", 3) +#
	plot.rgb("IN", "BETULA.D", 3) +#
	plot.rgb("IN", "BETULA.I", 3) +#
	plot.rgb("IN", "BETULA.S", 3) +#
	plot.rgb("IN", "ACSA.C", 3) +#
	plot.rgb("IN", "ACSA.D", 3) +#
	plot.rgb("IN", "ACSA.I", 3) +#
	plot.rgb("IN", "ACSA.S", 3) +#
	plot.rgb("IN", "QUAL.C", 3) +#
	plot.rgb("IN", "QUAL.D", 3) +#
	plot.rgb("IN", "QUAL.I", 3) +#
	plot.rgb("IN", "QUAL.S", 3) +#
	plot.rgb("IN", "FAGR.C", 3) +#
	plot.rgb("IN", "FAGR.D", 3) +#
	plot.rgb("IN", "FAGR.I", 3) +#
	plot.rgb("IN", "FAGR.S", 3) +#
	plot.rgb("IN", "ULRU.C", 3) +#
	plot.rgb("IN", "ULRU.D", 3) +#
	plot.rgb("IN", "ULRU.I", 3) +#
	plot.rgb("IN", "ULRU.S", 3) +#
	plot.rgb("IN", "CARYA.C", 3) +#
	plot.rgb("IN", "CARYA.D", 3) +#
	plot.rgb("IN", "CARYA.I", 3) +#
	plot.rgb("IN", "CARYA.S", 3) +#
#
	plot.rgb("IN", "SAAL.C", 3) +#
	plot.rgb("IN", "SAAL.D", 3) +#
	plot.rgb("IN", "SAAL.I", 3) +#
	plot.rgb("IN", "SAAL.S", 3) +#
	# Missouri Ozark#
		plot.rgb("MO", "ACRU.C", 3) +#
	plot.rgb("MO", "ACRU.D", 3) +#
	plot.rgb("MO", "ACRU.I", 3) +#
	plot.rgb("MO", "ACRU.S", 3) +#
	plot.rgb("MO", "PIST.C", 3) +#
	plot.rgb("MO", "PIST.D", 3) +#
	plot.rgb("MO", "PIST.I", 3) +#
	plot.rgb("MO", "PIST.S", 3) +#
#
	plot.rgb("MO", "TSCA.C", 3) +#
	plot.rgb("MO", "TSCA.D", 3) +#
	plot.rgb("MO", "TSCA.I", 3) +#
	plot.rgb("MO", "TSCA.S", 3) +#
	plot.rgb("MO", "QURU.C", 3) +#
	plot.rgb("MO", "QURU.D", 3) +#
	plot.rgb("MO", "QURU.I", 3) +#
	plot.rgb("MO", "QURU.S", 3) +#
	plot.rgb("MO", "QUVE.C", 3) +#
	plot.rgb("MO", "QUVE.D", 3) +#
	plot.rgb("MO", "QUVE.I", 3) +#
	plot.rgb("MO", "QUVE.S", 3) +#
	plot.rgb("MO", "FRAX.C", 3) +#
	plot.rgb("MO", "FRAX.D", 3) +#
	plot.rgb("MO", "FRAX.I", 3) +#
	plot.rgb("MO", "FRAX.S", 3) +#
#
	plot.rgb("MO", "BETULA.C", 3) +#
	plot.rgb("MO", "BETULA.D", 3) +#
	plot.rgb("MO", "BETULA.I", 3) +#
	plot.rgb("MO", "BETULA.S", 3) +#
	plot.rgb("MO", "ACSA.C", 3) +#
	plot.rgb("MO", "ACSA.D", 3) +#
	plot.rgb("MO", "ACSA.I", 3) +#
	plot.rgb("MO", "ACSA.S", 3) +#
	plot.rgb("MO", "QUAL.C", 3) +#
	plot.rgb("MO", "QUAL.D", 3) +#
	plot.rgb("MO", "QUAL.I", 3) +#
	plot.rgb("MO", "QUAL.S", 3) +#
	plot.rgb("MO", "FAGR.C", 3) +#
	plot.rgb("MO", "FAGR.D", 3) +#
	plot.rgb("MO", "FAGR.I", 3) +#
	plot.rgb("MO", "FAGR.S", 3) +#
	plot.rgb("MO", "ULRU.C", 3) +#
	plot.rgb("MO", "ULRU.D", 3) +#
	plot.rgb("MO", "ULRU.I", 3) +#
	plot.rgb("MO", "ULRU.S", 3) +#
	plot.rgb("MO", "CARYA.C", 3) +#
	plot.rgb("MO", "CARYA.D", 3) +#
	plot.rgb("MO", "CARYA.I", 3) +#
	plot.rgb("MO", "CARYA.S", 3) +#
#
	plot.rgb("MO", "SAAL.C", 3) +#
	plot.rgb("MO", "SAAL.D", 3) +#
	plot.rgb("MO", "SAAL.I", 3) +#
	plot.rgb("MO", "SAAL.S", 3) +#
	# Oak Openings#
			plot.rgb("OH", "ACRU.C", 3) +#
	plot.rgb("OH", "ACRU.D", 3) +#
	plot.rgb("OH", "ACRU.I", 3) +#
	plot.rgb("OH", "ACRU.S", 3) +#
	plot.rgb("OH", "PIST.C", 3) +#
	plot.rgb("OH", "PIST.D", 3) +#
	plot.rgb("OH", "PIST.I", 3) +#
	plot.rgb("OH", "PIST.S", 3) +#
#
	plot.rgb("OH", "TSCA.C", 3) +#
	plot.rgb("OH", "TSCA.D", 3) +#
	plot.rgb("OH", "TSCA.I", 3) +#
	plot.rgb("OH", "TSCA.S", 3) +#
	plot.rgb("OH", "QURU.C", 3) +#
	plot.rgb("OH", "QURU.D", 3) +#
	plot.rgb("OH", "QURU.I", 3) +#
	plot.rgb("OH", "QURU.S", 3) +#
	plot.rgb("OH", "QUVE.C", 3) +#
	plot.rgb("OH", "QUVE.D", 3) +#
	plot.rgb("OH", "QUVE.I", 3) +#
	plot.rgb("OH", "QUVE.S", 3) +#
	plot.rgb("OH", "FRAX.C", 3) +#
	plot.rgb("OH", "FRAX.D", 3) +#
	plot.rgb("OH", "FRAX.I", 3) +#
	plot.rgb("OH", "FRAX.S", 3) +#
#
	plot.rgb("OH", "BETULA.C", 3) +#
	plot.rgb("OH", "BETULA.D", 3) +#
	plot.rgb("OH", "BETULA.I", 3) +#
	plot.rgb("OH", "BETULA.S", 3) +#
	plot.rgb("OH", "ACSA.C", 3) +#
	plot.rgb("OH", "ACSA.D", 3) +#
	plot.rgb("OH", "ACSA.I", 3) +#
	plot.rgb("OH", "ACSA.S", 3) +#
	plot.rgb("OH", "QUAL.C", 3) +#
	plot.rgb("OH", "QUAL.D", 3) +#
	plot.rgb("OH", "QUAL.I", 3) +#
	plot.rgb("OH", "QUAL.S", 3) +#
	plot.rgb("OH", "FAGR.C", 3) +#
	plot.rgb("OH", "FAGR.D", 3) +#
	plot.rgb("OH", "FAGR.I", 3) +#
	plot.rgb("OH", "FAGR.S", 3) +#
	plot.rgb("OH", "ULRU.C", 3) +#
	plot.rgb("OH", "ULRU.D", 3) +#
	plot.rgb("OH", "ULRU.I", 3) +#
	plot.rgb("OH", "ULRU.S", 3) +#
	plot.rgb("OH", "CARYA.C", 3) +#
	plot.rgb("OH", "CARYA.D", 3) +#
	plot.rgb("OH", "CARYA.I", 3) +#
	plot.rgb("OH", "CARYA.S", 3) +#
#
	plot.rgb("OH", "SAAL.C", 3) +#
	plot.rgb("OH", "SAAL.D", 3) +#
	plot.rgb("OH", "SAAL.I", 3) +#
	plot.rgb("OH", "SAAL.S", 3)#
dev.off()	#
# Just plotting the BAI fits#
summary(data.graph)#
ggplot(data.graph) + facet_wrap(group.cc~Site) +#
  scale_x_continuous(expand=c(0,0), name="Year") +#
  scale_y_continuous(expand=c(0,0), name="BAI") +#
  # facet_wrap(~TreeID, scales="free_y", space="free") +#
  # geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
  geom_line(aes(x=Year, y=fit.full), size=2, alpha=0.5) +#
  geom_ribbon(aes(x=Year, ymin=fit.full.lwr, ymax=fit.full.upr), alpha=0.3)#
#
# Plotting the Effects#
pdf("figures/gam3/gam3_influence_in_time_all.pdf", width= 13, height = 8.5)#
ggplot(data.graph) + facet_wrap(group.cc~State) +#
	scale_x_continuous(expand=c(0,0), name="Year") +#
	scale_y_continuous(expand=c(0,0), name="Effect on RW (in mm)") +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_line(aes(x=Year, y=fit.tmean), size=2, color="red") +#
	geom_line(aes(x=Year, y=fit.precip), size=2, color="blue") +#
	geom_line(aes(x=Year, y=fit.dbh.recon), size=2, color="green")#
dev.off()#
#########################################################################
#########################################################################
# Oaks only for Ameridendro#
pdf("figures/gam3/gam3_SPP_CC_BAI_limiting_factors_All_oaks.pdf", width= 13, height = 8.5)#
ggplot(data = data.graph[substr(data.graph$group, 1,2)=="QU",]) + facet_grid(group.cc ~ State) +#
	scale_x_continuous(expand=c(0,0), name="Year") +#
	scale_y_continuous(expand=c(0,0), name="BAI") +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_line(aes(x=Year, y=BA.inc), size=2, alpha=0.5) +#
	geom_ribbon(aes(x=Year, ymin=BA.inc.lwr, ymax=BA.inc.upr), alpha=0.3) +#
	geom_line(aes(x=Year, y = 0), linetype="dashed") +#
	# Harvard#
	plot.rgb("MA", "QURU.C", 3) +#
	plot.rgb("MA", "QURU.D", 3) +#
	plot.rgb("MA", "QURU.I", 3) +#
	plot.rgb("MA", "QURU.S", 3) +#
	plot.rgb("MA", "QUVE.C", 3) +#
	plot.rgb("MA", "QUVE.D", 3) +#
	plot.rgb("MA", "QUVE.I", 3) +#
	plot.rgb("MA", "QUVE.S", 3) +#
	plot.rgb("MA", "QUAL.C", 3) +#
	plot.rgb("MA", "QUAL.D", 3) +#
	plot.rgb("MA", "QUAL.I", 3) +#
	plot.rgb("MA", "QUAL.S", 3) +#
	# Howland#
	plot.rgb("ME", "QURU.C", 3) +#
	plot.rgb("ME", "QURU.D", 3) +#
	plot.rgb("ME", "QURU.I", 3) +#
	plot.rgb("ME", "QURU.S", 3) +#
	plot.rgb("ME", "QUVE.C", 3) +#
	plot.rgb("ME", "QUVE.D", 3) +#
	plot.rgb("ME", "QUVE.I", 3) +#
	plot.rgb("ME", "QUVE.S", 3) +#
	plot.rgb("ME", "QUAL.C", 3) +#
	plot.rgb("ME", "QUAL.D", 3) +#
	plot.rgb("ME", "QUAL.I", 3) +#
	plot.rgb("ME", "QUAL.S", 3) +#
	# Morgan Monroe#
	plot.rgb("IN", "QURU.C", 3) +#
	plot.rgb("IN", "QURU.D", 3) +#
	plot.rgb("IN", "QURU.I", 3) +#
	plot.rgb("IN", "QURU.S", 3) +#
	plot.rgb("IN", "QUVE.C", 3) +#
	plot.rgb("IN", "QUVE.D", 3) +#
	plot.rgb("IN", "QUVE.I", 3) +#
	plot.rgb("IN", "QUVE.S", 3) +#
	plot.rgb("IN", "QUAL.C", 3) +#
	plot.rgb("IN", "QUAL.D", 3) +#
	plot.rgb("IN", "QUAL.I", 3) +#
	plot.rgb("IN", "QUAL.S", 3) +#
	# Missouri Ozark#
	plot.rgb("MO", "QURU.C", 3) +#
	plot.rgb("MO", "QURU.D", 3) +#
	plot.rgb("MO", "QURU.I", 3) +#
	plot.rgb("MO", "QURU.S", 3) +#
	plot.rgb("MO", "QUVE.C", 3) +#
	plot.rgb("MO", "QUVE.D", 3) +#
	plot.rgb("MO", "QUVE.I", 3) +#
	plot.rgb("MO", "QUVE.S", 3) +#
	plot.rgb("MO", "QUAL.C", 3) +#
	plot.rgb("MO", "QUAL.D", 3) +#
	plot.rgb("MO", "QUAL.I", 3) +#
	plot.rgb("MO", "QUAL.S", 3) +#
	# Oak Openings#
	plot.rgb("OH", "QURU.C", 3) +#
	plot.rgb("OH", "QURU.D", 3) +#
	plot.rgb("OH", "QURU.I", 3) +#
	plot.rgb("OH", "QURU.S", 3) +#
	plot.rgb("OH", "QUVE.C", 3) +#
	plot.rgb("OH", "QUVE.D", 3) +#
	plot.rgb("OH", "QUVE.I", 3) +#
	plot.rgb("OH", "QUVE.S", 3) +#
	plot.rgb("OH", "QUAL.C", 3) +#
	plot.rgb("OH", "QUAL.D", 3) +#
	plot.rgb("OH", "QUAL.I", 3) +#
	plot.rgb("OH", "QUAL.S", 3) #
dev.off()	#
# Just plotting the BAI fits#
summary(data.graph)#
ggplot(data.graph) + facet_wrap(group.cc~Site) +#
  scale_x_continuous(expand=c(0,0), name="Year") +#
  scale_y_continuous(expand=c(0,0), name="BAI") +#
  # facet_wrap(~TreeID, scales="free_y", space="free") +#
  # geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
  geom_line(aes(x=Year, y=fit.full), size=2, alpha=0.5) +#
  geom_ribbon(aes(x=Year, ymin=fit.full.lwr, ymax=fit.full.upr), alpha=0.3)#
#
# Plotting the Effects#
pdf("figures/gam3/gam3_influence_in_time_all_oaks.pdf", width= 13, height = 8.5)#
ggplot(data.graph[substr(data.graph$group, 1,2)=="QU",]) + facet_grid(group.cc~State) +#
	scale_x_continuous(expand=c(0,0), name="Year") +#
	scale_y_continuous(expand=c(0,0), name="Effect on RW (in mm)") +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_line(aes(x=Year, y=fit.tmean), size=2, color="red") +#
	geom_line(aes(x=Year, y=fit.precip), size=2, color="blue") +#
	geom_line(aes(x=Year, y=fit.dbh.recon), size=2, color="green")#
dev.off()#
# Separating things out By canopy class to see things better#
#########################################################
#########################################################
# Dominant#
#########################################################
#########################################################
pdf("figures/gam3/gam3_SPP_CC_BAI_limiting_factors_D.pdf", width= 13, height = 8.5)#
ggplot(data = data.graph[data.graph$Canopy.Class=="D",]) + facet_grid(group ~ State) +#
	scale_x_continuous(expand=c(0,0), name="Year") +#
	scale_y_continuous(expand=c(0,0), name="BAI") +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_line(aes(x=Year, y=BA.inc), size=2, alpha=0.5) +#
	geom_ribbon(aes(x=Year, ymin=BA.inc.lwr, ymax=BA.inc.upr), alpha=0.3) +#
	geom_line(aes(x=Year, y = 0), linetype="dashed") +#
	# Harvard#
	plot.rgb("MA", "ACRU.D", 3) +#
	plot.rgb("MA", "PIST.D", 3) +#
	plot.rgb("MA", "TSCA.D", 3) +#
	plot.rgb("MA", "QURU.D", 3) +#
	plot.rgb("MA", "QUVE.D", 3) +#
	plot.rgb("MA", "FRAX.D", 3) +#
	plot.rgb("MA", "BETULA.D", 3) +#
	plot.rgb("MA", "ACSA.D", 3) +#
	plot.rgb("MA", "QUAL.D", 3) +#
	plot.rgb("MA", "FAGR.D", 3) +#
	plot.rgb("MA", "ULRU.D", 3) +#
	plot.rgb("MA", "CARYA.D", 3) +#
	plot.rgb("MA", "SAAL.D", 3) +#
	# Howland#
	plot.rgb("ME", "ACRU.D", 3) +#
	plot.rgb("ME", "PIST.D", 3) +#
	plot.rgb("ME", "TSCA.D", 3) +#
	plot.rgb("ME", "QURU.D", 3) +#
	plot.rgb("ME", "QUVE.D", 3) +#
	plot.rgb("ME", "FRAX.D", 3) +#
	plot.rgb("ME", "BETULA.D", 3) +#
	plot.rgb("ME", "ACSA.D", 3) +#
	plot.rgb("ME", "QUAL.D", 3) +#
	plot.rgb("ME", "FAGR.D", 3) +#
	plot.rgb("ME", "ULRU.D", 3) +#
	plot.rgb("ME", "CARYA.D", 3) +#
	plot.rgb("ME", "SAAL.D", 3) +#
	# Morgan Monroe#
	plot.rgb("IN", "ACRU.D", 3) +#
	plot.rgb("IN", "PIST.D", 3) +#
	plot.rgb("IN", "TSCA.D", 3) +#
	plot.rgb("IN", "QURU.D", 3) +#
	plot.rgb("IN", "QUVE.D", 3) +#
	plot.rgb("IN", "FRAX.D", 3) +#
	plot.rgb("IN", "BETULA.D", 3) +#
	plot.rgb("IN", "ACSA.D", 3) +#
	plot.rgb("IN", "QUAL.D", 3) +#
	plot.rgb("IN", "FAGR.D", 3) +#
	plot.rgb("IN", "ULRU.D", 3) +#
	plot.rgb("IN", "CARYA.D", 3) +#
	plot.rgb("IN", "SAAL.D", 3) +#
	# Missouri Ozark#
	plot.rgb("MO", "ACRU.D", 3) +#
	plot.rgb("MO", "PIST.D", 3) +#
	plot.rgb("MO", "TSCA.D", 3) +#
	plot.rgb("MO", "QURU.D", 3) +#
	plot.rgb("MO", "QUVE.D", 3) +#
	plot.rgb("MO", "FRAX.D", 3) +#
	plot.rgb("MO", "BETULA.D", 3) +#
	plot.rgb("MO", "ACSA.D", 3) +#
	plot.rgb("MO", "QUAL.D", 3) +#
	plot.rgb("MO", "FAGR.D", 3) +#
	plot.rgb("MO", "ULRU.D", 3) +#
	plot.rgb("MO", "CARYA.D", 3) +#
	plot.rgb("MO", "SAAL.D", 3) +#
	# Oak Openings#
	plot.rgb("OH", "ACRU.D", 3) +#
	plot.rgb("OH", "PIST.D", 3) +#
	plot.rgb("OH", "TSCA.D", 3) +#
	plot.rgb("OH", "QURU.D", 3) +#
	plot.rgb("OH", "QUVE.D", 3) +#
	plot.rgb("OH", "FRAX.D", 3) +#
	plot.rgb("OH", "BETULA.D", 3) +#
	plot.rgb("OH", "ACSA.D", 3) +#
	plot.rgb("OH", "QUAL.D", 3) +#
	plot.rgb("OH", "FAGR.D", 3) +#
	plot.rgb("OH", "ULRU.D", 3) +#
	plot.rgb("OH", "CARYA.D", 3) +#
	plot.rgb("OH", "SAAL.D", 3) +#
	labs(title= "Dominant Trees (group.cc)", x="Year", y=expression(bold(paste("BAI (mm2 / year)"))))#
dev.off()	#
# Just plotting the BAI fits#
summary(data.graph)#
ggplot(data.graph) + facet_wrap(group.cc~Site) +#
  scale_x_continuous(expand=c(0,0), name="Year") +#
  scale_y_continuous(expand=c(0,0), name="BAI") +#
  # facet_wrap(~TreeID, scales="free_y", space="free") +#
  # geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
  geom_line(aes(x=Year, y=fit.full), size=2, alpha=0.5) +#
  geom_ribbon(aes(x=Year, ymin=fit.full.lwr, ymax=fit.full.upr), alpha=0.3)#
#
# Plotting the Effects#
pdf("figures/gam3/gam3_influence_in_time_D.pdf", width= 13, height = 8.5)#
ggplot(data.graph[data.graph$Canopy.Class=="D",]) + facet_grid(group~State) +#
	scale_x_continuous(expand=c(0,0), name="Year") +#
	scale_y_continuous(expand=c(0,0), name="Effect on RW (in mm)") +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_line(aes(x=Year, y=fit.tmean), size=2, color="red") +#
	geom_line(aes(x=Year, y=fit.precip), size=2, color="blue") +#
	geom_line(aes(x=Year, y=fit.dbh.recon), size=2, color="green")+#
	labs(title= "Dominant Effects (group.cc)")#
dev.off()#
#
#################################################################
#################################################################
# Intermediate Trees#
#################################################################
#################################################################
#
pdf("figures/gam3/gam3_SPP_CC_BAI_limiting_factors_I.pdf", width= 13, height = 8.5)#
ggplot(data = data.graph[data.graph$Canopy.Class=="I",]) + facet_grid(group ~ State) +#
	scale_x_continuous(expand=c(0,0), name="Year") +#
	scale_y_continuous(expand=c(0,0), name="BAI") +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_line(aes(x=Year, y=BA.inc), size=2, alpha=0.5) +#
	geom_ribbon(aes(x=Year, ymin=BA.inc.lwr, ymax=BA.inc.upr), alpha=0.3) +#
	geom_line(aes(x=Year, y = 0), linetype="dashed") +#
	# Harvard#
	plot.rgb("MA", "ACRU.I", 3) +#
	plot.rgb("MA", "PIST.I", 3) +#
	plot.rgb("MA", "TSCA.I", 3) +#
	plot.rgb("MA", "QURU.I", 3) +#
	plot.rgb("MA", "QUVE.I", 3) +#
	plot.rgb("MA", "FRAX.I", 3) +#
	plot.rgb("MA", "BETULA.I", 3) +#
	plot.rgb("MA", "ACSA.I", 3) +#
	plot.rgb("MA", "QUAL.I", 3) +#
	plot.rgb("MA", "FAGR.I", 3) +#
	plot.rgb("MA", "ULRU.I", 3) +#
	plot.rgb("MA", "CARYA.I", 3) +#
	plot.rgb("MA", "SAAL.I", 3) +#
	# Howland#
	plot.rgb("ME", "ACRU.I", 3) +#
	plot.rgb("ME", "PIST.I", 3) +#
	plot.rgb("ME", "TSCA.I", 3) +#
	plot.rgb("ME", "QURU.I", 3) +#
	plot.rgb("ME", "QUVE.I", 3) +#
	plot.rgb("ME", "FRAX.I", 3) +#
	plot.rgb("ME", "BETULA.I", 3) +#
	plot.rgb("ME", "ACSA.I", 3) +#
	plot.rgb("ME", "QUAL.I", 3) +#
	plot.rgb("ME", "FAGR.I", 3) +#
	plot.rgb("ME", "ULRU.I", 3) +#
	plot.rgb("ME", "CARYA.I", 3) +#
	plot.rgb("ME", "SAAL.I", 3) +#
	# Morgan Monroe#
	plot.rgb("IN", "ACRU.I", 3) +#
	plot.rgb("IN", "PIST.I", 3) +#
	plot.rgb("IN", "TSCA.I", 3) +#
	plot.rgb("IN", "QURU.I", 3) +#
	plot.rgb("IN", "QUVE.I", 3) +#
	plot.rgb("IN", "FRAX.I", 3) +#
	plot.rgb("IN", "BETULA.I", 3) +#
	plot.rgb("IN", "ACSA.I", 3) +#
	plot.rgb("IN", "QUAL.I", 3) +#
	plot.rgb("IN", "FAGR.I", 3) +#
	plot.rgb("IN", "ULRU.I", 3) +#
	plot.rgb("IN", "CARYA.I", 3) +#
	plot.rgb("IN", "SAAL.I", 3) +#
	# Missouri Ozark#
	plot.rgb("MO", "ACRU.I", 3) +#
	plot.rgb("MO", "PIST.I", 3) +#
	plot.rgb("MO", "TSCA.I", 3) +#
	plot.rgb("MO", "QURU.I", 3) +#
	plot.rgb("MO", "QUVE.I", 3) +#
	plot.rgb("MO", "FRAX.I", 3) +#
	plot.rgb("MO", "BETULA.I", 3) +#
	plot.rgb("MO", "ACSA.I", 3) +#
	plot.rgb("MO", "QUAL.I", 3) +#
	plot.rgb("MO", "FAGR.I", 3) +#
	plot.rgb("MO", "ULRU.I", 3) +#
	plot.rgb("MO", "CARYA.I", 3) +#
	plot.rgb("MO", "SAAL.I", 3) +#
	# Oak Openings#
	plot.rgb("OH", "ACRU.I", 3) +#
	plot.rgb("OH", "PIST.I", 3) +#
	plot.rgb("OH", "TSCA.I", 3) +#
	plot.rgb("OH", "QURU.I", 3) +#
	plot.rgb("OH", "QUVE.I", 3) +#
	plot.rgb("OH", "FRAX.I", 3) +#
	plot.rgb("OH", "BETULA.I", 3) +#
	plot.rgb("OH", "ACSA.I", 3) +#
	plot.rgb("OH", "QUAL.I", 3) +#
	plot.rgb("OH", "FAGR.I", 3) +#
	plot.rgb("OH", "ULRU.I", 3) +#
	plot.rgb("OH", "CARYA.I", 3) +#
	plot.rgb("OH", "SAAL.I", 3) +#
	labs(title= "Intermediate Trees (group.cc)", x="Year", y=expression(bold(paste("BAI (mm2 / year)"))))#
dev.off()	#
# Just plotting the BAI fits#
summary(data.graph)#
ggplot(data.graph) + facet_wrap(group.cc~Site) +#
  scale_x_continuous(expand=c(0,0), name="Year") +#
  scale_y_continuous(expand=c(0,0), name="BAI") +#
  # facet_wrap(~TreeID, scales="free_y", space="free") +#
  # geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
  geom_line(aes(x=Year, y=fit.full), size=2, alpha=0.5) +#
  geom_ribbon(aes(x=Year, ymin=fit.full.lwr, ymax=fit.full.upr), alpha=0.3)#
#
# Plotting the Effects#
pdf("figures/gam3/gam3_influence_in_time_I.pdf", width= 13, height = 8.5)#
ggplot(data.graph[data.graph$Canopy.Class=="I",]) + facet_grid(group~State) +#
	scale_x_continuous(expand=c(0,0), name="Year") +#
	scale_y_continuous(expand=c(0,0), name="Effect on RW (in mm)") +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_line(aes(x=Year, y=fit.tmean), size=2, color="red") +#
	geom_line(aes(x=Year, y=fit.precip), size=2, color="blue") +#
	geom_line(aes(x=Year, y=fit.dbh.recon), size=2, color="green")+#
	labs(title= "Intermediate Effects (group.cc)")#
dev.off()#
#################################################################
#################################################################
# Suppressed Trees#
#################################################################
#################################################################
#
pdf("figures/gam3/gam3_SPP_CC_BAI_limiting_factors_S.pdf", width= 13, height = 8.5)#
ggplot(data = data.graph[data.graph$Canopy.Class=="S",]) + facet_grid(group ~ State) +#
	scale_x_continuous(expand=c(0,0), name="Year") +#
	scale_y_continuous(expand=c(0,0), name="BAI") +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_line(aes(x=Year, y=BA.inc), size=2, alpha=0.5) +#
	geom_ribbon(aes(x=Year, ymin=BA.inc.lwr, ymax=BA.inc.upr), alpha=0.3) +#
	geom_line(aes(x=Year, y = 0), linetype="dashed") +#
	# Harvard#
	plot.rgb("MA", "ACRU.S", 3) +#
	plot.rgb("MA", "PIST.S", 3) +#
	plot.rgb("MA", "TSCA.S", 3) +#
	plot.rgb("MA", "QURU.S", 3) +#
	plot.rgb("MA", "QUVE.S", 3) +#
	plot.rgb("MA", "FRAX.S", 3) +#
	plot.rgb("MA", "BETULA.S", 3) +#
	plot.rgb("MA", "ACSA.S", 3) +#
	plot.rgb("MA", "QUAL.S", 3) +#
	plot.rgb("MA", "FAGR.S", 3) +#
	plot.rgb("MA", "ULRU.S", 3) +#
	plot.rgb("MA", "CARYA.S", 3) +#
	plot.rgb("MA", "SAAL.S", 3) +#
	# Howland#
	plot.rgb("ME", "ACRU.S", 3) +#
	plot.rgb("ME", "PIST.S", 3) +#
	plot.rgb("ME", "TSCA.S", 3) +#
	plot.rgb("ME", "QURU.S", 3) +#
	plot.rgb("ME", "QUVE.S", 3) +#
	plot.rgb("ME", "FRAX.S", 3) +#
	plot.rgb("ME", "BETULA.S", 3) +#
	plot.rgb("ME", "ACSA.S", 3) +#
	plot.rgb("ME", "QUAL.S", 3) +#
	plot.rgb("ME", "FAGR.S", 3) +#
	plot.rgb("ME", "ULRU.S", 3) +#
	plot.rgb("ME", "CARYA.S", 3) +#
	plot.rgb("ME", "SAAL.S", 3) +#
	# Morgan Monroe#
	plot.rgb("IN", "ACRU.S", 3) +#
	plot.rgb("IN", "PIST.S", 3) +#
	plot.rgb("IN", "TSCA.S", 3) +#
	plot.rgb("IN", "QURU.S", 3) +#
	plot.rgb("IN", "QUVE.S", 3) +#
	plot.rgb("IN", "FRAX.S", 3) +#
	plot.rgb("IN", "BETULA.S", 3) +#
	plot.rgb("IN", "ACSA.S", 3) +#
	plot.rgb("IN", "QUAL.S", 3) +#
	plot.rgb("IN", "FAGR.S", 3) +#
	plot.rgb("IN", "ULRU.S", 3) +#
	plot.rgb("IN", "CARYA.S", 3) +#
	plot.rgb("IN", "SAAL.S", 3) +#
	# Missouri Ozark#
	plot.rgb("MO", "ACRU.S", 3) +#
	plot.rgb("MO", "PIST.S", 3) +#
	plot.rgb("MO", "TSCA.S", 3) +#
	plot.rgb("MO", "QURU.S", 3) +#
	plot.rgb("MO", "QUVE.S", 3) +#
	plot.rgb("MO", "FRAX.S", 3) +#
	plot.rgb("MO", "BETULA.S", 3) +#
	plot.rgb("MO", "ACSA.S", 3) +#
	plot.rgb("MO", "QUAL.S", 3) +#
	plot.rgb("MO", "FAGR.S", 3) +#
	plot.rgb("MO", "ULRU.S", 3) +#
	plot.rgb("MO", "CARYA.S", 3) +#
	plot.rgb("MO", "SAAL.S", 3) +#
	# Oak Openings#
	plot.rgb("OH", "ACRU.S", 3) +#
	plot.rgb("OH", "PIST.S", 3) +#
	plot.rgb("OH", "TSCA.S", 3) +#
	plot.rgb("OH", "QURU.S", 3) +#
	plot.rgb("OH", "QUVE.S", 3) +#
	plot.rgb("OH", "FRAX.S", 3) +#
	plot.rgb("OH", "BETULA.S", 3) +#
	plot.rgb("OH", "ACSA.S", 3) +#
	plot.rgb("OH", "QUAL.S", 3) +#
	plot.rgb("OH", "FAGR.S", 3) +#
	plot.rgb("OH", "ULRU.S", 3) +#
	plot.rgb("OH", "CARYA.S", 3) +#
	plot.rgb("OH", "SAAL.S", 3) +#
	labs(title= "Suppressed Trees (group.cc)", x="Year", y=expression(bold(paste("BAI (mm2 / year)"))))#
dev.off()	#
# Just plotting the BAI fits#
summary(data.graph)#
ggplot(data.graph) + facet_wrap(group.cc~Site) +#
  scale_x_continuous(expand=c(0,0), name="Year") +#
  scale_y_continuous(expand=c(0,0), name="BAI") +#
  # facet_wrap(~TreeID, scales="free_y", space="free") +#
  # geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
  geom_line(aes(x=Year, y=fit.full), size=2, alpha=0.5) +#
  geom_ribbon(aes(x=Year, ymin=fit.full.lwr, ymax=fit.full.upr), alpha=0.3)#
#
# Plotting the Effects#
pdf("figures/gam3/gam3_influence_in_time_S.pdf", width= 13, height = 8.5)#
ggplot(data.graph[data.graph$Canopy.Class=="S",]) + facet_grid(group~State) +#
	scale_x_continuous(expand=c(0,0), name="Year") +#
	scale_y_continuous(expand=c(0,0), name="Effect on RW (in mm)") +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_line(aes(x=Year, y=fit.tmean), size=2, color="red") +#
	geom_line(aes(x=Year, y=fit.precip), size=2, color="blue") +#
	geom_line(aes(x=Year, y=fit.dbh.recon), size=2, color="green")+#
	labs(title= "Suppressed Effects (group.cc)")#
dev.off()
test2 <- test[test$Year < 1994,]
library(mgcv)#
library(ggplot2)#
library(car)#
# Christy's GAMM code#
#
# gam1 <- gamm(Y ~  s(Biomass, bs="cr", k=3, by=PFT) + s(tair, k=k, by=PFT) + s(precipf, k=k, by=PFT) + s(CO2, k=k, by=PFT), random=list(PlotID=~1), data=data) #
#
# Loading in my data#
#
data.use <- read.csv("processed_data/AllSites_tree_plus_climate_and_BA.csv", header=T)#
#
data.use$group <- data.use$Species#
data.use$group <- recode(data.use$group, "'CAOV' = 'CARYA'; 'CACO' = 'CARYA'; #
  							'CATE' = 'CARYA'; 'ACSAC' = 'ACSA'; 'BEAL' = 'BETULA'; 'BELE' = 'BETULA'; 'QUMU' = 'QUAL'")#
#
data.use$group.plot <- as.factor(paste(data.use$group, data.use$PlotID, sep="."))#
#
data.use$Canopy.Class <- recode(data.use$Canopy.Class, "'C' = 'D'")#
summary(data.use)#
# reducing the amount of data for the test runs#
sites.use <- c("Harvard", "Howland", "Morgan Monroe State Park", "Oak Openings Toledo", "Missouri Ozark")#
#
test <- data.use[data.use$Site %in% sites.use & !is.na(data.use$RW) & !is.na(data.use$BA.inc),]#
summary(test)#
#
test$group.cc <- as.factor(paste(test$group, test$Canopy.Class, sep="."))#
summary(test)#
# Get a list of what predictors & responses I'm using#
predictors.all <- c("tmean", "precip", "Species", "dbh.recon", "Canopy.Class", "spp.plot", "group", "group.plot", "group.cc")#
#
# Getting rid of observations that have NAs in the important variables#
test <- test[complete.cases(test[,predictors.all]),]#
test <- test[test$Live.Dead=="LIVE" & !test$Canopy.Class=="F",]#
#
# Subsetting to a set of species that we have enough data to feel good about#
#species.use <- c("TSCA", "QURU", "ACRU", "BEAL", "ACSA", "LITU", "QUAL", "CAOV", "CACO", "CATE", "JUVI", "QUVE", "PCRU", "THOC", "PIST")#
group.use <- c("ACRU", "ACSA", "BETULA", "CARYA", "FAGR", "FRAX", "PIST", "QUAL", "QURU", "QUVE", "SAAL", "TSCA", "ULRU")#
#
test <- test[test$group %in% group.use,]#
#
summary(test)#
#
par(new=F)#
plot(test[test$TreeID=="MMA003", "BA.inc"]~ test[test$TreeID=="MMA003","Year"], type="l")#
summary(test)#
summary(test$Live.Dead)#
summary(test$Canopy.Class)#
# RW <- test$RW#
# temp <- test$tmean#
# precip <- test$precip#
# canopy <- test$Canopy.Class#
# size <- test$DBH..cm.#
# species <- unique(test$Species)#
# library(ggplot2)#
# ggplot(data=test) +#
   # facet_wrap(~PlotID) +#
   # geom_histogram(aes(x=dbh.recon))#
# ggplot(data=test) +#
   # facet_wrap(~Species) +#
   # geom_histogram(aes(x=dbh.recon))#
# hist(test$dbh.recon)#
# test2 <- test[test$group %in% c("QURU", "ACRU") & test$Year>=1980,]#
test2 <- test[test$Year < 1994,]
n <- 100#
data <- test2#
		n.out = n#
#
		new.dat <- data.frame(Model="species_response",#
							  Extent=as.factor(paste(min(data$Year), max(data$Year), sep="-")))#
		# Figure out which vars are numeric vs. factor#
		vars.num <- vector()#
		for(v in predictors.all){#
			if(class(data[,v]) %in% c("numeric", "integer")) vars.num <- c(vars.num, v)#
		}#
		# Getting the unique values of our factor variables and adding them to the data frame#
		# need to skip group & group.cc so we aren't trying to match Carya & Quercus etc#
		predictors.all <- predictors.all[!predictors.all %in% c("Species", "spp.plot")]#
		for(v in predictors.all[!predictors.all %in% vars.num & !(predictors.all %in% c("group", "group.cc"))]){#
			# if v is a factor, merge all unique values into the dataframe#
			var.temp <- data.frame(x=unique(data[,v])) #
			names(var.temp) <- v#
			new.dat <- merge(new.dat, var.temp, all.x=T, all.y=T)#
		}#
		# getting species from species.plot#
		new.dat$group <- as.factor(substr(new.dat$group.plot, 1, 4))#
		# Adding in the group.canopy class then getting rid of combinations we don't actually have in our data#
		new.dat$group.cc <- as.factor(paste(new.dat$group, new.dat$Canopy.Class, sep="."))#
		new.dat <- new.dat[new.dat$group.cc %in% unique(test$group.cc),]#
		summary(new.dat)#
		# Putting the numerical variables into an array and adding it in #
		var.temp <- data.frame(array(dim=c(n.out, length(vars.num))))#
		names(var.temp) <- vars.num#
		for(v in vars.num){#
			var.temp[,v] <- seq(min(data[,v], na.rm=T), max(data[,v], na.rm=T), length.out=n.out)#
		}								#
		new.dat <- merge(new.dat, var.temp, all.x=T, all.y=T)#
		summary(new.dat)
# GAM 3.1 for neil								#
		# SOurce & run the function#
		source("0_Calculate_GAMM_Posteriors.R")#
		g3.1.ci.terms.pred <- post.distns(model.gam=gam3.1.1, model.name="harv_mmf_cc.test", n=n, newdata=new.dat, vars=predictors.all, terms=T)#
		g3.1.ci.out <- g3.1.ci.terms.pred$ci # separting out the confidence interval #
		g3.1.ci.out[,predictors.all[!predictors.all %in% vars.num]] <- new.dat[,predictors.all[!predictors.all %in% vars.num]] # copying over our factor labels#
		g3.1.ci.out$x <- as.numeric(g3.1.ci.out$x) # making x numeric; will make factors NA#
		summary(g3.1.ci.out)#
		ggplot(data=g3.1.ci.out[g3.1.ci.out$Effect %in% c("tmean", "precip"), ]) + #
			facet_wrap(Canopy.Class~Effect, scales="free_x") +#
			geom_ribbon(aes(x=x, ymin=lwr, ymax=upr, fill=group), alpha=0.5) +#
			geom_line(aes(x=x, y=mean, color=group))
# GAM 3.1 for neil								#
		# SOurce & run the function#
		source("0_Calculate_GAMM_Posteriors.R")#
		g3.1.ci.terms.pred <- post.distns(model.gam=g3.1, model.name="harv_mmf_cc.test", n=n, newdata=new.dat, vars=predictors.all, terms=T)#
		g3.1.ci.out <- g3.1.ci.terms.pred$ci # separting out the confidence interval #
		g3.1.ci.out[,predictors.all[!predictors.all %in% vars.num]] <- new.dat[,predictors.all[!predictors.all %in% vars.num]] # copying over our factor labels#
		g3.1.ci.out$x <- as.numeric(g3.1.ci.out$x) # making x numeric; will make factors NA#
		summary(g3.1.ci.out)#
		ggplot(data=g3.1.ci.out[g3.1.ci.out$Effect %in% c("tmean", "precip"), ]) + #
			facet_wrap(Canopy.Class~Effect, scales="free_x") +#
			geom_ribbon(aes(x=x, ymin=lwr, ymax=upr, fill=group), alpha=0.5) +#
			geom_line(aes(x=x, y=mean, color=group))
g3.1.ci.terms.pred <- post.distns(model.gam=gam3.1, model.name="harv_mmf_cc.test", n=n, newdata=new.dat, vars=predictors.all, terms=T)
g3.1.ci.out <- g3.1.ci.terms.pred$ci # separting out the confidence interval #
		g3.1.ci.out[,predictors.all[!predictors.all %in% vars.num]] <- new.dat[,predictors.all[!predictors.all %in% vars.num]] # copying over our factor labels#
		g3.1.ci.out$x <- as.numeric(g3.1.ci.out$x) # making x numeric; will make factors NA#
		summary(g3.1.ci.out)
ggplot(data=g3.1.ci.out[g3.1.ci.out$Effect %in% c("tmean", "precip"), ]) + #
			facet_wrap(Canopy.Class~Effect, scales="free_x") +#
			geom_ribbon(aes(x=x, ymin=lwr, ymax=upr, fill=group), alpha=0.5) +#
			geom_line(aes(x=x, y=mean, color=group))
ggplot(data=g3.1.ci.out[g3.1.ci.out$Effect %in% c("tmean", "precip"), ]) + #
			facet_grid(Canopy.Class~Effect, scales="free_x") +#
			geom_ribbon(aes(x=x, ymin=lwr, ymax=upr, fill=group), alpha=0.5) +#
			geom_line(aes(x=x, y=mean, color=group))
ggplot(data=g3.1.ci.out[g3.1.ci.out$Effect %in% c("tmean", "precip"), ]) + #
			facet_grid(Canopy.Class~Effect, scales="free_x") +#
			geom_ribbon(aes(x=x, ymin=lwr, ymax=upr, fill=group), alpha=0.5) +#
			geom_line(aes(x=x, y=mean, color=group))+#
			scale_color_manual(values=colors.use) +#
			scale_fill_manual(values=colors.use)
spp.colors <- read.csv("spp.Colors.csv", header=T)	#
summary(spp.colors)	#
#
group.fig <- unique(g1.ci.out$group)#
group.fig <- group.fig[order(group.fig)]#
colors.use <- as.vector(c(paste(spp.colors[spp.colors$Species %in% group.fig, "color"])))
spp.colors <- read.csv("spp.Colors.csv", header=T)
summary(spp.colors)
group.fig <- unique(g1.ci.out$group)
group.fig <- unique(g3.1.ci.out$group)
group.fig <- group.fig[order(group.fig)]
colors.use <- as.vector(c(paste(spp.colors[spp.colors$Species %in% group.fig, "color"])))
ggplot(data=g3.1.ci.out[g3.1.ci.out$Effect %in% c("tmean", "precip"), ]) + #
			facet_grid(Canopy.Class~Effect, scales="free_x") +#
			geom_ribbon(aes(x=x, ymin=lwr, ymax=upr, fill=group), alpha=0.5) +#
			geom_line(aes(x=x, y=mean, color=group))+#
			scale_color_manual(values=colors.use) +#
			scale_fill_manual(values=colors.use)
n <- 100#
data <- test1#
		n.out = n#
#
		new.dat <- data.frame(Model="species_response",#
							  Extent=as.factor(paste(min(data$Year), max(data$Year), sep="-")))#
		# Figure out which vars are numeric vs. factor#
		vars.num <- vector()#
		for(v in predictors.all){#
			if(class(data[,v]) %in% c("numeric", "integer")) vars.num <- c(vars.num, v)#
		}#
		# Getting the unique values of our factor variables and adding them to the data frame#
		# need to skip group & group.cc so we aren't trying to match Carya & Quercus etc#
		predictors.all <- predictors.all[!predictors.all %in% c("Species", "spp.plot")]#
		for(v in predictors.all[!predictors.all %in% vars.num & !(predictors.all %in% c("group", "group.cc"))]){#
			# if v is a factor, merge all unique values into the dataframe#
			var.temp <- data.frame(x=unique(data[,v])) #
			names(var.temp) <- v#
			new.dat <- merge(new.dat, var.temp, all.x=T, all.y=T)#
		}#
		# getting species from species.plot#
		new.dat$group <- as.factor(substr(new.dat$group.plot, 1, 4))#
		# Adding in the group.canopy class then getting rid of combinations we don't actually have in our data#
		new.dat$group.cc <- as.factor(paste(new.dat$group, new.dat$Canopy.Class, sep="."))#
		new.dat <- new.dat[new.dat$group.cc %in% unique(test$group.cc),]#
		summary(new.dat)#
		# Putting the numerical variables into an array and adding it in #
		var.temp <- data.frame(array(dim=c(n.out, length(vars.num))))#
		names(var.temp) <- vars.num#
		for(v in vars.num){#
			var.temp[,v] <- seq(min(data[,v], na.rm=T), max(data[,v], na.rm=T), length.out=n.out)#
		}								#
		new.dat <- merge(new.dat, var.temp, all.x=T, all.y=T)#
		summary(new.dat)
data <- test#
		n.out = n#
#
		new.dat <- data.frame(Model="species_response",#
							  Extent=as.factor(paste(min(data$Year), max(data$Year), sep="-")))#
		# Figure out which vars are numeric vs. factor#
		vars.num <- vector()#
		for(v in predictors.all){#
			if(class(data[,v]) %in% c("numeric", "integer")) vars.num <- c(vars.num, v)#
		}#
		# Getting the unique values of our factor variables and adding them to the data frame#
		# need to skip group & group.cc so we aren't trying to match Carya & Quercus etc#
		predictors.all <- predictors.all[!predictors.all %in% c("Species", "spp.plot")]#
		for(v in predictors.all[!predictors.all %in% vars.num & !(predictors.all %in% c("group", "group.cc"))]){#
			# if v is a factor, merge all unique values into the dataframe#
			var.temp <- data.frame(x=unique(data[,v])) #
			names(var.temp) <- v#
			new.dat <- merge(new.dat, var.temp, all.x=T, all.y=T)#
		}#
		# getting species from species.plot#
		new.dat$group <- as.factor(substr(new.dat$group.plot, 1, 4))#
		# Adding in the group.canopy class then getting rid of combinations we don't actually have in our data#
		new.dat$group.cc <- as.factor(paste(new.dat$group, new.dat$Canopy.Class, sep="."))#
		new.dat <- new.dat[new.dat$group.cc %in% unique(test$group.cc),]#
		summary(new.dat)#
		# Putting the numerical variables into an array and adding it in #
		var.temp <- data.frame(array(dim=c(n.out, length(vars.num))))#
		names(var.temp) <- vars.num#
		for(v in vars.num){#
			var.temp[,v] <- seq(min(data[,v], na.rm=T), max(data[,v], na.rm=T), length.out=n.out)#
		}								#
		new.dat <- merge(new.dat, var.temp, all.x=T, all.y=T)#
		summary(new.dat)
ggplot(data=g1.ci.out[g1.ci.out$Effect %in% c("tmean", "precip"), ]) + #
			facet_grid(Canopy.Class~Effect, scales="free_x") +#
			geom_line(aes(x=x, y=0), linetype="dashed")+#
			geom_ribbon(aes(x=x, ymin=lwr, ymax=upr, fill=group), alpha=0.5) +#
			geom_line(aes(x=x, y=mean, color=group)) +#
			scale_color_manual(values=colors.use) +#
			scale_fill_manual(values=colors.use)
# Change which gamm you look at here!#
n <- 100						#
		# SOurce & run the function#
		source("0_Calculate_GAMM_Posteriors.R")#
		g1.ci.terms.pred <- post.distns(model.gam=gam1, model.name="species_response", n=n, newdata=new.dat, vars=predictors.all, terms=T)#
		g1.ci.out <- g1.ci.terms.pred$ci # separting out the confidence interval #
		g1.ci.out[,predictors.all[!predictors.all %in% vars.num]] <- new.dat[,predictors.all[!predictors.all %in% vars.num]] # copying over our factor labels#
		g1.ci.out$x <- as.numeric(g1.ci.out$x) # making x numeric; will make factors NA#
		summary(g1.ci.out)
spp.colors <- read.csv("spp.Colors.csv", header=T)	#
summary(spp.colors)	#
#
group.fig <- unique(g1.ci.out$group)#
group.fig <- group.fig[order(group.fig)]#
colors.use <- as.vector(c(paste(spp.colors[spp.colors$Species %in% group.fig, "color"])))#
		ggplot(data=g1.ci.out[g1.ci.out$Effect %in% c("tmean", "precip"), ]) + #
			facet_grid(Canopy.Class~Effect, scales="free_x") +#
			geom_line(aes(x=x, y=0), linetype="dashed")+#
			geom_ribbon(aes(x=x, ymin=lwr, ymax=upr, fill=group), alpha=0.5) +#
			geom_line(aes(x=x, y=mean, color=group)) +#
			scale_color_manual(values=colors.use) +#
			scale_fill_manual(values=colors.use)
ggplot(data=g1.ci.out[g1.ci.out$Effect %in% c("tmean", "precip"), ]) + #
			facet_grid(Canopy.Class~Effect, scales="free_x") +#
			geom_line(aes(x=x, y=0), linetype="dashed")+#
			geom_ribbon(aes(x=x, ymin=lwr, ymax=upr, fill=group), alpha=0.5) +#
			geom_line(aes(x=x, y=mean, color=group)) +#
			scale_color_manual(values=colors.use) +#
			scale_fill_manual(values=colors.use)+#
			labs(title="Full Extent")
n <- 100#
data <- test2#
		n.out = n#
#
		new.dat <- data.frame(Model="species_response",#
							  Extent=as.factor(paste(min(data$Year), max(data$Year), sep="-")))#
		# Figure out which vars are numeric vs. factor#
		vars.num <- vector()#
		for(v in predictors.all){#
			if(class(data[,v]) %in% c("numeric", "integer")) vars.num <- c(vars.num, v)#
		}#
		# Getting the unique values of our factor variables and adding them to the data frame#
		# need to skip group & group.cc so we aren't trying to match Carya & Quercus etc#
		predictors.all <- predictors.all[!predictors.all %in% c("Species", "spp.plot")]#
		for(v in predictors.all[!predictors.all %in% vars.num & !(predictors.all %in% c("group", "group.cc"))]){#
			# if v is a factor, merge all unique values into the dataframe#
			var.temp <- data.frame(x=unique(data[,v])) #
			names(var.temp) <- v#
			new.dat <- merge(new.dat, var.temp, all.x=T, all.y=T)#
		}#
		# getting species from species.plot#
		new.dat$group <- as.factor(substr(new.dat$group.plot, 1, 4))#
		# Adding in the group.canopy class then getting rid of combinations we don't actually have in our data#
		new.dat$group.cc <- as.factor(paste(new.dat$group, new.dat$Canopy.Class, sep="."))#
		new.dat <- new.dat[new.dat$group.cc %in% unique(test$group.cc),]#
		summary(new.dat)#
		# Putting the numerical variables into an array and adding it in #
		var.temp <- data.frame(array(dim=c(n.out, length(vars.num))))#
		names(var.temp) <- vars.num#
		for(v in vars.num){#
			var.temp[,v] <- seq(min(data[,v], na.rm=T), max(data[,v], na.rm=T), length.out=n.out)#
		}								#
		new.dat <- merge(new.dat, var.temp, all.x=T, all.y=T)#
		summary(new.dat)
# SOurce & run the function#
		source("0_Calculate_GAMM_Posteriors.R")#
		g3.1.ci.terms.pred <- post.distns(model.gam=gam3.1, model.name="harv_mmf_cc.test", n=n, newdata=new.dat, vars=predictors.all, terms=T)#
		g3.1.ci.out <- g3.1.ci.terms.pred$ci # separting out the confidence interval #
		g3.1.ci.out[,predictors.all[!predictors.all %in% vars.num]] <- new.dat[,predictors.all[!predictors.all %in% vars.num]] # copying over our factor labels#
		g3.1.ci.out$x <- as.numeric(g3.1.ci.out$x) # making x numeric; will make factors NA#
		summary(g3.1.ci.out)
ggplot(data=g3.1.ci.out[g3.1.ci.out$Effect %in% c("tmean", "precip"), ]) + #
			facet_grid(Canopy.Class~Effect, scales="free_x") +#
			geom_ribbon(aes(x=x, ymin=lwr, ymax=upr, fill=group), alpha=0.5) +#
			geom_line(aes(x=x, y=mean, color=group))+#
			scale_color_manual(values=colors.use) +#
			scale_fill_manual(values=colors.use)+#
			labs(title="Truncated @ 1994")
pdf("figures/tuncated_1994.pdf", width= 13, height = 8.5)	#
		ggplot(data=g3.1.ci.out[g3.1.ci.out$Effect %in% c("tmean", "precip"), ]) + #
			facet_grid(Canopy.Class~Effect, scales="free_x") +#
			geom_ribbon(aes(x=x, ymin=lwr, ymax=upr, fill=group), alpha=0.5) +#
			geom_line(aes(x=x, y=mean, color=group))+#
			scale_color_manual(values=colors.use) +#
			scale_fill_manual(values=colors.use)+#
			labs(title="Truncated @ 1994")#
dev.off()
# SOurce & run the function#
		source("0_Calculate_GAMM_Posteriors.R")#
		g3.ci.terms.pred <- post.distns(model.gam=gam3, model.name="harv_mmf_cc.test", n=n, newdata=new.dat, vars=predictors.all, terms=T)#
		g3.ci.out <- g3.ci.terms.pred$ci # separting out the confidence interval #
		g3.ci.out[,predictors.all[!predictors.all %in% vars.num]] <- new.dat[,predictors.all[!predictors.all %in% vars.num]] # copying over our factor labels#
		g3.ci.out$x <- as.numeric(g3.ci.out$x) # making x numeric; will make factors NA#
		summary(g3.ci.out)#
spp.colors <- read.csv("spp.Colors.csv", header=T)	#
summary(spp.colors)	#
#
group.fig <- unique(g1.ci.out$group)#
group.fig <- group.fig[order(group.fig)]#
colors.use <- as.vector(c(paste(spp.colors[spp.colors$Species %in% group.fig, "color"])))
ggplot(data=g3.ci.out[g3.ci.out$Effect %in% c("tmean", "precip"), ]) + #
			facet_wrap(Canopy.Class~Effect, scales="free_x") +#
			geom_ribbon(aes(x=x, ymin=lwr, ymax=upr, fill=group), alpha=0.5) +#
			geom_line(aes(x=x, y=mean, color=group))+#
			labs(title="Full Extent")
ggplot(data=g3.ci.out[g3.ci.out$Effect %in% c("tmean", "precip"), ]) + #
			facet_wrap(Canopy.Class~Effect, scales="free_x") +#
			geom_ribbon(aes(x=x, ymin=lwr, ymax=upr, fill=group), alpha=0.5) +#
			geom_line(aes(x=x, y=mean, color=group))+#
			scale_color_manual(values=colors.use) +#
			scale_fill_manual(values=colors.use)+#
			labs(title="Full Extent")
ggplot(data=g3.ci.out[g3.ci.out$Effect %in% c("tmean", "precip"), ]) + #
			facet_grid(Canopy.Class~Effect, scales="free_x") +#
			geom_ribbon(aes(x=x, ymin=lwr, ymax=upr, fill=group), alpha=0.5) +#
			geom_line(aes(x=x, y=mean, color=group))+#
			scale_color_manual(values=colors.use) +#
			scale_fill_manual(values=colors.use)+#
			labs(title="Full Extent")
ggplot(data=g3.1.ci.out[g3.1.ci.out$Effect %in% c("tmean", "precip"), ]) + #
			facet_grid(Canopy.Class~Effect, scales="free_x") +#
			geom_ribbon(aes(x=x, ymin=lwr, ymax=upr, fill=group), alpha=0.5) +#
			geom_line(aes(x=x, y=mean, color=group))+#
			scale_color_manual(values=colors.use) +#
			scale_fill_manual(values=colors.use)+#
			labs(title="Truncated @ 1994")
ggplot(data=g3.ci.out[g3.ci.out$Effect %in% c("tmean", "precip"), ]) + #
			facet_grid(Canopy.Class~Effect, scales="free_x") +#
			geom_ribbon(aes(x=x, ymin=lwr, ymax=upr, fill=group), alpha=0.5) +#
			geom_line(aes(x=x, y=mean, color=group))+#
			scale_color_manual(values=colors.use) +#
			scale_fill_manual(values=colors.use)+#
			scale_y_continuous(limits=c(-10, 150))+			#
			labs(title="Full Extent")
ggplot(data=g3.ci.out[g3.ci.out$Effect %in% c("tmean", "precip"), ]) + #
			facet_grid(Canopy.Class~Effect, scales="free_x") +#
			geom_ribbon(aes(x=x, ymin=lwr, ymax=upr, fill=group), alpha=0.5) +#
			geom_line(aes(x=x, y=mean, color=group))+#
			scale_color_manual(values=colors.use) +#
			scale_fill_manual(values=colors.use)+#
			scale_y_continuous(limits=c(-25, 150))+			#
			labs(title="Full Extent")
ggplot(data=g3.ci.out[g3.ci.out$Effect %in% c("tmean", "precip"), ]) + #
			facet_grid(Canopy.Class~Effect, scales="free_x") +#
			geom_ribbon(aes(x=x, ymin=lwr, ymax=upr, fill=group), alpha=0.5) +#
			geom_line(aes(x=x, y=mean, color=group))+#
			scale_color_manual(values=colors.use) +#
			scale_fill_manual(values=colors.use)+#
			scale_y_continuous(limits=c(-50, 150))+			#
			labs(title="Full Extent")
ggplot(data=g3.1.ci.out[g3.1.ci.out$Effect %in% c("tmean", "precip"), ]) + #
			facet_grid(Canopy.Class~Effect, scales="free_x") +#
			geom_ribbon(aes(x=x, ymin=lwr, ymax=upr, fill=group), alpha=0.5) +#
			geom_line(aes(x=x, y=mean, color=group))+#
			scale_color_manual(values=colors.use) +#
			scale_fill_manual(values=colors.use)+#
			scale_y_continuous(limits=c(-50, 150))+	#
			labs(title="Truncated @ 1994")
pdf("figures/tuncated_1994.pdf", width= 13, height = 8.5)	#
		ggplot(data=g3.1.ci.out[g3.1.ci.out$Effect %in% c("tmean", "precip"), ]) + #
			facet_grid(Canopy.Class~Effect, scales="free_x") +#
			geom_ribbon(aes(x=x, ymin=lwr, ymax=upr, fill=group), alpha=0.5) +#
			geom_line(aes(x=x, y=mean, color=group))+#
			scale_color_manual(values=colors.use) +#
			scale_fill_manual(values=colors.use)+#
			scale_y_continuous(limits=c(-50, 150))+	#
			labs(title="Truncated @ 1994")#
dev.off()
summary(g3.1.ci.out)
pdf("figures/sensitivities_full_extent.pdf", width= 13, height = 8.5)		#
		ggplot(data=g3.ci.out[g3.ci.out$Effect %in% c("tmean", "precip"), ]) + #
			facet_grid(Canopy.Class~Effect, scales="free_x") +#
			geom_ribbon(aes(x=x, ymin=lwr, ymax=upr, fill=group), alpha=0.5) +#
			geom_line(aes(x=x, y=mean, color=group))+#
			scale_color_manual(values=colors.use) +#
			scale_fill_manual(values=colors.use)+#
			scale_y_continuous(limits=c(-50, 150))+			#
			labs(title="Full Extent")#
dev.off()
library(dplR)#
library(ggplot2)#
library(stringr)#
# -------------------------------------------------------------------------------------#
# Using MMF and Harvard as two examples#
# -------------------------------------------------------------------------------------#
load("processed_data/sites_use_climate.Rdata")#
summary(climate.site)#
#
load("processed_data/sites_rw.Rdata")#
summary(sites.rw)#
#
load("processed_data/test_tree_data_1950_2012.Rdata")#
summary(test)#
#
# Creating lists for harvard and mmf species#
#
sites.use2 <- c("Harvard", "Morgan Monroe State Park")#
#
summary(sites.rw[[1]])#
names(sites.rw)#
# canopy.data <- sites.rw[names(sites.rw) %in% sites.use2]#
#
canopy.data <- sites.rw#
summary(canopy.data)#
# Gettign mmf data#
#
short.canopy <- list()#
#
for(s in names(canopy.data)){#
	for(i in unique(test[test$Site ==s, "Canopy.Class"])){#
		cols.use <- unique(test[test$Site==s & test$Canopy.Class==i,"TreeID"])#
		short.canopy[[paste(s, i, sep=".")]] <- canopy.data[[s]][,paste(cols.use)]#
	} #
}#
summary(short.canopy)#
# summary(short.canopy[["Morgan Monroe State Park.D"]])#
# Making each tree an index using a 30 yr. spline#
short.can.index <- list()#
for(s in names(short.canopy)){#
	short.can.index[[s]] <- detrend(short.canopy[[s]], method="Spline", nyrs=30)#
}#
summary(short.can.index)#
# Making chronologies from these indicies#
short.can.chr <- list()#
#
for(s in names(short.can.index)){#
	short.can.chr[[s]] <- chron(short.can.index[[s]], prewhiten=T)#
}#
summary(short.can.chr[[1]])#
# Correlating these spp level chronologies with climate#
#
corr.can <- list()#
for(i in names(short.can.chr)){#
	site <- unlist(strsplit(i, "[.]"))[1]#
	corr.can[[i]] <- as.data.frame(cor(short.can.chr[[i]][, 1:2], climate.site[[site]][, c("tmean", 					"precip")], method="pearson"))#
	corr.can[[i]]$chr <- row.names(corr.can[[i]])#
}#
corr.can[[1]]#
#
for(i in names(corr.can)){#
	corr.can[[i]][,"chr"] <- substr(corr.can[[i]][,"chr"], 4, 6)#
}#
corr.can[[1]]#
#
site.df <- data.frame(Site.Can=names(corr.can))#
chr <- data.frame(chr=c("std", "res"))#
site.chr <- merge(site.df, chr)#
#
canopy.df <- merge(site.chr, data.frame(Factor=c("tmean", "precip")))#
for(i in names(corr.can)){#
	for(j in unique(canopy.df$Factor)){#
		for(k in unique(canopy.df$chr)){#
			canopy.df[canopy.df$Site.Can==i & canopy.df$Factor==j & canopy.df$chr==k, "cor"] <- #
						corr.can[[i]][corr.can[[i]][,"chr"]==k, j]#
		}#
	}#
}#
summary(canopy.df)#
# canopy.df$Site <- as.factor(ifelse(substr(canopy.df$Site.Can,1, 1)=="H", "HF", "MMF"))#
#
for(i in 1:nrow(canopy.df)){#
	if(substr(paste(canopy.df[i,"Site.Can"]),1,2)=="Ha") {canopy.df[i,"Site"] <- "MA"}#
	if(substr(paste(canopy.df[i,"Site.Can"]),1,2)=="Ho") {canopy.df[i,"Site"] <- "ME"}#
	if(substr(paste(canopy.df[i,"Site.Can"]),1,2)=="Mi") {canopy.df[i,"Site"]<- "MO"}#
	if(substr(paste(canopy.df[i,"Site.Can"]),1,2)=="Mo") {canopy.df[i,"Site"] <- "IN"}#
	if(substr(paste(canopy.df[i,"Site.Can"]),1,2)=="Oa") {canopy.df[i,"Site"] <- "OH"}#
}#
canopy.df$Site <- factor(canopy.df$Site, levels = c("MO", "IN", "OH", "MA", "ME"))#
summary(canopy.df)#
#
class(canopy.df$Site.Can)#
#
for(i in unique(canopy.df$Site.Can)){#
	canopy.df[canopy.df$Site.Can==i,"CC"] <-str_sub(canopy.df[canopy.df$Site.Can==i,"Site.Can"],-1,-1)#
}#
canopy.df$CC <- factor(canopy.df$CC, levels = c("D", "I", "S"))#
summary(canopy.df)
library(dplR)#
library(ggplot2)#
library(stringr)#
library(car)#
# -------------------------------------------------------------------------------------#
# Using MMF and Harvard as two examples#
# -------------------------------------------------------------------------------------#
load("processed_data/sites_rw.Rdata")#
load("processed_data/test_tree_data_1950_2012.Rdata")#
load("processed_data/sites_use_climate.Rdata")#
summary(climate.site[[1]])#
summary(test)#
# Creating lists for harvard and mmf species#
#
sites.use2 <- c("Harvard", "Morgan Monroe State Park")#
#
summary(sites.rw[[1]])#
names(sites.rw)#
# species.data <- sites.rw[names(sites.rw) %in% sites.use2]#
species.data <- sites.rw#
summary(species.data)#
#
# Gettign mmf data#
#
short.spp <- list()#
#
for(s in names(species.data)){#
	for(i in unique(test[test$Site ==s, "group"])){#
		cols.use <- unique(test[test$Site==s & test$group==i,"TreeID"])#
		short.spp[[paste(s, i, sep=".")]] <- species.data[[s]][,paste(cols.use)]#
	} #
}#
summary(short.spp)#
summary(short.spp[["Morgan Monroe State Park.TIAM"]])#
# Making each tree an index using a 30 yr. spline#
short.spp.index <- list()#
for(s in names(short.spp)){#
	short.spp.index[[s]] <- detrend(short.spp[[s]], method="Spline", nyrs=30)#
}#
summary(short.spp.index[[1]])#
# Making chronologies from these indicies#
short.spp.chr <- list()#
#
for(s in names(short.spp.index)){#
	short.spp.chr[[s]] <- chron(short.spp.index[[s]], prewhiten=T)#
}#
summary(short.spp.chr[[1]])#
# Correlating these spp level chronologies with climate#
#
corr.groups <- list()#
for(i in names(short.spp.chr)){#
	site <- unlist(strsplit(i, "[.]"))[1]#
	corr.groups[[i]] <- as.data.frame(cor(short.spp.chr[[i]][, 1:2], climate.site[[site]][, c("tmean", 					"precip")], method="pearson"))#
	corr.groups[[i]]$chr <- row.names(corr.groups[[i]])#
}#
#
summary(corr.groupd)#
corr.groups[[1]]#
#
for(i in names(corr.groups)){#
	corr.groups[[i]][,"chr"] <- substr(corr.groups[[i]][,"chr"], 4, 6)#
}#
corr.groups[[1]]#
#
site.df <- data.frame(Site.Group=names(corr.groups))#
chr <- data.frame(chr=c("std", "res"))#
site.chr <- merge(site.df, chr)#
#
group.df <- merge(site.chr, data.frame(Factor=c("tmean", "precip")))#
for(i in names(corr.groups)){#
	for(j in unique(group.df$Factor)){#
		for(k in unique(group.df$chr)){#
			group.df[group.df$Site.Group==i & group.df$Factor==j & group.df$chr==k, "cor"] <- #
						corr.groups[[i]][corr.groups[[i]][,"chr"]==k, j]#
		}#
	}#
}#
summary(group.df)#
#
# Adding in Site for each entry#
for(i in unique(group.df$Site.Group)){#
	if(substr(paste(group.df[group.df$Site.Group==i,"Site.Group"]),1,2)=="Ha") {group.df[group.df$Site.Group==i,"Site"] <- "MA"}#
	if(substr(paste(group.df[group.df$Site.Group==i,"Site.Group"]),1,2)=="Ho") {group.df[group.df$Site.Group==i,"Site"] <- "ME"}#
	if(substr(paste(group.df[group.df$Site.Group==i,"Site.Group"]),1,2)=="Mi") {group.df[group.df$Site.Group==i,"Site"]<- "MO"}#
	if(substr(paste(group.df[group.df$Site.Group==i,"Site.Group"]),1,2)=="Mo") {group.df[group.df$Site.Group==i,"Site"] <- "IN"}#
	if(substr(paste(group.df[group.df$Site.Group==i,"Site.Group"]),1,2)=="Oa") {group.df[group.df$Site.Group==i,"Site"] <- "OH"}#
}#
group.df #
#
# Adding in Species for each entry#
#
for(i in unique(group.df$Site.Group)){#
	group.df[group.df$Site.Group==i, "Species"] <- str_sub(group.df[group.df$Site.Group==i, "Site.Group"], -4,-1)#
}#
group.df$Species <- as.factor(group.df$Species)#
#
group.df$Species <- recode(group.df$Species, "'TULA' = 'BETULA'")#
#
group.df$Site <- factor(group.df$Site, levels = c("MO", "IN", "OH", "MA", "ME"))#
#
# Sig value for 61 df = 0.209#
group.df$sig <- ifelse(group.df$cor < -0.209 | group.df$cor > 0.209, "Y", "N")#
group.df$sig <- factor(group.df$sig, levels = c("Y", "N"))#
#
source("poster_theme.R")
ggplot(data = group.df[group.df$chr=="std" & substr(group.df$Species,1,2)=="QU",]) + facet_grid(Factor ~ Site) + #
	geom_bar(aes(x=Species, y=cor, fill=sig), stat="identity", position="dodge", colour="black") +#
	geom_hline(yintercept=0.209, linetype="dashed") + #
	geom_hline(yintercept=-0.209, linetype="dashed") + 	#
	geom_hline(yintercept=0, linetype="solid") +#
	scale_fill_manual(values= c("green", "grey50")) + #
	poster.theme2+#
	theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1, size=rel(2), face="bold"))
pdf("figures/spp_correlations_oak.pdf", width= 13, height = 8.5)#
ggplot(data = group.df[group.df$chr=="std" & substr(group.df$Species,1,2)=="QU",]) + facet_grid(Factor ~ Site) + #
	geom_bar(aes(x=Species, y=cor, fill=sig), stat="identity", position="dodge", colour="black") +#
	geom_hline(yintercept=0.209, linetype="dashed") + #
	geom_hline(yintercept=-0.209, linetype="dashed") + 	#
	geom_hline(yintercept=0, linetype="solid") +#
	scale_fill_manual(values= c("green", "grey50")) + #
	poster.theme2+#
	theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1, size=rel(2), face="bold"))#
dev.off()
library(mgcv)#
library(ggplot2)#
library(car)#
# Christy's GAMM code#
#
# gam1 <- gamm(Y ~  s(Biomass, bs="cr", k=3, by=PFT) + s(tair, k=k, by=PFT) + s(precipf, k=k, by=PFT) + s(CO2, k=k, by=PFT), random=list(PlotID=~1), data=data) #
#
# Loading in my data#
#
data.use <- read.csv("processed_data/AllSites_tree_plus_climate_and_BA.csv", header=T)#
#
data.use$group <- data.use$Species#
data.use$group <- recode(data.use$group, "'CAOV' = 'CARYA'; 'CACO' = 'CARYA'; #
  							'CATE' = 'CARYA'; 'ACSAC' = 'ACSA'; 'BEAL' = 'BETULA'; 'BELE' = 'BETULA'; 'QUMU' = 'QUAL'")#
#
data.use$group.plot <- as.factor(paste(data.use$group, data.use$PlotID, sep="."))#
#
data.use$Canopy.Class <- recode(data.use$Canopy.Class, "'C' = 'D'")#
summary(data.use)#
# reducing the amount of data for the test runs#
sites.use <- c("Harvard", "Howland", "Morgan Monroe State Park", "Oak Openings Toledo", "Missouri Ozark")#
#
test <- data.use[data.use$Site %in% sites.use & !is.na(data.use$RW) & !is.na(data.use$BA.inc),]#
summary(test)#
#
test$group.cc <- as.factor(paste(test$group, test$Canopy.Class, sep="."))#
summary(test)#
# Get a list of what predictors & responses I'm using#
predictors.all <- c("tmean", "precip", "Species", "dbh.recon", "Canopy.Class", "spp.plot", "group", "group.plot", "group.cc")#
#
# Getting rid of observations that have NAs in the important variables#
test <- test[complete.cases(test[,predictors.all]),]#
test <- test[test$Live.Dead=="LIVE" & !test$Canopy.Class=="F",]#
#
# Subsetting to a set of species that we have enough data to feel good about#
#species.use <- c("TSCA", "QURU", "ACRU", "BEAL", "ACSA", "LITU", "QUAL", "CAOV", "CACO", "CATE", "JUVI", "QUVE", "PCRU", "THOC", "PIST")#
group.use <- c("ACRU", "ACSA", "BETULA", "CARYA", "FAGR", "FRAX", "PIST", "QUAL", "QURU", "QUVE", "SAAL", "TSCA", "ULRU")#
#
test <- test[test$group %in% group.use,]#
#
summary(test)#
#
par(new=F)#
plot(test[test$TreeID=="MMA003", "BA.inc"]~ test[test$TreeID=="MMA003","Year"], type="l")#
summary(test)#
summary(test$Live.Dead)#
summary(test$Canopy.Class)#
# RW <- test$RW#
# temp <- test$tmean#
# precip <- test$precip#
# canopy <- test$Canopy.Class#
# size <- test$DBH..cm.#
# species <- unique(test$Species)#
# library(ggplot2)#
# ggplot(data=test) +#
   # facet_wrap(~PlotID) +#
   # geom_histogram(aes(x=dbh.recon))#
# ggplot(data=test) +#
   # facet_wrap(~Species) +#
   # geom_histogram(aes(x=dbh.recon))#
# hist(test$dbh.recon)#
# test2 <- test[test$group %in% c("QURU", "ACRU") & test$Year>=1980,]#
test2 <- test[test$group %in% c("QURU", "ACRU"),]#
#
summary(test)
# Gam1 graphs#
n <- 100#
data <- test#
		n.out = n#
#
		new.dat <- data.frame(Model="species_response",#
							  Extent=as.factor(paste(min(data$Year), max(data$Year), sep="-")))#
		# Figure out which vars are numeric vs. factor#
		vars.num <- vector()#
		for(v in predictors.all){#
			if(class(data[,v]) %in% c("numeric", "integer")) vars.num <- c(vars.num, v)#
		}#
		# Getting the unique values of our factor variables and adding them to the data frame#
		# need to skip group & group.cc so we aren't trying to match Carya & Quercus etc#
		predictors.all <- predictors.all[!predictors.all %in% c("Species", "spp.plot")]#
		for(v in predictors.all[!predictors.all %in% vars.num & !(predictors.all %in% c("group", "group.cc"))]){#
			# if v is a factor, merge all unique values into the dataframe#
			var.temp <- data.frame(x=unique(data[,v])) #
			names(var.temp) <- v#
			new.dat <- merge(new.dat, var.temp, all.x=T, all.y=T)#
		}#
		# getting species from species.plot#
		new.dat$group <- as.factor(substr(new.dat$group.plot, 1, 4))#
		# Adding in the group.canopy class then getting rid of combinations we don't actually have in our data#
		new.dat$group.cc <- as.factor(paste(new.dat$group, new.dat$Canopy.Class, sep="."))#
		new.dat <- new.dat[new.dat$group.cc %in% unique(test$group.cc),]#
		summary(new.dat)#
		# Putting the numerical variables into an array and adding it in #
		var.temp <- data.frame(array(dim=c(n.out, length(vars.num))))#
		names(var.temp) <- vars.num#
		for(v in vars.num){#
			var.temp[,v] <- seq(min(data[,v], na.rm=T), max(data[,v], na.rm=T), length.out=n.out)#
		}								#
		new.dat <- merge(new.dat, var.temp, all.x=T, all.y=T)#
		summary(new.dat)
source("0_Calculate_GAMM_Posteriors.R")#
		g3.ci.terms.pred <- post.distns(model.gam=gam3, model.name="harv_mmf_cc.test", n=n, newdata=new.dat, vars=predictors.all, terms=T)#
		g3.ci.out <- g3.ci.terms.pred$ci # separting out the confidence interval #
		g3.ci.out[,predictors.all[!predictors.all %in% vars.num]] <- new.dat[,predictors.all[!predictors.all %in% vars.num]] # copying over our factor labels#
		g3.ci.out$x <- as.numeric(g3.ci.out$x) # making x numeric; will make factors NA#
		summary(g3.ci.out)#
		ggplot(data=g3.ci.out[g3.ci.out$Effect %in% c("tmean", "precip"), ]) + #
			facet_wrap(Canopy.Class~Effect, scales="free_x") +#
			geom_ribbon(aes(x=x, ymin=lwr, ymax=upr, fill=group), alpha=0.5) +#
			geom_line(aes(x=x, y=mean, color=group))
load("processed_data/gam_results/gam3_climate_by_canopyclass_interactions.Rdata")
g3.ci.terms.pred <- post.distns(model.gam=gam3, model.name="harv_mmf_cc.test", n=n, newdata=new.dat, vars=predictors.all, terms=T)#
		g3.ci.out <- g3.ci.terms.pred$ci # separting out the confidence interval #
		g3.ci.out[,predictors.all[!predictors.all %in% vars.num]] <- new.dat[,predictors.all[!predictors.all %in% vars.num]] # copying over our factor labels#
		g3.ci.out$x <- as.numeric(g3.ci.out$x) # making x numeric; will make factors NA#
		summary(g3.ci.out)
ggplot(data=g3.ci.out[g3.ci.out$Effect %in% c("tmean", "precip") & substr(g3.ci.out$group.cc, 1,2)=="QU", ]) + #
			facet_grid(Canopy.Class~Effect, scales="free_x") +#
			geom_ribbon(aes(x=x, ymin=lwr, ymax=upr, fill=group), alpha=0.5) +#
			geom_line(aes(x=x, y=mean, color=group))+#
			scale_color_manual(values=c("dodgerblue4", "red", "black")) +#
			scale_fill_manual(values=c("dodgerblue4", "red", "black")) +#
			poster.theme2+#
			labs(x = "Climate Variable", y = expression(bold(paste("BAI (mm"^"2", "y"^"-1",")"))))
source(poster_theme.R)
source("poster_theme.R")
ggplot(data=g3.ci.out[g3.ci.out$Effect %in% c("tmean", "precip") & substr(g3.ci.out$group.cc, 1,2)=="QU", ]) + #
			facet_grid(Canopy.Class~Effect, scales="free_x") +#
			geom_ribbon(aes(x=x, ymin=lwr, ymax=upr, fill=group), alpha=0.5) +#
			geom_line(aes(x=x, y=mean, color=group))+#
			scale_color_manual(values=c("dodgerblue4", "red", "black")) +#
			scale_fill_manual(values=c("dodgerblue4", "red", "black")) +#
			poster.theme2+#
			labs(x = "Climate Variable", y = expression(bold(paste("BAI (mm"^"2", "y"^"-1",")"))))
pdf("figures/oak_climate_effects.pdf", width= 13, height = 8.5)		#
		ggplot(data=g3.ci.out[g3.ci.out$Effect %in% c("tmean", "precip") & substr(g3.ci.out$group.cc, 1,2)=="QU", ]) + #
			facet_grid(Canopy.Class~Effect, scales="free_x") +#
			geom_ribbon(aes(x=x, ymin=lwr, ymax=upr, fill=group), alpha=0.5) +#
			geom_line(aes(x=x, y=mean, color=group))+#
			scale_color_manual(values=c("dodgerblue4", "red", "black")) +#
			scale_fill_manual(values=c("dodgerblue4", "red", "black")) +#
			poster.theme2+#
			labs(x = "Climate Variable", y = expression(bold(paste("Effect on BAI (mm"^"2", "y"^"-1",")"))))#
dev.off()
pdf("figures/oak_size_effects.pdf", width= 13, height = 8.5)		#
	ggplot(data=g3.ci.out[g3.ci.out$Effect == "dbh.recon"& substr(g3.ci.out$group.cc, 1,2)=="QU", ]) + #
			facet_grid(~Canopy.Class) +#
			geom_ribbon(aes(x=x, ymin=lwr, ymax=upr, fill=group), alpha=0.5) +#
			geom_line(aes(x=x, y=mean, color=group)) +#
			scale_color_manual(values=c("dodgerblue4", "red", "black")) +#
			scale_fill_manual(values=c("dodgerblue4", "red", "black")) +#
			poster.theme2+#
			labs(x = "DBH (cm)", y = expression(bold(paste("Effect on BAI (mm"^"2", "y"^"-1",")"))))#
 dev.off()
library(mgcv)#
library(ggplot2)#
library(car)#
# Christy's GAMM code#
#
# gam1 <- gamm(Y ~  s(Biomass, bs="cr", k=3, by=PFT) + s(tair, k=k, by=PFT) + s(precipf, k=k, by=PFT) + s(CO2, k=k, by=PFT), random=list(PlotID=~1), data=data) #
#
# Loading in my data#
#
data.use <- read.csv("processed_data/AllSites_tree_plus_climate_and_BA.csv", header=T)#
#
data.use$group <- data.use$Species#
data.use$group <- recode(data.use$group, "'CAOV' = 'CARYA'; 'CACO' = 'CARYA'; #
  							'CATE' = 'CARYA'; 'ACSAC' = 'ACSA'; 'BEAL' = 'BETULA'; 'BELE' = 'BETULA'; 'QUMU' = 'QUAL'")#
#
data.use$group.plot <- as.factor(paste(data.use$group, data.use$PlotID, sep="."))#
#
data.use$Canopy.Class <- recode(data.use$Canopy.Class, "'C' = 'D'")#
summary(data.use)#
# reducing the amount of data for the test runs#
sites.use <- c("Harvard", "Howland", "Morgan Monroe State Park", "Oak Openings Toledo", "Missouri Ozark")#
#
test <- data.use[data.use$Site %in% sites.use & !is.na(data.use$RW) & !is.na(data.use$BA.inc),]#
summary(test)#
#
test$group.cc <- as.factor(paste(test$group, test$Canopy.Class, sep="."))#
summary(test)#
# Get a list of what predictors & responses I'm using#
predictors.all <- c("tmean", "precip", "Species", "dbh.recon", "Canopy.Class", "spp.plot", "group", "group.plot", "group.cc")#
#
# Getting rid of observations that have NAs in the important variables#
test <- test[complete.cases(test[,predictors.all]),]#
test <- test[test$Live.Dead=="LIVE" & !test$Canopy.Class=="F",]#
#
# Subsetting to a set of species that we have enough data to feel good about#
#species.use <- c("TSCA", "QURU", "ACRU", "BEAL", "ACSA", "LITU", "QUAL", "CAOV", "CACO", "CATE", "JUVI", "QUVE", "PCRU", "THOC", "PIST")#
group.use <- c("ACRU", "ACSA", "BETULA", "CARYA", "FAGR", "FRAX", "PIST", "QUAL", "QURU", "QUVE", "SAAL", "TSCA", "ULRU")#
#
test <- test[test$group %in% group.use,]#
#
summary(test)#
#
par(new=F)#
plot(test[test$TreeID=="MMA003", "BA.inc"]~ test[test$TreeID=="MMA003","Year"], type="l")#
summary(test)#
summary(test$Live.Dead)#
summary(test$Canopy.Class)#
# RW <- test$RW#
# temp <- test$tmean#
# precip <- test$precip#
# canopy <- test$Canopy.Class#
# size <- test$DBH..cm.#
# species <- unique(test$Species)#
# library(ggplot2)#
# ggplot(data=test) +#
   # facet_wrap(~PlotID) +#
   # geom_histogram(aes(x=dbh.recon))#
# ggplot(data=test) +#
   # facet_wrap(~Species) +#
   # geom_histogram(aes(x=dbh.recon))#
# hist(test$dbh.recon)#
# test2 <- test[test$group %in% c("QURU", "ACRU") & test$Year>=1980,]#
test2 <- test[test$group %in% c("QURU", "ACRU"),]#
#
summary(test)
gam3 <- gamm(BA.inc~ s(tmean, k=3, by=group.cc) +#
                  s(precip, k=3, by=group.cc) +#
                  s(dbh.recon, k=3, by=group.cc) +#
                  Canopy.Class + group,#
                  random=list(Site=~1, PlotID=~1),#
                  data=test, control=list(niterEM=0, sing.tol=1e-20, opt="optim"))
source("0_Calculate_GAMM_Posteriors.R")#
		g3.ci.terms.pred <- post.distns(model.gam=gam3, model.name="harv_mmf_cc.test", n=n, newdata=new.dat, vars=predictors.all, terms=T)#
		g3.ci.out <- g3.ci.terms.pred$ci # separting out the confidence interval #
		g3.ci.out[,predictors.all[!predictors.all %in% vars.num]] <- new.dat[,predictors.all[!predictors.all %in% vars.num]] # copying over our factor labels#
		g3.ci.out$x <- as.numeric(g3.ci.out$x) # making x numeric; will make factors NA#
		summary(g3.ci.out)#
		ggplot(data=g3.ci.out[g3.ci.out$Effect %in% c("tmean", "precip"), ]) + #
			facet_wrap(Canopy.Class~Effect, scales="free_x") +#
			geom_ribbon(aes(x=x, ymin=lwr, ymax=upr, fill=group), alpha=0.5) +#
			geom_line(aes(x=x, y=mean, color=group))
n <- 100#
data <- test#
		n.out = n#
#
		new.dat <- data.frame(Model="species_response",#
							  Extent=as.factor(paste(min(data$Year), max(data$Year), sep="-")))#
		# Figure out which vars are numeric vs. factor#
		vars.num <- vector()#
		for(v in predictors.all){#
			if(class(data[,v]) %in% c("numeric", "integer")) vars.num <- c(vars.num, v)#
		}#
		# Getting the unique values of our factor variables and adding them to the data frame#
		# need to skip group & group.cc so we aren't trying to match Carya & Quercus etc#
		predictors.all <- predictors.all[!predictors.all %in% c("Species", "spp.plot")]#
		for(v in predictors.all[!predictors.all %in% vars.num & !(predictors.all %in% c("group", "group.cc"))]){#
			# if v is a factor, merge all unique values into the dataframe#
			var.temp <- data.frame(x=unique(data[,v])) #
			names(var.temp) <- v#
			new.dat <- merge(new.dat, var.temp, all.x=T, all.y=T)#
		}#
		# getting species from species.plot#
		new.dat$group <- as.factor(substr(new.dat$group.plot, 1, 4))#
		# Adding in the group.canopy class then getting rid of combinations we don't actually have in our data#
		new.dat$group.cc <- as.factor(paste(new.dat$group, new.dat$Canopy.Class, sep="."))#
		new.dat <- new.dat[new.dat$group.cc %in% unique(test$group.cc),]#
		summary(new.dat)#
		# Putting the numerical variables into an array and adding it in #
		var.temp <- data.frame(array(dim=c(n.out, length(vars.num))))#
		names(var.temp) <- vars.num#
		for(v in vars.num){#
			var.temp[,v] <- seq(min(data[,v], na.rm=T), max(data[,v], na.rm=T), length.out=n.out)#
		}								#
		new.dat <- merge(new.dat, var.temp, all.x=T, all.y=T)#
		summary(new.dat)
source("0_Calculate_GAMM_Posteriors.R")#
		g3.ci.terms.pred <- post.distns(model.gam=gam3, model.name="harv_mmf_cc.test", n=n, newdata=new.dat, vars=predictors.all, terms=T)#
		g3.ci.out <- g3.ci.terms.pred$ci # separting out the confidence interval #
		g3.ci.out[,predictors.all[!predictors.all %in% vars.num]] <- new.dat[,predictors.all[!predictors.all %in% vars.num]] # copying over our factor labels#
		g3.ci.out$x <- as.numeric(g3.ci.out$x) # making x numeric; will make factors NA#
		summary(g3.ci.out)
ggplot(data=g3.ci.out[g3.ci.out$Effect %in% c("tmean", "precip") & substr(g3.ci.out$group.cc, 1,2)=="QU", ]) + #
			facet_grid(Canopy.Class~Effect, scales="free_x") +#
			geom_ribbon(aes(x=x, ymin=lwr, ymax=upr, fill=group), alpha=0.5) +#
			geom_line(aes(x=x, y=mean, color=group))+#
			scale_color_manual(values=c("dodgerblue4", "red", "black")) +#
			scale_fill_manual(values=c("dodgerblue4", "red", "black")) +#
			poster.theme2+#
			labs(x = "Climate Variable", y = expression(bold(paste("Effect on BAI (mm"^"2", "y"^"-1",")"))))
source("poster_theme.R")
ggplot(data=g3.ci.out[g3.ci.out$Effect %in% c("tmean", "precip") & substr(g3.ci.out$group.cc, 1,2)=="QU", ]) + #
			facet_grid(Canopy.Class~Effect, scales="free_x") +#
			geom_ribbon(aes(x=x, ymin=lwr, ymax=upr, fill=group), alpha=0.5) +#
			geom_line(aes(x=x, y=mean, color=group))+#
			scale_color_manual(values=c("dodgerblue4", "red", "black")) +#
			scale_fill_manual(values=c("dodgerblue4", "red", "black")) +#
			poster.theme2+#
			labs(x = "Climate Variable", y = expression(bold(paste("Effect on BAI (mm"^"2", "y"^"-1",")"))))
pdf("figures/oak_climate_effects.pdf", width= 13, height = 8.5)		#
		ggplot(data=g3.ci.out[g3.ci.out$Effect %in% c("tmean", "precip") & substr(g3.ci.out$group.cc, 1,2)=="QU", ]) + #
			facet_grid(Canopy.Class~Effect, scales="free_x") +#
			geom_ribbon(aes(x=x, ymin=lwr, ymax=upr, fill=group), alpha=0.5) +#
			geom_line(aes(x=x, y=mean, color=group))+#
			scale_color_manual(values=c("dodgerblue4", "red", "black")) +#
			scale_fill_manual(values=c("dodgerblue4", "red", "black")) +#
			poster.theme2+#
			labs(x = "Climate Variable", y = expression(bold(paste("Effect on BAI (mm"^"2", "y"^"-1",")"))))#
dev.off()
g3.ci.out$PlotID <- as.factor(substr(g3.ci.out$group.plot, 6, nchar(paste(g3.ci.out$group.plot)))) # adding a plotID factor#
		summary(g3.ci.out)
ggplot(data=g3.ci.out[g3.ci.out$Effect == "dbh.recon"& substr(g3.ci.out$group.cc, 1,2)=="QU", ]) + #
			facet_grid(~Canopy.Class) +#
			geom_ribbon(aes(x=x, ymin=lwr, ymax=upr, fill=group), alpha=0.5) +#
			geom_line(aes(x=x, y=mean, color=group)) +#
			scale_color_manual(values=c("dodgerblue4", "red", "black")) +#
			scale_fill_manual(values=c("dodgerblue4", "red", "black")) +#
			poster.theme2+#
			labs(x = "DBH (cm)", y = expression(bold(paste("Effect on BAI (mm"^"2", "y"^"-1",")"))))
pdf("figures/oak_size_effects.pdf", width= 13, height = 8.5)		#
	ggplot(data=g3.ci.out[g3.ci.out$Effect == "dbh.recon"& substr(g3.ci.out$group.cc, 1,2)=="QU", ]) + #
			facet_grid(~Canopy.Class) +#
			geom_ribbon(aes(x=x, ymin=lwr, ymax=upr, fill=group), alpha=0.5) +#
			geom_line(aes(x=x, y=mean, color=group)) +#
			scale_color_manual(values=c("dodgerblue4", "red", "black")) +#
			scale_fill_manual(values=c("dodgerblue4", "red", "black")) +#
			poster.theme2+#
			labs(x = "DBH (cm)", y = expression(bold(paste("Effect on BAI (mm"^"2", "y"^"-1",")"))))#
 dev.off()
load("processed_data/gam_results/gam3_climate_by_canopyclass_interactions.Rdata")#
source("0_Calculate_GAMM_Posteriors.R")#
# Fitting our model to the data to see if we're doing a pasable job of capturing the variance#
# If things don't match, we shoudl take our sensitiivty curves with a grain of salt#
#
n <- 100#
model.pred <- post.distns(model.gam=gam3, model.name="species_response", newdata=test, vars=predictors.all, n=n, terms=F)#
summary(model.pred$ci)#
#
# Need help dealing with the list that is set up here.  Need help with the aggregation#
model.pred2 <- model.pred$ci#
summary(model.pred2)#
dim(model.pred2)#
# Aggregating to the group level in teh same way we do below with the ring widths#
# We can then compare our modeled RW to our measured RW and see how things look#
# Sanity Check #1#
#
mean.model <- aggregate(model.pred2$mean, by = model.pred2[, c("group.cc", "Site", "Year")], FUN=mean, na.rm=T)#
names(mean.model)[names(mean.model)=="x"] <- c("BAI.mean") #
mean.model[,"BAI.lwr"] <- aggregate(model.pred2$mean, by=model.pred2[,c("group.cc", "Site", "Year")], FUN=quantile, probs=0.025, na.rm=T)[,"x"]#
mean.model[,"BAI.upr"] <- aggregate(model.pred2$mean, by=model.pred2[,c("group.cc", "Site", "Year")], FUN=quantile, probs=0.975, na.rm=T)[,"x"]#
head(mean.model)#
# aggregating the raw data for graphing#
mean.rw <- aggregate(test$BA.inc, by=test[, c("group.cc", "Site", "Year")], FUN=mean, na.rm=T)#
names(mean.rw)[names(mean.rw)=="x"]<- c("BAI.mean")                  #
# mean.rw[,"rw.lwr"] <- aggregate(test$RW, by=test[,c("group", "Site", "Year")], FUN=quantile, probs=0.025, na.rm=T)[,"x"]#
# mean.rw[,"rw.upr"] <- aggregate(test$RW, by=test[,c("group", "Site", "Year")], FUN=quantile, probs=0.975, na.rm=T)[,"x"]#
# mean.rw[,"BAI.mean"] <- aggregate(test$BA.inc, by=test[,c("group", "Site", "Year")], FUN=mean, na.rm=T)[,"x"]#
mean.rw[,"BAI.lwr"] <- aggregate(test$BA.inc, by=test[,c("group.cc", "Site", "Year")], FUN=quantile, probs=0.025, na.rm=T)[,"x"]#
mean.rw[,"BAI.upr"] <- aggregate(test$BA.inc, by=test[,c("group.cc", "Site", "Year")], FUN=quantile, probs=0.975, na.rm=T)[,"x"]
head(mean.rw)
mean.rw <- mean.rw[mean.rw$Site %in% sites.use,]#
#
#mean.rw$Species <- mean.rw$group#
#
# Setting up lm between the modeled values and the observed	#
dim(mean.rw)#
dim(mean.model)#
#
# mean.rw <- mean.rw[mean.rw$group %in% mean.model$group,]#
# mean.rw <- mean.rw[mean.rw$Year %in% mean.model$Year,]#
#
summary(mean.rw); #
summary(mean.model)#
#
mean.model2 <- mean.model#
names(mean.model2)[4:6] <- c("mod.mean", "mod.lwr", "mod.up")#
#
sanity.gam1.df <- merge(mean.model2, mean.rw, all.x=T, all.y=T)#
summary(sanity.gam1.df)#
summary(sanity.gam1.df[is.na(sanity.gam1.df$mod.mean),])#
head(sanity.gam1.df[is.na(sanity.gam1.df$mod.mean),])#
#
# LM on aggregated BAI#
sanity.lm1 <- lm(mod.mean ~ BAI.mean, data=sanity.gam1.df)#
summary(sanity.lm1)
ggplot(data=mean.rw) + facet_wrap(group.cc ~ Site, scales="fixed") + theme_bw() +#
	# plot the data#
	geom_ribbon(aes(x=Year, ymin=BAI.lwr, ymax=BAI.upr), alpha=0.5) +#
	geom_line(aes(x=Year, y=BAI.mean), size=1) +#
	# Plot our model#
	geom_ribbon(data=mean.model, aes(x=Year, ymin=BAI.lwr, ymax=BAI.upr), fill="red3", alpha=0.3) +#
	geom_line(data=mean.model, aes(x=Year, y=BAI.mean), color="red3", alpha=0.8, size=1) +#
	labs(title="Gamm Model vs. Data", x="Year", y="BAI")
pdf("figures/gam_sanity_check/gam3_sanitycheck1.pdf", width= 13, height = 8.5)#
ggplot(data=mean.rw) + facet_wrap(group.cc ~ Site, scales="fixed") + theme_bw() +#
	# plot the data#
	geom_ribbon(aes(x=Year, ymin=BAI.lwr, ymax=BAI.upr), alpha=0.5) +#
	geom_line(aes(x=Year, y=BAI.mean), size=1) +#
	# Plot our model#
	geom_ribbon(data=mean.model, aes(x=Year, ymin=BAI.lwr, ymax=BAI.upr), fill="red3", alpha=0.3) +#
	geom_line(data=mean.model, aes(x=Year, y=BAI.mean), color="red3", alpha=0.8, size=1) +#
	labs(title="Gamm Model vs. Data", x="Year", y="BAI")#
dev.off()
n <- 10#
data.use2 <- data.use[data.use$Site %in% sites.use,]#
data.use2 <- data.use2[data.use2$group %in% group.use,]#
#
sanity2.trees <- sample(test2$TreeID, size=n, replace=F) #
summary(sanity2.trees)
summary(mean.rw)#
summary(data.use)#
summary(model.pred2)
ggplot(data=test[test$TreeID %in% sanity2.trees,]) + facet_wrap(TreeID~ Site, scales="fixed") + theme_bw() +#
	# plot the data#
	#geom_ribbon(aes(x=Year, ymin=rw.lwr, ymax=rw.upr), alpha=0.5) +#
	geom_line(aes(x=Year, y=BA.inc), size=1) +#
	# Plot our model#
	#geom_ribbon(data=model.pred2[model.pred2$TreeID %in% sanity2.trees,], aes(x=Year, ymin=rw.lwr, ymax=rw.upr), fill="red3", alpha=0.3) +#
	geom_line(data=model.pred2[model.pred2$TreeID %in% sanity2.trees,], aes(x=Year, y=mean), color="red3", alpha=0.8, size=1) +#
	labs(title="Gamm Model vs. Data Indiv. Trees", x="Year", y="RW")
pdf("figures/gam_sanity_check/gam3_sanitycheck2.pdf", width= 13, height = 8.5)#
ggplot(data=test[test$TreeID %in% sanity2.trees,]) + facet_wrap(TreeID~ Site, scales="fixed") + theme_bw() +#
	# plot the data#
	#geom_ribbon(aes(x=Year, ymin=rw.lwr, ymax=rw.upr), alpha=0.5) +#
	geom_line(aes(x=Year, y=BA.inc), size=1) +#
	# Plot our model#
	#geom_ribbon(data=model.pred2[model.pred2$TreeID %in% sanity2.trees,], aes(x=Year, ymin=rw.lwr, ymax=rw.upr), fill="red3", alpha=0.3) +#
	geom_line(data=model.pred2[model.pred2$TreeID %in% sanity2.trees,], aes(x=Year, y=mean), color="red3", alpha=0.8, size=1) +#
	labs(title="Gamm Model vs. Data Indiv. Trees", x="Year", y="RW")#
dev.off()
summary(model.pred2)#
summary(data.use)#
summary(test)#
#
model.pred2$RW <- test$RW#
model.pred2$BAI <- test$BA.inc#
#
# LM for indiv. trees#
sanity.lm2 <- lm(BAI ~ mean, data=model.pred2)#
summary(sanity.lm2)
source("0_Calculate_GAMM_Weights.R")#
# test2 <- test[test$group %in% c("QURU", "ACRU") & test$Year>=1980,]#
# test2 <- test[test$group %in% c("QURU") & test$Year>=1980,]#
# summary(test2)#
# gam1.test <- gamm(RW ~ s(tmean, k=3, by=group) + # tmean*Species #
#                   s(precip, k=3, by=group) +#
#                   s(dbh.recon, k=3, by=group.plot) +#
#                   Canopy.Class, #
#                   random=list(Site=~1, PlotID=~1),#
#                   data=test2)#
#
predictors.all#
vars <- c("tmean", "precip", "dbh.recon", "Canopy.Class", "group.plot", "group", "group.cc")#
gam3.weights <- factor.weights(model.gam = gam3, model.name = "species_response", newdata = test, extent = "", vars = vars, limiting=T)#
#
summary(gam3.weights)#
summary(test2)#
gam3.weights[,c("BA.inc", "group", "group.cc")] <- test[,c("BA.inc", "group", "group.cc")] # Adding in factors we forgot
# Just the weights of tmean and Precip, ignoring size#
vars2 <- c("fit.tmean", "fit.precip")#
fit.spline2 <- rowSums(abs(gam3.weights[,vars2]), na.rm=T)#
for(v in vars2){#
	gam3.weights[,paste("weight", v, "2", sep=".")] <- gam3.weights[,v]/fit.spline2#
}#
summary(gam3.weights)
cols.weights <- c("weight.fit.tmean.2", "weight.fit.precip.2")#
for(i in 1:nrow(gam3.weights)){#
	fweight <- abs(gam3.weights[i,cols.weights])#
	gam3.weights[i,"max2"] <- max(fweight, na.rm=T)#
	gam3.weights[i,"factor.max2"] <- c("tmean", "precip")[which(fweight==max(fweight))]#
}#
gam3.weights$factor.max2 <- as.factor(gam3.weights$factor.max2)#
summary(gam3.weights)
save(gam3.weights, file="processed_data/gamm_weights/gam3_weights.Rdata")
library(ggplot2)#
library(stringr)#
source("poster_theme.R")#
load(file="processed_data/gamm_weights/gam3_weights.Rdata")#
#
summary(gam3.weights)#
factors.fits <- c("fit.tmean", "fit.precip", "fit.dbh.recon", "fit.full", "BA.inc")#
factors.weights <- c("weight.tmean", "weight.dbh.recon", "weight.precip")#
othervars <- c("Year", "Site", "group.cc", "Model")#
#
data.graph1 <- aggregate(gam3.weights[,factors.fits], by = gam3.weights[,othervars], FUN= mean, na.rm=T)#
#
data.graph1[,paste(factors.fits, "upr", sep=".")] <- aggregate(gam3.weights[,factors.fits], by = gam3.weights[,othervars], FUN= quantile, prob= 0.975, na.rm=T)[,factors.fits]#
#
data.graph1[,paste(factors.fits, "lwr", sep=".")] <- aggregate(gam3.weights[,factors.fits], by = gam3.weights[,othervars], FUN= quantile, prob= 0.025, na.rm=T)[,factors.fits]#
#
summary(data.graph1)#
#
data.graph2 <- aggregate(abs(gam3.weights[,factors.weights]), by = gam3.weights[,othervars], FUN= mean, na.rm=T)#
#
data.graph2[,paste(factors.weights, "upr", sep=".")] <- aggregate(abs(gam3.weights[,factors.weights]), by = gam3.weights[,othervars], FUN= quantile, prob= 0.975, na.rm=T)[,factors.weights]#
#
data.graph2[,paste(factors.weights, "lwr", sep=".")] <- aggregate(abs(gam3.weights[,factors.weights]), by = gam3.weights[,othervars], FUN= quantile, prob= 0.025, na.rm=T)[,factors.weights]#
#
summary(data.graph2)#
#
data.graph <- merge(data.graph1, data.graph2, all.x=T, all.y=T)#
#
# data.graph <- gam3.weights[gam3.weights$TreeID== "MMA014",]#
summary(data.graph)#
gam3.weights$wts.check <- rowSums(abs(gam3.weights[,c("weight.tmean", "weight.precip", "weight.dbh.recon")]))#
data.graph$wts.check <- rowSums(abs(data.graph[,c("weight.tmean", "weight.precip", "weight.dbh.recon")]))#
#
summary(gam3.weights)#
summary(data.graph)#
#
# Ordering the data for graphing#
#
data.graph<- data.graph[order(data.graph$Year, data.graph$group.cc, data.graph$Site, decreasing=F),]#
plot.rgb <- function(STATE, GC, SIZE){	geom_line(data=data.graph[data.graph$State==STATE & data.graph$group.cc==GC,],aes(x=Year, y=fit.full), size=SIZE,#
  		        color=rgb(abs(data.graph[data.graph$State==STATE & data.graph$group.cc==GC,"weight.tmean"     ]), # red#
                        abs(data.graph[data.graph$State==STATE & data.graph$group.cc==GC,"weight.dbh.recon"     ]), # green#
                        abs(data.graph[data.graph$State==STATE & data.graph$group.cc==GC,"weight.precip"   ]))) }   # blue#
# Plotting the Obs and modeled with influence coloring#
data.graph$State <- recode(data.graph$Site, "'Howland' = 'ME';'Harvard' = 'MA';'Morgan Monroe State Park' = 'IN';'Missouri Ozark' = 'MO';'Oak Openings Toledo' = 'OH'")#
data.graph$State <- factor(data.graph$State, levels=c("MO", "IN", "OH", "MA", "ME"))#
#
for(i in unique(data.graph$group.cc)){#
	data.graph[data.graph$group.cc==i,"Canopy.Class"] <- str_sub(data.graph[data.graph$group.cc==i,"group.cc"], -1)#
	data.graph[data.graph$group.cc==i,"group"] <- substr(data.graph[data.graph$group.cc==i,"group.cc"], 1,4)#
}#
data.graph$Canopy.Class <- as.factor(data.graph$Canopy.Class)#
data.graph$group <- as.factor(data.graph$group)#
summary(data.graph)
pdf("figures/gam3/gam3_SPP_CC_BAI_limiting_factors_All_oaks.pdf", width= 13, height = 8.5)#
ggplot(data = data.graph[substr(data.graph$group, 1,2)=="QU",]) + facet_grid(group.cc ~ State) +#
	scale_x_continuous(expand=c(0,0), name="Year") +#
	scale_y_continuous(expand=c(0,0), name="BAI") +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_line(aes(x=Year, y=BA.inc), size=2, alpha=0.5) +#
	geom_ribbon(aes(x=Year, ymin=BA.inc.lwr, ymax=BA.inc.upr), alpha=0.3) +#
	geom_line(aes(x=Year, y = 0), linetype="dashed") +#
	# Harvard#
	plot.rgb("MA", "QURU.C", 3) +#
	plot.rgb("MA", "QURU.D", 3) +#
	plot.rgb("MA", "QURU.I", 3) +#
	plot.rgb("MA", "QURU.S", 3) +#
	plot.rgb("MA", "QUVE.C", 3) +#
	plot.rgb("MA", "QUVE.D", 3) +#
	plot.rgb("MA", "QUVE.I", 3) +#
	plot.rgb("MA", "QUVE.S", 3) +#
	plot.rgb("MA", "QUAL.C", 3) +#
	plot.rgb("MA", "QUAL.D", 3) +#
	plot.rgb("MA", "QUAL.I", 3) +#
	plot.rgb("MA", "QUAL.S", 3) +#
	# Howland#
	plot.rgb("ME", "QURU.C", 3) +#
	plot.rgb("ME", "QURU.D", 3) +#
	plot.rgb("ME", "QURU.I", 3) +#
	plot.rgb("ME", "QURU.S", 3) +#
	plot.rgb("ME", "QUVE.C", 3) +#
	plot.rgb("ME", "QUVE.D", 3) +#
	plot.rgb("ME", "QUVE.I", 3) +#
	plot.rgb("ME", "QUVE.S", 3) +#
	plot.rgb("ME", "QUAL.C", 3) +#
	plot.rgb("ME", "QUAL.D", 3) +#
	plot.rgb("ME", "QUAL.I", 3) +#
	plot.rgb("ME", "QUAL.S", 3) +#
	# Morgan Monroe#
	plot.rgb("IN", "QURU.C", 3) +#
	plot.rgb("IN", "QURU.D", 3) +#
	plot.rgb("IN", "QURU.I", 3) +#
	plot.rgb("IN", "QURU.S", 3) +#
	plot.rgb("IN", "QUVE.C", 3) +#
	plot.rgb("IN", "QUVE.D", 3) +#
	plot.rgb("IN", "QUVE.I", 3) +#
	plot.rgb("IN", "QUVE.S", 3) +#
	plot.rgb("IN", "QUAL.C", 3) +#
	plot.rgb("IN", "QUAL.D", 3) +#
	plot.rgb("IN", "QUAL.I", 3) +#
	plot.rgb("IN", "QUAL.S", 3) +#
	# Missouri Ozark#
	plot.rgb("MO", "QURU.C", 3) +#
	plot.rgb("MO", "QURU.D", 3) +#
	plot.rgb("MO", "QURU.I", 3) +#
	plot.rgb("MO", "QURU.S", 3) +#
	plot.rgb("MO", "QUVE.C", 3) +#
	plot.rgb("MO", "QUVE.D", 3) +#
	plot.rgb("MO", "QUVE.I", 3) +#
	plot.rgb("MO", "QUVE.S", 3) +#
	plot.rgb("MO", "QUAL.C", 3) +#
	plot.rgb("MO", "QUAL.D", 3) +#
	plot.rgb("MO", "QUAL.I", 3) +#
	plot.rgb("MO", "QUAL.S", 3) +#
	# Oak Openings#
	plot.rgb("OH", "QURU.C", 3) +#
	plot.rgb("OH", "QURU.D", 3) +#
	plot.rgb("OH", "QURU.I", 3) +#
	plot.rgb("OH", "QURU.S", 3) +#
	plot.rgb("OH", "QUVE.C", 3) +#
	plot.rgb("OH", "QUVE.D", 3) +#
	plot.rgb("OH", "QUVE.I", 3) +#
	plot.rgb("OH", "QUVE.S", 3) +#
	plot.rgb("OH", "QUAL.C", 3) +#
	plot.rgb("OH", "QUAL.D", 3) +#
	plot.rgb("OH", "QUAL.I", 3) +#
	plot.rgb("OH", "QUAL.S", 3) #
dev.off()
# Just plotting the BAI fits#
summary(data.graph)#
ggplot(data.graph) + facet_wrap(group.cc~Site) +#
  scale_x_continuous(expand=c(0,0), name="Year") +#
  scale_y_continuous(expand=c(0,0), name="BAI") +#
  # facet_wrap(~TreeID, scales="free_y", space="free") +#
  # geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
  geom_line(aes(x=Year, y=fit.full), size=2, alpha=0.5) +#
  geom_ribbon(aes(x=Year, ymin=fit.full.lwr, ymax=fit.full.upr), alpha=0.3)#
#
# Plotting the Effects#
pdf("figures/gam3/gam3_influence_in_time_all_oaks.pdf", width= 13, height = 8.5)#
ggplot(data.graph[substr(data.graph$group, 1,2)=="QU",]) + facet_grid(group.cc~State) +#
	scale_x_continuous(expand=c(0,0), name="Year") +#
	scale_y_continuous(expand=c(0,0), name="Effect on RW (in mm)") +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_line(aes(x=Year, y=fit.tmean), size=2, color="red") +#
	geom_line(aes(x=Year, y=fit.precip), size=2, color="blue") +#
	geom_line(aes(x=Year, y=fit.dbh.recon), size=2, color="green")#
dev.off()
# Separating things out By canopy class to see things better#
#########################################################
#########################################################
# Dominant#
#########################################################
#########################################################
pdf("figures/gam3/gam3_SPP_CC_BAI_limiting_factors_D_oaks.pdf", width= 13, height = 8.5)#
ggplot(data = data.graph[data.graph$Canopy.Class=="D" & substr(data.graph$group,1,2)=="QU",]) + facet_grid(group ~ State) +#
	labs(title= "Dominant Trees (group.cc)", x="Year", y = expression(paste("BAI (mm"^"2", "y"^"-1",")"))) +#
	scale_x_continuous(expand=c(0,0), name="Year") +#
	scale_y_continuous(expand=c(0,0), name="BAI") +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_line(aes(x=Year, y=BA.inc), size=2, alpha=0.5) +#
	geom_ribbon(aes(x=Year, ymin=BA.inc.lwr, ymax=BA.inc.upr), alpha=0.3) +#
	geom_line(aes(x=Year, y = 0), linetype="dashed") +#
	# Harvard#
	plot.rgb("MA", "QURU.D", 3) +#
	plot.rgb("MA", "QUVE.D", 3) +#
	plot.rgb("MA", "QUAL.D", 3) +#
	# Howland#
	plot.rgb("ME", "QURU.D", 3) +#
	plot.rgb("ME", "QUVE.D", 3) +#
	plot.rgb("ME", "QUAL.D", 3) +#
	# Morgan Monroe#
	plot.rgb("IN", "QURU.D", 3) +#
	plot.rgb("IN", "QUVE.D", 3) +#
	plot.rgb("IN", "QUAL.D", 3) +#
	# Missouri Ozark#
	plot.rgb("MO", "QURU.D", 3) +#
	plot.rgb("MO", "QUVE.D", 3) +#
	plot.rgb("MO", "QUAL.D", 3) +#
	# Oak Openings#
	plot.rgb("OH", "QURU.D", 3) +#
	plot.rgb("OH", "QUVE.D", 3) +#
	plot.rgb("OH", "QUAL.D", 3) +#
	poster.theme2 #
dev.off()	#
# Just plotting the BAI fits#
summary(data.graph)#
ggplot(data.graph) + facet_wrap(group.cc~Site) +#
  scale_x_continuous(expand=c(0,0), name="Year") +#
  scale_y_continuous(expand=c(0,0), name="BAI") +#
  # facet_wrap(~TreeID, scales="free_y", space="free") +#
  # geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
  geom_line(aes(x=Year, y=fit.full), size=2, alpha=0.5) +#
  geom_ribbon(aes(x=Year, ymin=fit.full.lwr, ymax=fit.full.upr), alpha=0.3)#
#
# Plotting the Effects#
pdf("figures/gam3/gam3_influence_in_time_D_oaks.pdf", width= 13, height = 8.5)#
ggplot(data = data.graph[data.graph$Canopy.Class=="D" & substr(data.graph$group,1,2)=="QU",]) + facet_grid(group~State) +#
	scale_x_continuous(expand=c(0,0), name="Year") +#
	scale_y_continuous(expand=c(0,0), name=expression(paste("Effect on BAI (mm"^"2", "y"^"-1",")"))) +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_line(aes(x=Year, y=fit.tmean), size=2, color="red") +#
	geom_line(aes(x=Year, y=fit.precip), size=2, color="blue") +#
	geom_line(aes(x=Year, y=fit.dbh.recon), size=2, color="green")+#
	labs(title= "Dominant Effects (group.cc)")+#
	poster.theme2#
dev.off()#
#
#################################################################
#################################################################
# Intermediate Trees#
#################################################################
#################################################################
#
pdf("figures/gam3/gam3_SPP_CC_BAI_limiting_factors_I_oaks.pdf", width= 13, height = 8.5)#
ggplot(data = data.graph[data.graph$Canopy.Class=="I" & substr(data.graph$group,1,2)=="QU",]) + facet_grid(group ~ State) +#
	labs(title= "Dominant Trees (group.cc)", x="Year", y = expression(paste("BAI (mm"^"2", "y"^"-1",")"))) +#
#
	scale_x_continuous(expand=c(0,0)) +#
	scale_y_continuous(expand=c(0,0)) +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_line(aes(x=Year, y=BA.inc), size=2, alpha=0.5) +#
	geom_ribbon(aes(x=Year, ymin=BA.inc.lwr, ymax=BA.inc.upr), alpha=0.3) +#
	geom_line(aes(x=Year, y = 0), linetype="dashed") +#
	# Harvard#
	plot.rgb("MA", "QURU.I", 3) +#
	plot.rgb("MA", "QUVE.I", 3) +#
	plot.rgb("MA", "QUAL.I", 3) +#
	# Howland#
	plot.rgb("ME", "QURU.I", 3) +#
	plot.rgb("ME", "QUVE.I", 3) +#
	plot.rgb("ME", "QUAL.I", 3) +#
	# Morgan Monroe#
	plot.rgb("IN", "QURU.I", 3) +#
	plot.rgb("IN", "QUVE.I", 3) +#
	plot.rgb("IN", "QUAL.I", 3) +#
	# Missouri Ozark#
	plot.rgb("MO", "QURU.I", 3) +#
	plot.rgb("MO", "QUVE.I", 3) +#
	plot.rgb("MO", "QUAL.I", 3) +#
	# Oak Openings#
	plot.rgb("OH", "QURU.I", 3) +#
	plot.rgb("OH", "QUVE.I", 3) +#
	plot.rgb("OH", "QUAL.I", 3) +#
	poster.theme2 +#
	labs(title= "Intermediate Trees (group.cc)", x="Year", y = expression(paste("BAI (mm"^"2", "y"^"-1",")")))#
dev.off()	#
# Just plotting the BAI fits#
summary(data.graph)#
ggplot(data.graph) + facet_wrap(group.cc~Site) +#
  scale_x_continuous(expand=c(0,0), name="Year") +#
  scale_y_continuous(expand=c(0,0), name="BAI") +#
  # facet_wrap(~TreeID, scales="free_y", space="free") +#
  # geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
  geom_line(aes(x=Year, y=fit.full), size=2, alpha=0.5) +#
  geom_ribbon(aes(x=Year, ymin=fit.full.lwr, ymax=fit.full.upr), alpha=0.3)#
#
# Plotting the Effects#
pdf("figures/gam3/gam3_influence_in_time_I_oaks.pdf", width= 13, height = 8.5)#
ggplot(data = data.graph[data.graph$Canopy.Class=="I" & substr(data.graph$group,1,2)=="QU",]) + facet_grid(group~State) +#
	scale_x_continuous(expand=c(0,0), name="Year") +#
	scale_y_continuous(expand=c(0,0), name=expression(paste("Effect on BAI (mm"^"2", "y"^"-1",")"))) +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_line(aes(x=Year, y=fit.tmean), size=2, color="red") +#
	geom_line(aes(x=Year, y=fit.precip), size=2, color="blue") +#
	geom_line(aes(x=Year, y=fit.dbh.recon), size=2, color="green")+#
	labs(title= "Intermediate Effects (group.cc)")+#
	poster.theme2#
dev.off()#
#################################################################
#################################################################
# Suppressed Trees#
#################################################################
#################################################################
#
pdf("figures/gam3/gam3_SPP_CC_BAI_limiting_factors_S_oaks.pdf", width= 13, height = 8.5)#
ggplot(data =data.graph[data.graph$Canopy.Class=="S" & substr(data.graph$group,1,2)=="QU",]) + facet_grid(group ~ State)+#
	labs(title= "Dominant Trees (group.cc)", x="Year", y = expression(paste("BAI (mm"^"2", "y"^"-1",")")))+#
	scale_x_continuous(expand=c(0,0)) +#
	scale_y_continuous(expand=c(0,0)) +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_line(aes(x=Year, y=BA.inc), size=2, alpha=0.5) +#
	geom_ribbon(aes(x=Year, ymin=BA.inc.lwr, ymax=BA.inc.upr), alpha=0.3) +#
	geom_line(aes(x=Year, y = 0), linetype="dashed") +#
	# Harvard#
	plot.rgb("MA", "QURU.S", 3) +#
	plot.rgb("MA", "QUVE.S", 3) +#
	plot.rgb("MA", "QUAL.S", 3) +#
	# Howland#
	plot.rgb("ME", "QURU.S", 3) +#
	plot.rgb("ME", "QUVE.S", 3) +#
	plot.rgb("ME", "QUAL.S", 3) +#
	# Morgan Monroe#
	plot.rgb("IN", "QURU.S", 3) +#
	plot.rgb("IN", "QUVE.S", 3) +#
	plot.rgb("IN", "QUAL.S", 3) +#
	# Missouri Ozark#
	plot.rgb("MO", "QURU.S", 3) +#
	plot.rgb("MO", "QUVE.S", 3) +#
	plot.rgb("MO", "QUAL.S", 3) +#
	# Oak Openings#
	plot.rgb("OH", "QURU.S", 3) +#
	plot.rgb("OH", "QUVE.S", 3) +#
	plot.rgb("OH", "QUAL.S", 3) +#
	poster.theme2#
dev.off()	#
# Just plotting the BAI fits#
summary(data.graph)#
ggplot(data.graph) + facet_wrap(group.cc~Site) +#
  scale_x_continuous(expand=c(0,0), name="Year") +#
  scale_y_continuous(expand=c(0,0), name="BAI") +#
  # facet_wrap(~TreeID, scales="free_y", space="free") +#
  # geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
  geom_line(aes(x=Year, y=fit.full), size=2, alpha=0.5) +#
  geom_ribbon(aes(x=Year, ymin=fit.full.lwr, ymax=fit.full.upr), alpha=0.3)#
#
# Plotting the Effects#
pdf("figures/gam3/gam3_influence_in_time_S_oaks.pdf", width= 13, height = 8.5)#
ggplot(data = data.graph[data.graph$Canopy.Class=="S" & substr(data.graph$group,1,2)=="QU",]) + facet_grid(group~State) +#
	scale_x_continuous(expand=c(0,0), name="Year") +#
	scale_y_continuous(expand=c(0,0), name=expression(paste("Effect on BAI (mm"^"2", "y"^"-1",")"))) +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_line(aes(x=Year, y=fit.tmean), size=2, color="red") +#
	geom_line(aes(x=Year, y=fit.precip), size=2, color="blue") +#
	geom_line(aes(x=Year, y=fit.dbh.recon), size=2, color="green")+#
	labs(title= "Suppressed Effects (group.cc)")+#
	poster.theme2#
dev.off()
ggplot(data = data.graph[data.graph$Canopy.Class=="S" & substr(data.graph$group,1,2)=="QU",]) + facet_grid(group~State) +#
	scale_x_continuous(expand=c(0,0), name="Year") +#
	scale_y_continuous(expand=c(0,0), name=expression(paste("Effect on BAI (mm"^"2", "y"^"-1",")"))) +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_line(aes(x=Year, y=fit.tmean), size=2, color="red") +#
	geom_line(aes(x=Year, y=fit.precip), size=2, color="blue") +#
	geom_line(aes(x=Year, y=fit.dbh.recon), size=2, color="green")+#
	labs(title= "Suppressed Effects (group.cc)")+#
	poster.theme2
pdf("figures/gam3/gam3_SPP_CC_BAI_limiting_factors_D_oaks.pdf", width= 13, height = 8.5)#
ggplot(data = data.graph[data.graph$Canopy.Class=="D" & substr(data.graph$group,1,2)=="QU",]) + facet_grid(group ~ State) +#
	labs(title= "Dominant Trees (group.cc)", x="Year", y = expression(paste("BAI (mm"^"2", "y"^"-1",")"))) +#
	scale_x_continuous(expand=c(0,0), name="Year") +#
	scale_y_continuous(expand=c(0,0), name="BAI") +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_line(aes(x=Year, y=BA.inc), size=2, alpha=0.5) +#
	geom_ribbon(aes(x=Year, ymin=BA.inc.lwr, ymax=BA.inc.upr), alpha=0.3) +#
	geom_line(aes(x=Year, y = 0), linetype="dashed") +#
	# Harvard#
	plot.rgb("MA", "QURU.D", 3) +#
	plot.rgb("MA", "QUVE.D", 3) +#
	plot.rgb("MA", "QUAL.D", 3) +#
	# Howland#
	plot.rgb("ME", "QURU.D", 3) +#
	plot.rgb("ME", "QUVE.D", 3) +#
	plot.rgb("ME", "QUAL.D", 3) +#
	# Morgan Monroe#
	plot.rgb("IN", "QURU.D", 3) +#
	plot.rgb("IN", "QUVE.D", 3) +#
	plot.rgb("IN", "QUAL.D", 3) +#
	# Missouri Ozark#
	plot.rgb("MO", "QURU.D", 3) +#
	plot.rgb("MO", "QUVE.D", 3) +#
	plot.rgb("MO", "QUAL.D", 3) +#
	# Oak Openings#
	plot.rgb("OH", "QURU.D", 3) +#
	plot.rgb("OH", "QUVE.D", 3) +#
	plot.rgb("OH", "QUAL.D", 3) +#
	poster.theme2 #
dev.off()
# Just plotting the BAI fits#
summary(data.graph)#
ggplot(data.graph) + facet_wrap(group.cc~Site) +#
  scale_x_continuous(expand=c(0,0), name="Year") +#
  scale_y_continuous(expand=c(0,0), name="BAI") +#
  # facet_wrap(~TreeID, scales="free_y", space="free") +#
  # geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
  geom_line(aes(x=Year, y=fit.full), size=2, alpha=0.5) +#
  geom_ribbon(aes(x=Year, ymin=fit.full.lwr, ymax=fit.full.upr), alpha=0.3)#
#
# Plotting the Effects#
pdf("figures/gam3/gam3_influence_in_time_D_oaks.pdf", width= 13, height = 8.5)#
ggplot(data = data.graph[data.graph$Canopy.Class=="D" & substr(data.graph$group,1,2)=="QU",]) + facet_grid(group~State) +#
	scale_x_continuous(expand=c(0,0), name="Year") +#
	scale_y_continuous(expand=c(0,0), name=expression(paste("Effect on BAI (mm"^"2", "y"^"-1",")"))) +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_line(aes(x=Year, y=fit.tmean), size=2, color="red") +#
	geom_line(aes(x=Year, y=fit.precip), size=2, color="blue") +#
	geom_line(aes(x=Year, y=fit.dbh.recon), size=2, color="green")+#
	labs(title= "Dominant Effects (group.cc)")+#
	poster.theme2#
dev.off()
pdf("figures/gam3/gam3_SPP_CC_BAI_limiting_factors_D_oaks.pdf", width= 13, height = 8.5)#
ggplot(data = data.graph[data.graph$Canopy.Class=="D" & substr(data.graph$group,1,2)=="QU",]) + facet_grid(group ~ State) +#
	labs(title= "Dominant Trees (group.cc)", x="Year", y = expression(paste("BAI (mm"^"2", "y"^"-1",")"))) +#
	scale_x_continuous(expand=c(0,0), name="Year") +#
	scale_y_continuous(expand=c(0,0), name="BAI") +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_line(aes(x=Year, y=BA.inc), size=2, alpha=0.5) +#
	geom_ribbon(aes(x=Year, ymin=BA.inc.lwr, ymax=BA.inc.upr), alpha=0.3) +#
	geom_line(aes(x=Year, y = 0), linetype="dashed") +#
	# Harvard#
	plot.rgb("MA", "QURU.D", 3) +#
	plot.rgb("MA", "QUVE.D", 3) +#
	plot.rgb("MA", "QUAL.D", 3) +#
	# Howland#
	plot.rgb("ME", "QURU.D", 3) +#
	plot.rgb("ME", "QUVE.D", 3) +#
	plot.rgb("ME", "QUAL.D", 3) +#
	# Morgan Monroe#
	plot.rgb("IN", "QURU.D", 3) +#
	plot.rgb("IN", "QUVE.D", 3) +#
	plot.rgb("IN", "QUAL.D", 3) +#
	# Missouri Ozark#
	plot.rgb("MO", "QURU.D", 3) +#
	plot.rgb("MO", "QUVE.D", 3) +#
	plot.rgb("MO", "QUAL.D", 3) +#
	# Oak Openings#
	plot.rgb("OH", "QURU.D", 3) +#
	plot.rgb("OH", "QUVE.D", 3) +#
	plot.rgb("OH", "QUAL.D", 3) +#
	poster.theme2 #
dev.off()
pdf("figures/gam3/gam3_SPP_CC_BAI_limiting_factors_D_oaks.pdf", width= 13, height = 8.5)#
ggplot(data = data.graph[data.graph$Canopy.Class=="D" & substr(data.graph$group,1,2)=="QU",]) + facet_grid(group ~ State) +#
	labs(title= "Dominant Trees (group.cc)", x="Year", y = expression(paste("BAI (mm"^"2", "y"^"-1",")"))) +#
	scale_x_continuous(expand=c(0,0), name="Year") +#
	scale_y_continuous(expand=c(0,0), name="BAI") +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_line(aes(x=Year, y=BA.inc), size=2, alpha=0.5) +#
	geom_ribbon(aes(x=Year, ymin=BA.inc.lwr, ymax=BA.inc.upr), alpha=0.3) +#
	geom_line(aes(x=Year, y = 0), linetype="dashed") +#
	# Harvard#
	plot.rgb("MA", "QURU.D", 3) +#
	plot.rgb("MA", "QUVE.D", 3) +#
	plot.rgb("MA", "QUAL.D", 3) +#
	# Howland#
	plot.rgb("ME", "QURU.D", 3) +#
	plot.rgb("ME", "QUVE.D", 3) +#
	plot.rgb("ME", "QUAL.D", 3) +#
	# Morgan Monroe#
	plot.rgb("IN", "QURU.D", 3) +#
	plot.rgb("IN", "QUVE.D", 3) +#
	plot.rgb("IN", "QUAL.D", 3) +#
	# Missouri Ozark#
	plot.rgb("MO", "QURU.D", 3) +#
	plot.rgb("MO", "QUVE.D", 3) +#
	plot.rgb("MO", "QUAL.D", 3) +#
	# Oak Openings#
	plot.rgb("OH", "QURU.D", 3) +#
	plot.rgb("OH", "QUVE.D", 3) +#
	plot.rgb("OH", "QUAL.D", 3) +#
	poster.theme2 #
dev.off()	#
# Just plotting the BAI fits#
summary(data.graph)#
ggplot(data.graph) + facet_wrap(group.cc~Site) +#
  scale_x_continuous(expand=c(0,0), name="Year") +#
  scale_y_continuous(expand=c(0,0), name="BAI") +#
  # facet_wrap(~TreeID, scales="free_y", space="free") +#
  # geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
  geom_line(aes(x=Year, y=fit.full), size=2, alpha=0.5) +#
  geom_ribbon(aes(x=Year, ymin=fit.full.lwr, ymax=fit.full.upr), alpha=0.3)#
#
# Plotting the Effects#
pdf("figures/gam3/gam3_influence_in_time_D_oaks.pdf", width= 13, height = 8.5)#
ggplot(data = data.graph[data.graph$Canopy.Class=="D" & substr(data.graph$group,1,2)=="QU",]) + facet_grid(group~State) +#
	scale_x_continuous(expand=c(0,0), name="Year") +#
	scale_y_continuous(expand=c(0,0), name=expression(paste("Effect on BAI (mm"^"2", "y"^"-1",")"))) +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_line(aes(x=Year, y=fit.tmean), size=2, color="red") +#
	geom_line(aes(x=Year, y=fit.precip), size=2, color="blue") +#
	geom_line(aes(x=Year, y=fit.dbh.recon), size=2, color="green")+#
	labs(title= "Dominant Effects (group.cc)")+#
	poster.theme2#
dev.off()#
#
#################################################################
#################################################################
# Intermediate Trees#
#################################################################
#################################################################
#
pdf("figures/gam3/gam3_SPP_CC_BAI_limiting_factors_I_oaks.pdf", width= 13, height = 8.5)#
ggplot(data = data.graph[data.graph$Canopy.Class=="I" & substr(data.graph$group,1,2)=="QU",]) + facet_grid(group ~ State) +#
	labs(title= "Intermediate Trees", x="Year", y = expression(paste("BAI (mm"^"2", "y"^"-1",")"))) +#
#
	scale_x_continuous(expand=c(0,0)) +#
	scale_y_continuous(expand=c(0,0)) +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_line(aes(x=Year, y=BA.inc), size=2, alpha=0.5) +#
	geom_ribbon(aes(x=Year, ymin=BA.inc.lwr, ymax=BA.inc.upr), alpha=0.3) +#
	geom_line(aes(x=Year, y = 0), linetype="dashed") +#
	# Harvard#
	plot.rgb("MA", "QURU.I", 3) +#
	plot.rgb("MA", "QUVE.I", 3) +#
	plot.rgb("MA", "QUAL.I", 3) +#
	# Howland#
	plot.rgb("ME", "QURU.I", 3) +#
	plot.rgb("ME", "QUVE.I", 3) +#
	plot.rgb("ME", "QUAL.I", 3) +#
	# Morgan Monroe#
	plot.rgb("IN", "QURU.I", 3) +#
	plot.rgb("IN", "QUVE.I", 3) +#
	plot.rgb("IN", "QUAL.I", 3) +#
	# Missouri Ozark#
	plot.rgb("MO", "QURU.I", 3) +#
	plot.rgb("MO", "QUVE.I", 3) +#
	plot.rgb("MO", "QUAL.I", 3) +#
	# Oak Openings#
	plot.rgb("OH", "QURU.I", 3) +#
	plot.rgb("OH", "QUVE.I", 3) +#
	plot.rgb("OH", "QUAL.I", 3) +#
	poster.theme2 +#
	labs(title= "Intermediate Trees (group.cc)", x="Year", y = expression(paste("BAI (mm"^"2", "y"^"-1",")")))#
dev.off()
pdf("figures/gam3/gam3_influence_in_time_I_oaks.pdf", width= 13, height = 8.5)#
ggplot(data = data.graph[data.graph$Canopy.Class=="I" & substr(data.graph$group,1,2)=="QU",]) + facet_grid(group~State) +#
	scale_x_continuous(expand=c(0,0), name="Year") +#
	scale_y_continuous(expand=c(0,0), name=expression(paste("Effect on BAI (mm"^"2", "y"^"-1",")"))) +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_line(aes(x=Year, y=fit.tmean), size=2, color="red") +#
	geom_line(aes(x=Year, y=fit.precip), size=2, color="blue") +#
	geom_line(aes(x=Year, y=fit.dbh.recon), size=2, color="green")+#
	labs(title= "Intermediate Effects")+#
	poster.theme2#
dev.off()
pdf("figures/gam3/gam3_influence_in_time_D_oaks.pdf", width= 13, height = 8.5)#
ggplot(data = data.graph[data.graph$Canopy.Class=="D" & substr(data.graph$group,1,2)=="QU",]) + facet_grid(group~State) +#
	scale_x_continuous(expand=c(0,0), name="Year") +#
	scale_y_continuous(expand=c(0,0), name=expression(paste("Effect on BAI (mm"^"2", "y"^"-1",")"))) +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_line(aes(x=Year, y=fit.tmean), size=2, color="red") +#
	geom_line(aes(x=Year, y=fit.precip), size=2, color="blue") +#
	geom_line(aes(x=Year, y=fit.dbh.recon), size=2, color="green")+#
	labs(title= "Dominant Effects")+#
	poster.theme2#
dev.off()
pdf("figures/gam3/gam3_SPP_CC_BAI_limiting_factors_S_oaks.pdf", width= 13, height = 8.5)#
ggplot(data =data.graph[data.graph$Canopy.Class=="S" & substr(data.graph$group,1,2)=="QU",]) + facet_grid(group ~ State)+#
	labs(title= "Suppressed Trees", x="Year", y = expression(paste("BAI (mm"^"2", "y"^"-1",")")))+#
	scale_x_continuous(expand=c(0,0)) +#
	scale_y_continuous(expand=c(0,0)) +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_line(aes(x=Year, y=BA.inc), size=2, alpha=0.5) +#
	geom_ribbon(aes(x=Year, ymin=BA.inc.lwr, ymax=BA.inc.upr), alpha=0.3) +#
	geom_line(aes(x=Year, y = 0), linetype="dashed") +#
	# Harvard#
	plot.rgb("MA", "QURU.S", 3) +#
	plot.rgb("MA", "QUVE.S", 3) +#
	plot.rgb("MA", "QUAL.S", 3) +#
	# Howland#
	plot.rgb("ME", "QURU.S", 3) +#
	plot.rgb("ME", "QUVE.S", 3) +#
	plot.rgb("ME", "QUAL.S", 3) +#
	# Morgan Monroe#
	plot.rgb("IN", "QURU.S", 3) +#
	plot.rgb("IN", "QUVE.S", 3) +#
	plot.rgb("IN", "QUAL.S", 3) +#
	# Missouri Ozark#
	plot.rgb("MO", "QURU.S", 3) +#
	plot.rgb("MO", "QUVE.S", 3) +#
	plot.rgb("MO", "QUAL.S", 3) +#
	# Oak Openings#
	plot.rgb("OH", "QURU.S", 3) +#
	plot.rgb("OH", "QUVE.S", 3) +#
	plot.rgb("OH", "QUAL.S", 3) +#
	poster.theme2#
dev.off()
pdf("figures/gam3/gam3_influence_in_time_S_oaks.pdf", width= 13, height = 8.5)#
ggplot(data = data.graph[data.graph$Canopy.Class=="S" & substr(data.graph$group,1,2)=="QU",]) + facet_grid(group~State) +#
	scale_x_continuous(expand=c(0,0), name="Year") +#
	scale_y_continuous(expand=c(0,0), name=expression(paste("Effect on BAI (mm"^"2", "y"^"-1",")"))) +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_line(aes(x=Year, y=fit.tmean), size=2, color="red") +#
	geom_line(aes(x=Year, y=fit.precip), size=2, color="blue") +#
	geom_line(aes(x=Year, y=fit.dbh.recon), size=2, color="green")+#
	labs(title= "Suppressed Effects")+#
	poster.theme2#
dev.off()
library(mgcv)#
library(ggplot2)#
library(car)#
# Christy's GAMM code#
#
# gam1 <- gamm(Y ~  s(Biomass, bs="cr", k=3, by=PFT) + s(tair, k=k, by=PFT) + s(precipf, k=k, by=PFT) + s(CO2, k=k, by=PFT), random=list(PlotID=~1), data=data) #
#
# Loading in my data#
#
data.use <- read.csv("processed_data/AllSites_tree_plus_climate_and_BA.csv", header=T)#
#
data.use$group <- data.use$Species#
data.use$group <- recode(data.use$group, "'CAOV' = 'CARYA'; 'CACO' = 'CARYA'; #
  							'CATE' = 'CARYA'; 'ACSAC' = 'ACSA'; 'BEAL' = 'BETULA'; 'BELE' = 'BETULA'; 'QUMU' = 'QUAL'")#
#
data.use$group.plot <- as.factor(paste(data.use$group, data.use$PlotID, sep="."))#
#
data.use$Canopy.Class <- recode(data.use$Canopy.Class, "'C' = 'D'")#
summary(data.use)#
# reducing the amount of data for the test runs#
sites.use <- c("Harvard", "Howland", "Morgan Monroe State Park", "Oak Openings Toledo", "Missouri Ozark")#
#
test <- data.use[data.use$Site %in% sites.use & !is.na(data.use$RW) & !is.na(data.use$BA.inc),]#
summary(test)#
#
test$group.cc <- as.factor(paste(test$group, test$Canopy.Class, sep="."))#
summary(test)#
# Get a list of what predictors & responses I'm using#
predictors.all <- c("tmean", "precip", "Species", "dbh.recon", "Canopy.Class", "spp.plot", "group", "group.plot", "group.cc")#
#
# Getting rid of observations that have NAs in the important variables#
test <- test[complete.cases(test[,predictors.all]),]#
test <- test[test$Live.Dead=="LIVE" & !test$Canopy.Class=="F",]#
#
# Subsetting to a set of species that we have enough data to feel good about#
#species.use <- c("TSCA", "QURU", "ACRU", "BEAL", "ACSA", "LITU", "QUAL", "CAOV", "CACO", "CATE", "JUVI", "QUVE", "PCRU", "THOC", "PIST")#
group.use <- c("ACRU", "ACSA", "BETULA", "CARYA", "FAGR", "FRAX", "PIST", "QUAL", "QURU", "QUVE", "SAAL", "TSCA", "ULRU")#
#
test <- test[test$group %in% group.use,]#
#
summary(test)#
#
par(new=F)#
plot(test[test$TreeID=="MMA003", "BA.inc"]~ test[test$TreeID=="MMA003","Year"], type="l")#
summary(test)#
summary(test$Live.Dead)#
summary(test$Canopy.Class)
library(ggplot2)#
library(stringr)#
load(file="processed_data/gamm_weights/gam3_weights.Rdata")#
#
summary(gam3.weights)#
factors.fits <- c("fit.tmean", "fit.precip", "fit.dbh.recon", "fit.full", "BA.inc")#
factors.weights <- c("weight.tmean", "weight.dbh.recon", "weight.precip")#
othervars <- c("Year", "Site", "group.cc", "Model")#
#
data.graph1 <- aggregate(gam3.weights[,factors.fits], by = gam3.weights[,othervars], FUN= mean, na.rm=T)#
#
data.graph1[,paste(factors.fits, "upr", sep=".")] <- aggregate(gam3.weights[,factors.fits], by = gam3.weights[,othervars], FUN= quantile, prob= 0.975, na.rm=T)[,factors.fits]#
#
data.graph1[,paste(factors.fits, "lwr", sep=".")] <- aggregate(gam3.weights[,factors.fits], by = gam3.weights[,othervars], FUN= quantile, prob= 0.025, na.rm=T)[,factors.fits]#
#
summary(data.graph1)#
#
data.graph2 <- aggregate(abs(gam3.weights[,factors.weights]), by = gam3.weights[,othervars], FUN= mean, na.rm=T)#
#
data.graph2[,paste(factors.weights, "upr", sep=".")] <- aggregate(abs(gam3.weights[,factors.weights]), by = gam3.weights[,othervars], FUN= quantile, prob= 0.975, na.rm=T)[,factors.weights]#
#
data.graph2[,paste(factors.weights, "lwr", sep=".")] <- aggregate(abs(gam3.weights[,factors.weights]), by = gam3.weights[,othervars], FUN= quantile, prob= 0.025, na.rm=T)[,factors.weights]#
#
summary(data.graph2)#
#
data.graph <- merge(data.graph1, data.graph2, all.x=T, all.y=T)#
#
# data.graph <- gam3.weights[gam3.weights$TreeID== "MMA014",]#
summary(data.graph)#
gam3.weights$wts.check <- rowSums(abs(gam3.weights[,c("weight.tmean", "weight.precip", "weight.dbh.recon")]))#
data.graph$wts.check <- rowSums(abs(data.graph[,c("weight.tmean", "weight.precip", "weight.dbh.recon")]))#
#
summary(gam3.weights)#
summary(data.graph)#
#
# Ordering the data for graphing#
#
data.graph<- data.graph[order(data.graph$Year, data.graph$group.cc, data.graph$Site, decreasing=F),]#
plot.rgb <- function(STATE, GC, SIZE){	geom_line(data=data.graph[data.graph$State==STATE & data.graph$group.cc==GC,],aes(x=Year, y=fit.full), size=SIZE,#
  		        color=rgb(abs(data.graph[data.graph$State==STATE & data.graph$group.cc==GC,"weight.tmean"     ]), # red#
                        abs(data.graph[data.graph$State==STATE & data.graph$group.cc==GC,"weight.dbh.recon"     ]), # green#
                        abs(data.graph[data.graph$State==STATE & data.graph$group.cc==GC,"weight.precip"   ]))) }   # blue#
# Plotting the Obs and modeled with influence coloring#
data.graph$State <- recode(data.graph$Site, "'Howland' = 'ME';'Harvard' = 'MA';'Morgan Monroe State Park' = 'IN';'Missouri Ozark' = 'MO';'Oak Openings Toledo' = 'OH'")#
data.graph$State <- factor(data.graph$State, levels=c("MO", "IN", "OH", "MA", "ME"))#
#
for(i in unique(data.graph$group.cc)){#
	data.graph[data.graph$group.cc==i,"Canopy.Class"] <- str_sub(data.graph[data.graph$group.cc==i,"group.cc"], -1)#
	data.graph[data.graph$group.cc==i,"group"] <- substr(data.graph[data.graph$group.cc==i,"group.cc"], 1,4)#
}#
data.graph$Canopy.Class <- as.factor(data.graph$Canopy.Class)#
data.graph$group <- as.factor(data.graph$group)#
summary(data.graph)
ggplot(data = data.graph[data.graph$Canopy.Class=="D",]) + facet_grid(group ~ State) +#
	scale_x_continuous(expand=c(0,0), name="Year") +#
	scale_y_continuous(expand=c(0,0), name=expression(bold(paste("BAI (mm2 / year)")))) +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_line(aes(x=Year, y=BA.inc), size=2, alpha=0.5) +#
	geom_ribbon(aes(x=Year, ymin=BA.inc.lwr, ymax=BA.inc.upr), alpha=0.3) +#
	geom_line(aes(x=Year, y = 0), linetype="dashed") +#
	# Harvard#
	plot.rgb("MA", "ACRU.D", 3) +#
	plot.rgb("MA", "PIST.D", 3) +#
	plot.rgb("MA", "TSCA.D", 3) +#
	plot.rgb("MA", "QURU.D", 3) +#
	plot.rgb("MA", "QUVE.D", 3) +#
	plot.rgb("MA", "FRAX.D", 3) +#
	plot.rgb("MA", "BETULA.D", 3) +#
	plot.rgb("MA", "ACSA.D", 3) +#
	plot.rgb("MA", "QUAL.D", 3) +#
	plot.rgb("MA", "FAGR.D", 3) +#
	plot.rgb("MA", "ULRU.D", 3) +#
	plot.rgb("MA", "CARYA.D", 3) +#
	plot.rgb("MA", "SAAL.D", 3) +#
	# Howland#
	plot.rgb("ME", "ACRU.D", 3) +#
	plot.rgb("ME", "PIST.D", 3) +#
	plot.rgb("ME", "TSCA.D", 3) +#
	plot.rgb("ME", "QURU.D", 3) +#
	plot.rgb("ME", "QUVE.D", 3) +#
	plot.rgb("ME", "FRAX.D", 3) +#
	plot.rgb("ME", "BETULA.D", 3) +#
	plot.rgb("ME", "ACSA.D", 3) +#
	plot.rgb("ME", "QUAL.D", 3) +#
	plot.rgb("ME", "FAGR.D", 3) +#
	plot.rgb("ME", "ULRU.D", 3) +#
	plot.rgb("ME", "CARYA.D", 3) +#
	plot.rgb("ME", "SAAL.D", 3) +#
	# Morgan Monroe#
	plot.rgb("IN", "ACRU.D", 3) +#
	plot.rgb("IN", "PIST.D", 3) +#
	plot.rgb("IN", "TSCA.D", 3) +#
	plot.rgb("IN", "QURU.D", 3) +#
	plot.rgb("IN", "QUVE.D", 3) +#
	plot.rgb("IN", "FRAX.D", 3) +#
	plot.rgb("IN", "BETULA.D", 3) +#
	plot.rgb("IN", "ACSA.D", 3) +#
	plot.rgb("IN", "QUAL.D", 3) +#
	plot.rgb("IN", "FAGR.D", 3) +#
	plot.rgb("IN", "ULRU.D", 3) +#
	plot.rgb("IN", "CARYA.D", 3) +#
	plot.rgb("IN", "SAAL.D", 3) +#
	# Missouri Ozark#
	plot.rgb("MO", "ACRU.D", 3) +#
	plot.rgb("MO", "PIST.D", 3) +#
	plot.rgb("MO", "TSCA.D", 3) +#
	plot.rgb("MO", "QURU.D", 3) +#
	plot.rgb("MO", "QUVE.D", 3) +#
	plot.rgb("MO", "FRAX.D", 3) +#
	plot.rgb("MO", "BETULA.D", 3) +#
	plot.rgb("MO", "ACSA.D", 3) +#
	plot.rgb("MO", "QUAL.D", 3) +#
	plot.rgb("MO", "FAGR.D", 3) +#
	plot.rgb("MO", "ULRU.D", 3) +#
	plot.rgb("MO", "CARYA.D", 3) +#
	plot.rgb("MO", "SAAL.D", 3) +#
	# Oak Openings#
	plot.rgb("OH", "ACRU.D", 3) +#
	plot.rgb("OH", "PIST.D", 3) +#
	plot.rgb("OH", "TSCA.D", 3) +#
	plot.rgb("OH", "QURU.D", 3) +#
	plot.rgb("OH", "QUVE.D", 3) +#
	plot.rgb("OH", "FRAX.D", 3) +#
	plot.rgb("OH", "BETULA.D", 3) +#
	plot.rgb("OH", "ACSA.D", 3) +#
	plot.rgb("OH", "QUAL.D", 3) +#
	plot.rgb("OH", "FAGR.D", 3) +#
	plot.rgb("OH", "ULRU.D", 3) +#
	plot.rgb("OH", "CARYA.D", 3) +#
	plot.rgb("OH", "SAAL.D", 3) +#
	labs(title= "Dominant Trees (group.cc)", x="Year", y=expression(bold(paste("BAI (mm2 / year)"))))
library(ggplot2)#
library(stringr)#
source("poster_theme.R")#
load(file="processed_data/gamm_weights/gam3_weights.Rdata")#
#
summary(gam3.weights)#
factors.fits <- c("fit.tmean", "fit.precip", "fit.dbh.recon", "fit.full", "BA.inc")#
factors.weights <- c("weight.tmean", "weight.dbh.recon", "weight.precip")#
othervars <- c("Year", "Site", "group.cc", "Model")#
#
data.graph1 <- aggregate(gam3.weights[,factors.fits], by = gam3.weights[,othervars], FUN= mean, na.rm=T)#
#
data.graph1[,paste(factors.fits, "upr", sep=".")] <- aggregate(gam3.weights[,factors.fits], by = gam3.weights[,othervars], FUN= quantile, prob= 0.975, na.rm=T)[,factors.fits]#
#
data.graph1[,paste(factors.fits, "lwr", sep=".")] <- aggregate(gam3.weights[,factors.fits], by = gam3.weights[,othervars], FUN= quantile, prob= 0.025, na.rm=T)[,factors.fits]#
#
summary(data.graph1)#
#
data.graph2 <- aggregate(abs(gam3.weights[,factors.weights]), by = gam3.weights[,othervars], FUN= mean, na.rm=T)#
#
data.graph2[,paste(factors.weights, "upr", sep=".")] <- aggregate(abs(gam3.weights[,factors.weights]), by = gam3.weights[,othervars], FUN= quantile, prob= 0.975, na.rm=T)[,factors.weights]#
#
data.graph2[,paste(factors.weights, "lwr", sep=".")] <- aggregate(abs(gam3.weights[,factors.weights]), by = gam3.weights[,othervars], FUN= quantile, prob= 0.025, na.rm=T)[,factors.weights]#
#
summary(data.graph2)#
#
data.graph <- merge(data.graph1, data.graph2, all.x=T, all.y=T)#
#
# data.graph <- gam3.weights[gam3.weights$TreeID== "MMA014",]#
summary(data.graph)#
gam3.weights$wts.check <- rowSums(abs(gam3.weights[,c("weight.tmean", "weight.precip", "weight.dbh.recon")]))#
data.graph$wts.check <- rowSums(abs(data.graph[,c("weight.tmean", "weight.precip", "weight.dbh.recon")]))#
#
summary(gam3.weights)#
summary(data.graph)#
#
# Ordering the data for graphing#
#
data.graph<- data.graph[order(data.graph$Year, data.graph$group.cc, data.graph$Site, decreasing=F),]#
plot.rgb <- function(STATE, GC, SIZE){	geom_line(data=data.graph[data.graph$State==STATE & data.graph$group.cc==GC,],aes(x=Year, y=fit.full), size=SIZE,#
  		        color=rgb(abs(data.graph[data.graph$State==STATE & data.graph$group.cc==GC,"weight.tmean"     ]), # red#
                        abs(data.graph[data.graph$State==STATE & data.graph$group.cc==GC,"weight.dbh.recon"     ]), # green#
                        abs(data.graph[data.graph$State==STATE & data.graph$group.cc==GC,"weight.precip"   ]))) }   # blue#
# Plotting the Obs and modeled with influence coloring#
data.graph$State <- recode(data.graph$Site, "'Howland' = 'ME';'Harvard' = 'MA';'Morgan Monroe State Park' = 'IN';'Missouri Ozark' = 'MO';'Oak Openings Toledo' = 'OH'")#
data.graph$State <- factor(data.graph$State, levels=c("MO", "IN", "OH", "MA", "ME"))#
#
for(i in unique(data.graph$group.cc)){#
	data.graph[data.graph$group.cc==i,"Canopy.Class"] <- str_sub(data.graph[data.graph$group.cc==i,"group.cc"], -1)#
	data.graph[data.graph$group.cc==i,"group"] <- substr(data.graph[data.graph$group.cc==i,"group.cc"], 1,4)#
}#
data.graph$Canopy.Class <- as.factor(data.graph$Canopy.Class)#
data.graph$group <- as.factor(data.graph$group)#
summary(data.graph)
pdf("figures/gam3/gam3_SPP_CC_BAI_limiting_factors_D_oaks.pdf", width= 13, height = 8.5)#
ggplot(data = data.graph[data.graph$Canopy.Class=="D" & substr(data.graph$group,1,2)=="QU",]) + facet_grid(group ~ State) +#
	labs(title= "Dominant Trees (group.cc)", x="Year", y = expression(paste("BAI (mm"^"2", "y"^"-1",")"))) +#
	scale_x_continuous(expand=c(0,0), name="Year") +#
	scale_y_continuous(expand=c(0,0), name="BAI") +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_line(aes(x=Year, y=BA.inc), size=2, alpha=0.5) +#
	geom_ribbon(aes(x=Year, ymin=BA.inc.lwr, ymax=BA.inc.upr), alpha=0.3) +#
	geom_line(aes(x=Year, y = 0), linetype="dashed") +#
	# Harvard#
	plot.rgb("MA", "QURU.D", 3) +#
	plot.rgb("MA", "QUVE.D", 3) +#
	plot.rgb("MA", "QUAL.D", 3) +#
	# Howland#
	plot.rgb("ME", "QURU.D", 3) +#
	plot.rgb("ME", "QUVE.D", 3) +#
	plot.rgb("ME", "QUAL.D", 3) +#
	# Morgan Monroe#
	plot.rgb("IN", "QURU.D", 3) +#
	plot.rgb("IN", "QUVE.D", 3) +#
	plot.rgb("IN", "QUAL.D", 3) +#
	# Missouri Ozark#
	plot.rgb("MO", "QURU.D", 3) +#
	plot.rgb("MO", "QUVE.D", 3) +#
	plot.rgb("MO", "QUAL.D", 3) +#
	# Oak Openings#
	plot.rgb("OH", "QURU.D", 3) +#
	plot.rgb("OH", "QUVE.D", 3) +#
	plot.rgb("OH", "QUAL.D", 3) +#
	poster.theme2 #
dev.off()	#
# Just plotting the BAI fits#
summary(data.graph)#
ggplot(data.graph) + facet_wrap(group.cc~Site) +#
  scale_x_continuous(expand=c(0,0), name="Year") +#
  scale_y_continuous(expand=c(0,0), name="BAI") +#
  # facet_wrap(~TreeID, scales="free_y", space="free") +#
  # geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
  geom_line(aes(x=Year, y=fit.full), size=2, alpha=0.5) +#
  geom_ribbon(aes(x=Year, ymin=fit.full.lwr, ymax=fit.full.upr), alpha=0.3)#
#
# Plotting the Effects#
pdf("figures/gam3/gam3_influence_in_time_D_oaks.pdf", width= 13, height = 8.5)#
ggplot(data = data.graph[data.graph$Canopy.Class=="D" & substr(data.graph$group,1,2)=="QU",]) + facet_grid(group~State) +#
	scale_x_continuous(expand=c(0,0), name="Year") +#
	scale_y_continuous(expand=c(0,0), name=expression(paste("Effect on BAI (mm"^"2", "y"^"-1",")"))) +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_line(aes(x=Year, y=fit.tmean), size=2, color="red") +#
	geom_line(aes(x=Year, y=fit.precip), size=2, color="blue") +#
	geom_line(aes(x=Year, y=fit.dbh.recon), size=2, color="green")+#
	labs(title= "Dominant Effects")+#
	poster.theme2#
dev.off()#
#
#################################################################
#################################################################
# Intermediate Trees#
#################################################################
#################################################################
#
pdf("figures/gam3/gam3_SPP_CC_BAI_limiting_factors_I_oaks.pdf", width= 13, height = 8.5)#
ggplot(data = data.graph[data.graph$Canopy.Class=="I" & substr(data.graph$group,1,2)=="QU",]) + facet_grid(group ~ State) +#
	labs(title= "Intermediate Trees", x="Year", y = expression(paste("BAI (mm"^"2", "y"^"-1",")"))) +#
#
	scale_x_continuous(expand=c(0,0)) +#
	scale_y_continuous(expand=c(0,0)) +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_line(aes(x=Year, y=BA.inc), size=2, alpha=0.5) +#
	geom_ribbon(aes(x=Year, ymin=BA.inc.lwr, ymax=BA.inc.upr), alpha=0.3) +#
	geom_line(aes(x=Year, y = 0), linetype="dashed") +#
	# Harvard#
	plot.rgb("MA", "QURU.I", 3) +#
	plot.rgb("MA", "QUVE.I", 3) +#
	plot.rgb("MA", "QUAL.I", 3) +#
	# Howland#
	plot.rgb("ME", "QURU.I", 3) +#
	plot.rgb("ME", "QUVE.I", 3) +#
	plot.rgb("ME", "QUAL.I", 3) +#
	# Morgan Monroe#
	plot.rgb("IN", "QURU.I", 3) +#
	plot.rgb("IN", "QUVE.I", 3) +#
	plot.rgb("IN", "QUAL.I", 3) +#
	# Missouri Ozark#
	plot.rgb("MO", "QURU.I", 3) +#
	plot.rgb("MO", "QUVE.I", 3) +#
	plot.rgb("MO", "QUAL.I", 3) +#
	# Oak Openings#
	plot.rgb("OH", "QURU.I", 3) +#
	plot.rgb("OH", "QUVE.I", 3) +#
	plot.rgb("OH", "QUAL.I", 3) +#
	poster.theme2 +#
	labs(title= "Intermediate Trees (group.cc)", x="Year", y = expression(paste("BAI (mm"^"2", "y"^"-1",")")))#
dev.off()	#
# Just plotting the BAI fits#
summary(data.graph)#
ggplot(data.graph) + facet_wrap(group.cc~Site) +#
  scale_x_continuous(expand=c(0,0), name="Year") +#
  scale_y_continuous(expand=c(0,0), name="BAI") +#
  # facet_wrap(~TreeID, scales="free_y", space="free") +#
  # geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
  geom_line(aes(x=Year, y=fit.full), size=2, alpha=0.5) +#
  geom_ribbon(aes(x=Year, ymin=fit.full.lwr, ymax=fit.full.upr), alpha=0.3)#
#
# Plotting the Effects#
pdf("figures/gam3/gam3_influence_in_time_I_oaks.pdf", width= 13, height = 8.5)#
ggplot(data = data.graph[data.graph$Canopy.Class=="I" & substr(data.graph$group,1,2)=="QU",]) + facet_grid(group~State) +#
	scale_x_continuous(expand=c(0,0), name="Year") +#
	scale_y_continuous(expand=c(0,0), name=expression(paste("Effect on BAI (mm"^"2", "y"^"-1",")"))) +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_line(aes(x=Year, y=fit.tmean), size=2, color="red") +#
	geom_line(aes(x=Year, y=fit.precip), size=2, color="blue") +#
	geom_line(aes(x=Year, y=fit.dbh.recon), size=2, color="green")+#
	labs(title= "Intermediate Effects")+#
	poster.theme2#
dev.off()#
#################################################################
#################################################################
# Suppressed Trees#
#################################################################
#################################################################
#
pdf("figures/gam3/gam3_SPP_CC_BAI_limiting_factors_S_oaks.pdf", width= 13, height = 8.5)#
ggplot(data =data.graph[data.graph$Canopy.Class=="S" & substr(data.graph$group,1,2)=="QU",]) + facet_grid(group ~ State)+#
	labs(title= "Suppressed Trees", x="Year", y = expression(paste("BAI (mm"^"2", "y"^"-1",")")))+#
	scale_x_continuous(expand=c(0,0)) +#
	scale_y_continuous(expand=c(0,0)) +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_line(aes(x=Year, y=BA.inc), size=2, alpha=0.5) +#
	geom_ribbon(aes(x=Year, ymin=BA.inc.lwr, ymax=BA.inc.upr), alpha=0.3) +#
	geom_line(aes(x=Year, y = 0), linetype="dashed") +#
	# Harvard#
	plot.rgb("MA", "QURU.S", 3) +#
	plot.rgb("MA", "QUVE.S", 3) +#
	plot.rgb("MA", "QUAL.S", 3) +#
	# Howland#
	plot.rgb("ME", "QURU.S", 3) +#
	plot.rgb("ME", "QUVE.S", 3) +#
	plot.rgb("ME", "QUAL.S", 3) +#
	# Morgan Monroe#
	plot.rgb("IN", "QURU.S", 3) +#
	plot.rgb("IN", "QUVE.S", 3) +#
	plot.rgb("IN", "QUAL.S", 3) +#
	# Missouri Ozark#
	plot.rgb("MO", "QURU.S", 3) +#
	plot.rgb("MO", "QUVE.S", 3) +#
	plot.rgb("MO", "QUAL.S", 3) +#
	# Oak Openings#
	plot.rgb("OH", "QURU.S", 3) +#
	plot.rgb("OH", "QUVE.S", 3) +#
	plot.rgb("OH", "QUAL.S", 3) +#
	poster.theme2#
dev.off()	#
# Just plotting the BAI fits#
summary(data.graph)#
ggplot(data.graph) + facet_wrap(group.cc~Site) +#
  scale_x_continuous(expand=c(0,0), name="Year") +#
  scale_y_continuous(expand=c(0,0), name="BAI") +#
  # facet_wrap(~TreeID, scales="free_y", space="free") +#
  # geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
  geom_line(aes(x=Year, y=fit.full), size=2, alpha=0.5) +#
  geom_ribbon(aes(x=Year, ymin=fit.full.lwr, ymax=fit.full.upr), alpha=0.3)#
#
# Plotting the Effects#
pdf("figures/gam3/gam3_influence_in_time_S_oaks.pdf", width= 13, height = 8.5)#
ggplot(data = data.graph[data.graph$Canopy.Class=="S" & substr(data.graph$group,1,2)=="QU",]) + facet_grid(group~State) +#
	scale_x_continuous(expand=c(0,0), name="Year") +#
	scale_y_continuous(expand=c(0,0), name=expression(paste("Effect on BAI (mm"^"2", "y"^"-1",")"))) +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_line(aes(x=Year, y=fit.tmean), size=2, color="red") +#
	geom_line(aes(x=Year, y=fit.precip), size=2, color="blue") +#
	geom_line(aes(x=Year, y=fit.dbh.recon), size=2, color="green")+#
	labs(title= "Suppressed Effects")+#
	poster.theme2#
dev.off()
ggplot(data = data.graph[data.graph$Canopy.Class=="D" & substr(data.graph$group,1,2)=="QU",]) + facet_grid(group ~ State) +#
	labs(title= "Dominant Trees", x="Year", y = expression(paste("BAI (mm"^"2", "y"^"-1",")"))) +#
	scale_x_continuous(expand=c(0,0), name="Year") +#
	scale_y_continuous(expand=c(0,0), name="BAI") +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_line(aes(x=Year, y=BA.inc), size=2, alpha=0.5) +#
	geom_ribbon(aes(x=Year, ymin=BA.inc.lwr, ymax=BA.inc.upr), alpha=0.3) +#
	geom_line(aes(x=Year, y = 0), linetype="dashed") +#
	# Harvard#
	plot.rgb("MA", "QURU.D", 3) +#
	plot.rgb("MA", "QUVE.D", 3) +#
	plot.rgb("MA", "QUAL.D", 3) +#
	# Howland#
	plot.rgb("ME", "QURU.D", 3) +#
	plot.rgb("ME", "QUVE.D", 3) +#
	plot.rgb("ME", "QUAL.D", 3) +#
	# Morgan Monroe#
	plot.rgb("IN", "QURU.D", 3) +#
	plot.rgb("IN", "QUVE.D", 3) +#
	plot.rgb("IN", "QUAL.D", 3) +#
	# Missouri Ozark#
	plot.rgb("MO", "QURU.D", 3) +#
	plot.rgb("MO", "QUVE.D", 3) +#
	plot.rgb("MO", "QUAL.D", 3) +#
	# Oak Openings#
	plot.rgb("OH", "QURU.D", 3) +#
	plot.rgb("OH", "QUVE.D", 3) +#
	plot.rgb("OH", "QUAL.D", 3) +#
	poster.theme2
ggplot(data = data.graph[data.graph$Canopy.Class=="D" & substr(data.graph$group,1,2)=="QU",]) + facet_grid(group ~ State) +#
	labs(title= "Dominant Trees", x="Year", y = expression(paste("BAI (mm"^"2", "y"^"-1",")"))) +#
	scale_x_continuous(expand=c(0,0)) +#
	scale_y_continuous(expand=c(0,0)) +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_line(aes(x=Year, y=BA.inc), size=2, alpha=0.5) +#
	geom_ribbon(aes(x=Year, ymin=BA.inc.lwr, ymax=BA.inc.upr), alpha=0.3) +#
	geom_line(aes(x=Year, y = 0), linetype="dashed") +#
	# Harvard#
	plot.rgb("MA", "QURU.D", 3) +#
	plot.rgb("MA", "QUVE.D", 3) +#
	plot.rgb("MA", "QUAL.D", 3) +#
	# Howland#
	plot.rgb("ME", "QURU.D", 3) +#
	plot.rgb("ME", "QUVE.D", 3) +#
	plot.rgb("ME", "QUAL.D", 3) +#
	# Morgan Monroe#
	plot.rgb("IN", "QURU.D", 3) +#
	plot.rgb("IN", "QUVE.D", 3) +#
	plot.rgb("IN", "QUAL.D", 3) +#
	# Missouri Ozark#
	plot.rgb("MO", "QURU.D", 3) +#
	plot.rgb("MO", "QUVE.D", 3) +#
	plot.rgb("MO", "QUAL.D", 3) +#
	# Oak Openings#
	plot.rgb("OH", "QURU.D", 3) +#
	plot.rgb("OH", "QUVE.D", 3) +#
	plot.rgb("OH", "QUAL.D", 3) +#
	poster.theme2
ggplot(data = data.graph[data.graph$Canopy.Class=="D" & substr(data.graph$group,1,2)=="QU",]) + facet_grid(group ~ State) +#
	labs(title= "Dominant Trees", x="Year", y = expression(bold(paste("BAI (mm"^"2", "y"^"-1",")")))) +#
	scale_x_continuous(expand=c(0,0)) +#
	scale_y_continuous(expand=c(0,0)) +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_line(aes(x=Year, y=BA.inc), size=2, alpha=0.5) +#
	geom_ribbon(aes(x=Year, ymin=BA.inc.lwr, ymax=BA.inc.upr), alpha=0.3) +#
	geom_line(aes(x=Year, y = 0), linetype="dashed") +#
	# Harvard#
	plot.rgb("MA", "QURU.D", 3) +#
	plot.rgb("MA", "QUVE.D", 3) +#
	plot.rgb("MA", "QUAL.D", 3) +#
	# Howland#
	plot.rgb("ME", "QURU.D", 3) +#
	plot.rgb("ME", "QUVE.D", 3) +#
	plot.rgb("ME", "QUAL.D", 3) +#
	# Morgan Monroe#
	plot.rgb("IN", "QURU.D", 3) +#
	plot.rgb("IN", "QUVE.D", 3) +#
	plot.rgb("IN", "QUAL.D", 3) +#
	# Missouri Ozark#
	plot.rgb("MO", "QURU.D", 3) +#
	plot.rgb("MO", "QUVE.D", 3) +#
	plot.rgb("MO", "QUAL.D", 3) +#
	# Oak Openings#
	plot.rgb("OH", "QURU.D", 3) +#
	plot.rgb("OH", "QUVE.D", 3) +#
	plot.rgb("OH", "QUAL.D", 3) +#
	poster.theme2
pdf("figures/gam3/gam3_SPP_CC_BAI_limiting_factors_D_oaks.pdf", width= 13, height = 8.5)#
ggplot(data = data.graph[data.graph$Canopy.Class=="D" & substr(data.graph$group,1,2)=="QU",]) + facet_grid(group ~ State) +#
	labs(title= "Dominant Trees", x="Year", y = expression(bold(paste("BAI (mm"^"2", "y"^"-1",")")))) +#
	scale_x_continuous(expand=c(0,0)) +#
	scale_y_continuous(expand=c(0,0)) +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_line(aes(x=Year, y=BA.inc), size=2, alpha=0.5) +#
	geom_ribbon(aes(x=Year, ymin=BA.inc.lwr, ymax=BA.inc.upr), alpha=0.3) +#
	geom_line(aes(x=Year, y = 0), linetype="dashed") +#
	# Harvard#
	plot.rgb("MA", "QURU.D", 3) +#
	plot.rgb("MA", "QUVE.D", 3) +#
	plot.rgb("MA", "QUAL.D", 3) +#
	# Howland#
	plot.rgb("ME", "QURU.D", 3) +#
	plot.rgb("ME", "QUVE.D", 3) +#
	plot.rgb("ME", "QUAL.D", 3) +#
	# Morgan Monroe#
	plot.rgb("IN", "QURU.D", 3) +#
	plot.rgb("IN", "QUVE.D", 3) +#
	plot.rgb("IN", "QUAL.D", 3) +#
	# Missouri Ozark#
	plot.rgb("MO", "QURU.D", 3) +#
	plot.rgb("MO", "QUVE.D", 3) +#
	plot.rgb("MO", "QUAL.D", 3) +#
	# Oak Openings#
	plot.rgb("OH", "QURU.D", 3) +#
	plot.rgb("OH", "QUVE.D", 3) +#
	plot.rgb("OH", "QUAL.D", 3) +#
	poster.theme2 #
dev.off()
ggplot(data = data.graph[data.graph$Canopy.Class=="D" & substr(data.graph$group,1,2)=="QU",]) + facet_grid(group~State) +#
	scale_x_continuous(expand=c(0,0), name="Year") +#
	scale_y_continuous(expand=c(0,0), name=expression(bold(paste("Effect on BAI (mm"^"2", "y"^"-1",")")))) +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_line(aes(x=Year, y=fit.tmean), size=2, color="red") +#
	geom_line(aes(x=Year, y=fit.precip), size=2, color="blue") +#
	geom_line(aes(x=Year, y=fit.dbh.recon), size=2, color="green")+#
	labs(title= "Dominant Effects")+#
	poster.theme2
pdf("figures/gam3/gam3_influence_in_time_D_oaks.pdf", width= 13, height = 8.5)#
ggplot(data = data.graph[data.graph$Canopy.Class=="D" & substr(data.graph$group,1,2)=="QU",]) + facet_grid(group~State) +#
	scale_x_continuous(expand=c(0,0), name="Year") +#
	scale_y_continuous(expand=c(0,0), name=expression(bold(paste("Effect on BAI (mm"^"2", "y"^"-1",")")))) +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_line(aes(x=Year, y=fit.tmean), size=2, color="red") +#
	geom_line(aes(x=Year, y=fit.precip), size=2, color="blue") +#
	geom_line(aes(x=Year, y=fit.dbh.recon), size=2, color="green")+#
	labs(title= "Dominant Effects")+#
	poster.theme2#
dev.off()
ggplot(data = data.graph[data.graph$Canopy.Class=="I" & substr(data.graph$group,1,2)=="QU",]) + facet_grid(group ~ State) +#
	labs(title= "Intermediate Trees", x="Year", y = expression(paste("BAI (mm"^"2", "y"^"-1",")"))) +#
#
	scale_x_continuous(expand=c(0,0)) +#
	scale_y_continuous(expand=c(0,0)) +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_line(aes(x=Year, y=BA.inc), size=2, alpha=0.5) +#
	geom_ribbon(aes(x=Year, ymin=BA.inc.lwr, ymax=BA.inc.upr), alpha=0.3) +#
	geom_line(aes(x=Year, y = 0), linetype="dashed") +#
	# Harvard#
	plot.rgb("MA", "QURU.I", 3) +#
	plot.rgb("MA", "QUVE.I", 3) +#
	plot.rgb("MA", "QUAL.I", 3) +#
	# Howland#
	plot.rgb("ME", "QURU.I", 3) +#
	plot.rgb("ME", "QUVE.I", 3) +#
	plot.rgb("ME", "QUAL.I", 3) +#
	# Morgan Monroe#
	plot.rgb("IN", "QURU.I", 3) +#
	plot.rgb("IN", "QUVE.I", 3) +#
	plot.rgb("IN", "QUAL.I", 3) +#
	# Missouri Ozark#
	plot.rgb("MO", "QURU.I", 3) +#
	plot.rgb("MO", "QUVE.I", 3) +#
	plot.rgb("MO", "QUAL.I", 3) +#
	# Oak Openings#
	plot.rgb("OH", "QURU.I", 3) +#
	plot.rgb("OH", "QUVE.I", 3) +#
	plot.rgb("OH", "QUAL.I", 3) +#
	poster.theme2
ggplot(data = data.graph[data.graph$Canopy.Class=="I" & substr(data.graph$group,1,2)=="QU",]) + facet_grid(group ~ State) +#
	labs(title= "Intermediate Trees", x="Year", y = expression(bold(paste("BAI (mm"^"2", "y"^"-1",")")))) +#
#
	scale_x_continuous(expand=c(0,0)) +#
	scale_y_continuous(expand=c(0,0)) +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_line(aes(x=Year, y=BA.inc), size=2, alpha=0.5) +#
	geom_ribbon(aes(x=Year, ymin=BA.inc.lwr, ymax=BA.inc.upr), alpha=0.3) +#
	geom_line(aes(x=Year, y = 0), linetype="dashed") +#
	# Harvard#
	plot.rgb("MA", "QURU.I", 3) +#
	plot.rgb("MA", "QUVE.I", 3) +#
	plot.rgb("MA", "QUAL.I", 3) +#
	# Howland#
	plot.rgb("ME", "QURU.I", 3) +#
	plot.rgb("ME", "QUVE.I", 3) +#
	plot.rgb("ME", "QUAL.I", 3) +#
	# Morgan Monroe#
	plot.rgb("IN", "QURU.I", 3) +#
	plot.rgb("IN", "QUVE.I", 3) +#
	plot.rgb("IN", "QUAL.I", 3) +#
	# Missouri Ozark#
	plot.rgb("MO", "QURU.I", 3) +#
	plot.rgb("MO", "QUVE.I", 3) +#
	plot.rgb("MO", "QUAL.I", 3) +#
	# Oak Openings#
	plot.rgb("OH", "QURU.I", 3) +#
	plot.rgb("OH", "QUVE.I", 3) +#
	plot.rgb("OH", "QUAL.I", 3) +#
	poster.theme2
pdf("figures/gam3/gam3_SPP_CC_BAI_limiting_factors_I_oaks.pdf", width= 13, height = 8.5)#
ggplot(data = data.graph[data.graph$Canopy.Class=="I" & substr(data.graph$group,1,2)=="QU",]) + facet_grid(group ~ State) +#
	labs(title= "Intermediate Trees", x="Year", y = expression(bold(paste("BAI (mm"^"2", "y"^"-1",")")))) +#
#
	scale_x_continuous(expand=c(0,0)) +#
	scale_y_continuous(expand=c(0,0)) +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_line(aes(x=Year, y=BA.inc), size=2, alpha=0.5) +#
	geom_ribbon(aes(x=Year, ymin=BA.inc.lwr, ymax=BA.inc.upr), alpha=0.3) +#
	geom_line(aes(x=Year, y = 0), linetype="dashed") +#
	# Harvard#
	plot.rgb("MA", "QURU.I", 3) +#
	plot.rgb("MA", "QUVE.I", 3) +#
	plot.rgb("MA", "QUAL.I", 3) +#
	# Howland#
	plot.rgb("ME", "QURU.I", 3) +#
	plot.rgb("ME", "QUVE.I", 3) +#
	plot.rgb("ME", "QUAL.I", 3) +#
	# Morgan Monroe#
	plot.rgb("IN", "QURU.I", 3) +#
	plot.rgb("IN", "QUVE.I", 3) +#
	plot.rgb("IN", "QUAL.I", 3) +#
	# Missouri Ozark#
	plot.rgb("MO", "QURU.I", 3) +#
	plot.rgb("MO", "QUVE.I", 3) +#
	plot.rgb("MO", "QUAL.I", 3) +#
	# Oak Openings#
	plot.rgb("OH", "QURU.I", 3) +#
	plot.rgb("OH", "QUVE.I", 3) +#
	plot.rgb("OH", "QUAL.I", 3) +#
	poster.theme2 #
dev.off()
ggplot(data = data.graph[data.graph$Canopy.Class=="I" & substr(data.graph$group,1,2)=="QU",]) + facet_grid(group~State) +#
	scale_x_continuous(expand=c(0,0), name="Year") +#
	scale_y_continuous(expand=c(0,0), name=expression(bold(paste("Effect on BAI (mm"^"2", "y"^"-1",")")))) +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_line(aes(x=Year, y=fit.tmean), size=2, color="red") +#
	geom_line(aes(x=Year, y=fit.precip), size=2, color="blue") +#
	geom_line(aes(x=Year, y=fit.dbh.recon), size=2, color="green")+#
	labs(title= "Intermediate Effects")+#
	poster.theme2
pdf("figures/gam3/gam3_influence_in_time_I_oaks.pdf", width= 13, height = 8.5)#
ggplot(data = data.graph[data.graph$Canopy.Class=="I" & substr(data.graph$group,1,2)=="QU",]) + facet_grid(group~State) +#
	scale_x_continuous(expand=c(0,0), name="Year") +#
	scale_y_continuous(expand=c(0,0), name=expression(bold(paste("Effect on BAI (mm"^"2", "y"^"-1",")")))) +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_line(aes(x=Year, y=fit.tmean), size=2, color="red") +#
	geom_line(aes(x=Year, y=fit.precip), size=2, color="blue") +#
	geom_line(aes(x=Year, y=fit.dbh.recon), size=2, color="green")+#
	labs(title= "Intermediate Effects")+#
	poster.theme2#
dev.off()
ggplot(data =data.graph[data.graph$Canopy.Class=="S" & substr(data.graph$group,1,2)=="QU",]) + facet_grid(group ~ State)+#
	labs(title= "Suppressed Trees", x="Year", y = expression(bold(paste("BAI (mm"^"2", "y"^"-1",")"))))+#
	scale_x_continuous(expand=c(0,0)) +#
	scale_y_continuous(expand=c(0,0)) +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_line(aes(x=Year, y=BA.inc), size=2, alpha=0.5) +#
	geom_ribbon(aes(x=Year, ymin=BA.inc.lwr, ymax=BA.inc.upr), alpha=0.3) +#
	geom_line(aes(x=Year, y = 0), linetype="dashed") +#
	# Harvard#
	plot.rgb("MA", "QURU.S", 3) +#
	plot.rgb("MA", "QUVE.S", 3) +#
	plot.rgb("MA", "QUAL.S", 3) +#
	# Howland#
	plot.rgb("ME", "QURU.S", 3) +#
	plot.rgb("ME", "QUVE.S", 3) +#
	plot.rgb("ME", "QUAL.S", 3) +#
	# Morgan Monroe#
	plot.rgb("IN", "QURU.S", 3) +#
	plot.rgb("IN", "QUVE.S", 3) +#
	plot.rgb("IN", "QUAL.S", 3) +#
	# Missouri Ozark#
	plot.rgb("MO", "QURU.S", 3) +#
	plot.rgb("MO", "QUVE.S", 3) +#
	plot.rgb("MO", "QUAL.S", 3) +#
	# Oak Openings#
	plot.rgb("OH", "QURU.S", 3) +#
	plot.rgb("OH", "QUVE.S", 3) +#
	plot.rgb("OH", "QUAL.S", 3) +#
	poster.theme2
pdf("figures/gam3/gam3_SPP_CC_BAI_limiting_factors_S_oaks.pdf", width= 13, height = 8.5)#
ggplot(data =data.graph[data.graph$Canopy.Class=="S" & substr(data.graph$group,1,2)=="QU",]) + facet_grid(group ~ State)+#
	labs(title= "Suppressed Trees", x="Year", y = expression(bold(paste("BAI (mm"^"2", "y"^"-1",")"))))+#
	scale_x_continuous(expand=c(0,0)) +#
	scale_y_continuous(expand=c(0,0)) +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_line(aes(x=Year, y=BA.inc), size=2, alpha=0.5) +#
	geom_ribbon(aes(x=Year, ymin=BA.inc.lwr, ymax=BA.inc.upr), alpha=0.3) +#
	geom_line(aes(x=Year, y = 0), linetype="dashed") +#
	# Harvard#
	plot.rgb("MA", "QURU.S", 3) +#
	plot.rgb("MA", "QUVE.S", 3) +#
	plot.rgb("MA", "QUAL.S", 3) +#
	# Howland#
	plot.rgb("ME", "QURU.S", 3) +#
	plot.rgb("ME", "QUVE.S", 3) +#
	plot.rgb("ME", "QUAL.S", 3) +#
	# Morgan Monroe#
	plot.rgb("IN", "QURU.S", 3) +#
	plot.rgb("IN", "QUVE.S", 3) +#
	plot.rgb("IN", "QUAL.S", 3) +#
	# Missouri Ozark#
	plot.rgb("MO", "QURU.S", 3) +#
	plot.rgb("MO", "QUVE.S", 3) +#
	plot.rgb("MO", "QUAL.S", 3) +#
	# Oak Openings#
	plot.rgb("OH", "QURU.S", 3) +#
	plot.rgb("OH", "QUVE.S", 3) +#
	plot.rgb("OH", "QUAL.S", 3) +#
	poster.theme2#
dev.off()
ggplot(data = data.graph[data.graph$Canopy.Class=="S" & substr(data.graph$group,1,2)=="QU",]) + facet_grid(group~State) +#
	scale_x_continuous(expand=c(0,0), name="Year") +#
	scale_y_continuous(expand=c(0,0), name=expression(bold(paste("Effect on BAI (mm"^"2", "y"^"-1",")")))) +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_line(aes(x=Year, y=fit.tmean), size=2, color="red") +#
	geom_line(aes(x=Year, y=fit.precip), size=2, color="blue") +#
	geom_line(aes(x=Year, y=fit.dbh.recon), size=2, color="green")+#
	labs(title= "Suppressed Effects")+#
	poster.theme2
pdf("figures/gam3/gam3_influence_in_time_S_oaks.pdf", width= 13, height = 8.5)#
ggplot(data = data.graph[data.graph$Canopy.Class=="S" & substr(data.graph$group,1,2)=="QU",]) + facet_grid(group~State) +#
	scale_x_continuous(expand=c(0,0), name="Year") +#
	scale_y_continuous(expand=c(0,0), name=expression(bold(paste("Effect on BAI (mm"^"2", "y"^"-1",")")))) +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_line(aes(x=Year, y=fit.tmean), size=2, color="red") +#
	geom_line(aes(x=Year, y=fit.precip), size=2, color="blue") +#
	geom_line(aes(x=Year, y=fit.dbh.recon), size=2, color="green")+#
	labs(title= "Suppressed Effects")+#
	poster.theme2#
dev.off()
library(dplR)#
library(ggplot2)#
library(car)#
#
#--------------------------------------------------------#
# Want to graph the mean rw and 95% Ci for each site#
#--------------------------------------------------------#
#
data.use <- read.csv("processed_data/AllSites_tree_plus_climate.csv", header=T)#
summary(data.use)#
#
# Subsetting Live trees#
data.use <- data.use[data.use$Live.Dead=="LIVE" & !data.use$Canopy.Class=="F",]#
#
data.use$group <- data.use$Species#
data.use$group <- recode(data.use$group, "'CAOV' = 'CARYA'; 'CACO' = 'CARYA'; #
  							'CATE' = 'CARYA'; 'ACSAC' = 'ACSA'; 'BEAL' = 'BETULA'; 'BELE' = 'BETULA'; 'QUMU' = 'QUAL'")#
#
data.use$Canopy.Class <- recode(data.use$Canopy.Class, "'C' = 'D'")#
summary(data.use)#
#
group.use <- c("ACRU", "ACSA", "BETULA", "CARYA", "FAGR", "FRAX", "PIST", "QUAL", "QURU", "QUVE", "SAAL", "TSCA", "ULRU")#
#
data.use <- data.use[data.use$group %in% group.use,]#
#
# #
# Aggregating by site by year to get the mean RW for each year for each canopy Class#
cc.mean.rw <- data.frame(mean = aggregate(data.use$RW, by=data.use[,c("Site", "Canopy.Class", "Year")], FUN=mean, na.rm=T))#
names(cc.mean.rw)<- c("Site", "Canopy.Class", "Year", "rw.mean")                  #
summary(cc.mean.rw)#
# Generating the 95% CI for RW at each site for each year                   #
# I was having trouble graphing if I generated both quantiles at the same time, so I am doing them separately and merging the upper and lower into 1 DF#
cc.lwr.rw <- aggregate(data.use$RW, by=list(data.use$Site,data.use$Canopy.Class, data.use$Year), FUN=quantile, probs=0.025, na.rm=T)#
cc.upr.rw <- aggregate(data.use$RW, by=list(data.use$Site,data.use$Canopy.Class, data.use$Year), FUN=quantile, probs=0.975, na.rm=T)                   #
#
names(cc.lwr.rw) <- c("Site", "Canopy.Class", "Year", "lwr")#
names(cc.upr.rw) <- c("Site", "Canopy.Class", "Year", "upr")#
#
#Merging CI's#
cc.ci.rw <- merge(cc.lwr.rw, cc.upr.rw, all.x=T, all.y=F)#
summary(cc.ci.rw)#
#
# Merging CI with Mean#
#
cc.mean.rw <- merge(cc.mean.rw, cc.ci.rw, all.x=T, all.y=F)#
summary(cc.mean.rw)#
sites.use <- c("Harvard", "Howland", "Morgan Monroe State Park", "Oak Openings Toledo", "Missouri Ozark")
ggplot(data=cc.mean.rw[cc.mean.rw$Site %in% sites.use,]) + facet_wrap(Canopy.Class~Site, scales="free_x") +#
  geom_ribbon(aes(x=Year, ymin=lwr, ymax=upr, fill=Canopy.Class), alpha=0.5) +#
  geom_line(aes(x=Year, y=rw.mean, color=Canopy.Class))
source("poster_theme.R")
ggplot(data=cc.mean.rw[cc.mean.rw$Site %in% sites.use,]) + facet_wrap(Canopy.Class~Site, scales="free_x") +#
  geom_ribbon(aes(x=Year, ymin=lwr, ymax=upr, fill=Canopy.Class), alpha=0.5) +#
  geom_line(aes(x=Year, y=rw.mean, color=Canopy.Class))+#
  poster.theme2
ggplot(data=cc.mean.rw[cc.mean.rw$Site %in% sites.use,]) + facet_wrap(~Site, scales="free_x") +#
  geom_ribbon(aes(x=Year, ymin=lwr, ymax=upr), alpha=0.5) +#
  geom_line(aes(x=Year, y=rw.mean))+#
  poster.theme2
ggplot(data=cc.mean.rw[cc.mean.rw$Site %in% sites.use,]) + facet_wrap(Canopy.Class~Site, scales="free_x") +#
  geom_ribbon(aes(x=Year, ymin=lwr, ymax=upr), alpha=0.5) +#
  geom_line(aes(x=Year, y=rw.mean))+#
  poster.theme2
library(dplR)#
library(ggplot2)#
library(stringr)#
library(car)#
# -------------------------------------------------------------------------------------#
# Using MMF and Harvard as two examples#
# -------------------------------------------------------------------------------------#
load("processed_data/sites_rw.Rdata")#
load("processed_data/test_tree_data_1950_2012.Rdata")#
load("processed_data/sites_use_climate.Rdata")#
summary(climate.site[[1]])#
summary(test)#
# Creating lists for harvard and mmf species#
#
sites.use2 <- c("Harvard", "Morgan Monroe State Park")#
#
summary(sites.rw[[1]])#
names(sites.rw)#
# species.data <- sites.rw[names(sites.rw) %in% sites.use2]#
species.data <- sites.rw#
summary(species.data)#
#
# Gettign mmf data#
#
short.spp <- list()#
#
for(s in names(species.data)){#
	for(i in unique(test[test$Site ==s, "group"])){#
		cols.use <- unique(test[test$Site==s & test$group==i,"TreeID"])#
		short.spp[[paste(s, i, sep=".")]] <- species.data[[s]][,paste(cols.use)]#
	} #
}#
summary(short.spp)#
summary(short.spp[["Morgan Monroe State Park.TIAM"]])#
# Making each tree an index using a 30 yr. spline#
short.spp.index <- list()#
for(s in names(short.spp)){#
	short.spp.index[[s]] <- detrend(short.spp[[s]], method="Spline", nyrs=30)#
}#
summary(short.spp.index[[1]])
library(ggplot2)#
library(stringr)#
source("poster_theme.R")#
load(file="processed_data/gamm_weights/gam3_weights.Rdata")#
#
summary(gam3.weights)#
factors.fits <- c("fit.tmean", "fit.precip", "fit.dbh.recon", "fit.full", "BA.inc")#
factors.weights <- c("weight.tmean", "weight.dbh.recon", "weight.precip")#
othervars <- c("Year", "Site", "group.cc", "Model")#
#
data.graph1 <- aggregate(gam3.weights[,factors.fits], by = gam3.weights[,othervars], FUN= mean, na.rm=T)#
#
data.graph1[,paste(factors.fits, "upr", sep=".")] <- aggregate(gam3.weights[,factors.fits], by = gam3.weights[,othervars], FUN= quantile, prob= 0.975, na.rm=T)[,factors.fits]#
#
data.graph1[,paste(factors.fits, "lwr", sep=".")] <- aggregate(gam3.weights[,factors.fits], by = gam3.weights[,othervars], FUN= quantile, prob= 0.025, na.rm=T)[,factors.fits]#
#
summary(data.graph1)#
#
data.graph2 <- aggregate(abs(gam3.weights[,factors.weights]), by = gam3.weights[,othervars], FUN= mean, na.rm=T)#
#
data.graph2[,paste(factors.weights, "upr", sep=".")] <- aggregate(abs(gam3.weights[,factors.weights]), by = gam3.weights[,othervars], FUN= quantile, prob= 0.975, na.rm=T)[,factors.weights]#
#
data.graph2[,paste(factors.weights, "lwr", sep=".")] <- aggregate(abs(gam3.weights[,factors.weights]), by = gam3.weights[,othervars], FUN= quantile, prob= 0.025, na.rm=T)[,factors.weights]#
#
summary(data.graph2)#
#
data.graph <- merge(data.graph1, data.graph2, all.x=T, all.y=T)#
#
# data.graph <- gam3.weights[gam3.weights$TreeID== "MMA014",]#
summary(data.graph)#
gam3.weights$wts.check <- rowSums(abs(gam3.weights[,c("weight.tmean", "weight.precip", "weight.dbh.recon")]))#
data.graph$wts.check <- rowSums(abs(data.graph[,c("weight.tmean", "weight.precip", "weight.dbh.recon")]))#
#
summary(gam3.weights)#
summary(data.graph)#
#
# Ordering the data for graphing#
#
data.graph<- data.graph[order(data.graph$Year, data.graph$group.cc, data.graph$Site, decreasing=F),]#
plot.rgb <- function(STATE, GC, SIZE){	geom_line(data=data.graph[data.graph$State==STATE & data.graph$group.cc==GC,],aes(x=Year, y=fit.full), size=SIZE,#
  		        color=rgb(abs(data.graph[data.graph$State==STATE & data.graph$group.cc==GC,"weight.tmean"     ]), # red#
                        abs(data.graph[data.graph$State==STATE & data.graph$group.cc==GC,"weight.dbh.recon"     ]), # green#
                        abs(data.graph[data.graph$State==STATE & data.graph$group.cc==GC,"weight.precip"   ]))) }   # blue#
# Plotting the Obs and modeled with influence coloring#
data.graph$State <- recode(data.graph$Site, "'Howland' = 'ME';'Harvard' = 'MA';'Morgan Monroe State Park' = 'IN';'Missouri Ozark' = 'MO';'Oak Openings Toledo' = 'OH'")#
data.graph$State <- factor(data.graph$State, levels=c("MO", "IN", "OH", "MA", "ME"))#
#
for(i in unique(data.graph$group.cc)){#
	data.graph[data.graph$group.cc==i,"Canopy.Class"] <- str_sub(data.graph[data.graph$group.cc==i,"group.cc"], -1)#
	data.graph[data.graph$group.cc==i,"group"] <- substr(data.graph[data.graph$group.cc==i,"group.cc"], 1,4)#
}#
data.graph$Canopy.Class <- as.factor(data.graph$Canopy.Class)#
data.graph$group <- as.factor(data.graph$group)#
summary(data.graph)
ggplot(data = data.graph[substr(data.graph$group, 1,2)=="QU",]) + facet_grid(group*Canopy.Class ~ State) +#
	scale_x_continuous(expand=c(0,0), name="Year") +#
	scale_y_continuous(expand=c(0,0), name=expression(bold(paste("BAI (mm"^"2", "y"^"-1",")")))) +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_line(aes(x=Year, y=BA.inc), size=2, alpha=0.5) +#
	geom_ribbon(aes(x=Year, ymin=BA.inc.lwr, ymax=BA.inc.upr), alpha=0.3) +#
	geom_line(aes(x=Year, y = 0), linetype="dashed") +#
	# Harvard#
	plot.rgb("MA", "QURU.C", 3) +#
	plot.rgb("MA", "QURU.D", 3) +#
	plot.rgb("MA", "QURU.I", 3) +#
	plot.rgb("MA", "QURU.S", 3) +#
	plot.rgb("MA", "QUVE.C", 3) +#
	plot.rgb("MA", "QUVE.D", 3) +#
	plot.rgb("MA", "QUVE.I", 3) +#
	plot.rgb("MA", "QUVE.S", 3) +#
	plot.rgb("MA", "QUAL.C", 3) +#
	plot.rgb("MA", "QUAL.D", 3) +#
	plot.rgb("MA", "QUAL.I", 3) +#
	plot.rgb("MA", "QUAL.S", 3) +#
	# Howland#
	plot.rgb("ME", "QURU.C", 3) +#
	plot.rgb("ME", "QURU.D", 3) +#
	plot.rgb("ME", "QURU.I", 3) +#
	plot.rgb("ME", "QURU.S", 3) +#
	plot.rgb("ME", "QUVE.C", 3) +#
	plot.rgb("ME", "QUVE.D", 3) +#
	plot.rgb("ME", "QUVE.I", 3) +#
	plot.rgb("ME", "QUVE.S", 3) +#
	plot.rgb("ME", "QUAL.C", 3) +#
	plot.rgb("ME", "QUAL.D", 3) +#
	plot.rgb("ME", "QUAL.I", 3) +#
	plot.rgb("ME", "QUAL.S", 3) +#
	# Morgan Monroe#
	plot.rgb("IN", "QURU.C", 3) +#
	plot.rgb("IN", "QURU.D", 3) +#
	plot.rgb("IN", "QURU.I", 3) +#
	plot.rgb("IN", "QURU.S", 3) +#
	plot.rgb("IN", "QUVE.C", 3) +#
	plot.rgb("IN", "QUVE.D", 3) +#
	plot.rgb("IN", "QUVE.I", 3) +#
	plot.rgb("IN", "QUVE.S", 3) +#
	plot.rgb("IN", "QUAL.C", 3) +#
	plot.rgb("IN", "QUAL.D", 3) +#
	plot.rgb("IN", "QUAL.I", 3) +#
	plot.rgb("IN", "QUAL.S", 3) +#
	# Missouri Ozark#
	plot.rgb("MO", "QURU.C", 3) +#
	plot.rgb("MO", "QURU.D", 3) +#
	plot.rgb("MO", "QURU.I", 3) +#
	plot.rgb("MO", "QURU.S", 3) +#
	plot.rgb("MO", "QUVE.C", 3) +#
	plot.rgb("MO", "QUVE.D", 3) +#
	plot.rgb("MO", "QUVE.I", 3) +#
	plot.rgb("MO", "QUVE.S", 3) +#
	plot.rgb("MO", "QUAL.C", 3) +#
	plot.rgb("MO", "QUAL.D", 3) +#
	plot.rgb("MO", "QUAL.I", 3) +#
	plot.rgb("MO", "QUAL.S", 3) +#
	# Oak Openings#
	plot.rgb("OH", "QURU.C", 3) +#
	plot.rgb("OH", "QURU.D", 3) +#
	plot.rgb("OH", "QURU.I", 3) +#
	plot.rgb("OH", "QURU.S", 3) +#
	plot.rgb("OH", "QUVE.C", 3) +#
	plot.rgb("OH", "QUVE.D", 3) +#
	plot.rgb("OH", "QUVE.I", 3) +#
	plot.rgb("OH", "QUVE.S", 3) +#
	plot.rgb("OH", "QUAL.C", 3) +#
	plot.rgb("OH", "QUAL.D", 3) +#
	plot.rgb("OH", "QUAL.I", 3) +#
	plot.rgb("OH", "QUAL.S", 3) #
dev.off()
ggplot(data = data.graph[substr(data.graph$group, 1,2)=="QU",]) + facet_grid(group*Canopy.Class ~ State) +#
	scale_x_continuous(expand=c(0,0), name="Year") +#
	scale_y_continuous(expand=c(0,0), name=expression(bold(paste("BAI (mm"^"2", "y"^"-1",")")))) +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_line(aes(x=Year, y=BA.inc), size=2, alpha=0.5) +#
	geom_ribbon(aes(x=Year, ymin=BA.inc.lwr, ymax=BA.inc.upr), alpha=0.3) +#
	geom_line(aes(x=Year, y = 0), linetype="dashed") +#
	# Harvard#
	plot.rgb("MA", "QURU.C", 3) +#
	plot.rgb("MA", "QURU.D", 3) +#
	plot.rgb("MA", "QURU.I", 3) +#
	plot.rgb("MA", "QURU.S", 3) +#
	plot.rgb("MA", "QUVE.C", 3) +#
	plot.rgb("MA", "QUVE.D", 3) +#
	plot.rgb("MA", "QUVE.I", 3) +#
	plot.rgb("MA", "QUVE.S", 3) +#
	plot.rgb("MA", "QUAL.C", 3) +#
	plot.rgb("MA", "QUAL.D", 3) +#
	plot.rgb("MA", "QUAL.I", 3) +#
	plot.rgb("MA", "QUAL.S", 3) +#
	# Howland#
	plot.rgb("ME", "QURU.C", 3) +#
	plot.rgb("ME", "QURU.D", 3) +#
	plot.rgb("ME", "QURU.I", 3) +#
	plot.rgb("ME", "QURU.S", 3) +#
	plot.rgb("ME", "QUVE.C", 3) +#
	plot.rgb("ME", "QUVE.D", 3) +#
	plot.rgb("ME", "QUVE.I", 3) +#
	plot.rgb("ME", "QUVE.S", 3) +#
	plot.rgb("ME", "QUAL.C", 3) +#
	plot.rgb("ME", "QUAL.D", 3) +#
	plot.rgb("ME", "QUAL.I", 3) +#
	plot.rgb("ME", "QUAL.S", 3) +#
	# Morgan Monroe#
	plot.rgb("IN", "QURU.C", 3) +#
	plot.rgb("IN", "QURU.D", 3) +#
	plot.rgb("IN", "QURU.I", 3) +#
	plot.rgb("IN", "QURU.S", 3) +#
	plot.rgb("IN", "QUVE.C", 3) +#
	plot.rgb("IN", "QUVE.D", 3) +#
	plot.rgb("IN", "QUVE.I", 3) +#
	plot.rgb("IN", "QUVE.S", 3) +#
	plot.rgb("IN", "QUAL.C", 3) +#
	plot.rgb("IN", "QUAL.D", 3) +#
	plot.rgb("IN", "QUAL.I", 3) +#
	plot.rgb("IN", "QUAL.S", 3) +#
	# Missouri Ozark#
	plot.rgb("MO", "QURU.C", 3) +#
	plot.rgb("MO", "QURU.D", 3) +#
	plot.rgb("MO", "QURU.I", 3) +#
	plot.rgb("MO", "QURU.S", 3) +#
	plot.rgb("MO", "QUVE.C", 3) +#
	plot.rgb("MO", "QUVE.D", 3) +#
	plot.rgb("MO", "QUVE.I", 3) +#
	plot.rgb("MO", "QUVE.S", 3) +#
	plot.rgb("MO", "QUAL.C", 3) +#
	plot.rgb("MO", "QUAL.D", 3) +#
	plot.rgb("MO", "QUAL.I", 3) +#
	plot.rgb("MO", "QUAL.S", 3) +#
	# Oak Openings#
	plot.rgb("OH", "QURU.C", 3) +#
	plot.rgb("OH", "QURU.D", 3) +#
	plot.rgb("OH", "QURU.I", 3) +#
	plot.rgb("OH", "QURU.S", 3) +#
	plot.rgb("OH", "QUVE.C", 3) +#
	plot.rgb("OH", "QUVE.D", 3) +#
	plot.rgb("OH", "QUVE.I", 3) +#
	plot.rgb("OH", "QUVE.S", 3) +#
	plot.rgb("OH", "QUAL.C", 3) +#
	plot.rgb("OH", "QUAL.D", 3) +#
	plot.rgb("OH", "QUAL.I", 3) +#
	plot.rgb("OH", "QUAL.S", 3)
ggplot(data = data.graph[substr(data.graph$group, 1,2)=="QU",]) + facet_grid(group*Canopy.Class ~ State) +#
	scale_x_continuous(expand=c(0,0), name="Year") +#
	scale_y_continuous(expand=c(0,0), name=expression(bold(paste("BAI (mm"^"2", "y"^"-1",")")))) +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_line(aes(x=Year, y=BA.inc), size=2, alpha=0.5) +#
	geom_ribbon(aes(x=Year, ymin=BA.inc.lwr, ymax=BA.inc.upr), alpha=0.3) +#
	geom_line(aes(x=Year, y = 0), linetype="dashed") +#
	# Harvard#
	plot.rgb("MA", "QURU.C", 3) +#
	plot.rgb("MA", "QURU.D", 3) +#
	plot.rgb("MA", "QURU.I", 3) +#
	plot.rgb("MA", "QURU.S", 3) +#
	plot.rgb("MA", "QUVE.C", 3) +#
	plot.rgb("MA", "QUVE.D", 3) +#
	plot.rgb("MA", "QUVE.I", 3) +#
	plot.rgb("MA", "QUVE.S", 3) +#
	plot.rgb("MA", "QUAL.C", 3) +#
	plot.rgb("MA", "QUAL.D", 3) +#
	plot.rgb("MA", "QUAL.I", 3) +#
	plot.rgb("MA", "QUAL.S", 3) +#
	# Howland#
	plot.rgb("ME", "QURU.C", 3) +#
	plot.rgb("ME", "QURU.D", 3) +#
	plot.rgb("ME", "QURU.I", 3) +#
	plot.rgb("ME", "QURU.S", 3) +#
	plot.rgb("ME", "QUVE.C", 3) +#
	plot.rgb("ME", "QUVE.D", 3) +#
	plot.rgb("ME", "QUVE.I", 3) +#
	plot.rgb("ME", "QUVE.S", 3) +#
	plot.rgb("ME", "QUAL.C", 3) +#
	plot.rgb("ME", "QUAL.D", 3) +#
	plot.rgb("ME", "QUAL.I", 3) +#
	plot.rgb("ME", "QUAL.S", 3) +#
	# Morgan Monroe#
	plot.rgb("IN", "QURU.C", 3) +#
	plot.rgb("IN", "QURU.D", 3) +#
	plot.rgb("IN", "QURU.I", 3) +#
	plot.rgb("IN", "QURU.S", 3) +#
	plot.rgb("IN", "QUVE.C", 3) +#
	plot.rgb("IN", "QUVE.D", 3) +#
	plot.rgb("IN", "QUVE.I", 3) +#
	plot.rgb("IN", "QUVE.S", 3) +#
	plot.rgb("IN", "QUAL.C", 3) +#
	plot.rgb("IN", "QUAL.D", 3) +#
	plot.rgb("IN", "QUAL.I", 3) +#
	plot.rgb("IN", "QUAL.S", 3) +#
	# Missouri Ozark#
	plot.rgb("MO", "QURU.C", 3) +#
	plot.rgb("MO", "QURU.D", 3) +#
	plot.rgb("MO", "QURU.I", 3) +#
	plot.rgb("MO", "QURU.S", 3) +#
	plot.rgb("MO", "QUVE.C", 3) +#
	plot.rgb("MO", "QUVE.D", 3) +#
	plot.rgb("MO", "QUVE.I", 3) +#
	plot.rgb("MO", "QUVE.S", 3) +#
	plot.rgb("MO", "QUAL.C", 3) +#
	plot.rgb("MO", "QUAL.D", 3) +#
	plot.rgb("MO", "QUAL.I", 3) +#
	plot.rgb("MO", "QUAL.S", 3) +#
	# Oak Openings#
	plot.rgb("OH", "QURU.C", 3) +#
	plot.rgb("OH", "QURU.D", 3) +#
	plot.rgb("OH", "QURU.I", 3) +#
	plot.rgb("OH", "QURU.S", 3) +#
	plot.rgb("OH", "QUVE.C", 3) +#
	plot.rgb("OH", "QUVE.D", 3) +#
	plot.rgb("OH", "QUVE.I", 3) +#
	plot.rgb("OH", "QUVE.S", 3) +#
	plot.rgb("OH", "QUAL.C", 3) +#
	plot.rgb("OH", "QUAL.D", 3) +#
	plot.rgb("OH", "QUAL.I", 3) +#
	plot.rgb("OH", "QUAL.S", 3) +#
	poster.theme2
pdf("figures/gam3/gam3_SPP_CC_BAI_limiting_factors_All_oaks.pdf", width= 13, height = 8.5)#
ggplot(data = data.graph[substr(data.graph$group, 1,2)=="QU",]) + facet_grid(group*Canopy.Class ~ State) +#
	scale_x_continuous(expand=c(0,0), name="Year") +#
	scale_y_continuous(expand=c(0,0), name=expression(bold(paste("BAI (mm"^"2", "y"^"-1",")")))) +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_line(aes(x=Year, y=BA.inc), size=2, alpha=0.5) +#
	geom_ribbon(aes(x=Year, ymin=BA.inc.lwr, ymax=BA.inc.upr), alpha=0.3) +#
	geom_line(aes(x=Year, y = 0), linetype="dashed") +#
	# Harvard#
	plot.rgb("MA", "QURU.C", 3) +#
	plot.rgb("MA", "QURU.D", 3) +#
	plot.rgb("MA", "QURU.I", 3) +#
	plot.rgb("MA", "QURU.S", 3) +#
	plot.rgb("MA", "QUVE.C", 3) +#
	plot.rgb("MA", "QUVE.D", 3) +#
	plot.rgb("MA", "QUVE.I", 3) +#
	plot.rgb("MA", "QUVE.S", 3) +#
	plot.rgb("MA", "QUAL.C", 3) +#
	plot.rgb("MA", "QUAL.D", 3) +#
	plot.rgb("MA", "QUAL.I", 3) +#
	plot.rgb("MA", "QUAL.S", 3) +#
	# Howland#
	plot.rgb("ME", "QURU.C", 3) +#
	plot.rgb("ME", "QURU.D", 3) +#
	plot.rgb("ME", "QURU.I", 3) +#
	plot.rgb("ME", "QURU.S", 3) +#
	plot.rgb("ME", "QUVE.C", 3) +#
	plot.rgb("ME", "QUVE.D", 3) +#
	plot.rgb("ME", "QUVE.I", 3) +#
	plot.rgb("ME", "QUVE.S", 3) +#
	plot.rgb("ME", "QUAL.C", 3) +#
	plot.rgb("ME", "QUAL.D", 3) +#
	plot.rgb("ME", "QUAL.I", 3) +#
	plot.rgb("ME", "QUAL.S", 3) +#
	# Morgan Monroe#
	plot.rgb("IN", "QURU.C", 3) +#
	plot.rgb("IN", "QURU.D", 3) +#
	plot.rgb("IN", "QURU.I", 3) +#
	plot.rgb("IN", "QURU.S", 3) +#
	plot.rgb("IN", "QUVE.C", 3) +#
	plot.rgb("IN", "QUVE.D", 3) +#
	plot.rgb("IN", "QUVE.I", 3) +#
	plot.rgb("IN", "QUVE.S", 3) +#
	plot.rgb("IN", "QUAL.C", 3) +#
	plot.rgb("IN", "QUAL.D", 3) +#
	plot.rgb("IN", "QUAL.I", 3) +#
	plot.rgb("IN", "QUAL.S", 3) +#
	# Missouri Ozark#
	plot.rgb("MO", "QURU.C", 3) +#
	plot.rgb("MO", "QURU.D", 3) +#
	plot.rgb("MO", "QURU.I", 3) +#
	plot.rgb("MO", "QURU.S", 3) +#
	plot.rgb("MO", "QUVE.C", 3) +#
	plot.rgb("MO", "QUVE.D", 3) +#
	plot.rgb("MO", "QUVE.I", 3) +#
	plot.rgb("MO", "QUVE.S", 3) +#
	plot.rgb("MO", "QUAL.C", 3) +#
	plot.rgb("MO", "QUAL.D", 3) +#
	plot.rgb("MO", "QUAL.I", 3) +#
	plot.rgb("MO", "QUAL.S", 3) +#
	# Oak Openings#
	plot.rgb("OH", "QURU.C", 3) +#
	plot.rgb("OH", "QURU.D", 3) +#
	plot.rgb("OH", "QURU.I", 3) +#
	plot.rgb("OH", "QURU.S", 3) +#
	plot.rgb("OH", "QUVE.C", 3) +#
	plot.rgb("OH", "QUVE.D", 3) +#
	plot.rgb("OH", "QUVE.I", 3) +#
	plot.rgb("OH", "QUVE.S", 3) +#
	plot.rgb("OH", "QUAL.C", 3) +#
	plot.rgb("OH", "QUAL.D", 3) +#
	plot.rgb("OH", "QUAL.I", 3) +#
	plot.rgb("OH", "QUAL.S", 3) +#
	poster.theme2#
dev.off()
ggplot(data = data.graph[data.graph$Canopy.Class=="D" & substr(data.graph$group,1,2)=="QU" & data.graph$State=="M)",]) + facet_grid(group ~ State) +#
	labs(title= "Dominant Trees", x="Year", y = expression(bold(paste("BAI (mm"^"2", "y"^"-1",")")))) +#
	scale_x_continuous(expand=c(0,0)) +#
	scale_y_continuous(expand=c(0,0)) +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_line(aes(x=Year, y=BA.inc), size=2, alpha=0.5) +#
	geom_ribbon(aes(x=Year, ymin=BA.inc.lwr, ymax=BA.inc.upr), alpha=0.3) +#
	geom_line(aes(x=Year, y = 0), linetype="dashed") +#
	# Harvard#
	plot.rgb("MA", "QURU.D", 3) +#
	plot.rgb("MA", "QUVE.D", 3) +#
	plot.rgb("MA", "QUAL.D", 3) +#
	# Howland#
	plot.rgb("ME", "QURU.D", 3) +#
	plot.rgb("ME", "QUVE.D", 3) +#
	plot.rgb("ME", "QUAL.D", 3) +#
	# Morgan Monroe#
	plot.rgb("IN", "QURU.D", 3) +#
	plot.rgb("IN", "QUVE.D", 3) +#
	plot.rgb("IN", "QUAL.D", 3) +#
	# Missouri Ozark#
	plot.rgb("MO", "QURU.D", 3) +#
	plot.rgb("MO", "QUVE.D", 3) +#
	plot.rgb("MO", "QUAL.D", 3) +#
	# Oak Openings#
	plot.rgb("OH", "QURU.D", 3) +#
	plot.rgb("OH", "QUVE.D", 3) +#
	plot.rgb("OH", "QUAL.D", 3) +#
	poster.theme2
ggplot(data = data.graph[data.graph$Canopy.Class=="D" & substr(data.graph$group,1,2)=="QU" & data.graph$State=="M)",]) + facet_grid(group ~ State) +#
	labs(title= "Dominant Trees", x="Year", y = expression(bold(paste("BAI (mm"^"2", "y"^"-1",")")))) +#
	scale_x_continuous(expand=c(0,0)) +#
	scale_y_continuous(expand=c(0,0)) +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_line(aes(x=Year, y=BA.inc), size=2, alpha=0.5) +#
	geom_ribbon(aes(x=Year, ymin=BA.inc.lwr, ymax=BA.inc.upr), alpha=0.3) +#
	geom_line(aes(x=Year, y = 0), linetype="dashed") +#
	# Harvard#
	# plot.rgb("MA", "QURU.D", 3) +#
	# plot.rgb("MA", "QUVE.D", 3) +#
	# plot.rgb("MA", "QUAL.D", 3) +#
	# Howland#
	# plot.rgb("ME", "QURU.D", 3) +#
	# plot.rgb("ME", "QUVE.D", 3) +#
	# plot.rgb("ME", "QUAL.D", 3) +#
	# Morgan Monroe#
	# plot.rgb("IN", "QURU.D", 3) +#
	# plot.rgb("IN", "QUVE.D", 3) +#
	# plot.rgb("IN", "QUAL.D", 3) +#
	# Missouri Ozark#
	plot.rgb("MO", "QURU.D", 3) +#
	plot.rgb("MO", "QUVE.D", 3) +#
	plot.rgb("MO", "QUAL.D", 3) +#
	# Oak Openings#
	# plot.rgb("OH", "QURU.D", 3) +#
	# plot.rgb("OH", "QUVE.D", 3) +#
	# plot.rgb("OH", "QUAL.D", 3) +#
	poster.theme2
ggplot(data = data.graph[data.graph$Canopy.Class=="D" & substr(data.graph$group,1,2)=="QU" & data.graph$State=="M)",]) + facet_grid(group ~ ) +#
	labs(title= "Dominant Trees", x="Year", y = expression(bold(paste("BAI (mm"^"2", "y"^"-1",")")))) +#
	scale_x_continuous(expand=c(0,0)) +#
	scale_y_continuous(expand=c(0,0)) +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_line(aes(x=Year, y=BA.inc), size=2, alpha=0.5) +#
	geom_ribbon(aes(x=Year, ymin=BA.inc.lwr, ymax=BA.inc.upr), alpha=0.3) +#
	geom_line(aes(x=Year, y = 0), linetype="dashed") +#
	# Harvard#
	# plot.rgb("MA", "QURU.D", 3) +#
	# plot.rgb("MA", "QUVE.D", 3) +#
	# plot.rgb("MA", "QUAL.D", 3) +#
	# Howland#
	# plot.rgb("ME", "QURU.D", 3) +#
	# plot.rgb("ME", "QUVE.D", 3) +#
	# plot.rgb("ME", "QUAL.D", 3) +#
	# Morgan Monroe#
	# plot.rgb("IN", "QURU.D", 3) +#
	# plot.rgb("IN", "QUVE.D", 3) +#
	# plot.rgb("IN", "QUAL.D", 3) +#
	# Missouri Ozark#
	plot.rgb("MO", "QURU.D", 3) +#
	plot.rgb("MO", "QUVE.D", 3) +#
	plot.rgb("MO", "QUAL.D", 3) +#
	# Oak Openings#
	# plot.rgb("OH", "QURU.D", 3) +#
	# plot.rgb("OH", "QUVE.D", 3) +#
	# plot.rgb("OH", "QUAL.D", 3) +#
	poster.theme2
ggplot(data = data.graph[data.graph$Canopy.Class=="D" & substr(data.graph$group,1,2)=="QU" & data.graph$State=="M)",]) + facet_grid(group ~. ) +#
	labs(title= "Dominant Trees", x="Year", y = expression(bold(paste("BAI (mm"^"2", "y"^"-1",")")))) +#
	scale_x_continuous(expand=c(0,0)) +#
	scale_y_continuous(expand=c(0,0)) +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_line(aes(x=Year, y=BA.inc), size=2, alpha=0.5) +#
	geom_ribbon(aes(x=Year, ymin=BA.inc.lwr, ymax=BA.inc.upr), alpha=0.3) +#
	geom_line(aes(x=Year, y = 0), linetype="dashed") +#
	# Harvard#
	# plot.rgb("MA", "QURU.D", 3) +#
	# plot.rgb("MA", "QUVE.D", 3) +#
	# plot.rgb("MA", "QUAL.D", 3) +#
	# Howland#
	# plot.rgb("ME", "QURU.D", 3) +#
	# plot.rgb("ME", "QUVE.D", 3) +#
	# plot.rgb("ME", "QUAL.D", 3) +#
	# Morgan Monroe#
	# plot.rgb("IN", "QURU.D", 3) +#
	# plot.rgb("IN", "QUVE.D", 3) +#
	# plot.rgb("IN", "QUAL.D", 3) +#
	# Missouri Ozark#
	plot.rgb("MO", "QURU.D", 3) +#
	plot.rgb("MO", "QUVE.D", 3) +#
	plot.rgb("MO", "QUAL.D", 3) +#
	# Oak Openings#
	# plot.rgb("OH", "QURU.D", 3) +#
	# plot.rgb("OH", "QUVE.D", 3) +#
	# plot.rgb("OH", "QUAL.D", 3) +#
	poster.theme2
data.graph[data.graph$Canopy.Class=="D" & substr(data.graph$group,1,2)=="QU" & data.graph$State=="M)",]
data.graph[data.graph$Canopy.Class=="D" & substr(data.graph$group,1,2)=="QU" & data.graph$State=="MO",]
ggplot(data = data.graph[data.graph$Canopy.Class=="D" & substr(data.graph$group,1,2)=="QU" & data.graph$State=="MO",]) + facet_grid(group ~. ) +#
	labs(title= "Dominant Trees", x="Year", y = expression(bold(paste("BAI (mm"^"2", "y"^"-1",")")))) +#
	scale_x_continuous(expand=c(0,0)) +#
	scale_y_continuous(expand=c(0,0)) +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_line(aes(x=Year, y=BA.inc), size=2, alpha=0.5) +#
	geom_ribbon(aes(x=Year, ymin=BA.inc.lwr, ymax=BA.inc.upr), alpha=0.3) +#
	geom_line(aes(x=Year, y = 0), linetype="dashed") +#
	# Harvard#
	# plot.rgb("MA", "QURU.D", 3) +#
	# plot.rgb("MA", "QUVE.D", 3) +#
	# plot.rgb("MA", "QUAL.D", 3) +#
	# Howland#
	# plot.rgb("ME", "QURU.D", 3) +#
	# plot.rgb("ME", "QUVE.D", 3) +#
	# plot.rgb("ME", "QUAL.D", 3) +#
	# Morgan Monroe#
	# plot.rgb("IN", "QURU.D", 3) +#
	# plot.rgb("IN", "QUVE.D", 3) +#
	# plot.rgb("IN", "QUAL.D", 3) +#
	# Missouri Ozark#
	plot.rgb("MO", "QURU.D", 3) +#
	plot.rgb("MO", "QUVE.D", 3) +#
	plot.rgb("MO", "QUAL.D", 3) +#
	# Oak Openings#
	# plot.rgb("OH", "QURU.D", 3) +#
	# plot.rgb("OH", "QUVE.D", 3) +#
	# plot.rgb("OH", "QUAL.D", 3) +#
	poster.theme2
pdf("figures/gam3/gam3_SPP_CC_BAI_limiting_factors_D_oaks_MO.pdf", width= 13, height = 8.5)#
ggplot(data = data.graph[data.graph$Canopy.Class=="D" & substr(data.graph$group,1,2)=="QU" & data.graph$State=="MO",]) + facet_grid(group ~. ) +#
	labs(title= "MO Dominant Trees", x="Year", y = expression(bold(paste("BAI (mm"^"2", "y"^"-1",")")))) +#
	scale_x_continuous(expand=c(0,0)) +#
	scale_y_continuous(expand=c(0,0)) +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_line(aes(x=Year, y=BA.inc), size=2, alpha=0.5) +#
	geom_ribbon(aes(x=Year, ymin=BA.inc.lwr, ymax=BA.inc.upr), alpha=0.3) +#
	geom_line(aes(x=Year, y = 0), linetype="dashed") +#
	# Harvard#
	# plot.rgb("MA", "QURU.D", 3) +#
	# plot.rgb("MA", "QUVE.D", 3) +#
	# plot.rgb("MA", "QUAL.D", 3) +#
	# Howland#
	# plot.rgb("ME", "QURU.D", 3) +#
	# plot.rgb("ME", "QUVE.D", 3) +#
	# plot.rgb("ME", "QUAL.D", 3) +#
	# Morgan Monroe#
	# plot.rgb("IN", "QURU.D", 3) +#
	# plot.rgb("IN", "QUVE.D", 3) +#
	# plot.rgb("IN", "QUAL.D", 3) +#
	# Missouri Ozark#
	plot.rgb("MO", "QURU.D", 3) +#
	plot.rgb("MO", "QUVE.D", 3) +#
	plot.rgb("MO", "QUAL.D", 3) +#
	# Oak Openings#
	# plot.rgb("OH", "QURU.D", 3) +#
	# plot.rgb("OH", "QUVE.D", 3) +#
	# plot.rgb("OH", "QUAL.D", 3) +#
	poster.theme2
dev.off()
ggplot(data = data.graph[data.graph$Canopy.Class=="D" & substr(data.graph$group,1,2)=="QU" & data.graph$State=="MA",]) + facet_grid(group ~. ) +#
	labs(title= "MO Dominant Trees", x="Year", y = expression(bold(paste("BAI (mm"^"2", "y"^"-1",")")))) +#
	scale_x_continuous(expand=c(0,0)) +#
	scale_y_continuous(expand=c(0,0)) +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_line(aes(x=Year, y=BA.inc), size=2, alpha=0.5) +#
	geom_ribbon(aes(x=Year, ymin=BA.inc.lwr, ymax=BA.inc.upr), alpha=0.3) +#
	geom_line(aes(x=Year, y = 0), linetype="dashed") +#
	# Harvard#
	plot.rgb("MA", "QURU.D", 3) +#
	plot.rgb("MA", "QUVE.D", 3) +#
	plot.rgb("MA", "QUAL.D", 3) +#
	# Howland#
	# plot.rgb("ME", "QURU.D", 3) +#
	# plot.rgb("ME", "QUVE.D", 3) +#
	# plot.rgb("ME", "QUAL.D", 3) +#
	# Morgan Monroe#
	# plot.rgb("IN", "QURU.D", 3) +#
	# plot.rgb("IN", "QUVE.D", 3) +#
	# plot.rgb("IN", "QUAL.D", 3) +#
	# Missouri Ozark#
	# plot.rgb("MO", "QURU.D", 3) +#
	# plot.rgb("MO", "QUVE.D", 3) +#
	# plot.rgb("MO", "QUAL.D", 3) +#
	# Oak Openings#
	# plot.rgb("OH", "QURU.D", 3) +#
	# plot.rgb("OH", "QUVE.D", 3) +#
	# plot.rgb("OH", "QUAL.D", 3) +#
	poster.theme2
ggplot(data = data.graph[data.graph$Canopy.Class=="D" & substr(data.graph$group,1,2)=="QU" & data.graph$State=="OH",]) + facet_grid(group ~. ) +#
	labs(title= "MO Dominant Trees", x="Year", y = expression(bold(paste("BAI (mm"^"2", "y"^"-1",")")))) +#
	scale_x_continuous(expand=c(0,0)) +#
	scale_y_continuous(expand=c(0,0)) +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_line(aes(x=Year, y=BA.inc), size=2, alpha=0.5) +#
	geom_ribbon(aes(x=Year, ymin=BA.inc.lwr, ymax=BA.inc.upr), alpha=0.3) +#
	geom_line(aes(x=Year, y = 0), linetype="dashed") +#
	# Harvard#
	# plot.rgb("MA", "QURU.D", 3) +#
	# plot.rgb("MA", "QUVE.D", 3) +#
	# plot.rgb("MA", "QUAL.D", 3) +#
	# Howland#
	# plot.rgb("ME", "QURU.D", 3) +#
	# plot.rgb("ME", "QUVE.D", 3) +#
	# plot.rgb("ME", "QUAL.D", 3) +#
	# Morgan Monroe#
	# plot.rgb("IN", "QURU.D", 3) +#
	# plot.rgb("IN", "QUVE.D", 3) +#
	# plot.rgb("IN", "QUAL.D", 3) +#
	# Missouri Ozark#
	# plot.rgb("MO", "QURU.D", 3) +#
	# plot.rgb("MO", "QUVE.D", 3) +#
	# plot.rgb("MO", "QUAL.D", 3) +#
	# Oak Openings#
	plot.rgb("OH", "QURU.D", 3) +#
	plot.rgb("OH", "QUVE.D", 3) +#
	plot.rgb("OH", "QUAL.D", 3) +#
	poster.theme2
library(mgcv)#
library(ggplot2)#
library(car)#
# Christy's GAMM code#
#
# gam1 <- gamm(Y ~  s(Biomass, bs="cr", k=3, by=PFT) + s(tair, k=k, by=PFT) + s(precipf, k=k, by=PFT) + s(CO2, k=k, by=PFT), random=list(PlotID=~1), data=data) #
#
# Loading in my data#
#
data.use <- read.csv("processed_data/AllSites_tree_plus_climate_and_BA.csv", header=T)#
#
data.use$group <- data.use$Species#
data.use$group <- recode(data.use$group, "'CAOV' = 'CARYA'; 'CACO' = 'CARYA'; #
  							'CATE' = 'CARYA'; 'ACSAC' = 'ACSA'; 'BEAL' = 'BETULA'; 'BELE' = 'BETULA'; 'QUMU' = 'QUAL'")#
#
data.use$group.plot <- as.factor(paste(data.use$group, data.use$PlotID, sep="."))#
#
data.use$Canopy.Class <- recode(data.use$Canopy.Class, "'C' = 'D'")#
summary(data.use)
?range()
range(data.use[data.use$Site=="Harvard", "tmean"])
range(data.use[data.use$Site=="Harvard", "tmean"], na.rm=T)
range(data.use[data.use$Site=="Missouri Ozark", "tmean"], na.rm=T)
range(data.use[data.use$Site=="Harvard", "precip"], na.rm=T)
range(data.use[data.use$Site=="Missouri Ozark", "precip"], na.rm=T)
range(data.use[data.use$Site=="Missouri Ozark", "DBH..cm."], na.rm=T)
range(data.use[data.use$Site=="Missouri Ozark" & data.use$Canopy.Class=="I", "DBH..cm."], na.rm=T)
range(data.use[data.use$Site=="Missouri Ozark" & data.use$Canopy.Class=="D", "DBH..cm."], na.rm=T)
range(data.use[data.use$Site=="Missouri Ozark" & data.use$Canopy.Class=="I", "DBH..cm."], na.rm=T)
range(data.use[data.use$Site=="Missouri Ozark" & data.use$Canopy.Class=="S", "DBH..cm."], na.rm=T)
library(mgcv)#
library(ggplot2)#
library(car)#
# Christy's GAMM code#
#
# gam1 <- gamm(Y ~  s(Biomass, bs="cr", k=3, by=PFT) + s(tair, k=k, by=PFT) + s(precipf, k=k, by=PFT) + s(CO2, k=k, by=PFT), random=list(PlotID=~1), data=data) #
#
# Loading in my data#
#
data.use <- read.csv("processed_data/AllSites_tree_plus_climate_and_BA.csv", header=T)#
#
data.use$group <- data.use$Species#
data.use$group <- recode(data.use$group, "'CAOV' = 'CARYA'; 'CACO' = 'CARYA'; #
  							'CATE' = 'CARYA'; 'ACSAC' = 'ACSA'; 'BEAL' = 'BETULA'; 'BELE' = 'BETULA'; 'QUMU' = 'QUAL'")#
#
data.use$group.plot <- as.factor(paste(data.use$group, data.use$PlotID, sep="."))#
#
data.use$Canopy.Class <- recode(data.use$Canopy.Class, "'C' = 'D'")#
summary(data.use)#
# reducing the amount of data for the test runs#
sites.use <- c("Harvard", "Howland", "Morgan Monroe State Park", "Oak Openings Toledo", "Missouri Ozark")#
#
test <- data.use[data.use$Site %in% sites.use & !is.na(data.use$RW) & !is.na(data.use$BA.inc),]#
summary(test)#
#
test$group.cc <- as.factor(paste(test$group, test$Canopy.Class, sep="."))#
summary(test)#
# Get a list of what predictors & responses I'm using#
predictors.all <- c("tmean", "precip", "Species", "dbh.recon", "Canopy.Class", "spp.plot", "group", "group.plot", "group.cc")#
#
# Getting rid of observations that have NAs in the important variables#
test <- test[complete.cases(test[,predictors.all]),]#
test <- test[test$Live.Dead=="LIVE" & !test$Canopy.Class=="F",]#
#
# Subsetting to a set of species that we have enough data to feel good about#
#species.use <- c("TSCA", "QURU", "ACRU", "BEAL", "ACSA", "LITU", "QUAL", "CAOV", "CACO", "CATE", "JUVI", "QUVE", "PCRU", "THOC", "PIST")#
group.use <- c("ACRU", "ACSA", "BETULA", "CARYA", "FAGR", "FRAX", "PIST", "QUAL", "QURU", "QUVE", "SAAL", "TSCA", "ULRU")#
#
test <- test[test$group %in% group.use,]#
#
summary(test)#
#
par(new=F)#
plot(test[test$TreeID=="MMA003", "BA.inc"]~ test[test$TreeID=="MMA003","Year"], type="l")#
summary(test)#
summary(test$Live.Dead)#
summary(test$Canopy.Class)
load("processed_data/gam_results/gam3_climate_by_canopyclass_interactions.Rdata")
n <- 100#
data <- test#
		n.out = n#
#
		new.dat <- data.frame(Model="species_response",#
							  Extent=as.factor(paste(min(data$Year), max(data$Year), sep="-")))#
		# Figure out which vars are numeric vs. factor#
		vars.num <- vector()#
		for(v in predictors.all){#
			if(class(data[,v]) %in% c("numeric", "integer")) vars.num <- c(vars.num, v)#
		}#
		# Getting the unique values of our factor variables and adding them to the data frame#
		# need to skip group & group.cc so we aren't trying to match Carya & Quercus etc#
		predictors.all <- predictors.all[!predictors.all %in% c("Species", "spp.plot")]#
		for(v in predictors.all[!predictors.all %in% vars.num & !(predictors.all %in% c("group", "group.cc"))]){#
			# if v is a factor, merge all unique values into the dataframe#
			var.temp <- data.frame(x=unique(data[,v])) #
			names(var.temp) <- v#
			new.dat <- merge(new.dat, var.temp, all.x=T, all.y=T)#
		}#
		# getting species from species.plot#
		new.dat$group <- as.factor(substr(new.dat$group.plot, 1, 4))#
		# Adding in the group.canopy class then getting rid of combinations we don't actually have in our data#
		new.dat$group.cc <- as.factor(paste(new.dat$group, new.dat$Canopy.Class, sep="."))#
		new.dat <- new.dat[new.dat$group.cc %in% unique(test$group.cc),]#
		summary(new.dat)#
		# Putting the numerical variables into an array and adding it in #
		var.temp <- data.frame(array(dim=c(n.out, length(vars.num))))#
		names(var.temp) <- vars.num#
		for(v in vars.num){#
			var.temp[,v] <- seq(min(data[,v], na.rm=T), max(data[,v], na.rm=T), length.out=n.out)#
		}								#
		new.dat <- merge(new.dat, var.temp, all.x=T, all.y=T)#
		summary(new.dat)
load("processed_data/gam_results/gam3_climate_by_canopyclass_interactions.Rdata")		#
		source("0_Calculate_GAMM_Posteriors.R")#
		g3.ci.terms.pred <- post.distns(model.gam=gam3, model.name="harv_mmf_cc.test", n=n, newdata=new.dat, vars=predictors.all, terms=T)#
		g3.ci.out <- g3.ci.terms.pred$ci # separting out the confidence interval #
		g3.ci.out[,predictors.all[!predictors.all %in% vars.num]] <- new.dat[,predictors.all[!predictors.all %in% vars.num]] # copying over our factor labels#
		g3.ci.out$x <- as.numeric(g3.ci.out$x) # making x numeric; will make factors NA#
		summary(g3.ci.out)#
		ggplot(data=g3.ci.out[g3.ci.out$Effect %in% c("tmean", "precip"), ]) + #
			facet_wrap(Canopy.Class~Effect, scales="free_x") +#
			geom_ribbon(aes(x=x, ymin=lwr, ymax=upr, fill=group), alpha=0.5) +#
			geom_line(aes(x=x, y=mean, color=group))
ggplot(data=g3.ci.out[g3.ci.out$Effect %in% c("tmean", "precip") & substr(g3.ci.out$group.cc, 1,2)=="QU", ]) + #
			facet_grid(Canopy.Class~Effect, scales="free_x") +#
			geom_ribbon(aes(x=x, ymin=lwr, ymax=upr, fill=group), alpha=0.5) +#
			geom_line(aes(x=x, y=mean, color=group))+#
			scale_color_manual(values=c("#E69F00", "#0072B2", "#009E73")) +#
			scale_fill_manual(values=c("#E69F00", "#0072B2", "#009E73")) +#
			poster.theme2+#
			labs(x = "Climate Variable", y = expression(bold(paste("Effect on BAI (mm"^"2", "y"^"-1",")"))))
source(poster_theme.R)
source("poster_theme.R")
ggplot(data=g3.ci.out[g3.ci.out$Effect %in% c("tmean", "precip") & substr(g3.ci.out$group.cc, 1,2)=="QU", ]) + #
			facet_grid(Canopy.Class~Effect, scales="free_x") +#
			geom_ribbon(aes(x=x, ymin=lwr, ymax=upr, fill=group), alpha=0.5) +#
			geom_line(aes(x=x, y=mean, color=group))+#
			scale_color_manual(values=c("#E69F00", "#0072B2", "#009E73")) +#
			scale_fill_manual(values=c("#E69F00", "#0072B2", "#009E73")) +#
			poster.theme2+#
			labs(x = "Climate Variable", y = expression(bold(paste("Effect on BAI (mm"^"2", "y"^"-1",")"))))
pdf("figures/oak_climate_effects.pdf", width= 13, height = 8.5)		#
		ggplot(data=g3.ci.out[g3.ci.out$Effect %in% c("tmean", "precip") & substr(g3.ci.out$group.cc, 1,2)=="QU", ]) + #
			facet_grid(Canopy.Class~Effect, scales="free_x") +#
			geom_ribbon(aes(x=x, ymin=lwr, ymax=upr, fill=group), alpha=0.5) +#
			geom_line(aes(x=x, y=mean, color=group))+#
			scale_color_manual(values=c("#E69F00", "#0072B2", "#009E73")) +#
			scale_fill_manual(values=c("#E69F00", "#0072B2", "#009E73")) +#
			poster.theme2+#
			labs(x = "Climate Variable", y = expression(bold(paste("Effect on BAI (mm"^"2", "y"^"-1",")"))))#
dev.off()			#
		g3.ci.out$PlotID <- as.factor(substr(g3.ci.out$group.plot, 6, nchar(paste(g3.ci.out$group.plot)))) # adding a plotID factor#
		summary(g3.ci.out)#
		ggplot(data=g3.ci.out[g3.ci.out$Effect == "dbh.recon", ]) + #
			facet_wrap(~PlotID) +#
			geom_ribbon(aes(x=x, ymin=lwr, ymax=upr, fill=group), alpha=0.5) +#
			geom_line(aes(x=x, y=mean, color=group))#
#
pdf("figures/oak_size_effects.pdf", width= 13, height = 8.5)		#
	ggplot(data=g3.ci.out[g3.ci.out$Effect == "dbh.recon"& substr(g3.ci.out$group.cc, 1,2)=="QU", ]) + #
			facet_grid(~Canopy.Class) +#
			geom_ribbon(aes(x=x, ymin=lwr, ymax=upr, fill=group), alpha=0.5) +#
			geom_line(aes(x=x, y=mean, color=group)) +#
			scale_color_manual(values=c("#E69F00", "#0072B2", "#009E73")) +#
			scale_fill_manual(values=c("#E69F00", "#0072B2", "#009E73")) +#
			poster.theme2+#
			labs(x = "DBH (cm)", y = expression(bold(paste("Effect on BAI (mm"^"2", "y"^"-1",")"))))#
 dev.off()
range(data.use[data.use$Canopy.Class=="S", "DBH..cm."])
range(data.use[data.use$Canopy.Class=="D", "DBH..cm."])
range(data.use[data.use$Canopy.Class=="I", "DBH..cm."])
range(data.use[data.use$Canopy.Class=="S", "DBH..cm."])
range(data.use[data.use$Canopy.Class=="S" & substr(data.use$group,1,2)=="QU", "DBH..cm."])
library(ggplot2)#
library(stringr)#
source("poster_theme.R")#
load(file="processed_data/gamm_weights/gam3_weights.Rdata")
summary(gam3.weights)#
factors.fits <- c("fit.tmean", "fit.precip", "fit.dbh.recon", "fit.full", "BA.inc")#
factors.weights <- c("weight.tmean", "weight.dbh.recon", "weight.precip")#
othervars <- c("Year", "Site", "group.cc", "Model")#
#
data.graph1 <- aggregate(gam3.weights[,factors.fits], by = gam3.weights[,othervars], FUN= mean, na.rm=T)#
#
data.graph1[,paste(factors.fits, "upr", sep=".")] <- aggregate(gam3.weights[,factors.fits], by = gam3.weights[,othervars], FUN= quantile, prob= 0.975, na.rm=T)[,factors.fits]#
#
data.graph1[,paste(factors.fits, "lwr", sep=".")] <- aggregate(gam3.weights[,factors.fits], by = gam3.weights[,othervars], FUN= quantile, prob= 0.025, na.rm=T)[,factors.fits]#
#
summary(data.graph1)#
#
data.graph2 <- aggregate(abs(gam3.weights[,factors.weights]), by = gam3.weights[,othervars], FUN= mean, na.rm=T)#
#
data.graph2[,paste(factors.weights, "upr", sep=".")] <- aggregate(abs(gam3.weights[,factors.weights]), by = gam3.weights[,othervars], FUN= quantile, prob= 0.975, na.rm=T)[,factors.weights]#
#
data.graph2[,paste(factors.weights, "lwr", sep=".")] <- aggregate(abs(gam3.weights[,factors.weights]), by = gam3.weights[,othervars], FUN= quantile, prob= 0.025, na.rm=T)[,factors.weights]#
#
summary(data.graph2)#
#
data.graph <- merge(data.graph1, data.graph2, all.x=T, all.y=T)#
#
# data.graph <- gam3.weights[gam3.weights$TreeID== "MMA014",]#
summary(data.graph)#
gam3.weights$wts.check <- rowSums(abs(gam3.weights[,c("weight.tmean", "weight.precip", "weight.dbh.recon")]))#
data.graph$wts.check <- rowSums(abs(data.graph[,c("weight.tmean", "weight.precip", "weight.dbh.recon")]))#
#
summary(gam3.weights)#
summary(data.graph)
data.graph<- data.graph[order(data.graph$Year, data.graph$group.cc, data.graph$Site, decreasing=F),]#
plot.rgb <- function(STATE, GC, SIZE){	geom_line(data=data.graph[data.graph$State==STATE & data.graph$group.cc==GC,],aes(x=Year, y=fit.full), size=SIZE,#
  		        color=rgb(abs(data.graph[data.graph$State==STATE & data.graph$group.cc==GC,"weight.tmean"     ]), # red#
                        abs(data.graph[data.graph$State==STATE & data.graph$group.cc==GC,"weight.dbh.recon"     ]), # green#
                        abs(data.graph[data.graph$State==STATE & data.graph$group.cc==GC,"weight.precip"   ]))) }   # blue
# Plotting the Obs and modeled with influence coloring#
data.graph$State <- recode(data.graph$Site, "'Howland' = 'ME';'Harvard' = 'MA';'Morgan Monroe State Park' = 'IN';'Missouri Ozark' = 'MO';'Oak Openings Toledo' = 'OH'")#
data.graph$State <- factor(data.graph$State, levels=c("MO", "IN", "OH", "MA", "ME"))#
#
for(i in unique(data.graph$group.cc)){#
	data.graph[data.graph$group.cc==i,"Canopy.Class"] <- str_sub(data.graph[data.graph$group.cc==i,"group.cc"], -1)#
	data.graph[data.graph$group.cc==i,"group"] <- substr(data.graph[data.graph$group.cc==i,"group.cc"], 1,4)#
}#
data.graph$Canopy.Class <- as.factor(data.graph$Canopy.Class)#
data.graph$group <- as.factor(data.graph$group)#
summary(data.graph)
data.graph$State <- recode(data.graph$Site, "'Howland' = 'ME';'Harvard' = 'MA';'Morgan Monroe State Park' = 'IN';'Missouri Ozark' = 'MO';'Oak Openings Toledo' = 'OH'")#
data.graph$State <- factor(data.graph$State, levels=c("MO", "IN", "OH", "MA", "ME"))
library(car)
data.graph$State <- recode(data.graph$Site, "'Howland' = 'ME';'Harvard' = 'MA';'Morgan Monroe State Park' = 'IN';'Missouri Ozark' = 'MO';'Oak Openings Toledo' = 'OH'")#
data.graph$State <- factor(data.graph$State, levels=c("MO", "IN", "OH", "MA", "ME"))
for(i in unique(data.graph$group.cc)){#
	data.graph[data.graph$group.cc==i,"Canopy.Class"] <- str_sub(data.graph[data.graph$group.cc==i,"group.cc"], -1)#
	data.graph[data.graph$group.cc==i,"group"] <- substr(data.graph[data.graph$group.cc==i,"group.cc"], 1,4)#
}#
data.graph$Canopy.Class <- as.factor(data.graph$Canopy.Class)#
data.graph$group <- as.factor(data.graph$group)#
summary(data.graph)
ggplot(data = data.graph[substr(data.graph$group, 1,2)=="QU",]) + facet_grid(group.cc ~ State) +#
	scale_x_continuous(expand=c(0,0), name="Year") +#
	scale_y_continuous(expand=c(0,0), name="BAI") +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_line(aes(x=Year, y=BA.inc), size=2, alpha=0.5) +#
	geom_ribbon(aes(x=Year, ymin=BA.inc.lwr, ymax=BA.inc.upr), alpha=0.3) +#
	geom_line(aes(x=Year, y = 0), linetype="dashed") +#
	# Harvard#
	plot.rgb("MA", "QURU.C", 4) +#
	plot.rgb("MA", "QURU.D", 4) +#
	plot.rgb("MA", "QURU.I", 4) +#
	plot.rgb("MA", "QURU.S", 4) +#
	plot.rgb("MA", "QUVE.C", 4) +#
	plot.rgb("MA", "QUVE.D", 4) +#
	plot.rgb("MA", "QUVE.I", 4) +#
	plot.rgb("MA", "QUVE.S", 4) +#
	plot.rgb("MA", "QUAL.C", 4) +#
	plot.rgb("MA", "QUAL.D", 4) +#
	plot.rgb("MA", "QUAL.I", 4) +#
	plot.rgb("MA", "QUAL.S", 4) +#
	# Howland#
	plot.rgb("ME", "QURU.C", 4) +#
	plot.rgb("ME", "QURU.D", 4) +#
	plot.rgb("ME", "QURU.I", 4) +#
	plot.rgb("ME", "QURU.S", 4) +#
	plot.rgb("ME", "QUVE.C", 4) +#
	plot.rgb("ME", "QUVE.D", 4) +#
	plot.rgb("ME", "QUVE.I", 4) +#
	plot.rgb("ME", "QUVE.S", 4) +#
	plot.rgb("ME", "QUAL.C", 4) +#
	plot.rgb("ME", "QUAL.D", 4) +#
	plot.rgb("ME", "QUAL.I", 4) +#
	plot.rgb("ME", "QUAL.S", 4) +#
	# Morgan Monroe#
	plot.rgb("IN", "QURU.C", 4) +#
	plot.rgb("IN", "QURU.D", 4) +#
	plot.rgb("IN", "QURU.I", 4) +#
	plot.rgb("IN", "QURU.S", 4) +#
	plot.rgb("IN", "QUVE.C", 4) +#
	plot.rgb("IN", "QUVE.D", 4) +#
	plot.rgb("IN", "QUVE.I", 4) +#
	plot.rgb("IN", "QUVE.S", 4) +#
	plot.rgb("IN", "QUAL.C", 4) +#
	plot.rgb("IN", "QUAL.D", 4) +#
	plot.rgb("IN", "QUAL.I", 4) +#
	plot.rgb("IN", "QUAL.S", 4) +#
	# Missouri Ozark#
	plot.rgb("MO", "QURU.C", 4) +#
	plot.rgb("MO", "QURU.D", 4) +#
	plot.rgb("MO", "QURU.I", 4) +#
	plot.rgb("MO", "QURU.S", 4) +#
	plot.rgb("MO", "QUVE.C", 4) +#
	plot.rgb("MO", "QUVE.D", 4) +#
	plot.rgb("MO", "QUVE.I", 4) +#
	plot.rgb("MO", "QUVE.S", 4) +#
	plot.rgb("MO", "QUAL.C", 4) +#
	plot.rgb("MO", "QUAL.D", 4) +#
	plot.rgb("MO", "QUAL.I", 4) +#
	plot.rgb("MO", "QUAL.S", 4) +#
	# Oak Openings#
	plot.rgb("OH", "QURU.C", 4) +#
	plot.rgb("OH", "QURU.D", 4) +#
	plot.rgb("OH", "QURU.I", 4) +#
	plot.rgb("OH", "QURU.S", 4) +#
	plot.rgb("OH", "QUVE.C", 4) +#
	plot.rgb("OH", "QUVE.D", 4) +#
	plot.rgb("OH", "QUVE.I", 4) +#
	plot.rgb("OH", "QUVE.S", 4) +#
	plot.rgb("OH", "QUAL.C", 4) +#
	plot.rgb("OH", "QUAL.D", 4) +#
	plot.rgb("OH", "QUAL.I", 4) +#
	plot.rgb("OH", "QUAL.S", 4)
ggplot(data = data.graph[data.graph$Canopy.Class=="D" & substr(data.graph$group,1,2)=="QU",]) + facet_grid(group ~ State) +#
	labs(title= "Dominant Trees", x="Year", y = expression(bold(paste("BAI (mm"^"2", "y"^"-1",")")))) +#
	scale_x_continuous(expand=c(0,0)) +#
	scale_y_continuous(expand=c(0,0)) +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_line(aes(x=Year, y=BA.inc), size=2, alpha=0.5) +#
	geom_ribbon(aes(x=Year, ymin=BA.inc.lwr, ymax=BA.inc.upr), alpha=0.3) +#
	geom_line(aes(x=Year, y = 0), linetype="dashed") +#
	# Harvard#
	plot.rgb("MA", "QURU.D", 4) +#
	plot.rgb("MA", "QUVE.D", 4) +#
	plot.rgb("MA", "QUAL.D", 4) +#
	# Howland#
	plot.rgb("ME", "QURU.D", 4) +#
	plot.rgb("ME", "QUVE.D", 4) +#
	plot.rgb("ME", "QUAL.D", 4) +#
	# Morgan Monroe#
	plot.rgb("IN", "QURU.D", 4) +#
	plot.rgb("IN", "QUVE.D", 4) +#
	plot.rgb("IN", "QUAL.D", 4) +#
	# Missouri Ozark#
	plot.rgb("MO", "QURU.D", 4) +#
	plot.rgb("MO", "QUVE.D", 4) +#
	plot.rgb("MO", "QUAL.D", 4) +#
	# Oak Openings#
	plot.rgb("OH", "QURU.D", 4) +#
	plot.rgb("OH", "QUVE.D", 4) +#
	plot.rgb("OH", "QUAL.D", 4) +#
	poster.theme2
pdf("figures/gam3/gam3_SPP_CC_BAI_limiting_factors_D_oaks.pdf", width= 13, height = 8.5)#
ggplot(data = data.graph[data.graph$Canopy.Class=="D" & substr(data.graph$group,1,2)=="QU",]) + facet_grid(group ~ State) +#
	labs(title= "Dominant Trees", x="Year", y = expression(bold(paste("BAI (mm"^"2", "y"^"-1",")")))) +#
	scale_x_continuous(expand=c(0,0)) +#
	scale_y_continuous(expand=c(0,0)) +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_line(aes(x=Year, y=BA.inc), size=2, alpha=0.5) +#
	geom_ribbon(aes(x=Year, ymin=BA.inc.lwr, ymax=BA.inc.upr), alpha=0.3) +#
	geom_line(aes(x=Year, y = 0), linetype="dashed") +#
	# Harvard#
	plot.rgb("MA", "QURU.D", 4) +#
	plot.rgb("MA", "QUVE.D", 4) +#
	plot.rgb("MA", "QUAL.D", 4) +#
	# Howland#
	plot.rgb("ME", "QURU.D", 4) +#
	plot.rgb("ME", "QUVE.D", 4) +#
	plot.rgb("ME", "QUAL.D", 4) +#
	# Morgan Monroe#
	plot.rgb("IN", "QURU.D", 4) +#
	plot.rgb("IN", "QUVE.D", 4) +#
	plot.rgb("IN", "QUAL.D", 4) +#
	# Missouri Ozark#
	plot.rgb("MO", "QURU.D", 4) +#
	plot.rgb("MO", "QUVE.D", 4) +#
	plot.rgb("MO", "QUAL.D", 4) +#
	# Oak Openings#
	plot.rgb("OH", "QURU.D", 4) +#
	plot.rgb("OH", "QUVE.D", 4) +#
	plot.rgb("OH", "QUAL.D", 4) +#
	poster.theme2
dev.off()
ggplot(data = data.graph[data.graph$Canopy.Class=="D" & substr(data.graph$group,1,2)=="QU" & data.graph$State == "MO",]) + facet_grid(group ~ State) +#
	labs(title= "Dominant Trees", x="Year", y = expression(bold(paste("BAI (mm"^"2", "y"^"-1",")")))) +#
	scale_x_continuous(expand=c(0,0)) +#
	scale_y_continuous(expand=c(0,0)) +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_line(aes(x=Year, y=BA.inc), size=2, alpha=0.5) +#
	geom_ribbon(aes(x=Year, ymin=BA.inc.lwr, ymax=BA.inc.upr), alpha=0.3) +#
	geom_line(aes(x=Year, y = 0), linetype="dashed") +#
	# Harvard#
	# plot.rgb("MA", "QURU.D", 4) +#
	# plot.rgb("MA", "QUVE.D", 4) +#
	# plot.rgb("MA", "QUAL.D", 4) +#
	# # Howland#
	# plot.rgb("ME", "QURU.D", 4) +#
	# plot.rgb("ME", "QUVE.D", 4) +#
	# plot.rgb("ME", "QUAL.D", 4) +#
	# # Morgan Monroe#
	# plot.rgb("IN", "QURU.D", 4) +#
	# plot.rgb("IN", "QUVE.D", 4) +#
	# plot.rgb("IN", "QUAL.D", 4) +#
	# Missouri Ozark#
	plot.rgb("MO", "QURU.D", 4) +#
	plot.rgb("MO", "QUVE.D", 4) +#
	plot.rgb("MO", "QUAL.D", 4) +#
	# # Oak Openings#
	# plot.rgb("OH", "QURU.D", 4) +#
	# plot.rgb("OH", "QUVE.D", 4) +#
	# plot.rgb("OH", "QUAL.D", 4) +#
	# poster.theme2
poster.theme2
pdf("figures/gam3/gam3_SPP_CC_BAI_limiting_factors_D_oaks.pdf", width= 13, height = 8.5)#
ggplot(data = data.graph[data.graph$Canopy.Class=="D" & substr(data.graph$group,1,2)=="QU",]) + facet_grid(group ~ State) +#
	labs(title= "Dominant Trees", x="Year", y = expression(bold(paste("BAI (mm"^"2", "y"^"-1",")")))) +#
	scale_x_continuous(expand=c(0,0)) +#
	scale_y_continuous(expand=c(0,0)) +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_line(aes(x=Year, y=BA.inc), size=2, alpha=0.5) +#
	geom_ribbon(aes(x=Year, ymin=BA.inc.lwr, ymax=BA.inc.upr), alpha=0.3) +#
	geom_line(aes(x=Year, y = 0), linetype="dashed") +#
	# Harvard#
	plot.rgb("MA", "QURU.D", 4) +#
	plot.rgb("MA", "QUVE.D", 4) +#
	plot.rgb("MA", "QUAL.D", 4) +#
	# Howland#
	plot.rgb("ME", "QURU.D", 4) +#
	plot.rgb("ME", "QUVE.D", 4) +#
	plot.rgb("ME", "QUAL.D", 4) +#
	# Morgan Monroe#
	plot.rgb("IN", "QURU.D", 4) +#
	plot.rgb("IN", "QUVE.D", 4) +#
	plot.rgb("IN", "QUAL.D", 4) +#
	# Missouri Ozark#
	plot.rgb("MO", "QURU.D", 4) +#
	plot.rgb("MO", "QUVE.D", 4) +#
	plot.rgb("MO", "QUAL.D", 4) +#
	# Oak Openings#
	plot.rgb("OH", "QURU.D", 4) +#
	plot.rgb("OH", "QUVE.D", 4) +#
	plot.rgb("OH", "QUAL.D", 4) +#
	poster.theme2 #
dev.off()
ggplot(data = data.graph[data.graph$Canopy.Class=="D" & substr(data.graph$group,1,2)=="QU" & data.graph$State == "MO",]) + facet_grid(group ~ State) +#
	labs(title= "Dominant Trees", x="Year", y = expression(bold(paste("BAI (mm"^"2", "y"^"-1",")")))) +#
	scale_x_continuous(expand=c(0,0)) +#
	scale_y_continuous(expand=c(0,0)) +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_line(aes(x=Year, y=BA.inc), size=2, alpha=0.5) +#
	geom_ribbon(aes(x=Year, ymin=BA.inc.lwr, ymax=BA.inc.upr), alpha=0.3) +#
	geom_line(aes(x=Year, y = 0), linetype="dashed") +#
	# Harvard#
	# plot.rgb("MA", "QURU.D", 4) +#
	# plot.rgb("MA", "QUVE.D", 4) +#
	# plot.rgb("MA", "QUAL.D", 4) +#
	# # Howland#
	# plot.rgb("ME", "QURU.D", 4) +#
	# plot.rgb("ME", "QUVE.D", 4) +#
	# plot.rgb("ME", "QUAL.D", 4) +#
	# # Morgan Monroe#
	# plot.rgb("IN", "QURU.D", 4) +#
	# plot.rgb("IN", "QUVE.D", 4) +#
	# plot.rgb("IN", "QUAL.D", 4) +#
	# Missouri Ozark#
	plot.rgb("MO", "QURU.D", 4) +#
	plot.rgb("MO", "QUVE.D", 4) +#
	plot.rgb("MO", "QUAL.D", 4) +#
	# # Oak Openings#
	# plot.rgb("OH", "QURU.D", 4) +#
	# plot.rgb("OH", "QUVE.D", 4) +#
	# plot.rgb("OH", "QUAL.D", 4) +#
	poster.theme2
pdf("figures/gam3/gam3_SPP_CC_BAI_limiting_factors_D_oaks_MO.pdf", width= 13, height = 8.5)#
ggplot(data = data.graph[data.graph$Canopy.Class=="D" & substr(data.graph$group,1,2)=="QU" & data.graph$State == "MO",]) + facet_grid(group ~ State) +#
	labs(title= "Dominant Trees", x="Year", y = expression(bold(paste("BAI (mm"^"2", "y"^"-1",")")))) +#
	scale_x_continuous(expand=c(0,0)) +#
	scale_y_continuous(expand=c(0,0)) +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_line(aes(x=Year, y=BA.inc), size=2, alpha=0.5) +#
	geom_ribbon(aes(x=Year, ymin=BA.inc.lwr, ymax=BA.inc.upr), alpha=0.3) +#
	geom_line(aes(x=Year, y = 0), linetype="dashed") +#
	# Harvard#
	# plot.rgb("MA", "QURU.D", 4) +#
	# plot.rgb("MA", "QUVE.D", 4) +#
	# plot.rgb("MA", "QUAL.D", 4) +#
	# # Howland#
	# plot.rgb("ME", "QURU.D", 4) +#
	# plot.rgb("ME", "QUVE.D", 4) +#
	# plot.rgb("ME", "QUAL.D", 4) +#
	# # Morgan Monroe#
	# plot.rgb("IN", "QURU.D", 4) +#
	# plot.rgb("IN", "QUVE.D", 4) +#
	# plot.rgb("IN", "QUAL.D", 4) +#
	# Missouri Ozark#
	plot.rgb("MO", "QURU.D", 4) +#
	plot.rgb("MO", "QUVE.D", 4) +#
	plot.rgb("MO", "QUAL.D", 4) +#
	# # Oak Openings#
	# plot.rgb("OH", "QURU.D", 4) +#
	# plot.rgb("OH", "QUVE.D", 4) +#
	# plot.rgb("OH", "QUAL.D", 4) +#
	poster.theme2 #
dev.off()
ggplot(data.graph[substr(data.graph$group, 1,2)=="QU",]) + facet_grid(group.cc~State) +#
	scale_x_continuous(expand=c(0,0), name="Year") +#
	scale_y_continuous(expand=c(0,0), name="Effect on RW (in mm)") +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_line(aes(x=Year, y=fit.tmean), size=2, color="red") +#
	geom_line(aes(x=Year, y=fit.precip), size=2, color="blue") +#
	geom_line(aes(x=Year, y=fit.dbh.recon), size=2, color="green")
library(mgcv)#
library(ggplot2)#
library(car)#
# Christy's GAMM code#
#
# gam1 <- gamm(Y ~  s(Biomass, bs="cr", k=3, by=PFT) + s(tair, k=k, by=PFT) + s(precipf, k=k, by=PFT) + s(CO2, k=k, by=PFT), random=list(PlotID=~1), data=data) #
#
# Loading in my data#
#
data.use <- read.csv("processed_data/AllSites_tree_plus_climate_and_BA.csv", header=T)#
#
data.use$group <- data.use$Species#
data.use$group <- recode(data.use$group, "'CAOV' = 'CARYA'; 'CACO' = 'CARYA'; #
  							'CATE' = 'CARYA'; 'ACSAC' = 'ACSA'; 'BEAL' = 'BETULA'; 'BELE' = 'BETULA'; 'QUMU' = 'QUAL'")#
#
data.use$group.plot <- as.factor(paste(data.use$group, data.use$PlotID, sep="."))#
#
data.use$Canopy.Class <- recode(data.use$Canopy.Class, "'C' = 'D'")#
summary(data.use)#
# reducing the amount of data for the test runs#
sites.use <- c("Harvard", "Howland", "Morgan Monroe State Park", "Oak Openings Toledo", "Missouri Ozark")#
#
test <- data.use[data.use$Site %in% sites.use & !is.na(data.use$RW) & !is.na(data.use$BA.inc),]#
summary(test)#
#
test$group.cc <- as.factor(paste(test$group, test$Canopy.Class, sep="."))#
summary(test)#
# Get a list of what predictors & responses I'm using#
predictors.all <- c("tmean", "precip", "Species", "dbh.recon", "Canopy.Class", "spp.plot", "group", "group.plot", "group.cc")#
#
# Getting rid of observations that have NAs in the important variables#
test <- test[complete.cases(test[,predictors.all]),]#
test <- test[test$Live.Dead=="LIVE" & !test$Canopy.Class=="F",]#
#
# Subsetting to a set of species that we have enough data to feel good about#
#species.use <- c("TSCA", "QURU", "ACRU", "BEAL", "ACSA", "LITU", "QUAL", "CAOV", "CACO", "CATE", "JUVI", "QUVE", "PCRU", "THOC", "PIST")#
group.use <- c("ACRU", "ACSA", "BETULA", "CARYA", "FAGR", "FRAX", "PIST", "QUAL", "QURU", "QUVE", "SAAL", "TSCA", "ULRU")#
#
test <- test[test$group %in% group.use,]#
#
summary(test)#
#
par(new=F)#
plot(test[test$TreeID=="MMA003", "BA.inc"]~ test[test$TreeID=="MMA003","Year"], type="l")#
summary(test)#
summary(test$Live.Dead)#
summary(test$Canopy.Class)
n <- 100#
data <- test#
		n.out = n#
#
		new.dat <- data.frame(Model="species_response",#
							  Extent=as.factor(paste(min(data$Year), max(data$Year), sep="-")))#
		# Figure out which vars are numeric vs. factor#
		vars.num <- vector()#
		for(v in predictors.all){#
			if(class(data[,v]) %in% c("numeric", "integer")) vars.num <- c(vars.num, v)#
		}#
		# Getting the unique values of our factor variables and adding them to the data frame#
		# need to skip group & group.cc so we aren't trying to match Carya & Quercus etc#
		predictors.all <- predictors.all[!predictors.all %in% c("Species", "spp.plot")]#
		for(v in predictors.all[!predictors.all %in% vars.num & !(predictors.all %in% c("group", "group.cc"))]){#
			# if v is a factor, merge all unique values into the dataframe#
			var.temp <- data.frame(x=unique(data[,v])) #
			names(var.temp) <- v#
			new.dat <- merge(new.dat, var.temp, all.x=T, all.y=T)#
		}#
		# getting species from species.plot#
		new.dat$group <- as.factor(substr(new.dat$group.plot, 1, 4))#
		# Adding in the group.canopy class then getting rid of combinations we don't actually have in our data#
		new.dat$group.cc <- as.factor(paste(new.dat$group, new.dat$Canopy.Class, sep="."))#
		new.dat <- new.dat[new.dat$group.cc %in% unique(test$group.cc),]#
		summary(new.dat)#
		# Putting the numerical variables into an array and adding it in #
		var.temp <- data.frame(array(dim=c(n.out, length(vars.num))))#
		names(var.temp) <- vars.num#
		for(v in vars.num){#
			var.temp[,v] <- seq(min(data[,v], na.rm=T), max(data[,v], na.rm=T), length.out=n.out)#
		}								#
		new.dat <- merge(new.dat, var.temp, all.x=T, all.y=T)#
		summary(new.dat)
load("processed_data/gam_results/gam3_climate_by_canopyclass_interactions.Rdata")		#
		source("0_Calculate_GAMM_Posteriors.R")#
		g3.ci.terms.pred <- post.distns(model.gam=gam3, model.name="harv_mmf_cc.test", n=n, newdata=new.dat, vars=predictors.all, terms=T)#
		g3.ci.out <- g3.ci.terms.pred$ci # separting out the confidence interval #
		g3.ci.out[,predictors.all[!predictors.all %in% vars.num]] <- new.dat[,predictors.all[!predictors.all %in% vars.num]] # copying over our factor labels#
		g3.ci.out$x <- as.numeric(g3.ci.out$x) # making x numeric; will make factors NA#
		summary(g3.ci.out)#
		ggplot(data=g3.ci.out[g3.ci.out$Effect %in% c("tmean", "precip"), ]) + #
			facet_wrap(Canopy.Class~Effect, scales="free_x") +#
			geom_ribbon(aes(x=x, ymin=lwr, ymax=upr, fill=group), alpha=0.5) +#
			geom_line(aes(x=x, y=mean, color=group))
ggplot(data=g3.ci.out[g3.ci.out$Effect %in% c("tmean", "precip") & substr(g3.ci.out$group.cc, 1,2)=="QU", ]) + #
			facet_grid(Canopy.Class~Effect, scales="free_x") +#
			geom_ribbon(aes(x=x, ymin=lwr, ymax=upr, fill=group), alpha=0.5) +#
			geom_line(aes(x=x, y=mean, color=group))+#
			scale_color_manual(values=c("dodgerblue4", "red", "black")) +#
			scale_fill_manual(values=c("dodgerblue4", "red", "black")) +#
			poster.theme2+#
			labs(x = "Climate Variable", y = expression(bold(paste("Effect on BAI (mm"^"2", "y"^"-1",")"))))
ci.terms.graph <- g3.ci.out#
ci.terms.graph[ci.terms.graph$mean<(-10),"mean"] <- NA #
ci.terms.graph[ci.terms.graph$lwr<(-10),"lwr"] <- -10#
ci.terms.graph[ci.terms.graph$upr<(-10),"upr"] <- -10 #
ci.terms.graph[which(ci.terms.graph$mean>10),"mean"] <- NA #
ci.terms.graph[ci.terms.graph$lwr>(10),"lwr"] <- 10 #
ci.terms.graph[ci.terms.graph$upr>(10),"upr"] <- 10
ggplot(data=ci.terms.graph[ci.terms.graph$Effect %in% c("tmean", "precip") & substr(ci.terms.graph$group.cc, 1,2)=="QU", ]) + #
			facet_grid(Canopy.Class~Effect, scales="free_x") +#
			geom_ribbon(aes(x=x, ymin=lwr, ymax=upr, fill=group), alpha=0.5) +#
			geom_line(aes(x=x, y=mean, color=group))+#
			scale_color_manual(values=c("dodgerblue4", "red", "black")) +#
			scale_fill_manual(values=c("dodgerblue4", "red", "black")) +#
			poster.theme2+#
			labs(x = "Climate Variable", y = expression(bold(paste("Effect on BAI (mm"^"2", "y"^"-1",")"))))
ci.terms.graph <- g3.ci.out#
ci.terms.graph[ci.terms.graph$mean<(-13),"mean"] <- NA #
ci.terms.graph[ci.terms.graph$lwr<(-13),"lwr"] <- -13#
ci.terms.graph[ci.terms.graph$upr<(-13),"upr"] <- -13 #
ci.terms.graph[which(ci.terms.graph$mean>8),"mean"] <- NA #
ci.terms.graph[ci.terms.graph$lwr>(8),"lwr"] <- 8 #
ci.terms.graph[ci.terms.graph$upr>(8),"upr"] <- 8
ggplot(data=ci.terms.graph[ci.terms.graph$Effect %in% c("tmean", "precip") & substr(ci.terms.graph$group.cc, 1,2)=="QU", ]) + #
			facet_grid(Canopy.Class~Effect, scales="free_x") +#
			geom_ribbon(aes(x=x, ymin=lwr, ymax=upr, fill=group), alpha=0.5) +#
			geom_line(aes(x=x, y=mean, color=group))+#
			scale_color_manual(values=c("dodgerblue4", "red", "black")) +#
			scale_fill_manual(values=c("dodgerblue4", "red", "black")) +#
			poster.theme2+#
			labs(x = "Climate Variable", y = expression(bold(paste("Effect on BAI (mm"^"2", "y"^"-1",")"))))
pdf("figures/oak_climate_effects.pdf", width= 13, height = 8.5)		#
		ggplot(data=ci.terms.graph[ci.terms.graph$Effect %in% c("tmean", "precip") & substr(ci.terms.graph$group.cc, 1,2)=="QU", ]) + #
			facet_grid(Canopy.Class~Effect, scales="free_x") +#
			geom_ribbon(aes(x=x, ymin=lwr, ymax=upr, fill=group), alpha=0.5) +#
			geom_line(aes(x=x, y=mean, color=group))+#
			scale_color_manual(values=c("dodgerblue4", "red", "black")) +#
			scale_fill_manual(values=c("dodgerblue4", "red", "black")) +#
			poster.theme2+#
			labs(x = "Climate Variable", y = expression(bold(paste("Effect on BAI (mm"^"2", "y"^"-1",")"))))#
dev.off()
library(mgcv)#
library(ggplot2)#
library(car)#
# Christy's GAMM code#
#
# gam1 <- gamm(Y ~  s(Biomass, bs="cr", k=3, by=PFT) + s(tair, k=k, by=PFT) + s(precipf, k=k, by=PFT) + s(CO2, k=k, by=PFT), random=list(PlotID=~1), data=data) #
#
# Loading in my data#
#
data.use <- read.csv("processed_data/AllSites_tree_plus_climate_and_BA.csv", header=T)#
#
data.use$group <- data.use$Species#
data.use$group <- recode(data.use$group, "'CAOV' = 'CARYA'; 'CACO' = 'CARYA'; #
  							'CATE' = 'CARYA'; 'ACSAC' = 'ACSA'; 'BEAL' = 'BETULA'; 'BELE' = 'BETULA'; 'QUMU' = 'QUAL'")#
#
data.use$group.plot <- as.factor(paste(data.use$group, data.use$PlotID, sep="."))#
#
data.use$Canopy.Class <- recode(data.use$Canopy.Class, "'C' = 'D'")#
summary(data.use)#
# reducing the amount of data for the test runs#
sites.use <- c("Harvard", "Howland", "Morgan Monroe State Park", "Oak Openings Toledo", "Missouri Ozark")#
#
test <- data.use[data.use$Site %in% sites.use & !is.na(data.use$RW) & !is.na(data.use$BA.inc),]#
summary(test)#
#
test$group.cc <- as.factor(paste(test$group, test$Canopy.Class, sep="."))#
summary(test)#
# Get a list of what predictors & responses I'm using#
predictors.all <- c("tmean", "precip", "Species", "dbh.recon", "Canopy.Class", "spp.plot", "group", "group.plot", "group.cc")#
#
# Getting rid of observations that have NAs in the important variables#
test <- test[complete.cases(test[,predictors.all]),]#
test <- test[test$Live.Dead=="LIVE" & !test$Canopy.Class=="F",]#
#
# Subsetting to a set of species that we have enough data to feel good about#
#species.use <- c("TSCA", "QURU", "ACRU", "BEAL", "ACSA", "LITU", "QUAL", "CAOV", "CACO", "CATE", "JUVI", "QUVE", "PCRU", "THOC", "PIST")#
group.use <- c("ACRU", "ACSA", "BETULA", "CARYA", "FAGR", "FRAX", "PIST", "QUAL", "QURU", "QUVE", "SAAL", "TSCA", "ULRU")#
#
test <- test[test$group %in% group.use,]#
#
summary(test)#
#
par(new=F)#
plot(test[test$TreeID=="MMA003", "BA.inc"]~ test[test$TreeID=="MMA003","Year"], type="l")#
summary(test)#
summary(test$Live.Dead)#
summary(test$Canopy.Class)
n <- 100#
data <- test#
		n.out = n#
#
		new.dat <- data.frame(Model="species_response",#
							  Extent=as.factor(paste(min(data$Year), max(data$Year), sep="-")))#
		# Figure out which vars are numeric vs. factor#
		vars.num <- vector()#
		for(v in predictors.all){#
			if(class(data[,v]) %in% c("numeric", "integer")) vars.num <- c(vars.num, v)#
		}#
		# Getting the unique values of our factor variables and adding them to the data frame#
		# need to skip group & group.cc so we aren't trying to match Carya & Quercus etc#
		predictors.all <- predictors.all[!predictors.all %in% c("Species", "spp.plot")]#
		for(v in predictors.all[!predictors.all %in% vars.num & !(predictors.all %in% c("group", "group.cc"))]){#
			# if v is a factor, merge all unique values into the dataframe#
			var.temp <- data.frame(x=unique(data[,v])) #
			names(var.temp) <- v#
			new.dat <- merge(new.dat, var.temp, all.x=T, all.y=T)#
		}#
		# getting species from species.plot#
		new.dat$group <- as.factor(substr(new.dat$group.plot, 1, 4))#
		# Adding in the group.canopy class then getting rid of combinations we don't actually have in our data#
		new.dat$group.cc <- as.factor(paste(new.dat$group, new.dat$Canopy.Class, sep="."))#
		new.dat <- new.dat[new.dat$group.cc %in% unique(test$group.cc),]#
		summary(new.dat)#
		# Putting the numerical variables into an array and adding it in #
		var.temp <- data.frame(array(dim=c(n.out, length(vars.num))))#
		names(var.temp) <- vars.num#
		for(v in vars.num){#
			var.temp[,v] <- seq(min(data[,v], na.rm=T), max(data[,v], na.rm=T), length.out=n.out)#
		}								#
		new.dat <- merge(new.dat, var.temp, all.x=T, all.y=T)#
		summary(new.dat)
load("processed_data/gam_results/gam3_climate_by_canopyclass_interactions.Rdata")		#
		source("0_Calculate_GAMM_Posteriors.R")#
		g3.ci.terms.pred <- post.distns(model.gam=gam3, model.name="harv_mmf_cc.test", n=n, newdata=new.dat, vars=predictors.all, terms=T)#
		g3.ci.out <- g3.ci.terms.pred$ci # separting out the confidence interval #
		g3.ci.out[,predictors.all[!predictors.all %in% vars.num]] <- new.dat[,predictors.all[!predictors.all %in% vars.num]] # copying over our factor labels#
		g3.ci.out$x <- as.numeric(g3.ci.out$x) # making x numeric; will make factors NA#
		summary(g3.ci.out)#
		ggplot(data=g3.ci.out[g3.ci.out$Effect %in% c("tmean", "precip"), ]) + #
			facet_wrap(Canopy.Class~Effect, scales="free_x") +#
			geom_ribbon(aes(x=x, ymin=lwr, ymax=upr, fill=group), alpha=0.5) +#
			geom_line(aes(x=x, y=mean, color=group))#
#
ci.terms.graph <- g3.ci.out#
ci.terms.graph[ci.terms.graph$mean<(-13),"mean"] <- NA #
ci.terms.graph[ci.terms.graph$lwr<(-13),"lwr"] <- -13#
ci.terms.graph[ci.terms.graph$upr<(-13),"upr"] <- -13 #
ci.terms.graph[which(ci.terms.graph$mean>8),"mean"] <- NA #
ci.terms.graph[ci.terms.graph$lwr>(8),"lwr"] <- 8 #
ci.terms.graph[ci.terms.graph$upr>(8),"upr"] <- 8
ggplot(data=ci.terms.graph[ci.terms.graph$Effect %in% c("tmean", "precip") & substr(ci.terms.graph$group.cc, 1,2)=="QU", ]) + #
			facet_grid(Canopy.Class~Effect, scales="free_x") +#
			geom_ribbon(aes(x=x, ymin=lwr, ymax=upr, fill=group), alpha=0.5) +#
			geom_line(aes(x=x, y=mean, color=group))+#
			scale_color_manual(values=c("#E69F00", "#0072B2", "#009E73")) +#
			scale_fill_manual(values=c("#E69F00", "#0072B2", "#009E73")) +#
			poster.theme2+#
			labs(x = "Climate Variable", y = expression(bold(paste("Effect on BAI (mm"^"2", "y"^"-1",")"))))
source("poster_theme.R")
ggplot(data=ci.terms.graph[ci.terms.graph$Effect %in% c("tmean", "precip") & substr(ci.terms.graph$group.cc, 1,2)=="QU", ]) + #
			facet_grid(Canopy.Class~Effect, scales="free_x") +#
			geom_ribbon(aes(x=x, ymin=lwr, ymax=upr, fill=group), alpha=0.5) +#
			geom_line(aes(x=x, y=mean, color=group))+#
			scale_color_manual(values=c("#E69F00", "#0072B2", "#009E73")) +#
			scale_fill_manual(values=c("#E69F00", "#0072B2", "#009E73")) +#
			poster.theme2+#
			labs(x = "Climate Variable", y = expression(bold(paste("Effect on BAI (mm"^"2", "y"^"-1",")"))))
pdf("figures/oak_climate_effects.pdf", width= 13, height = 8.5)		#
		ggplot(data=ci.terms.graph[ci.terms.graph$Effect %in% c("tmean", "precip") & substr(ci.terms.graph$group.cc, 1,2)=="QU", ]) + #
			facet_grid(Canopy.Class~Effect, scales="free_x") +#
			geom_ribbon(aes(x=x, ymin=lwr, ymax=upr, fill=group), alpha=0.5) +#
			geom_line(aes(x=x, y=mean, color=group))+#
			scale_color_manual(values=c("#E69F00", "#0072B2", "#009E73")) +#
			scale_fill_manual(values=c("#E69F00", "#0072B2", "#009E73")) +#
			poster.theme2+#
			labs(x = "Climate Variable", y = expression(bold(paste("Effect on BAI (mm"^"2", "y"^"-1",")"))))#
dev.off()
ggplot(data=g3.ci.out[g3.ci.out$Effect == "dbh.recon"& substr(g3.ci.out$group.cc, 1,2)=="QU", ]) + #
			facet_grid(~Canopy.Class) +#
			geom_ribbon(aes(x=x, ymin=lwr, ymax=upr, fill=group), alpha=0.5) +#
			geom_line(aes(x=x, y=mean, color=group)) +#
			scale_color_manual(values=c("#E69F00", "#0072B2", "#009E73")) +#
			scale_fill_manual(values=c("#E69F00", "#0072B2", "#009E73")) +#
			poster.theme2+#
			labs(x = "DBH (cm)", y = expression(bold(paste("Effect on BAI (mm"^"2", "y"^"-1",")"))))
pdf("figures/oak_size_effects.pdf", width= 13, height = 8.5)		#
	ggplot(data=g3.ci.out[g3.ci.out$Effect == "dbh.recon"& substr(g3.ci.out$group.cc, 1,2)=="QU", ]) + #
			facet_grid(~Canopy.Class) +#
			geom_ribbon(aes(x=x, ymin=lwr, ymax=upr, fill=group), alpha=0.5) +#
			geom_line(aes(x=x, y=mean, color=group)) +#
			scale_color_manual(values=c("#E69F00", "#0072B2", "#009E73")) +#
			scale_fill_manual(values=c("#E69F00", "#0072B2", "#009E73")) +#
			poster.theme2+#
			labs(x = "DBH (cm)", y = expression(bold(paste("Effect on BAI (mm"^"2", "y"^"-1",")"))))#
 dev.off()
library(mgcv)#
library(ggplot2)#
library(car)#
# Christy's GAMM code#
#
# gam1 <- gamm(Y ~  s(Biomass, bs="cr", k=3, by=PFT) + s(tair, k=k, by=PFT) + s(precipf, k=k, by=PFT) + s(CO2, k=k, by=PFT), random=list(PlotID=~1), data=data) #
#
# Loading in my data#
#
data.use <- read.csv("processed_data/AllSites_tree_plus_climate_and_BA.csv", header=T)#
#
data.use$group <- data.use$Species#
data.use$group <- recode(data.use$group, "'CAOV' = 'CARYA'; 'CACO' = 'CARYA'; #
  							'CATE' = 'CARYA'; 'ACSAC' = 'ACSA'; 'BEAL' = 'BETULA'; 'BELE' = 'BETULA'; 'QUMU' = 'QUAL'")#
#
data.use$group.plot <- as.factor(paste(data.use$group, data.use$PlotID, sep="."))#
#
data.use$Canopy.Class <- recode(data.use$Canopy.Class, "'C' = 'D'")#
summary(data.use)#
# reducing the amount of data for the test runs#
sites.use <- c("Harvard", "Howland", "Morgan Monroe State Park", "Oak Openings Toledo", "Missouri Ozark")#
#
test <- data.use[data.use$Site %in% sites.use & !is.na(data.use$RW) & !is.na(data.use$BA.inc),]#
summary(test)#
#
test$group.cc <- as.factor(paste(test$group, test$Canopy.Class, sep="."))#
summary(test)#
# Get a list of what predictors & responses I'm using#
predictors.all <- c("tmean", "precip", "Species", "dbh.recon", "Canopy.Class", "spp.plot", "group", "group.plot", "group.cc")#
#
# Getting rid of observations that have NAs in the important variables#
test <- test[complete.cases(test[,predictors.all]),]#
test <- test[test$Live.Dead=="LIVE" & !test$Canopy.Class=="F",]#
#
# Subsetting to a set of species that we have enough data to feel good about#
#species.use <- c("TSCA", "QURU", "ACRU", "BEAL", "ACSA", "LITU", "QUAL", "CAOV", "CACO", "CATE", "JUVI", "QUVE", "PCRU", "THOC", "PIST")#
group.use <- c("ACRU", "ACSA", "BETULA", "CARYA", "FAGR", "FRAX", "PIST", "QUAL", "QURU", "QUVE", "SAAL", "TSCA", "ULRU")#
#
test <- test[test$group %in% group.use,]#
#
summary(test)#
#
par(new=F)#
plot(test[test$TreeID=="MMA003", "BA.inc"]~ test[test$TreeID=="MMA003","Year"], type="l")#
summary(test)#
summary(test$Live.Dead)#
summary(test$Canopy.Class)
n <- 100#
data <- test#
		n.out = n#
#
		new.dat <- data.frame(Model="species_response",#
							  Extent=as.factor(paste(min(data$Year), max(data$Year), sep="-")))#
		# Figure out which vars are numeric vs. factor#
		vars.num <- vector()#
		for(v in predictors.all){#
			if(class(data[,v]) %in% c("numeric", "integer")) vars.num <- c(vars.num, v)#
		}#
		# Getting the unique values of our factor variables and adding them to the data frame#
		# need to skip group & group.cc so we aren't trying to match Carya & Quercus etc#
		predictors.all <- predictors.all[!predictors.all %in% c("Species", "spp.plot")]#
		for(v in predictors.all[!predictors.all %in% vars.num & !(predictors.all %in% c("group", "group.cc"))]){#
			# if v is a factor, merge all unique values into the dataframe#
			var.temp <- data.frame(x=unique(data[,v])) #
			names(var.temp) <- v#
			new.dat <- merge(new.dat, var.temp, all.x=T, all.y=T)#
		}#
		# getting species from species.plot#
		new.dat$group <- as.factor(substr(new.dat$group.plot, 1, 4))#
		# Adding in the group.canopy class then getting rid of combinations we don't actually have in our data#
		new.dat$group.cc <- as.factor(paste(new.dat$group, new.dat$Canopy.Class, sep="."))#
		new.dat <- new.dat[new.dat$group.cc %in% unique(test$group.cc),]#
		summary(new.dat)#
		# Putting the numerical variables into an array and adding it in #
		var.temp <- data.frame(array(dim=c(n.out, length(vars.num))))#
		names(var.temp) <- vars.num#
		for(v in vars.num){#
			var.temp[,v] <- seq(min(data[,v], na.rm=T), max(data[,v], na.rm=T), length.out=n.out)#
		}								#
		new.dat <- merge(new.dat, var.temp, all.x=T, all.y=T)#
		summary(new.dat)
load("processed_data/gam_results/gam3_climate_by_canopyclass_interactions.Rdata")		#
		source("0_Calculate_GAMM_Posteriors.R")#
		g3.ci.terms.pred <- post.distns(model.gam=gam3, model.name="harv_mmf_cc.test", n=n, newdata=new.dat, vars=predictors.all, terms=T)#
		g3.ci.out <- g3.ci.terms.pred$ci # separting out the confidence interval #
		g3.ci.out[,predictors.all[!predictors.all %in% vars.num]] <- new.dat[,predictors.all[!predictors.all %in% vars.num]] # copying over our factor labels#
		g3.ci.out$x <- as.numeric(g3.ci.out$x) # making x numeric; will make factors NA#
		summary(g3.ci.out)
ggplot(data=g3.ci.out[g3.ci.out$Effect == "dbh.recon"& substr(g3.ci.out$group.cc, 1,2)=="QU", ]) + #
			facet_grid(~Canopy.Class) +#
			geom_ribbon(aes(x=x, ymin=lwr, ymax=upr, fill=group), alpha=0.5) +#
			geom_line(aes(x=x, y=mean, color=group)) +#
			scale_color_manual(values=c("#E69F00", "#0072B2", "#009E73")) +#
			scale_fill_manual(values=c("#E69F00", "#0072B2", "#009E73")) +#
			poster.theme2+#
			labs(x = "DBH (cm)", y = expression(bold(paste("Effect on BAI (mm"^"2", "y"^"-1",")"))))
source("poster_theme.R")
ggplot(data=g3.ci.out[g3.ci.out$Effect == "dbh.recon"& substr(g3.ci.out$group.cc, 1,2)=="QU", ]) + #
			facet_grid(~Canopy.Class) +#
			geom_ribbon(aes(x=x, ymin=lwr, ymax=upr, fill=group), alpha=0.5) +#
			geom_line(aes(x=x, y=mean, color=group)) +#
			scale_color_manual(values=c("#E69F00", "#0072B2", "#009E73")) +#
			scale_fill_manual(values=c("#E69F00", "#0072B2", "#009E73")) +#
			poster.theme2+#
			labs(x = "DBH (cm)", y = expression(bold(paste("Effect on BAI (mm"^"2", "y"^"-1",")"))))
ggplot(data=g3.ci.out[g3.ci.out$Effect == "dbh.recon"& substr(g3.ci.out$group.cc, 1,2)=="QU", ]) + #
			facet_grid(~Canopy.Class) +#
			geom_ribbon(aes(x=x, ymin=lwr, ymax=upr, fill=group), alpha=0.5) +#
			geom_line(aes(x=x, y=mean, color=group)) +#
			scale_color_manual(values=c("#E69F00", "#0072B2", "#009E73")) +#
			scale_fill_manual(values=c("#E69F00", "#0072B2", "#009E73")) +#
			poster.theme2+#
			labs(x = "DBH (cm)", y = expression(bold(paste("Effect on BAI (mm"^"2", "y"^"-1",")"))))
g3.ci.out$PlotID <- as.factor(substr(g3.ci.out$group.plot, 6, nchar(paste(g3.ci.out$group.plot)))) # adding a plotID factor#
		summary(g3.ci.out)#
		ggplot(data=g3.ci.out[g3.ci.out$Effect == "dbh.recon", ]) + #
			facet_wrap(~PlotID) +#
			geom_ribbon(aes(x=x, ymin=lwr, ymax=upr, fill=group), alpha=0.5) +#
			geom_line(aes(x=x, y=mean, color=group))
load("processed_data/gam_results/gam3_climate_by_canopyclass_interactions.Rdata")
g3.ci.terms.pred <- post.distns(model.gam=gam3, model.name="harv_mmf_cc.test", n=n, newdata=new.dat, vars=predictors.all, terms=T)
g3.ci.out <- g3.ci.terms.pred$ci # separting out the confidence interval #
		g3.ci.out[,predictors.all[!predictors.all %in% vars.num]] <- new.dat[,predictors.all[!predictors.all %in% vars.num]] # copying over our factor labels#
		g3.ci.out$x <- as.numeric(g3.ci.out$x) # making x numeric; will make factors NA#
		summary(g3.ci.out)
ci.terms.graph <- g3.ci.out#
ci.terms.graph[ci.terms.graph$mean<(-13),"mean"] <- NA #
ci.terms.graph[ci.terms.graph$lwr<(-13),"lwr"] <- -13#
ci.terms.graph[ci.terms.graph$upr<(-13),"upr"] <- -13 #
ci.terms.graph[which(ci.terms.graph$mean>8),"mean"] <- NA #
ci.terms.graph[ci.terms.graph$lwr>(8),"lwr"] <- 8 #
ci.terms.graph[ci.terms.graph$upr>(8),"upr"] <- 8
ggplot(data=g3.ci.out[g3.ci.out$Effect == "dbh.recon" & substr(g3.ci.out$group.cc, 1,2)=="QU", ]) + #
			facet_grid(~Canopy.Class) +#
			geom_ribbon(aes(x=x, ymin=lwr, ymax=upr, fill=group), alpha=0.5) +#
			geom_line(aes(x=x, y=mean, color=group)) +#
			scale_color_manual(values=c("#E69F00", "#0072B2", "#009E73")) +#
			scale_fill_manual(values=c("#E69F00", "#0072B2", "#009E73")) +#
			poster.theme2+#
			labs(x = "DBH (cm)", y = expression(bold(paste("Effect on BAI (mm"^"2", "y"^"-1",")"))))
ggplot(data=g3.ci.out[g3.ci.out$Effect == "dbh.recon" & substr(g3.ci.out$group, 1,2)=="QU", ]) + #
			facet_grid(~group.cc) +#
			geom_ribbon(aes(x=x, ymin=lwr, ymax=upr, fill=group), alpha=0.5) +#
			geom_line(aes(x=x, y=mean, color=group)) +#
			scale_color_manual(values=c("#E69F00", "#0072B2", "#009E73")) +#
			scale_fill_manual(values=c("#E69F00", "#0072B2", "#009E73")) +#
			poster.theme2+#
			labs(x = "DBH (cm)", y = expression(bold(paste("Effect on BAI (mm"^"2", "y"^"-1",")"))))
summary(new.dat)
summary(gam3)
summary(gam3$gma)
summary(gam3$gam)
