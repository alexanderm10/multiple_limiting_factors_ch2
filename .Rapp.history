summary(all.sites.gs)
summary(cor.all.stack[is.na(cor.all.stack$cor),])
site.rw
sites.rw
summary(sites.rw)
sites.rw <- sites.rw[!is.na(sites.rw),]
sites.rw <- sites.rw[!is.na(sites.rw)]
summary(sites.rw)
sites.rw2 <- sites.rw
s = "Harvard"
for(s in names(sites.rw)){#
	for(i in names(sites.rw[[s]]))#
	sites.rw[[s]] <- sites.rw[[s]][,!is.na(i)]	#
	}#
}
for(s in names(sites.rw)){#
	for(i in names(sites.rw[[s]])){#
	sites.rw[[s]] <- sites.rw[[s]][,!is.na(i)]	#
	}#
}
library(mgcv)#
library(ggplot2)#
library(car)#
library(reshape)#
library(dplR)#
library(DescTools)#
# Christy's GAMM code#
#
# gam1 <- gamm(Y ~  s(Biomass, bs="cr", k=3, by=PFT) + s(tair, k=k, by=PFT) + s(precipf, k=k, by=PFT) + s(CO2, k=k, by=PFT), random=list(PlotID=~1), data=data) #
#
# Loading in my data#
#
data.use <- read.csv("processed_data/AllSites_tree_plus_climate_and_BA.csv", header=T)#
#
data.use$group <- data.use$Species#
data.use$group <- recode(data.use$group, "'CAOV' = 'CARYA'; 'CACO' = 'CARYA'; #
  							'CATE' = 'CARYA'; 'ACSAC' = 'ACSA'; 'BEAL' = 'BETULA'; 'BELE' = 'BETULA'; 'QUMU' = 'QUAL'")#
#
data.use$group.plot <- as.factor(paste(data.use$group, data.use$PlotID, sep="."))#
#
data.use$Canopy.Class <- recode(data.use$Canopy.Class, "'C' = 'D'")#
summary(data.use)#
# reducing the amount of data for the test runs#
sites.use <- c("Harvard", "Howland", "Morgan Monroe State Park", "Oak Openings Toledo", "Missouri Ozark")#
#
test <- data.use[data.use$Site %in% sites.use & !is.na(data.use$RW) & !is.na(data.use$BA.inc),]#
summary(test)#
#
test$group.cc <- as.factor(paste(test$group, test$Canopy.Class, sep="."))#
summary(test)#
# Get a list of what predictors & responses I'm using#
predictors.all <- c("tmean", "precip", "Species", "dbh.recon", "Canopy.Class", "spp.plot", "group", "group.plot", "group.cc")#
#
# Getting rid of observations that have NAs in the important variables#
test <- test[complete.cases(test[,predictors.all]),]#
test <- test[test$Live.Dead=="LIVE" & !test$Canopy.Class=="F",]#
#
# Subsetting to a set of species that we have enough data to feel good about#
#species.use <- c("TSCA", "QURU", "ACRU", "BEAL", "ACSA", "LITU", "QUAL", "CAOV", "CACO", "CATE", "JUVI", "QUVE", "PCRU", "THOC", "PIST")#
group.use <- c("ACRU", "ACSA", "BETULA", "CARYA", "FAGR", "FRAX", "PIST", "QUAL", "QURU", "QUVE", "SAAL", "TSCA", "ULRU")#
#
test <- test[test$group %in% group.use,]#
#
summary(test)#
#
par(new=F)#
plot(test[test$TreeID=="MMA003", "BA.inc"]~ test[test$TreeID=="MMA003","Year"], type="l")#
summary(test)#
# Truncatign at 2000; at 2000 the sample depth for the oak openings is only 1#
test <- test[test$Year >= 2000 & test$Year <= 2012,]#
#
tree.rw <- test#
summary(tree.rw)#
#
summary(test)#
save(test, file="processed_data/test_tree_data_2000_2012.Rdata")#
#
sites.rw <- list()#
#
tree.rw$Year <- as.factor(tree.rw$Year)#
#
for(s in unique(tree.rw$Site)){#
	sites.rw[[s]] <- recast(tree.rw[tree.rw$Site==s,c("Year", "TreeID", "RW")], Year ~ TreeID)	#
}#
summary(sites.rw)
for(s in names(sites.rw)){#
	for(i in names(sites.rw[[s]])){#
	sites.rw2[[s]] <- sites.rw[[s]][,!is.na(i)]	#
	}#
}
summary(sites.rw2[[1]])
summary(sites.rw2)
summary(sites.rw)
for(s in names(sites.rw)){#
	for(i in names(sites.rw[[s]])){#
	sites.rw2[[s]][,i] <- sites.rw[[s]][,!is.na(i)]	#
	}#
}
warnings()
library(mgcv)#
library(ggplot2)#
library(car)#
library(reshape)#
library(dplR)#
library(DescTools)#
# Christy's GAMM code#
#
# gam1 <- gamm(Y ~  s(Biomass, bs="cr", k=3, by=PFT) + s(tair, k=k, by=PFT) + s(precipf, k=k, by=PFT) + s(CO2, k=k, by=PFT), random=list(PlotID=~1), data=data) #
#
# Loading in my data#
#
data.use <- read.csv("processed_data/AllSites_tree_plus_climate_and_BA.csv", header=T)#
#
data.use$group <- data.use$Species#
data.use$group <- recode(data.use$group, "'CAOV' = 'CARYA'; 'CACO' = 'CARYA'; #
  							'CATE' = 'CARYA'; 'ACSAC' = 'ACSA'; 'BEAL' = 'BETULA'; 'BELE' = 'BETULA'; 'QUMU' = 'QUAL'")#
#
data.use$group.plot <- as.factor(paste(data.use$group, data.use$PlotID, sep="."))#
#
data.use$Canopy.Class <- recode(data.use$Canopy.Class, "'C' = 'D'")#
summary(data.use)#
# reducing the amount of data for the test runs#
sites.use <- c("Harvard", "Howland", "Morgan Monroe State Park", "Oak Openings Toledo", "Missouri Ozark")#
#
test <- data.use[data.use$Site %in% sites.use & !is.na(data.use$RW) & !is.na(data.use$BA.inc),]#
summary(test)#
#
test$group.cc <- as.factor(paste(test$group, test$Canopy.Class, sep="."))#
summary(test)#
# Get a list of what predictors & responses I'm using#
predictors.all <- c("tmean", "precip", "Species", "dbh.recon", "Canopy.Class", "spp.plot", "group", "group.plot", "group.cc")#
#
# Getting rid of observations that have NAs in the important variables#
test <- test[complete.cases(test[,predictors.all]),]#
test <- test[test$Live.Dead=="LIVE" & !test$Canopy.Class=="F",]#
#
# Subsetting to a set of species that we have enough data to feel good about#
#species.use <- c("TSCA", "QURU", "ACRU", "BEAL", "ACSA", "LITU", "QUAL", "CAOV", "CACO", "CATE", "JUVI", "QUVE", "PCRU", "THOC", "PIST")#
group.use <- c("ACRU", "ACSA", "BETULA", "CARYA", "FAGR", "FRAX", "PIST", "QUAL", "QURU", "QUVE", "SAAL", "TSCA", "ULRU")#
#
test <- test[test$group %in% group.use,]#
#
summary(test)#
#
par(new=F)#
plot(test[test$TreeID=="MMA003", "BA.inc"]~ test[test$TreeID=="MMA003","Year"], type="l")#
summary(test)#
# Truncatign at 2000; at 2000 the sample depth for the oak openings is only 1#
test <- test[test$Year >= 2000 & test$Year <= 2012,]#
#
tree.rw <- test#
summary(tree.rw)#
#
summary(test)#
save(test, file="processed_data/test_tree_data_2000_2012.Rdata")#
#
sites.rw <- list()#
#
tree.rw$Year <- as.factor(tree.rw$Year)#
#
for(s in unique(tree.rw$Site)){#
	sites.rw[[s]] <- recast(tree.rw[tree.rw$Site==s,c("Year", "TreeID", "RW")], Year ~ TreeID)	#
}#
summary(sites.rw)#
#
# Need to remove trees with any NA in the series#
#
sites.rw2 <- sites.rw
for(s in names(sites.rw)){#
	for(i in names(sites.rw[[s]])){#
	sites.rw2[[s]][,i] <- sites.rw[[s]][,!is.na(i)]	#
	}#
}#
summary(sites.rw2)
sites.rw[[s]][,!is.na(i)]
sites.rw2 <- list()
for(s in names(sites.rw)){#
	for(i in names(sites.rw[[s]])){#
	sites.rw2[[s]] <- sites.rw[[s]][,!is.na(i)]	#
	}#
}
summary(sites.rw2)
library(mgcv)#
library(ggplot2)#
library(car)#
library(reshape)#
library(dplR)#
library(DescTools)#
# Christy's GAMM code#
#
# gam1 <- gamm(Y ~  s(Biomass, bs="cr", k=3, by=PFT) + s(tair, k=k, by=PFT) + s(precipf, k=k, by=PFT) + s(CO2, k=k, by=PFT), random=list(PlotID=~1), data=data) #
#
# Loading in my data#
#
data.use <- read.csv("processed_data/AllSites_tree_plus_climate_and_BA.csv", header=T)#
#
data.use$group <- data.use$Species#
data.use$group <- recode(data.use$group, "'CAOV' = 'CARYA'; 'CACO' = 'CARYA'; #
  							'CATE' = 'CARYA'; 'ACSAC' = 'ACSA'; 'BEAL' = 'BETULA'; 'BELE' = 'BETULA'; 'QUMU' = 'QUAL'")#
#
data.use$group.plot <- as.factor(paste(data.use$group, data.use$PlotID, sep="."))#
#
data.use$Canopy.Class <- recode(data.use$Canopy.Class, "'C' = 'D'")#
summary(data.use)#
# reducing the amount of data for the test runs#
sites.use <- c("Harvard", "Howland", "Morgan Monroe State Park", "Oak Openings Toledo", "Missouri Ozark")#
#
test <- data.use[data.use$Site %in% sites.use & !is.na(data.use$RW) & !is.na(data.use$BA.inc),]#
summary(test)#
#
test$group.cc <- as.factor(paste(test$group, test$Canopy.Class, sep="."))#
summary(test)#
# Get a list of what predictors & responses I'm using#
predictors.all <- c("tmean", "precip", "Species", "dbh.recon", "Canopy.Class", "spp.plot", "group", "group.plot", "group.cc")#
#
# Getting rid of observations that have NAs in the important variables#
test <- test[complete.cases(test[,predictors.all]),]#
test <- test[test$Live.Dead=="LIVE" & !test$Canopy.Class=="F",]#
#
# Subsetting to a set of species that we have enough data to feel good about#
#species.use <- c("TSCA", "QURU", "ACRU", "BEAL", "ACSA", "LITU", "QUAL", "CAOV", "CACO", "CATE", "JUVI", "QUVE", "PCRU", "THOC", "PIST")#
group.use <- c("ACRU", "ACSA", "BETULA", "CARYA", "FAGR", "FRAX", "PIST", "QUAL", "QURU", "QUVE", "SAAL", "TSCA", "ULRU")#
#
test <- test[test$group %in% group.use,]#
#
summary(test)#
#
par(new=F)#
plot(test[test$TreeID=="MMA003", "BA.inc"]~ test[test$TreeID=="MMA003","Year"], type="l")#
summary(test)#
# Truncatign at 1935; at 1935 the sample depth for the oak openings is only 1#
test <- test[test$Year >= 1935 & test$Year <= 2012,]#
#
tree.rw <- test#
summary(tree.rw)#
#
summary(test)#
save(test, file="processed_data/test_tree_data_1935_2012.Rdata")#
#
sites.rw <- list()#
#
tree.rw$Year <- as.factor(tree.rw$Year)#
#
for(s in unique(tree.rw$Site)){#
	sites.rw[[s]] <- recast(tree.rw[tree.rw$Site==s,c("Year", "TreeID", "RW")], Year ~ TreeID)	#
}#
summary(sites.rw)#
#
# Need to remove trees with any NA in the series#
#
sites.rw2 <- list()#
#
for(s in names(sites.rw)){#
	for(i in names(sites.rw[[s]])){#
	sites.rw2[[s]] <- sites.rw[[s]][,!is.na(i)]	#
	}#
}#
summary(sites.rw2)
sites.rw2 <- list()#
#
for(s in names(sites.rw)){#
	for(i in row.names(sites.rw[[s]])){#
	sites.rw2[[s]] <- sites.rw[[s]][!is.na(i),]	#
	}#
}
summary(sites.rw2)
summary(sites.rw2[[1]])
for(s in names(sites.rw)){#
	for(r in 1:nrow(sites.rw[[s]])){#
	sites.rw2[[s]] <- sites.rw[[s]][!is.na(i),]	#
	}#
}
summary(sites.rw2[[1]])
sites.rw[[s]][!is.na(i),]
sites.rw[[s]][is.na(i),]
library(mgcv)#
library(ggplot2)#
library(car)#
library(reshape)#
library(dplR)#
library(DescTools)#
# Christy's GAMM code#
#
# gam1 <- gamm(Y ~  s(Biomass, bs="cr", k=3, by=PFT) + s(tair, k=k, by=PFT) + s(precipf, k=k, by=PFT) + s(CO2, k=k, by=PFT), random=list(PlotID=~1), data=data) #
#
# Loading in my data#
#
data.use <- read.csv("processed_data/AllSites_tree_plus_climate_and_BA.csv", header=T)#
#
data.use$group <- data.use$Species#
data.use$group <- recode(data.use$group, "'CAOV' = 'CARYA'; 'CACO' = 'CARYA'; #
  							'CATE' = 'CARYA'; 'ACSAC' = 'ACSA'; 'BEAL' = 'BETULA'; 'BELE' = 'BETULA'; 'QUMU' = 'QUAL'")#
#
data.use$group.plot <- as.factor(paste(data.use$group, data.use$PlotID, sep="."))#
#
data.use$Canopy.Class <- recode(data.use$Canopy.Class, "'C' = 'D'")#
summary(data.use)#
# reducing the amount of data for the test runs#
sites.use <- c("Harvard", "Howland", "Morgan Monroe State Park", "Oak Openings Toledo", "Missouri Ozark")#
#
test <- data.use[data.use$Site %in% sites.use & !is.na(data.use$RW) & !is.na(data.use$BA.inc),]#
summary(test)#
#
test$group.cc <- as.factor(paste(test$group, test$Canopy.Class, sep="."))#
summary(test)#
# Get a list of what predictors & responses I'm using#
predictors.all <- c("tmean", "precip", "Species", "dbh.recon", "Canopy.Class", "spp.plot", "group", "group.plot", "group.cc")#
#
# Getting rid of observations that have NAs in the important variables#
test <- test[complete.cases(test[,predictors.all]),]#
test <- test[test$Live.Dead=="LIVE" & !test$Canopy.Class=="F",]#
#
# Subsetting to a set of species that we have enough data to feel good about#
#species.use <- c("TSCA", "QURU", "ACRU", "BEAL", "ACSA", "LITU", "QUAL", "CAOV", "CACO", "CATE", "JUVI", "QUVE", "PCRU", "THOC", "PIST")#
group.use <- c("ACRU", "ACSA", "BETULA", "CARYA", "FAGR", "FRAX", "PIST", "QUAL", "QURU", "QUVE", "SAAL", "TSCA", "ULRU")#
#
test <- test[test$group %in% group.use,]#
#
summary(test)#
#
par(new=F)#
plot(test[test$TreeID=="MMA003", "BA.inc"]~ test[test$TreeID=="MMA003","Year"], type="l")#
summary(test)#
# Truncatign at 1935; at 1935 the sample depth for the oak openings is only 1#
test <- test[test$Year >= 1935 & test$Year <= 2012,]#
#
tree.rw <- test#
summary(tree.rw)#
#
summary(test)#
save(test, file="processed_data/test_tree_data_1935_2012.Rdata")#
#
sites.rw <- list()#
#
tree.rw$Year <- as.factor(tree.rw$Year)#
#
for(s in unique(tree.rw$Site)){#
	sites.rw[[s]] <- recast(tree.rw[tree.rw$Site==s,c("Year", "TreeID", "RW")], Year ~ TreeID)	#
}#
summary(sites.rw)#
#
save(sites.rw, file="processed_data/sites_rw.Rdata")#
summary(sites.rw[[4]])#
sites.rw#
# Making Indices of all the different sites using a 30 yr cubic smoothing spline#
sites.i <- list()#
#
for(s in names(sites.rw)){#
	sites.i[[s]] <- detrend(sites.rw[[s]][,2:ncol(sites.rw[[s]])], method="Spline", nyr=30)#
}#
summary(sites.i[[1]])#
#
# making chronologies for each site#
#
site.chron <- list()#
#
for(s in names(sites.i)){#
	site.chron[[s]] <- chron(sites.i[[s]][,2:ncol(sites.i[[s]])], prefix = substr(s, 1, 3), prewhiten = T) #
	site.chron[[s]][,"Year"]<- c(1935:2012) #
}#
#
summary(site.chron[[5]])#
# Making each site it's own dataframe#
harvard.crn <- as.data.frame(site.chron[[1]])#
#
howland.crn <- as.data.frame(site.chron[[2]])#
#
misso.crn <- as.data.frame(site.chron[[3]])#
#
mmf.crn <- as.data.frame(site.chron[[4]])#
#
oakop.crn <- as.data.frame(site.chron[[5]])#
# Plotting thigns for presentation#
par(cex=2 )#
plot(mmf.crn$Morres ~ mmf.crn$Year, type="l", lwd=5, axes=F, cex=6, col="white")#
abline(h=1,lty="dashed", col="white")#
axis(side =1,tck= 0.05) #
axis(side=2,tck=0.05)#
#
#Plotting out mmfsites#
summary(test)#
#
mmf <- test[test$Site %in% "Morgan Monroe State Park",]#
#
summary(mmf)#
#
for(i in unique(mmf$Year)){#
  mmf[mmf$Year==i,"Mean"] <- mean(mmf[mmf$Year==i,"RW"])#
  mmf[mmf$Year==i,"UB"] <- quantile(mmf[mmf$Year==i,"RW"], 0.975)#
  mmf[mmf$Year==i,"LB"] <- quantile(mmf[mmf$Year==i,"RW"], 0.025)#
}#
#
summary(mmf)#
#
ggplot(data=mmf)+#
  # geom_line(aes(x=Year, y=RW))#
  geom_ribbon(aes(x=Year, ymin=LB, ymax=UB), alpha=0.5, fill="white")+#
  geom_line(aes(x=Year, y=Mean), size=2, color="white")+#
  poster.theme2#
# Merging the residual chronologies back together#
sites.crn <- data.frame(Harvard = harvard.crn[, "Harres"], #
						Howland = howland.crn[,"Howres"], #
						Missouri = misso.crn[,"Misres"],#
						Morgan_Monroe = mmf.crn[,"Morres"], #
						Oak_openings = oakop.crn[,"Oakres"]#
						)#
#
summary(sites.crn)#
# Load in climate data#
#
climate.use <- read.csv("processed_data/climate_growing_season.csv")#
#
summary(climate.use)#
#
climate.use <- climate.use[climate.use$Site %in% sites.use,]#
climate.use <- climate.use[climate.use$Year>=1935 & climate.use$Year <=2012,]#
#
climate.site <- list()#
#
for(s in unique(climate.use$Site)){#
	climate.site[[s]] <- climate.use[climate.use$Site==s,]#
}#
#
summary(climate.site)#
save(climate.site, file="processed_data/sites_use_climate.Rdata")#
class(climate.site[[1]][,"Year"])#
#
head(climate.site[[1]])#
#
summary(climate.site[[1]])#
#
harv.clim <- climate.site[["Harvard"]][,c("tmean", "precip")]#
#
how.clim <- climate.site[["Howland"]][,c("tmean", "precip")]#
#
miss.clim <- climate.site[["Missouri Ozark"]][,c("tmean", "precip")]#
#
mmf.clim <- climate.site[["Morgan Monroe State Park"]][,c("tmean", "precip")]#
#
oak.clim <- climate.site[["Oak Openings Toledo"]][,c("tmean", "precip")]#
dim(harv.clim)#
dim(harvard.crn)#
#
# harvard#
harv.cor<- cor(harvard.crn, harv.clim[,c("tmean", "precip")], method="pearson")#
harvard <- data.frame(cor = c(harv.cor[1:2,"tmean"],  harv.cor[1:2,"precip"]),#
					  var = c("tmean", "tmean", "precip", "precip"))#
harvard$type <- c("std", "res")#
harvard$site <- "Harvard" #
# Howland#
how.cor <- cor(howland.crn, how.clim[,c("tmean", "precip")], method="pearson")#
how.cor#
#
howland <- data.frame(cor = c(how.cor[1:2,"tmean"],  how.cor[1:2,"precip"]),#
					  var = c("tmean", "tmean", "precip", "precip"))#
howland$type <- c("std", "res")#
howland$site <- "Howland" #
# Missouri#
mo.cor <- cor(misso.crn, miss.clim[,c("tmean", "precip")], method="pearson")#
mo.cor#
#
missouri <- data.frame(cor = c(mo.cor[1:2,"tmean"],  mo.cor[1:2,"precip"]),#
					  var = c("tmean", "tmean", "precip", "precip"))#
missouri$type <- c("std", "res")#
missouri$site <- "Missouri" #
#
# Morgan Monroe#
mmf.cor <- cor(mmf.crn, mmf.clim[,c("tmean", "precip")], method="pearson")#
mmf.cor#
#
morgan <- data.frame(cor = c(mmf.cor[1:2,"tmean"],  mmf.cor[1:2,"precip"]),#
					  var = c("tmean", "tmean", "precip", "precip"))#
morgan$type <- c("std", "res")#
morgan$site <- "Morgan-Monroe" #
#
# Oak openings#
oakop.cor <- cor(oakop.crn, oak.clim[,c("tmean", "precip")], method="pearson")#
oakop.cor#
#
oakop <- data.frame(cor = c(oakop.cor[1:2,"tmean"],  oakop.cor[1:2,"precip"]),#
					  var = c("tmean", "tmean", "precip", "precip"))#
oakop$type <- c("std", "res")#
oakop$site <- "Oak-Openings" #
#
# Merging standard chronologies into one file#
#
clim.cor <- merge(harvard, howland, all.x=T, all.y=T)#
clim.cor2 <- merge(clim.cor, missouri,all.x=T, all.y=T)#
clim.cor3 <- merge(clim.cor2, morgan,all.x=T, all.y=T)#
clim.cor4 <- merge(clim.cor3, oakop,all.x=T, all.y=T)#
#
summary(clim.cor4)#
clim.cor4$site <- as.factor(clim.cor4$site)#
clim.cor4$type <- as.factor(clim.cor4$type)#
clim.cor4$cor <- as.numeric(clim.cor4$cor)#
#
# Sig value for 81 df = 0.209#
clim.cor4$sig <- ifelse(clim.cor4$cor < -0.2245 | clim.cor4$cor > 0.2245, "Y", "N")#
clim.cor4$sig <- factor(clim.cor4$sig, levels = c("Y", "N"))#
#
clim.cor4$site <- factor(clim.cor4$site, levels = c("Missouri", "Morgan-Monroe", "Oak-Openings", "Harvard", "Howland"))#
#
clim.cor4$Site <- clim.cor4$site#
clim.cor4$Site <- recode(clim.cor4$Site, "'Missouri' = 'MO'; 'Morgan-Monroe' = 'IN'; 'Oak-Openings' = 'OH'; 'Harvard' = 'MA'; 'Howland' = 'ME'")#
clim.cor4$Site <- factor(clim.cor4$Site, levels = c("MO", "IN", "OH", "MA", "ME"))#
pdf("figures/site_correlations.pdf", width= 13, height = 8.5)#
ggplot(data=clim.cor4[clim.cor4$type=="std",]) + facet_grid(var~. , scales="free_x") +#
	geom_bar(aes(x=Site, y=cor, fill=sig), stat="identity", position="dodge", colour="black") +#
	geom_hline(yintercept=0.2245, linetype="dashed") + #
	geom_hline(yintercept=-0.2245, linetype="dashed") + 	#
	geom_hline(yintercept=0, linetype="solid") +#
	scale_fill_manual(values= c("green", "grey50")) + #
	poster.theme2#
dev.off()#
#
#######################################################################
# Gettign correlations for all for all of the available climate data data#
#######################################################################
# Loading in climate data#
t.mean <- read.csv("processed_data/ch2_tmean.csv", header=T)#
t.min <- read.csv("processed_data/ch2_tmin.csv", header=T)#
t.max <- read.csv("processed_data/ch2_tmax.csv", header=T)#
precip <- read.csv("processed_data/ch2_precip.csv", header=T)#
summary(t.mean)#
#
# Limiting time frame--1935-2012#
t.mean <- t.mean[t.mean$Year >= 1936 & t.mean$Year <= 2012,]#
t.min <- t.min[t.min$Year >= 1936 & t.min$Year <= 2012,]#
t.max <- t.max[t.max$Year >= 1936 & t.max$Year <= 2012,]#
precip <- precip[precip$Year >= 1936 & precip$Year <= 2012,]#
summary(t.mean)#
summary(t.min)#
summary(t.max)#
summary(precip)#
#
head(t.mean)#
unique(t.mean$Site.Name)#
#
t.mean$Site.Name <- recode(t.mean$Site.Name, "'Missouri Ozark' = 'Missouri'; 'Morgan Monroe State Park'='Morgan_Monroe'; 'Oak Openings Toledo' = 'Oak_openings'")#
#
t.min$Site.Name <- recode(t.min$Site.Name, "'Missouri Ozark' = 'Missouri'; 'Morgan Monroe State Park'='Morgan_Monroe'; 'Oak Openings Toledo' = 'Oak_openings'")#
t.max$Site.Name <- recode(t.max$Site.Name, "'Missouri Ozark' = 'Missouri'; 'Morgan Monroe State Park'='Morgan_Monroe'; 'Oak Openings Toledo' = 'Oak_openings'")#
precip$Site.Name <- recode(precip$Site.Name, "'Missouri Ozark' = 'Missouri'; 'Morgan Monroe State Park'='Morgan_Monroe'; 'Oak Openings Toledo' = 'Oak_openings'")#
# getting the ring widths in a data frame#
summary(sites.crn)#
sites.crn$Year <- site.chron[[1]][,"Year"]#
head(sites.crn)#
sites.crn <- sites.crn[sites.crn$Year > 1935,]#
#--------------------------------------------#
# Tmean correlation#
#--------------------------------------------#
#
sites <- c("Harvard", "Howland", "Missouri", "Morgan_Monroe", "Oak_openings")#
#
tmean.corr<-list()#
#
for(i in sites){#
	tmean.corr[[i]] <- cor(sites.crn[,i], t.mean[t.mean$Site.Name %in% i,!names(t.mean) %in% c("Site.Name", "Year")], method="pearson")#
}#
summary(tmean.corr)#
#
# Making each site it's own dataframe#
harvard.tmean <- as.data.frame(tmean.corr[[1]])#
#
harvard.tmean.stack <- stack(harvard.tmean)#
names(harvard.tmean.stack)<- c("cor", "month")#
harvard.tmean.stack$Site <- as.factor("Harvard")#
harvard.tmean.stack$type <- as.factor("tmean")#
#
howland.tmean <- as.data.frame(tmean.corr[[2]])#
#
howland.tmean.stack <- stack(howland.tmean)#
names(howland.tmean.stack)<- c("cor", "month")#
howland.tmean.stack$Site <- as.factor("Howland")#
howland.tmean.stack$type <- as.factor("tmean")#
#
mo.tmean <- as.data.frame(tmean.corr[[3]])#
#
mo.tmean.stack <- stack(mo.tmean)#
names(mo.tmean.stack)<- c("cor", "month")#
mo.tmean.stack$Site <- as.factor("Missouri")#
mo.tmean.stack$type <- as.factor("tmean")#
#
mmf.tmean <- as.data.frame(tmean.corr[[4]])#
#
mmf.tmean.stack <- stack(mmf.tmean)#
names(mmf.tmean.stack)<- c("cor", "month")#
mmf.tmean.stack$Site <- as.factor("MMF")#
mmf.tmean.stack$type <- as.factor("tmean")#
#
oakop.tmean <- as.data.frame(tmean.corr[[5]])#
#
oakop.tmean.stack <- stack(oakop.tmean)#
names(oakop.tmean.stack)<- c("cor", "month")#
oakop.tmean.stack$Site <- as.factor("Oak_openings")#
oakop.tmean.stack$type <- as.factor("tmean")#
#
all.sites.tmean <- rbind(harvard.tmean.stack, howland.tmean.stack, mo.tmean.stack, mmf.tmean.stack, oakop.tmean.stack)#
#
summary(all.sites.tmean)#
#
#--------------------------------------------#
# Tmin correlation#
#--------------------------------------------#
#
sites <- c("Harvard", "Howland", "Missouri", "Morgan_Monroe", "Oak_openings")#
#
tmin.corr<-list()#
#
for(i in sites){#
	tmin.corr[[i]] <- cor(sites.crn[,i], t.min[t.min$Site.Name %in% i,!names(t.min) %in% c("Site.Name", "Year")], method="pearson")#
}#
summary(tmin.corr)#
#
# Making each site it's own dataframe#
harvard.tmin <- as.data.frame(tmin.corr[[1]])#
#
harvard.tmin.stack <- stack(harvard.tmin)#
names(harvard.tmin.stack)<- c("cor", "month")#
harvard.tmin.stack$Site <- as.factor("Harvard")#
harvard.tmin.stack$type <- as.factor("tmin")#
#
howland.tmin <- as.data.frame(tmin.corr[[2]])#
#
howland.tmin.stack <- stack(howland.tmin)#
names(howland.tmin.stack)<- c("cor", "month")#
howland.tmin.stack$Site <- as.factor("Howland")#
howland.tmin.stack$type <- as.factor("tmin")#
#
mo.tmin <- as.data.frame(tmin.corr[[3]])#
#
mo.tmin.stack <- stack(mo.tmin)#
names(mo.tmin.stack)<- c("cor", "month")#
mo.tmin.stack$Site <- as.factor("Missouri")#
mo.tmin.stack$type <- as.factor("tmin")#
#
mmf.tmin <- as.data.frame(tmin.corr[[4]])#
#
mmf.tmin.stack <- stack(mmf.tmin)#
names(mmf.tmin.stack)<- c("cor", "month")#
mmf.tmin.stack$Site <- as.factor("MMF")#
mmf.tmin.stack$type <- as.factor("tmin")#
#
oakop.tmin <- as.data.frame(tmin.corr[[5]])#
#
oakop.tmin.stack <- stack(oakop.tmin)#
names(oakop.tmin.stack)<- c("cor", "month")#
oakop.tmin.stack$Site <- as.factor("Oak_openings")#
oakop.tmin.stack$type <- as.factor("tmin")#
#
all.sites.tmin <- rbind(harvard.tmin.stack, howland.tmin.stack, mo.tmin.stack, mmf.tmin.stack, oakop.tmin.stack)#
#
summary(all.sites.tmin)#
#--------------------------------------------#
# Tmax correlation#
#--------------------------------------------#
#
sites <- c("Harvard", "Howland", "Missouri", "Morgan_Monroe", "Oak_openings")#
#
tmax.corr<-list()#
#
for(i in sites){#
	tmax.corr[[i]] <- cor(sites.crn[,i], t.max[t.max$Site.Name %in% i,!names(t.max) %in% c("Site.Name", "Year")], method="pearson")#
}#
summary(tmax.corr)#
#
# Making each site it's own dataframe#
harvard.tmax <- as.data.frame(tmax.corr[[1]])#
#
harvard.tmax.stack <- stack(harvard.tmax)#
names(harvard.tmax.stack)<- c("cor", "month")#
harvard.tmax.stack$Site <- as.factor("Harvard")#
harvard.tmax.stack$type <- as.factor("tmax")#
#
howland.tmax <- as.data.frame(tmax.corr[[2]])#
#
howland.tmax.stack <- stack(howland.tmax)#
names(howland.tmax.stack)<- c("cor", "month")#
howland.tmax.stack$Site <- as.factor("Howland")#
howland.tmax.stack$type <- as.factor("tmax")#
#
mo.tmax <- as.data.frame(tmax.corr[[3]])#
#
mo.tmax.stack <- stack(mo.tmax)#
names(mo.tmax.stack)<- c("cor", "month")#
mo.tmax.stack$Site <- as.factor("Missouri")#
mo.tmax.stack$type <- as.factor("tmax")#
#
mmf.tmax <- as.data.frame(tmax.corr[[4]])#
#
mmf.tmax.stack <- stack(mmf.tmax)#
names(mmf.tmax.stack)<- c("cor", "month")#
mmf.tmax.stack$Site <- as.factor("MMF")#
mmf.tmax.stack$type <- as.factor("tmax")#
#
oakop.tmax <- as.data.frame(tmax.corr[[5]])#
#
oakop.tmax.stack <- stack(oakop.tmax)#
names(oakop.tmax.stack)<- c("cor", "month")#
oakop.tmax.stack$Site <- as.factor("Oak_openings")#
oakop.tmax.stack$type <- as.factor("tmax")#
#
all.sites.tmax <- rbind(harvard.tmax.stack, howland.tmax.stack, mo.tmax.stack, mmf.tmax.stack, oakop.tmax.stack)#
#
summary(all.sites.tmax)#
#--------------------------------------------#
# Precip correlation#
#--------------------------------------------#
sites <- c("Harvard", "Howland", "Missouri", "Morgan_Monroe", "Oak_openings")#
#
precip.corr<-list()#
#
for(i in sites){#
	precip.corr[[i]] <- cor(sites.crn[,i], precip[precip$Site.Name %in% i,!names(precip) %in% c("Site.Name", "Year")], method="pearson")#
}#
summary(precip.corr)#
#
# Making each site it's own dataframe#
harvard.precip <- as.data.frame(precip.corr[[1]])#
#
harvard.precip.stack <- stack(harvard.precip)#
names(harvard.precip.stack)<- c("cor", "month")#
harvard.precip.stack$Site <- as.factor("Harvard")#
harvard.precip.stack$type <- as.factor("precip")#
#
howland.precip <- as.data.frame(precip.corr[[2]])#
#
howland.precip.stack <- stack(howland.precip)#
names(howland.precip.stack)<- c("cor", "month")#
howland.precip.stack$Site <- as.factor("Howland")#
howland.precip.stack$type <- as.factor("precip")#
#
mo.precip <- as.data.frame(precip.corr[[3]])#
#
mo.precip.stack <- stack(mo.precip)#
names(mo.precip.stack)<- c("cor", "month")#
mo.precip.stack$Site <- as.factor("Missouri")#
mo.precip.stack$type <- as.factor("precip")#
#
mmf.precip <- as.data.frame(precip.corr[[4]])#
#
mmf.precip.stack <- stack(mmf.precip)#
names(mmf.precip.stack)<- c("cor", "month")#
mmf.precip.stack$Site <- as.factor("MMF")#
mmf.precip.stack$type <- as.factor("precip")#
#
oakop.precip <- as.data.frame(precip.corr[[5]])#
#
oakop.precip.stack <- stack(oakop.precip)#
names(oakop.precip.stack)<- c("cor", "month")#
oakop.precip.stack$Site <- as.factor("Oak_openings")#
oakop.precip.stack$type <- as.factor("precip")#
#
all.sites.precip <- rbind(harvard.precip.stack, howland.precip.stack, mo.precip.stack, mmf.precip.stack, oakop.precip.stack)#
#
summary(all.sites.precip)#
#
# Merging all stacked dataframes together to make plotting easier#
#
all.sites.climate <- rbind(all.sites.precip, all.sites.tmax, all.sites.tmin, all.sites.tmean)#
summary(all.sites.climate)#
#
# Sig value for 75 df = 0.2245#
all.sites.climate$sig <- ifelse(all.sites.climate$cor < -0.2245 | all.sites.climate$cor > 0.2245, "Y", "N")#
all.sites.climate$sig <- factor(all.sites.climate$sig, levels = c("Y", "N"))#
all.sites.climate$month <- factor(all.sites.climate$month, levels = c("pJan", "pFeb", "pMar", "pApr", "pMay", "pJun", "pJul", "pAug", "pSep", "pOct", "pNov", "pDec", "Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec", "pfall", "winter", "spring", "summer", "grow.seas"))#
#
all.sites.climate$Site <- factor(all.sites.climate$Site, levels = c("Missouri", "MMF", "Oak_openings", "Harvard", "Howland"))#
#
pdf("figures/site_correlations_allmonths_short.pdf", width= 13, height = 8.5)#
ggplot(data=all.sites.climate[all.sites.climate$month %in% c("pOct", "pNov", "pDec", "Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec", "spring", "summer", "pfall", "winter", "grow.seas"),]) + facet_grid(Site ~ type ) +#
	geom_bar(aes(x=month, y=cor, fill=sig), stat="identity", position="dodge", colour="black") +#
	geom_hline(yintercept=0.2245, linetype="dashed") + #
	geom_hline(yintercept=-0.2245, linetype="dashed") + 	#
	geom_hline(yintercept=0, linetype="solid") +#
	scale_fill_manual(values= c("green", "grey50"))+#
	theme(axis.text.x = element_text(angle = 45, hjust = 1))#
dev.off()#
#
summary(all.sites.climate$month)#
#
all.sites.gs <- all.sites.climate[all.sites.climate$month=="grow.seas",]#
summary(all.sites.gs)#
#
cbbPalette <- c("#009E73", "#e79f00", "#9ad0f3", "#0072B2", "#D55E00")#
#
all.sites.climate$type <- factor(all.sites.climate$type, levels=c("tmean", "precip", "tmin", "tmax"))#
pdf("figures/site_correlations_growing season.pdf", width= 13, height = 8.5)#
ggplot(data=all.sites.climate[all.sites.climate$month %in% "grow.seas" & all.sites.climate$type %in% c("tmean", "precip"),]) + facet_grid(~type) +#
  geom_bar(aes(x=month, y=cor, color=Site), stat="identity", position="dodge", fill=NA) + ylim(-0.6,0.6)+#
  geom_bar(aes(x=month, y=cor, color=Site), stat="identity", position="dodge", fill=NA) +ylim(-0.6,0.6)+#
  geom_bar(aes(x=month, y=cor, fill=Site, alpha=sig), stat="identity", position="dodge") +ylim(-0.6,0.6)+#
  geom_hline(yintercept=0.2245, linetype="dashed") + #
  geom_hline(yintercept=-0.2245, linetype="dashed") + 	#
  geom_hline(yintercept=0, linetype="solid") +#
 # scale_fill_manual(values= cbbPalette)+#
  scale_color_manual(values=cbbPalette) +#
  scale_fill_manual(values=cbbPalette) +#
  scale_alpha_manual(values = c(1, 0.2))+#
  poster.theme2 +#
  theme(axis.text.x = element_text(angle = 45, hjust = 1),panel.grid.major=element_blank(), panel.grid.minor= element_blank(), panel.border= element_blank(), panel.background= element_blank()) +#
  labs(title= "TR Site Climate Correlations", x="Seasons", y=expression(bold(paste("Correlation Value (r)"))))#
#
dev.off()#
#
#################################################################################
# Running correlations on the individual indices to get the full spread of the #
#################################################################################
#
all.sites.gs <- all.sites.climate[all.sites.climate$month=="grow.seas",]#
summary(all.sites.gs)#
#
all.sites.gs$State <- recode(all.sites.gs$Site, "'Missouri'='MO';'MMF'='IN';'Oak_openings'='OH';'Harvard'='MA';'Howland'='ME'")#
all.sites.gs$series <- as.factor("chron")#
summary(all.sites.gs)#
#
summary(climate.site$Howland[,])#
head(sites.i$Howland)#
#
summary(sites.i)#
index.cor.temp <- sites.i#
index.cor.precip <- sites.i#
#
test <- sites.i#
meow <- test#
#
# Running correlations fro Tmean and Precip on individual indices#
for(s in names(sites.i)){#
	for(i in names(sites.i[[s]])){#
		index.cor.temp[[s]][,i] <- cor(sites.i[[s]][,i], climate.site[[s]][,"tmean"], method="pearson")#
	}#
}	#
#
test <- cor(sites.i[["Harvard"]][,c(1:10)], climate.site[["Harvard"]][,"tmean"], method="pearson")#
summary(index.cor.temp)#
head(index.cor.temp[[1]]) #
#
for(s in names(sites.i)){#
	for(i in names(sites.i[[s]])){#
		index.cor.precip[[s]][,i] <- cor(sites.i[[s]][,i], climate.site[[s]][,"precip"], method="pearson") #
	}#
}	#
summary(index.cor.precip)#
#
# Now need to merge everything into one stacked file to be used with ggplot 2#
#
test <- data.frame()#
#
# Need to break it down by site#
#
# Harvard#
har.precip.stack <- stack(index.cor.precip[["Harvard"]])#
names(har.precip.stack)<- c("cor", "TreeID")#
har.precip.stack$State <- as.factor("MA")#
har.precip.stack$type <- as.factor("precip")#
summary(har.precip.stack)#
#
har.temp.stack <- stack(index.cor.temp[["Harvard"]])#
names(har.temp.stack)<- c("cor", "TreeID")#
har.temp.stack$State <- as.factor("MA")#
har.temp.stack$type <- as.factor("tmean")#
summary(har.temp.stack)#
#
har.stack <- merge(har.temp.stack, har.precip.stack, all.x=T, all.y=T)#
summary(har.stack)#
#
# Howland#
#
how.precip.stack <- stack(index.cor.precip[["Howland"]])#
names(how.precip.stack)<- c("cor", "TreeID")#
how.precip.stack$State <- as.factor("ME")#
how.precip.stack$type <- as.factor("precip")#
summary(how.precip.stack)#
#
how.temp.stack <- stack(index.cor.temp[["Howland"]])#
names(how.temp.stack)<- c("cor", "TreeID")#
how.temp.stack$State <- as.factor("ME")#
how.temp.stack$type <- as.factor("tmean")#
summary(how.temp.stack)#
#
how.stack <- merge(how.temp.stack, how.precip.stack, all.x=T, all.y=T)#
summary(how.stack)#
#
# Missouri#
#
mo.precip.stack <- stack(index.cor.precip[["Missouri Ozark"]])#
names(mo.precip.stack)<- c("cor", "TreeID")#
mo.precip.stack$State <- as.factor("MO")#
mo.precip.stack$type <- as.factor("precip")#
summary(mo.precip.stack)#
#
mo.temp.stack <- stack(index.cor.temp[["Missouri Ozark"]])#
names(mo.temp.stack)<- c("cor", "TreeID")#
mo.temp.stack$State <- as.factor("MO")#
mo.temp.stack$type <- as.factor("tmean")#
summary(mo.temp.stack)#
#
mo.stack <- merge(mo.temp.stack, mo.precip.stack, all.x=T, all.y=T)#
summary(mo.stack)#
# MMF#
#
mmf.precip.stack <- stack(index.cor.precip[["Morgan Monroe State Park"]])#
names(mmf.precip.stack)<- c("cor", "TreeID")#
mmf.precip.stack$State <- as.factor("IN")#
mmf.precip.stack$type <- as.factor("precip")#
summary(mmf.precip.stack)#
#
mmf.temp.stack <- stack(index.cor.temp[["Morgan Monroe State Park"]])#
names(mmf.temp.stack)<- c("cor", "TreeID")#
mmf.temp.stack$State <- as.factor("IN")#
mmf.temp.stack$type <- as.factor("tmean")#
summary(mmf.temp.stack)#
#
mmf.stack <- merge(mmf.temp.stack, mmf.precip.stack, all.x=T, all.y=T)#
summary(mmf.stack)#
# Oak Openings#
#
oak.precip.stack <- stack(index.cor.precip[["Oak Openings Toledo"]])#
names(oak.precip.stack)<- c("cor", "TreeID")#
oak.precip.stack$State <- as.factor("OH")#
oak.precip.stack$type <- as.factor("precip")#
summary(oak.precip.stack)#
#
oak.temp.stack <- stack(index.cor.temp[["Oak Openings Toledo"]])#
names(oak.temp.stack)<- c("cor", "TreeID")#
oak.temp.stack$State <- as.factor("OH")#
oak.temp.stack$type <- as.factor("tmean")#
summary(oak.temp.stack)#
#
oak.stack <- merge(oak.temp.stack, oak.precip.stack, all.x=T, all.y=T)#
summary(oak.stack)#
#
cor.all.stack <- rbind(har.stack, how.stack, mmf.stack, oak.stack, mo.stack)#
summary(cor.all.stack)#
#
# Calculating Tukey Biweight Robust mean#
#
for(s in unique(cor.all.stack$State)){#
	for(t in unique(cor.all.stack$type)){#
	cor.all.stack[cor.all.stack$State==s & cor.all.stack$type==t,"biweight.mean"] <- TukeyBiweight(cor.all.stack[cor.all.stack$State==s & cor.all.stack$type==t,"cor"], na.rm=T)#
	}#
}#
summary(cor.all.stack)#
#
# creating a significance column#
cor.all.stack$sig <- ifelse(cor.all.stack$cor < -0.2245 | cor.all.stack$cor > 0.2245, "Y", "N")#
cor.all.stack$sig <- factor(cor.all.stack$sig, levels = c("Y", "N"))#
#
cor.all.stack$State <- factor(cor.all.stack$State, levels=c("MO", "IN", "OH", "MA", "ME"))#
summary(cor.all.stack)#
#
cor.all.stack$type <- factor(cor.all.stack$type, levels = c("precip", "tmean"))#
cor.all.stack$series <- as.factor("index")#
#
summary(all.sites.gs)#
summary(cor.all.stack[is.na(cor.all.stack$cor),])#
#
pdf("figures/violin_climate_cor.pdf", height=8, width=13)#
ggplot(data=cor.all.stack) + facet_grid(~type)+#
#
	geom_violin(aes(x=State, y=cor, fill=State), adjust = 2, trim=T) + ylim(-0.6,0.6)+#
	geom_point(data=all.sites.gs[all.sites.gs$type %in% c("precip", "tmean"),],aes(x=State, y=cor), shape=126, size=25)+ ylim(-0.6,0.6)+#
	geom_point(aes(x=State, y=biweight.mean), shape=95, size=25)+ ylim(-0.6,0.6)+#
	geom_hline(yintercept=0.2245, linetype="dashed") + #
  	geom_hline(yintercept=-0.2245, linetype="dashed") + 	#
  	geom_hline(yintercept=0, linetype="solid") +#
#
	scale_color_manual(values=cbbPalette) +#
  	scale_fill_manual(values=cbbPalette) +#
  	poster.theme2 +#
  	theme(axis.text.x = element_text(angle = 45, hjust = 1),panel.grid.major=element_blank(), panel.grid.minor= 	element_blank(), panel.border= element_blank(), panel.background= element_blank()) +#
  	labs(title= "TR Index Climate Correlations", x="State", y=expression(bold(paste("Correlation Value (r)"))))#
dev.off()
ggplot(data=cor.all.stack) + facet_grid(~type)+#
#
	geom_violin(aes(x=State, y=cor, fill=State), adjust = 2, trim=T) + ylim(-0.6,0.6)+#
	geom_point(data=all.sites.gs[all.sites.gs$type %in% c("precip", "tmean"),],aes(x=State, y=cor), shape=126, size=25)+ ylim(-0.6,0.6)+#
	geom_point(aes(x=State, y=biweight.mean), shape=95, size=25)+ ylim(-0.6,0.6)+#
	geom_hline(yintercept=0.2245, linetype="dashed") + #
  	geom_hline(yintercept=-0.2245, linetype="dashed") + 	#
  	geom_hline(yintercept=0, linetype="solid") +#
#
	scale_color_manual(values=cbbPalette) +#
  	scale_fill_manual(values=cbbPalette) +#
  	poster.theme2 +#
  	theme(axis.text.x = element_text(angle = 45, hjust = 1),panel.grid.major=element_blank(), panel.grid.minor= 	element_blank(), panel.border= element_blank(), panel.background= element_blank()) +#
  	labs(title= "TR Index Climate Correlations", x="State", y=expression(bold(paste("Correlation Value (r)"))))
summary(cor.all.stack)
summary(index.cor.temp)
head(index.cor.temp[[1]])
ncol(index.cor.temp[[1]])
ncol(index.cor.temp[[1]], na.rm=T)
ncol(index.cor.temp[[1]][,is.na(index.cor.temp[[1]])])
is.na(index.cor.temp[[1]]
is.na(index.cor.temp[[1]])
length(is.na(index.cor.temp[[1]])])
length(is.na(index.cor.temp[[1]]))
ncol(is.na(index.cor.temp[[1]]))
10920/78
summary(index.cor.temp)
library(mgcv)#
library(ggplot2)#
library(car)#
library(reshape)#
library(dplR)#
library(DescTools)#
# Christy's GAMM code#
#
# gam1 <- gamm(Y ~  s(Biomass, bs="cr", k=3, by=PFT) + s(tair, k=k, by=PFT) + s(precipf, k=k, by=PFT) + s(CO2, k=k, by=PFT), random=list(PlotID=~1), data=data) #
#
# Loading in my data#
#
data.use <- read.csv("processed_data/AllSites_tree_plus_climate_and_BA.csv", header=T)#
#
data.use$group <- data.use$Species#
data.use$group <- recode(data.use$group, "'CAOV' = 'CARYA'; 'CACO' = 'CARYA'; #
  							'CATE' = 'CARYA'; 'ACSAC' = 'ACSA'; 'BEAL' = 'BETULA'; 'BELE' = 'BETULA'; 'QUMU' = 'QUAL'")#
#
data.use$group.plot <- as.factor(paste(data.use$group, data.use$PlotID, sep="."))#
#
data.use$Canopy.Class <- recode(data.use$Canopy.Class, "'C' = 'D'")#
summary(data.use)
# reducing the amount of data for the test runs#
sites.use <- c("Harvard", "Howland", "Morgan Monroe State Park", "Oak Openings Toledo", "Missouri Ozark")#
#
test <- data.use[data.use$Site %in% sites.use & !is.na(data.use$RW) & !is.na(data.use$BA.inc),]#
summary(test)#
#
test$group.cc <- as.factor(paste(test$group, test$Canopy.Class, sep="."))#
summary(test)#
# Get a list of what predictors & responses I'm using#
predictors.all <- c("tmean", "precip", "Species", "dbh.recon", "Canopy.Class", "spp.plot", "group", "group.plot", "group.cc")#
#
# Getting rid of observations that have NAs in the important variables#
test <- test[complete.cases(test[,predictors.all]),]#
test <- test[test$Live.Dead=="LIVE" & !test$Canopy.Class=="F",]#
#
# Subsetting to a set of species that we have enough data to feel good about#
#species.use <- c("TSCA", "QURU", "ACRU", "BEAL", "ACSA", "LITU", "QUAL", "CAOV", "CACO", "CATE", "JUVI", "QUVE", "PCRU", "THOC", "PIST")#
group.use <- c("ACRU", "ACSA", "BETULA", "CARYA", "FAGR", "FRAX", "PIST", "QUAL", "QURU", "QUVE", "SAAL", "TSCA", "ULRU")#
#
test <- test[test$group %in% group.use,]
summary(test)
test <- test[test$Canopy.Class=="D"]
test <- test[test$Canopy.Class=="D",]
par(new=F)#
plot(test[test$TreeID=="MMA003", "BA.inc"]~ test[test$TreeID=="MMA003","Year"], type="l")#
summary(test)#
# Truncatign at 1935; at 1935 the sample depth for the oak openings is only 1#
test <- test[test$Year >= 1935 & test$Year <= 2012,]#
#
tree.rw <- test#
summary(tree.rw)#
#
summary(test)#
save(test, file="processed_data/test_tree_data_1935_2012.Rdata")#
#
sites.rw <- list()#
#
tree.rw$Year <- as.factor(tree.rw$Year)#
#
for(s in unique(tree.rw$Site)){#
	sites.rw[[s]] <- recast(tree.rw[tree.rw$Site==s,c("Year", "TreeID", "RW")], Year ~ TreeID)	#
}#
summary(sites.rw)#
#
save(sites.rw, file="processed_data/sites_rw.Rdata")#
summary(sites.rw[[4]])#
sites.rw#
# Making Indices of all the different sites using a 30 yr cubic smoothing spline#
sites.i <- list()#
#
for(s in names(sites.rw)){#
	sites.i[[s]] <- detrend(sites.rw[[s]][,2:ncol(sites.rw[[s]])], method="Spline", nyr=30)#
}#
summary(sites.i[[1]])#
#
# making chronologies for each site#
#
site.chron <- list()#
#
for(s in names(sites.i)){#
	site.chron[[s]] <- chron(sites.i[[s]][,2:ncol(sites.i[[s]])], prefix = substr(s, 1, 3), prewhiten = T) #
	site.chron[[s]][,"Year"]<- c(1935:2012) #
}#
#
summary(site.chron[[5]])#
# Making each site it's own dataframe#
harvard.crn <- as.data.frame(site.chron[[1]])#
#
howland.crn <- as.data.frame(site.chron[[2]])#
#
misso.crn <- as.data.frame(site.chron[[3]])#
#
mmf.crn <- as.data.frame(site.chron[[4]])#
#
oakop.crn <- as.data.frame(site.chron[[5]])#
# Plotting thigns for presentation#
par(cex=2 )#
plot(mmf.crn$Morres ~ mmf.crn$Year, type="l", lwd=5, axes=F, cex=6, col="white")#
abline(h=1,lty="dashed", col="white")#
axis(side =1,tck= 0.05) #
axis(side=2,tck=0.05)#
#
#Plotting out mmfsites#
summary(test)#
#
mmf <- test[test$Site %in% "Morgan Monroe State Park",]#
#
summary(mmf)#
#
for(i in unique(mmf$Year)){#
  mmf[mmf$Year==i,"Mean"] <- mean(mmf[mmf$Year==i,"RW"])#
  mmf[mmf$Year==i,"UB"] <- quantile(mmf[mmf$Year==i,"RW"], 0.975)#
  mmf[mmf$Year==i,"LB"] <- quantile(mmf[mmf$Year==i,"RW"], 0.025)#
}#
#
summary(mmf)#
#
ggplot(data=mmf)+#
  # geom_line(aes(x=Year, y=RW))#
  geom_ribbon(aes(x=Year, ymin=LB, ymax=UB), alpha=0.5, fill="white")+#
  geom_line(aes(x=Year, y=Mean), size=2, color="white")+#
  poster.theme2#
# Merging the residual chronologies back together#
sites.crn <- data.frame(Harvard = harvard.crn[, "Harres"], #
						Howland = howland.crn[,"Howres"], #
						Missouri = misso.crn[,"Misres"],#
						Morgan_Monroe = mmf.crn[,"Morres"], #
						Oak_openings = oakop.crn[,"Oakres"]#
						)#
#
summary(sites.crn)#
# Load in climate data#
#
climate.use <- read.csv("processed_data/climate_growing_season.csv")#
#
summary(climate.use)#
#
climate.use <- climate.use[climate.use$Site %in% sites.use,]#
climate.use <- climate.use[climate.use$Year>=1935 & climate.use$Year <=2012,]#
#
climate.site <- list()#
#
for(s in unique(climate.use$Site)){#
	climate.site[[s]] <- climate.use[climate.use$Site==s,]#
}#
#
summary(climate.site)#
save(climate.site, file="processed_data/sites_use_climate.Rdata")#
class(climate.site[[1]][,"Year"])#
#
head(climate.site[[1]])#
#
summary(climate.site[[1]])#
#
harv.clim <- climate.site[["Harvard"]][,c("tmean", "precip")]#
#
how.clim <- climate.site[["Howland"]][,c("tmean", "precip")]#
#
miss.clim <- climate.site[["Missouri Ozark"]][,c("tmean", "precip")]#
#
mmf.clim <- climate.site[["Morgan Monroe State Park"]][,c("tmean", "precip")]#
#
oak.clim <- climate.site[["Oak Openings Toledo"]][,c("tmean", "precip")]#
dim(harv.clim)#
dim(harvard.crn)#
#
# harvard#
harv.cor<- cor(harvard.crn, harv.clim[,c("tmean", "precip")], method="pearson")#
harvard <- data.frame(cor = c(harv.cor[1:2,"tmean"],  harv.cor[1:2,"precip"]),#
					  var = c("tmean", "tmean", "precip", "precip"))#
harvard$type <- c("std", "res")#
harvard$site <- "Harvard" #
# Howland#
how.cor <- cor(howland.crn, how.clim[,c("tmean", "precip")], method="pearson")#
how.cor#
#
howland <- data.frame(cor = c(how.cor[1:2,"tmean"],  how.cor[1:2,"precip"]),#
					  var = c("tmean", "tmean", "precip", "precip"))#
howland$type <- c("std", "res")#
howland$site <- "Howland" #
# Missouri#
mo.cor <- cor(misso.crn, miss.clim[,c("tmean", "precip")], method="pearson")#
mo.cor#
#
missouri <- data.frame(cor = c(mo.cor[1:2,"tmean"],  mo.cor[1:2,"precip"]),#
					  var = c("tmean", "tmean", "precip", "precip"))#
missouri$type <- c("std", "res")#
missouri$site <- "Missouri" #
#
# Morgan Monroe#
mmf.cor <- cor(mmf.crn, mmf.clim[,c("tmean", "precip")], method="pearson")#
mmf.cor#
#
morgan <- data.frame(cor = c(mmf.cor[1:2,"tmean"],  mmf.cor[1:2,"precip"]),#
					  var = c("tmean", "tmean", "precip", "precip"))#
morgan$type <- c("std", "res")#
morgan$site <- "Morgan-Monroe" #
#
# Oak openings#
oakop.cor <- cor(oakop.crn, oak.clim[,c("tmean", "precip")], method="pearson")#
oakop.cor#
#
oakop <- data.frame(cor = c(oakop.cor[1:2,"tmean"],  oakop.cor[1:2,"precip"]),#
					  var = c("tmean", "tmean", "precip", "precip"))#
oakop$type <- c("std", "res")#
oakop$site <- "Oak-Openings" #
#
# Merging standard chronologies into one file#
#
clim.cor <- merge(harvard, howland, all.x=T, all.y=T)#
clim.cor2 <- merge(clim.cor, missouri,all.x=T, all.y=T)#
clim.cor3 <- merge(clim.cor2, morgan,all.x=T, all.y=T)#
clim.cor4 <- merge(clim.cor3, oakop,all.x=T, all.y=T)#
#
summary(clim.cor4)#
clim.cor4$site <- as.factor(clim.cor4$site)#
clim.cor4$type <- as.factor(clim.cor4$type)#
clim.cor4$cor <- as.numeric(clim.cor4$cor)#
#
# Sig value for 81 df = 0.209#
clim.cor4$sig <- ifelse(clim.cor4$cor < -0.2245 | clim.cor4$cor > 0.2245, "Y", "N")#
clim.cor4$sig <- factor(clim.cor4$sig, levels = c("Y", "N"))#
#
clim.cor4$site <- factor(clim.cor4$site, levels = c("Missouri", "Morgan-Monroe", "Oak-Openings", "Harvard", "Howland"))#
#
clim.cor4$Site <- clim.cor4$site#
clim.cor4$Site <- recode(clim.cor4$Site, "'Missouri' = 'MO'; 'Morgan-Monroe' = 'IN'; 'Oak-Openings' = 'OH'; 'Harvard' = 'MA'; 'Howland' = 'ME'")#
clim.cor4$Site <- factor(clim.cor4$Site, levels = c("MO", "IN", "OH", "MA", "ME"))#
pdf("figures/site_correlations.pdf", width= 13, height = 8.5)#
ggplot(data=clim.cor4[clim.cor4$type=="std",]) + facet_grid(var~. , scales="free_x") +#
	geom_bar(aes(x=Site, y=cor, fill=sig), stat="identity", position="dodge", colour="black") +#
	geom_hline(yintercept=0.2245, linetype="dashed") + #
	geom_hline(yintercept=-0.2245, linetype="dashed") + 	#
	geom_hline(yintercept=0, linetype="solid") +#
	scale_fill_manual(values= c("green", "grey50")) + #
	poster.theme2#
dev.off()#
#
#######################################################################
# Gettign correlations for all for all of the available climate data data#
#######################################################################
# Loading in climate data#
t.mean <- read.csv("processed_data/ch2_tmean.csv", header=T)#
t.min <- read.csv("processed_data/ch2_tmin.csv", header=T)#
t.max <- read.csv("processed_data/ch2_tmax.csv", header=T)#
precip <- read.csv("processed_data/ch2_precip.csv", header=T)#
summary(t.mean)#
#
# Limiting time frame--1935-2012#
t.mean <- t.mean[t.mean$Year >= 1936 & t.mean$Year <= 2012,]#
t.min <- t.min[t.min$Year >= 1936 & t.min$Year <= 2012,]#
t.max <- t.max[t.max$Year >= 1936 & t.max$Year <= 2012,]#
precip <- precip[precip$Year >= 1936 & precip$Year <= 2012,]#
summary(t.mean)#
summary(t.min)#
summary(t.max)#
summary(precip)#
#
head(t.mean)#
unique(t.mean$Site.Name)#
#
t.mean$Site.Name <- recode(t.mean$Site.Name, "'Missouri Ozark' = 'Missouri'; 'Morgan Monroe State Park'='Morgan_Monroe'; 'Oak Openings Toledo' = 'Oak_openings'")#
#
t.min$Site.Name <- recode(t.min$Site.Name, "'Missouri Ozark' = 'Missouri'; 'Morgan Monroe State Park'='Morgan_Monroe'; 'Oak Openings Toledo' = 'Oak_openings'")#
t.max$Site.Name <- recode(t.max$Site.Name, "'Missouri Ozark' = 'Missouri'; 'Morgan Monroe State Park'='Morgan_Monroe'; 'Oak Openings Toledo' = 'Oak_openings'")#
precip$Site.Name <- recode(precip$Site.Name, "'Missouri Ozark' = 'Missouri'; 'Morgan Monroe State Park'='Morgan_Monroe'; 'Oak Openings Toledo' = 'Oak_openings'")#
# getting the ring widths in a data frame#
summary(sites.crn)#
sites.crn$Year <- site.chron[[1]][,"Year"]#
head(sites.crn)#
sites.crn <- sites.crn[sites.crn$Year > 1935,]#
#--------------------------------------------#
# Tmean correlation#
#--------------------------------------------#
#
sites <- c("Harvard", "Howland", "Missouri", "Morgan_Monroe", "Oak_openings")#
#
tmean.corr<-list()#
#
for(i in sites){#
	tmean.corr[[i]] <- cor(sites.crn[,i], t.mean[t.mean$Site.Name %in% i,!names(t.mean) %in% c("Site.Name", "Year")], method="pearson")#
}#
summary(tmean.corr)#
#
# Making each site it's own dataframe#
harvard.tmean <- as.data.frame(tmean.corr[[1]])#
#
harvard.tmean.stack <- stack(harvard.tmean)#
names(harvard.tmean.stack)<- c("cor", "month")#
harvard.tmean.stack$Site <- as.factor("Harvard")#
harvard.tmean.stack$type <- as.factor("tmean")#
#
howland.tmean <- as.data.frame(tmean.corr[[2]])#
#
howland.tmean.stack <- stack(howland.tmean)#
names(howland.tmean.stack)<- c("cor", "month")#
howland.tmean.stack$Site <- as.factor("Howland")#
howland.tmean.stack$type <- as.factor("tmean")#
#
mo.tmean <- as.data.frame(tmean.corr[[3]])#
#
mo.tmean.stack <- stack(mo.tmean)#
names(mo.tmean.stack)<- c("cor", "month")#
mo.tmean.stack$Site <- as.factor("Missouri")#
mo.tmean.stack$type <- as.factor("tmean")#
#
mmf.tmean <- as.data.frame(tmean.corr[[4]])#
#
mmf.tmean.stack <- stack(mmf.tmean)#
names(mmf.tmean.stack)<- c("cor", "month")#
mmf.tmean.stack$Site <- as.factor("MMF")#
mmf.tmean.stack$type <- as.factor("tmean")#
#
oakop.tmean <- as.data.frame(tmean.corr[[5]])#
#
oakop.tmean.stack <- stack(oakop.tmean)#
names(oakop.tmean.stack)<- c("cor", "month")#
oakop.tmean.stack$Site <- as.factor("Oak_openings")#
oakop.tmean.stack$type <- as.factor("tmean")#
#
all.sites.tmean <- rbind(harvard.tmean.stack, howland.tmean.stack, mo.tmean.stack, mmf.tmean.stack, oakop.tmean.stack)#
#
summary(all.sites.tmean)#
#
#--------------------------------------------#
# Tmin correlation#
#--------------------------------------------#
#
sites <- c("Harvard", "Howland", "Missouri", "Morgan_Monroe", "Oak_openings")#
#
tmin.corr<-list()#
#
for(i in sites){#
	tmin.corr[[i]] <- cor(sites.crn[,i], t.min[t.min$Site.Name %in% i,!names(t.min) %in% c("Site.Name", "Year")], method="pearson")#
}#
summary(tmin.corr)#
#
# Making each site it's own dataframe#
harvard.tmin <- as.data.frame(tmin.corr[[1]])#
#
harvard.tmin.stack <- stack(harvard.tmin)#
names(harvard.tmin.stack)<- c("cor", "month")#
harvard.tmin.stack$Site <- as.factor("Harvard")#
harvard.tmin.stack$type <- as.factor("tmin")#
#
howland.tmin <- as.data.frame(tmin.corr[[2]])#
#
howland.tmin.stack <- stack(howland.tmin)#
names(howland.tmin.stack)<- c("cor", "month")#
howland.tmin.stack$Site <- as.factor("Howland")#
howland.tmin.stack$type <- as.factor("tmin")#
#
mo.tmin <- as.data.frame(tmin.corr[[3]])#
#
mo.tmin.stack <- stack(mo.tmin)#
names(mo.tmin.stack)<- c("cor", "month")#
mo.tmin.stack$Site <- as.factor("Missouri")#
mo.tmin.stack$type <- as.factor("tmin")#
#
mmf.tmin <- as.data.frame(tmin.corr[[4]])#
#
mmf.tmin.stack <- stack(mmf.tmin)#
names(mmf.tmin.stack)<- c("cor", "month")#
mmf.tmin.stack$Site <- as.factor("MMF")#
mmf.tmin.stack$type <- as.factor("tmin")#
#
oakop.tmin <- as.data.frame(tmin.corr[[5]])#
#
oakop.tmin.stack <- stack(oakop.tmin)#
names(oakop.tmin.stack)<- c("cor", "month")#
oakop.tmin.stack$Site <- as.factor("Oak_openings")#
oakop.tmin.stack$type <- as.factor("tmin")#
#
all.sites.tmin <- rbind(harvard.tmin.stack, howland.tmin.stack, mo.tmin.stack, mmf.tmin.stack, oakop.tmin.stack)#
#
summary(all.sites.tmin)#
#--------------------------------------------#
# Tmax correlation#
#--------------------------------------------#
#
sites <- c("Harvard", "Howland", "Missouri", "Morgan_Monroe", "Oak_openings")#
#
tmax.corr<-list()#
#
for(i in sites){#
	tmax.corr[[i]] <- cor(sites.crn[,i], t.max[t.max$Site.Name %in% i,!names(t.max) %in% c("Site.Name", "Year")], method="pearson")#
}#
summary(tmax.corr)#
#
# Making each site it's own dataframe#
harvard.tmax <- as.data.frame(tmax.corr[[1]])#
#
harvard.tmax.stack <- stack(harvard.tmax)#
names(harvard.tmax.stack)<- c("cor", "month")#
harvard.tmax.stack$Site <- as.factor("Harvard")#
harvard.tmax.stack$type <- as.factor("tmax")#
#
howland.tmax <- as.data.frame(tmax.corr[[2]])#
#
howland.tmax.stack <- stack(howland.tmax)#
names(howland.tmax.stack)<- c("cor", "month")#
howland.tmax.stack$Site <- as.factor("Howland")#
howland.tmax.stack$type <- as.factor("tmax")#
#
mo.tmax <- as.data.frame(tmax.corr[[3]])#
#
mo.tmax.stack <- stack(mo.tmax)#
names(mo.tmax.stack)<- c("cor", "month")#
mo.tmax.stack$Site <- as.factor("Missouri")#
mo.tmax.stack$type <- as.factor("tmax")#
#
mmf.tmax <- as.data.frame(tmax.corr[[4]])#
#
mmf.tmax.stack <- stack(mmf.tmax)#
names(mmf.tmax.stack)<- c("cor", "month")#
mmf.tmax.stack$Site <- as.factor("MMF")#
mmf.tmax.stack$type <- as.factor("tmax")#
#
oakop.tmax <- as.data.frame(tmax.corr[[5]])#
#
oakop.tmax.stack <- stack(oakop.tmax)#
names(oakop.tmax.stack)<- c("cor", "month")#
oakop.tmax.stack$Site <- as.factor("Oak_openings")#
oakop.tmax.stack$type <- as.factor("tmax")#
#
all.sites.tmax <- rbind(harvard.tmax.stack, howland.tmax.stack, mo.tmax.stack, mmf.tmax.stack, oakop.tmax.stack)#
#
summary(all.sites.tmax)#
#--------------------------------------------#
# Precip correlation#
#--------------------------------------------#
sites <- c("Harvard", "Howland", "Missouri", "Morgan_Monroe", "Oak_openings")#
#
precip.corr<-list()#
#
for(i in sites){#
	precip.corr[[i]] <- cor(sites.crn[,i], precip[precip$Site.Name %in% i,!names(precip) %in% c("Site.Name", "Year")], method="pearson")#
}#
summary(precip.corr)#
#
# Making each site it's own dataframe#
harvard.precip <- as.data.frame(precip.corr[[1]])#
#
harvard.precip.stack <- stack(harvard.precip)#
names(harvard.precip.stack)<- c("cor", "month")#
harvard.precip.stack$Site <- as.factor("Harvard")#
harvard.precip.stack$type <- as.factor("precip")#
#
howland.precip <- as.data.frame(precip.corr[[2]])#
#
howland.precip.stack <- stack(howland.precip)#
names(howland.precip.stack)<- c("cor", "month")#
howland.precip.stack$Site <- as.factor("Howland")#
howland.precip.stack$type <- as.factor("precip")#
#
mo.precip <- as.data.frame(precip.corr[[3]])#
#
mo.precip.stack <- stack(mo.precip)#
names(mo.precip.stack)<- c("cor", "month")#
mo.precip.stack$Site <- as.factor("Missouri")#
mo.precip.stack$type <- as.factor("precip")#
#
mmf.precip <- as.data.frame(precip.corr[[4]])#
#
mmf.precip.stack <- stack(mmf.precip)#
names(mmf.precip.stack)<- c("cor", "month")#
mmf.precip.stack$Site <- as.factor("MMF")#
mmf.precip.stack$type <- as.factor("precip")#
#
oakop.precip <- as.data.frame(precip.corr[[5]])#
#
oakop.precip.stack <- stack(oakop.precip)#
names(oakop.precip.stack)<- c("cor", "month")#
oakop.precip.stack$Site <- as.factor("Oak_openings")#
oakop.precip.stack$type <- as.factor("precip")#
#
all.sites.precip <- rbind(harvard.precip.stack, howland.precip.stack, mo.precip.stack, mmf.precip.stack, oakop.precip.stack)#
#
summary(all.sites.precip)#
#
# Merging all stacked dataframes together to make plotting easier#
#
all.sites.climate <- rbind(all.sites.precip, all.sites.tmax, all.sites.tmin, all.sites.tmean)#
summary(all.sites.climate)#
#
# Sig value for 75 df = 0.2245#
all.sites.climate$sig <- ifelse(all.sites.climate$cor < -0.2245 | all.sites.climate$cor > 0.2245, "Y", "N")#
all.sites.climate$sig <- factor(all.sites.climate$sig, levels = c("Y", "N"))#
all.sites.climate$month <- factor(all.sites.climate$month, levels = c("pJan", "pFeb", "pMar", "pApr", "pMay", "pJun", "pJul", "pAug", "pSep", "pOct", "pNov", "pDec", "Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec", "pfall", "winter", "spring", "summer", "grow.seas"))#
#
all.sites.climate$Site <- factor(all.sites.climate$Site, levels = c("Missouri", "MMF", "Oak_openings", "Harvard", "Howland"))#
#
pdf("figures/site_correlations_allmonths_short.pdf", width= 13, height = 8.5)#
ggplot(data=all.sites.climate[all.sites.climate$month %in% c("pOct", "pNov", "pDec", "Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec", "spring", "summer", "pfall", "winter", "grow.seas"),]) + facet_grid(Site ~ type ) +#
	geom_bar(aes(x=month, y=cor, fill=sig), stat="identity", position="dodge", colour="black") +#
	geom_hline(yintercept=0.2245, linetype="dashed") + #
	geom_hline(yintercept=-0.2245, linetype="dashed") + 	#
	geom_hline(yintercept=0, linetype="solid") +#
	scale_fill_manual(values= c("green", "grey50"))+#
	theme(axis.text.x = element_text(angle = 45, hjust = 1))#
dev.off()#
#
summary(all.sites.climate$month)#
#
all.sites.gs <- all.sites.climate[all.sites.climate$month=="grow.seas",]#
summary(all.sites.gs)#
#
cbbPalette <- c("#009E73", "#e79f00", "#9ad0f3", "#0072B2", "#D55E00")#
#
all.sites.climate$type <- factor(all.sites.climate$type, levels=c("tmean", "precip", "tmin", "tmax"))#
pdf("figures/site_correlations_growing season.pdf", width= 13, height = 8.5)#
ggplot(data=all.sites.climate[all.sites.climate$month %in% "grow.seas" & all.sites.climate$type %in% c("tmean", "precip"),]) + facet_grid(~type) +#
  geom_bar(aes(x=month, y=cor, color=Site), stat="identity", position="dodge", fill=NA) + ylim(-0.6,0.6)+#
  geom_bar(aes(x=month, y=cor, color=Site), stat="identity", position="dodge", fill=NA) +ylim(-0.6,0.6)+#
  geom_bar(aes(x=month, y=cor, fill=Site, alpha=sig), stat="identity", position="dodge") +ylim(-0.6,0.6)+#
  geom_hline(yintercept=0.2245, linetype="dashed") + #
  geom_hline(yintercept=-0.2245, linetype="dashed") + 	#
  geom_hline(yintercept=0, linetype="solid") +#
 # scale_fill_manual(values= cbbPalette)+#
  scale_color_manual(values=cbbPalette) +#
  scale_fill_manual(values=cbbPalette) +#
  scale_alpha_manual(values = c(1, 0.2))+#
  poster.theme2 +#
  theme(axis.text.x = element_text(angle = 45, hjust = 1),panel.grid.major=element_blank(), panel.grid.minor= element_blank(), panel.border= element_blank(), panel.background= element_blank()) +#
  labs(title= "TR Site Climate Correlations", x="Seasons", y=expression(bold(paste("Correlation Value (r)"))))#
#
dev.off()#
#
#################################################################################
# Running correlations on the individual indices to get the full spread of the #
#################################################################################
#
all.sites.gs <- all.sites.climate[all.sites.climate$month=="grow.seas",]#
summary(all.sites.gs)#
#
all.sites.gs$State <- recode(all.sites.gs$Site, "'Missouri'='MO';'MMF'='IN';'Oak_openings'='OH';'Harvard'='MA';'Howland'='ME'")#
all.sites.gs$series <- as.factor("chron")#
summary(all.sites.gs)#
#
summary(climate.site$Howland[,])#
head(sites.i$Howland)#
#
summary(sites.i)#
index.cor.temp <- sites.i#
index.cor.precip <- sites.i#
#
test <- sites.i#
meow <- test#
#
# Running correlations fro Tmean and Precip on individual indices#
for(s in names(sites.i)){#
	for(i in names(sites.i[[s]])){#
		index.cor.temp[[s]][,i] <- cor(sites.i[[s]][,i], climate.site[[s]][,"tmean"], method="pearson")#
	}#
}	#
#
test <- cor(sites.i[["Harvard"]][,c(1:10)], climate.site[["Harvard"]][,"tmean"], method="pearson")#
for(s in names(sites.i)){#
	for(i in names(sites.i[[s]])){#
		index.cor.precip[[s]][,i] <- cor(sites.i[[s]][,i], climate.site[[s]][,"precip"], method="pearson") #
	}#
}	#
summary(index.cor.precip)#
#
# Now need to merge everything into one stacked file to be used with ggplot 2#
#
test <- data.frame()#
#
# Need to break it down by site#
#
# Harvard#
har.precip.stack <- stack(index.cor.precip[["Harvard"]])#
names(har.precip.stack)<- c("cor", "TreeID")#
har.precip.stack$State <- as.factor("MA")#
har.precip.stack$type <- as.factor("precip")#
summary(har.precip.stack)#
#
har.temp.stack <- stack(index.cor.temp[["Harvard"]])#
names(har.temp.stack)<- c("cor", "TreeID")#
har.temp.stack$State <- as.factor("MA")#
har.temp.stack$type <- as.factor("tmean")#
summary(har.temp.stack)#
#
har.stack <- merge(har.temp.stack, har.precip.stack, all.x=T, all.y=T)#
summary(har.stack)#
#
# Howland#
#
how.precip.stack <- stack(index.cor.precip[["Howland"]])#
names(how.precip.stack)<- c("cor", "TreeID")#
how.precip.stack$State <- as.factor("ME")#
how.precip.stack$type <- as.factor("precip")#
summary(how.precip.stack)#
#
how.temp.stack <- stack(index.cor.temp[["Howland"]])#
names(how.temp.stack)<- c("cor", "TreeID")#
how.temp.stack$State <- as.factor("ME")#
how.temp.stack$type <- as.factor("tmean")#
summary(how.temp.stack)#
#
how.stack <- merge(how.temp.stack, how.precip.stack, all.x=T, all.y=T)#
summary(how.stack)#
#
# Missouri#
#
mo.precip.stack <- stack(index.cor.precip[["Missouri Ozark"]])#
names(mo.precip.stack)<- c("cor", "TreeID")#
mo.precip.stack$State <- as.factor("MO")#
mo.precip.stack$type <- as.factor("precip")#
summary(mo.precip.stack)#
#
mo.temp.stack <- stack(index.cor.temp[["Missouri Ozark"]])#
names(mo.temp.stack)<- c("cor", "TreeID")#
mo.temp.stack$State <- as.factor("MO")#
mo.temp.stack$type <- as.factor("tmean")#
summary(mo.temp.stack)#
#
mo.stack <- merge(mo.temp.stack, mo.precip.stack, all.x=T, all.y=T)#
summary(mo.stack)#
# MMF#
#
mmf.precip.stack <- stack(index.cor.precip[["Morgan Monroe State Park"]])#
names(mmf.precip.stack)<- c("cor", "TreeID")#
mmf.precip.stack$State <- as.factor("IN")#
mmf.precip.stack$type <- as.factor("precip")#
summary(mmf.precip.stack)#
#
mmf.temp.stack <- stack(index.cor.temp[["Morgan Monroe State Park"]])#
names(mmf.temp.stack)<- c("cor", "TreeID")#
mmf.temp.stack$State <- as.factor("IN")#
mmf.temp.stack$type <- as.factor("tmean")#
summary(mmf.temp.stack)#
#
mmf.stack <- merge(mmf.temp.stack, mmf.precip.stack, all.x=T, all.y=T)#
summary(mmf.stack)#
# Oak Openings#
#
oak.precip.stack <- stack(index.cor.precip[["Oak Openings Toledo"]])#
names(oak.precip.stack)<- c("cor", "TreeID")#
oak.precip.stack$State <- as.factor("OH")#
oak.precip.stack$type <- as.factor("precip")#
summary(oak.precip.stack)#
#
oak.temp.stack <- stack(index.cor.temp[["Oak Openings Toledo"]])#
names(oak.temp.stack)<- c("cor", "TreeID")#
oak.temp.stack$State <- as.factor("OH")#
oak.temp.stack$type <- as.factor("tmean")#
summary(oak.temp.stack)#
#
oak.stack <- merge(oak.temp.stack, oak.precip.stack, all.x=T, all.y=T)#
summary(oak.stack)#
#
cor.all.stack <- rbind(har.stack, how.stack, mmf.stack, oak.stack, mo.stack)#
summary(cor.all.stack)#
#
# Calculating Tukey Biweight Robust mean#
#
for(s in unique(cor.all.stack$State)){#
	for(t in unique(cor.all.stack$type)){#
	cor.all.stack[cor.all.stack$State==s & cor.all.stack$type==t,"biweight.mean"] <- TukeyBiweight(cor.all.stack[cor.all.stack$State==s & cor.all.stack$type==t,"cor"], na.rm=T)#
	}#
}#
summary(cor.all.stack)#
#
# creating a significance column#
cor.all.stack$sig <- ifelse(cor.all.stack$cor < -0.2245 | cor.all.stack$cor > 0.2245, "Y", "N")#
cor.all.stack$sig <- factor(cor.all.stack$sig, levels = c("Y", "N"))#
#
cor.all.stack$State <- factor(cor.all.stack$State, levels=c("MO", "IN", "OH", "MA", "ME"))#
summary(cor.all.stack)#
#
cor.all.stack$type <- factor(cor.all.stack$type, levels = c("precip", "tmean"))#
cor.all.stack$series <- as.factor("index")#
#
summary(all.sites.gs)#
summary(cor.all.stack)#
#
summary(cor.all.stack[is.na(cor.all.stack$cor),])#
#
pdf("figures/violin_climate_cor.pdf", height=8, width=13)#
ggplot(data=cor.all.stack) + facet_grid(~type)+#
#
	geom_violin(aes(x=State, y=cor, fill=State), adjust = 2, trim=T) + ylim(-0.6,0.6)+#
	geom_point(data=all.sites.gs[all.sites.gs$type %in% c("precip", "tmean"),],aes(x=State, y=cor), shape=126, size=25)+ ylim(-0.6,0.6)+#
	geom_point(aes(x=State, y=biweight.mean), shape=95, size=25)+ ylim(-0.6,0.6)+#
	geom_hline(yintercept=0.2245, linetype="dashed") + #
  	geom_hline(yintercept=-0.2245, linetype="dashed") + 	#
  	geom_hline(yintercept=0, linetype="solid") +#
#
	scale_color_manual(values=cbbPalette) +#
  	scale_fill_manual(values=cbbPalette) +#
  	poster.theme2 +#
  	theme(axis.text.x = element_text(angle = 45, hjust = 1),panel.grid.major=element_blank(), panel.grid.minor= 	element_blank(), panel.border= element_blank(), panel.background= element_blank()) +#
  	labs(title= "TR Index Climate Correlations", x="State", y=expression(bold(paste("Correlation Value (r)"))))#
dev.off()
ggplot(data=cor.all.stack) + facet_grid(~type)+#
#
	geom_violin(aes(x=State, y=cor, fill=State), adjust = 2, trim=T) + ylim(-0.6,0.6)+#
	geom_point(data=all.sites.gs[all.sites.gs$type %in% c("precip", "tmean"),],aes(x=State, y=cor), shape=126, size=25)+ ylim(-0.6,0.6)+#
	geom_point(aes(x=State, y=biweight.mean), shape=95, size=25)+ ylim(-0.6,0.6)+#
	geom_hline(yintercept=0.2245, linetype="dashed") + #
  	geom_hline(yintercept=-0.2245, linetype="dashed") + 	#
  	geom_hline(yintercept=0, linetype="solid") +#
#
	scale_color_manual(values=cbbPalette) +#
  	scale_fill_manual(values=cbbPalette) +#
  	poster.theme2 +#
  	theme(axis.text.x = element_text(angle = 45, hjust = 1),panel.grid.major=element_blank(), panel.grid.minor= 	element_blank(), panel.border= element_blank(), panel.background= element_blank()) +#
  	labs(title= "TR Index Climate Correlations", x="State", y=expression(bold(paste("Correlation Value (r)"))))
test <- test[test$Canopy.Class=="I",]#
#
par(new=F)#
plot(test[test$TreeID=="MMA003", "BA.inc"]~ test[test$TreeID=="MMA003","Year"], type="l")#
summary(test)#
# Truncatign at 1935; at 1935 the sample depth for the oak openings is only 1#
test <- test[test$Year >= 1935 & test$Year <= 2012,]#
#
tree.rw <- test#
summary(tree.rw)#
#
summary(test)#
save(test, file="processed_data/test_tree_data_1935_2012.Rdata")#
#
sites.rw <- list()#
#
tree.rw$Year <- as.factor(tree.rw$Year)#
#
for(s in unique(tree.rw$Site)){#
	sites.rw[[s]] <- recast(tree.rw[tree.rw$Site==s,c("Year", "TreeID", "RW")], Year ~ TreeID)	#
}#
summary(sites.rw)#
#
save(sites.rw, file="processed_data/sites_rw.Rdata")#
summary(sites.rw[[4]])#
sites.rw#
# Making Indices of all the different sites using a 30 yr cubic smoothing spline#
sites.i <- list()#
#
for(s in names(sites.rw)){#
	sites.i[[s]] <- detrend(sites.rw[[s]][,2:ncol(sites.rw[[s]])], method="Spline", nyr=30)#
}#
summary(sites.i[[1]])#
#
# making chronologies for each site#
#
site.chron <- list()#
#
for(s in names(sites.i)){#
	site.chron[[s]] <- chron(sites.i[[s]][,2:ncol(sites.i[[s]])], prefix = substr(s, 1, 3), prewhiten = T) #
	site.chron[[s]][,"Year"]<- c(1935:2012) #
}#
#
summary(site.chron[[5]])#
# Making each site it's own dataframe#
harvard.crn <- as.data.frame(site.chron[[1]])#
#
howland.crn <- as.data.frame(site.chron[[2]])#
#
misso.crn <- as.data.frame(site.chron[[3]])#
#
mmf.crn <- as.data.frame(site.chron[[4]])#
#
oakop.crn <- as.data.frame(site.chron[[5]])#
# Plotting thigns for presentation#
par(cex=2 )#
plot(mmf.crn$Morres ~ mmf.crn$Year, type="l", lwd=5, axes=F, cex=6, col="white")#
abline(h=1,lty="dashed", col="white")#
axis(side =1,tck= 0.05) #
axis(side=2,tck=0.05)#
#
#Plotting out mmfsites#
summary(test)#
#
mmf <- test[test$Site %in% "Morgan Monroe State Park",]#
#
summary(mmf)#
#
for(i in unique(mmf$Year)){#
  mmf[mmf$Year==i,"Mean"] <- mean(mmf[mmf$Year==i,"RW"])#
  mmf[mmf$Year==i,"UB"] <- quantile(mmf[mmf$Year==i,"RW"], 0.975)#
  mmf[mmf$Year==i,"LB"] <- quantile(mmf[mmf$Year==i,"RW"], 0.025)#
}#
#
summary(mmf)#
#
ggplot(data=mmf)+#
  # geom_line(aes(x=Year, y=RW))#
  geom_ribbon(aes(x=Year, ymin=LB, ymax=UB), alpha=0.5, fill="white")+#
  geom_line(aes(x=Year, y=Mean), size=2, color="white")+#
  poster.theme2#
# Merging the residual chronologies back together#
sites.crn <- data.frame(Harvard = harvard.crn[, "Harres"], #
						Howland = howland.crn[,"Howres"], #
						Missouri = misso.crn[,"Misres"],#
						Morgan_Monroe = mmf.crn[,"Morres"], #
						Oak_openings = oakop.crn[,"Oakres"]#
						)#
#
summary(sites.crn)#
# Load in climate data#
#
climate.use <- read.csv("processed_data/climate_growing_season.csv")#
#
summary(climate.use)#
#
climate.use <- climate.use[climate.use$Site %in% sites.use,]#
climate.use <- climate.use[climate.use$Year>=1935 & climate.use$Year <=2012,]#
#
climate.site <- list()#
#
for(s in unique(climate.use$Site)){#
	climate.site[[s]] <- climate.use[climate.use$Site==s,]#
}#
#
summary(climate.site)#
save(climate.site, file="processed_data/sites_use_climate.Rdata")#
class(climate.site[[1]][,"Year"])#
#
head(climate.site[[1]])#
#
summary(climate.site[[1]])#
#
harv.clim <- climate.site[["Harvard"]][,c("tmean", "precip")]#
#
how.clim <- climate.site[["Howland"]][,c("tmean", "precip")]#
#
miss.clim <- climate.site[["Missouri Ozark"]][,c("tmean", "precip")]#
#
mmf.clim <- climate.site[["Morgan Monroe State Park"]][,c("tmean", "precip")]#
#
oak.clim <- climate.site[["Oak Openings Toledo"]][,c("tmean", "precip")]#
dim(harv.clim)#
dim(harvard.crn)#
#
# harvard#
harv.cor<- cor(harvard.crn, harv.clim[,c("tmean", "precip")], method="pearson")#
harvard <- data.frame(cor = c(harv.cor[1:2,"tmean"],  harv.cor[1:2,"precip"]),#
					  var = c("tmean", "tmean", "precip", "precip"))#
harvard$type <- c("std", "res")#
harvard$site <- "Harvard" #
# Howland#
how.cor <- cor(howland.crn, how.clim[,c("tmean", "precip")], method="pearson")#
how.cor#
#
howland <- data.frame(cor = c(how.cor[1:2,"tmean"],  how.cor[1:2,"precip"]),#
					  var = c("tmean", "tmean", "precip", "precip"))#
howland$type <- c("std", "res")#
howland$site <- "Howland" #
# Missouri#
mo.cor <- cor(misso.crn, miss.clim[,c("tmean", "precip")], method="pearson")#
mo.cor#
#
missouri <- data.frame(cor = c(mo.cor[1:2,"tmean"],  mo.cor[1:2,"precip"]),#
					  var = c("tmean", "tmean", "precip", "precip"))#
missouri$type <- c("std", "res")#
missouri$site <- "Missouri" #
#
# Morgan Monroe#
mmf.cor <- cor(mmf.crn, mmf.clim[,c("tmean", "precip")], method="pearson")#
mmf.cor#
#
morgan <- data.frame(cor = c(mmf.cor[1:2,"tmean"],  mmf.cor[1:2,"precip"]),#
					  var = c("tmean", "tmean", "precip", "precip"))#
morgan$type <- c("std", "res")#
morgan$site <- "Morgan-Monroe" #
#
# Oak openings#
oakop.cor <- cor(oakop.crn, oak.clim[,c("tmean", "precip")], method="pearson")#
oakop.cor#
#
oakop <- data.frame(cor = c(oakop.cor[1:2,"tmean"],  oakop.cor[1:2,"precip"]),#
					  var = c("tmean", "tmean", "precip", "precip"))#
oakop$type <- c("std", "res")#
oakop$site <- "Oak-Openings" #
#
# Merging standard chronologies into one file#
#
clim.cor <- merge(harvard, howland, all.x=T, all.y=T)#
clim.cor2 <- merge(clim.cor, missouri,all.x=T, all.y=T)#
clim.cor3 <- merge(clim.cor2, morgan,all.x=T, all.y=T)#
clim.cor4 <- merge(clim.cor3, oakop,all.x=T, all.y=T)#
#
summary(clim.cor4)#
clim.cor4$site <- as.factor(clim.cor4$site)#
clim.cor4$type <- as.factor(clim.cor4$type)#
clim.cor4$cor <- as.numeric(clim.cor4$cor)#
#
# Sig value for 81 df = 0.209#
clim.cor4$sig <- ifelse(clim.cor4$cor < -0.2245 | clim.cor4$cor > 0.2245, "Y", "N")#
clim.cor4$sig <- factor(clim.cor4$sig, levels = c("Y", "N"))#
#
clim.cor4$site <- factor(clim.cor4$site, levels = c("Missouri", "Morgan-Monroe", "Oak-Openings", "Harvard", "Howland"))#
#
clim.cor4$Site <- clim.cor4$site#
clim.cor4$Site <- recode(clim.cor4$Site, "'Missouri' = 'MO'; 'Morgan-Monroe' = 'IN'; 'Oak-Openings' = 'OH'; 'Harvard' = 'MA'; 'Howland' = 'ME'")#
clim.cor4$Site <- factor(clim.cor4$Site, levels = c("MO", "IN", "OH", "MA", "ME"))#
pdf("figures/site_correlations.pdf", width= 13, height = 8.5)#
ggplot(data=clim.cor4[clim.cor4$type=="std",]) + facet_grid(var~. , scales="free_x") +#
	geom_bar(aes(x=Site, y=cor, fill=sig), stat="identity", position="dodge", colour="black") +#
	geom_hline(yintercept=0.2245, linetype="dashed") + #
	geom_hline(yintercept=-0.2245, linetype="dashed") + 	#
	geom_hline(yintercept=0, linetype="solid") +#
	scale_fill_manual(values= c("green", "grey50")) + #
	poster.theme2#
dev.off()#
#
#######################################################################
# Gettign correlations for all for all of the available climate data data#
#######################################################################
# Loading in climate data#
t.mean <- read.csv("processed_data/ch2_tmean.csv", header=T)#
t.min <- read.csv("processed_data/ch2_tmin.csv", header=T)#
t.max <- read.csv("processed_data/ch2_tmax.csv", header=T)#
precip <- read.csv("processed_data/ch2_precip.csv", header=T)#
summary(t.mean)#
#
# Limiting time frame--1935-2012#
t.mean <- t.mean[t.mean$Year >= 1936 & t.mean$Year <= 2012,]#
t.min <- t.min[t.min$Year >= 1936 & t.min$Year <= 2012,]#
t.max <- t.max[t.max$Year >= 1936 & t.max$Year <= 2012,]#
precip <- precip[precip$Year >= 1936 & precip$Year <= 2012,]#
summary(t.mean)#
summary(t.min)#
summary(t.max)#
summary(precip)#
#
head(t.mean)#
unique(t.mean$Site.Name)#
#
t.mean$Site.Name <- recode(t.mean$Site.Name, "'Missouri Ozark' = 'Missouri'; 'Morgan Monroe State Park'='Morgan_Monroe'; 'Oak Openings Toledo' = 'Oak_openings'")#
#
t.min$Site.Name <- recode(t.min$Site.Name, "'Missouri Ozark' = 'Missouri'; 'Morgan Monroe State Park'='Morgan_Monroe'; 'Oak Openings Toledo' = 'Oak_openings'")#
t.max$Site.Name <- recode(t.max$Site.Name, "'Missouri Ozark' = 'Missouri'; 'Morgan Monroe State Park'='Morgan_Monroe'; 'Oak Openings Toledo' = 'Oak_openings'")#
precip$Site.Name <- recode(precip$Site.Name, "'Missouri Ozark' = 'Missouri'; 'Morgan Monroe State Park'='Morgan_Monroe'; 'Oak Openings Toledo' = 'Oak_openings'")#
# getting the ring widths in a data frame#
summary(sites.crn)#
sites.crn$Year <- site.chron[[1]][,"Year"]#
head(sites.crn)#
sites.crn <- sites.crn[sites.crn$Year > 1935,]#
#--------------------------------------------#
# Tmean correlation#
#--------------------------------------------#
#
sites <- c("Harvard", "Howland", "Missouri", "Morgan_Monroe", "Oak_openings")#
#
tmean.corr<-list()#
#
for(i in sites){#
	tmean.corr[[i]] <- cor(sites.crn[,i], t.mean[t.mean$Site.Name %in% i,!names(t.mean) %in% c("Site.Name", "Year")], method="pearson")#
}#
summary(tmean.corr)#
#
# Making each site it's own dataframe#
harvard.tmean <- as.data.frame(tmean.corr[[1]])#
#
harvard.tmean.stack <- stack(harvard.tmean)#
names(harvard.tmean.stack)<- c("cor", "month")#
harvard.tmean.stack$Site <- as.factor("Harvard")#
harvard.tmean.stack$type <- as.factor("tmean")#
#
howland.tmean <- as.data.frame(tmean.corr[[2]])#
#
howland.tmean.stack <- stack(howland.tmean)#
names(howland.tmean.stack)<- c("cor", "month")#
howland.tmean.stack$Site <- as.factor("Howland")#
howland.tmean.stack$type <- as.factor("tmean")#
#
mo.tmean <- as.data.frame(tmean.corr[[3]])#
#
mo.tmean.stack <- stack(mo.tmean)#
names(mo.tmean.stack)<- c("cor", "month")#
mo.tmean.stack$Site <- as.factor("Missouri")#
mo.tmean.stack$type <- as.factor("tmean")#
#
mmf.tmean <- as.data.frame(tmean.corr[[4]])#
#
mmf.tmean.stack <- stack(mmf.tmean)#
names(mmf.tmean.stack)<- c("cor", "month")#
mmf.tmean.stack$Site <- as.factor("MMF")#
mmf.tmean.stack$type <- as.factor("tmean")#
#
oakop.tmean <- as.data.frame(tmean.corr[[5]])#
#
oakop.tmean.stack <- stack(oakop.tmean)#
names(oakop.tmean.stack)<- c("cor", "month")#
oakop.tmean.stack$Site <- as.factor("Oak_openings")#
oakop.tmean.stack$type <- as.factor("tmean")#
#
all.sites.tmean <- rbind(harvard.tmean.stack, howland.tmean.stack, mo.tmean.stack, mmf.tmean.stack, oakop.tmean.stack)#
#
summary(all.sites.tmean)#
#
#--------------------------------------------#
# Tmin correlation#
#--------------------------------------------#
#
sites <- c("Harvard", "Howland", "Missouri", "Morgan_Monroe", "Oak_openings")#
#
tmin.corr<-list()#
#
for(i in sites){#
	tmin.corr[[i]] <- cor(sites.crn[,i], t.min[t.min$Site.Name %in% i,!names(t.min) %in% c("Site.Name", "Year")], method="pearson")#
}#
summary(tmin.corr)#
#
# Making each site it's own dataframe#
harvard.tmin <- as.data.frame(tmin.corr[[1]])#
#
harvard.tmin.stack <- stack(harvard.tmin)#
names(harvard.tmin.stack)<- c("cor", "month")#
harvard.tmin.stack$Site <- as.factor("Harvard")#
harvard.tmin.stack$type <- as.factor("tmin")#
#
howland.tmin <- as.data.frame(tmin.corr[[2]])#
#
howland.tmin.stack <- stack(howland.tmin)#
names(howland.tmin.stack)<- c("cor", "month")#
howland.tmin.stack$Site <- as.factor("Howland")#
howland.tmin.stack$type <- as.factor("tmin")#
#
mo.tmin <- as.data.frame(tmin.corr[[3]])#
#
mo.tmin.stack <- stack(mo.tmin)#
names(mo.tmin.stack)<- c("cor", "month")#
mo.tmin.stack$Site <- as.factor("Missouri")#
mo.tmin.stack$type <- as.factor("tmin")#
#
mmf.tmin <- as.data.frame(tmin.corr[[4]])#
#
mmf.tmin.stack <- stack(mmf.tmin)#
names(mmf.tmin.stack)<- c("cor", "month")#
mmf.tmin.stack$Site <- as.factor("MMF")#
mmf.tmin.stack$type <- as.factor("tmin")#
#
oakop.tmin <- as.data.frame(tmin.corr[[5]])#
#
oakop.tmin.stack <- stack(oakop.tmin)#
names(oakop.tmin.stack)<- c("cor", "month")#
oakop.tmin.stack$Site <- as.factor("Oak_openings")#
oakop.tmin.stack$type <- as.factor("tmin")#
#
all.sites.tmin <- rbind(harvard.tmin.stack, howland.tmin.stack, mo.tmin.stack, mmf.tmin.stack, oakop.tmin.stack)#
#
summary(all.sites.tmin)#
#--------------------------------------------#
# Tmax correlation#
#--------------------------------------------#
#
sites <- c("Harvard", "Howland", "Missouri", "Morgan_Monroe", "Oak_openings")#
#
tmax.corr<-list()#
#
for(i in sites){#
	tmax.corr[[i]] <- cor(sites.crn[,i], t.max[t.max$Site.Name %in% i,!names(t.max) %in% c("Site.Name", "Year")], method="pearson")#
}#
summary(tmax.corr)#
#
# Making each site it's own dataframe#
harvard.tmax <- as.data.frame(tmax.corr[[1]])#
#
harvard.tmax.stack <- stack(harvard.tmax)#
names(harvard.tmax.stack)<- c("cor", "month")#
harvard.tmax.stack$Site <- as.factor("Harvard")#
harvard.tmax.stack$type <- as.factor("tmax")#
#
howland.tmax <- as.data.frame(tmax.corr[[2]])#
#
howland.tmax.stack <- stack(howland.tmax)#
names(howland.tmax.stack)<- c("cor", "month")#
howland.tmax.stack$Site <- as.factor("Howland")#
howland.tmax.stack$type <- as.factor("tmax")#
#
mo.tmax <- as.data.frame(tmax.corr[[3]])#
#
mo.tmax.stack <- stack(mo.tmax)#
names(mo.tmax.stack)<- c("cor", "month")#
mo.tmax.stack$Site <- as.factor("Missouri")#
mo.tmax.stack$type <- as.factor("tmax")#
#
mmf.tmax <- as.data.frame(tmax.corr[[4]])#
#
mmf.tmax.stack <- stack(mmf.tmax)#
names(mmf.tmax.stack)<- c("cor", "month")#
mmf.tmax.stack$Site <- as.factor("MMF")#
mmf.tmax.stack$type <- as.factor("tmax")#
#
oakop.tmax <- as.data.frame(tmax.corr[[5]])#
#
oakop.tmax.stack <- stack(oakop.tmax)#
names(oakop.tmax.stack)<- c("cor", "month")#
oakop.tmax.stack$Site <- as.factor("Oak_openings")#
oakop.tmax.stack$type <- as.factor("tmax")#
#
all.sites.tmax <- rbind(harvard.tmax.stack, howland.tmax.stack, mo.tmax.stack, mmf.tmax.stack, oakop.tmax.stack)#
#
summary(all.sites.tmax)#
#--------------------------------------------#
# Precip correlation#
#--------------------------------------------#
sites <- c("Harvard", "Howland", "Missouri", "Morgan_Monroe", "Oak_openings")#
#
precip.corr<-list()#
#
for(i in sites){#
	precip.corr[[i]] <- cor(sites.crn[,i], precip[precip$Site.Name %in% i,!names(precip) %in% c("Site.Name", "Year")], method="pearson")#
}#
summary(precip.corr)#
#
# Making each site it's own dataframe#
harvard.precip <- as.data.frame(precip.corr[[1]])#
#
harvard.precip.stack <- stack(harvard.precip)#
names(harvard.precip.stack)<- c("cor", "month")#
harvard.precip.stack$Site <- as.factor("Harvard")#
harvard.precip.stack$type <- as.factor("precip")#
#
howland.precip <- as.data.frame(precip.corr[[2]])#
#
howland.precip.stack <- stack(howland.precip)#
names(howland.precip.stack)<- c("cor", "month")#
howland.precip.stack$Site <- as.factor("Howland")#
howland.precip.stack$type <- as.factor("precip")#
#
mo.precip <- as.data.frame(precip.corr[[3]])#
#
mo.precip.stack <- stack(mo.precip)#
names(mo.precip.stack)<- c("cor", "month")#
mo.precip.stack$Site <- as.factor("Missouri")#
mo.precip.stack$type <- as.factor("precip")#
#
mmf.precip <- as.data.frame(precip.corr[[4]])#
#
mmf.precip.stack <- stack(mmf.precip)#
names(mmf.precip.stack)<- c("cor", "month")#
mmf.precip.stack$Site <- as.factor("MMF")#
mmf.precip.stack$type <- as.factor("precip")#
#
oakop.precip <- as.data.frame(precip.corr[[5]])#
#
oakop.precip.stack <- stack(oakop.precip)#
names(oakop.precip.stack)<- c("cor", "month")#
oakop.precip.stack$Site <- as.factor("Oak_openings")#
oakop.precip.stack$type <- as.factor("precip")#
#
all.sites.precip <- rbind(harvard.precip.stack, howland.precip.stack, mo.precip.stack, mmf.precip.stack, oakop.precip.stack)#
#
summary(all.sites.precip)#
#
# Merging all stacked dataframes together to make plotting easier#
#
all.sites.climate <- rbind(all.sites.precip, all.sites.tmax, all.sites.tmin, all.sites.tmean)#
summary(all.sites.climate)#
#
# Sig value for 75 df = 0.2245#
all.sites.climate$sig <- ifelse(all.sites.climate$cor < -0.2245 | all.sites.climate$cor > 0.2245, "Y", "N")#
all.sites.climate$sig <- factor(all.sites.climate$sig, levels = c("Y", "N"))#
all.sites.climate$month <- factor(all.sites.climate$month, levels = c("pJan", "pFeb", "pMar", "pApr", "pMay", "pJun", "pJul", "pAug", "pSep", "pOct", "pNov", "pDec", "Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec", "pfall", "winter", "spring", "summer", "grow.seas"))#
#
all.sites.climate$Site <- factor(all.sites.climate$Site, levels = c("Missouri", "MMF", "Oak_openings", "Harvard", "Howland"))#
#
pdf("figures/site_correlations_allmonths_short.pdf", width= 13, height = 8.5)#
ggplot(data=all.sites.climate[all.sites.climate$month %in% c("pOct", "pNov", "pDec", "Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec", "spring", "summer", "pfall", "winter", "grow.seas"),]) + facet_grid(Site ~ type ) +#
	geom_bar(aes(x=month, y=cor, fill=sig), stat="identity", position="dodge", colour="black") +#
	geom_hline(yintercept=0.2245, linetype="dashed") + #
	geom_hline(yintercept=-0.2245, linetype="dashed") + 	#
	geom_hline(yintercept=0, linetype="solid") +#
	scale_fill_manual(values= c("green", "grey50"))+#
	theme(axis.text.x = element_text(angle = 45, hjust = 1))#
dev.off()#
#
summary(all.sites.climate$month)#
#
all.sites.gs <- all.sites.climate[all.sites.climate$month=="grow.seas",]#
summary(all.sites.gs)#
#
cbbPalette <- c("#009E73", "#e79f00", "#9ad0f3", "#0072B2", "#D55E00")#
#
all.sites.climate$type <- factor(all.sites.climate$type, levels=c("tmean", "precip", "tmin", "tmax"))#
pdf("figures/site_correlations_growing season.pdf", width= 13, height = 8.5)#
ggplot(data=all.sites.climate[all.sites.climate$month %in% "grow.seas" & all.sites.climate$type %in% c("tmean", "precip"),]) + facet_grid(~type) +#
  geom_bar(aes(x=month, y=cor, color=Site), stat="identity", position="dodge", fill=NA) + ylim(-0.6,0.6)+#
  geom_bar(aes(x=month, y=cor, color=Site), stat="identity", position="dodge", fill=NA) +ylim(-0.6,0.6)+#
  geom_bar(aes(x=month, y=cor, fill=Site, alpha=sig), stat="identity", position="dodge") +ylim(-0.6,0.6)+#
  geom_hline(yintercept=0.2245, linetype="dashed") + #
  geom_hline(yintercept=-0.2245, linetype="dashed") + 	#
  geom_hline(yintercept=0, linetype="solid") +#
 # scale_fill_manual(values= cbbPalette)+#
  scale_color_manual(values=cbbPalette) +#
  scale_fill_manual(values=cbbPalette) +#
  scale_alpha_manual(values = c(1, 0.2))+#
  poster.theme2 +#
  theme(axis.text.x = element_text(angle = 45, hjust = 1),panel.grid.major=element_blank(), panel.grid.minor= element_blank(), panel.border= element_blank(), panel.background= element_blank()) +#
  labs(title= "TR Site Climate Correlations", x="Seasons", y=expression(bold(paste("Correlation Value (r)"))))#
#
dev.off()#
#
#################################################################################
# Running correlations on the individual indices to get the full spread of the #
#################################################################################
#
all.sites.gs <- all.sites.climate[all.sites.climate$month=="grow.seas",]#
summary(all.sites.gs)#
#
all.sites.gs$State <- recode(all.sites.gs$Site, "'Missouri'='MO';'MMF'='IN';'Oak_openings'='OH';'Harvard'='MA';'Howland'='ME'")#
all.sites.gs$series <- as.factor("chron")#
summary(all.sites.gs)#
#
summary(climate.site$Howland[,])#
head(sites.i$Howland)#
#
summary(sites.i)#
index.cor.temp <- sites.i#
index.cor.precip <- sites.i#
#
test <- sites.i#
meow <- test#
#
# Running correlations fro Tmean and Precip on individual indices#
for(s in names(sites.i)){#
	for(i in names(sites.i[[s]])){#
		index.cor.temp[[s]][,i] <- cor(sites.i[[s]][,i], climate.site[[s]][,"tmean"], method="pearson")#
	}#
}	#
#
test <- cor(sites.i[["Harvard"]][,c(1:10)], climate.site[["Harvard"]][,"tmean"], method="pearson")#
for(s in names(sites.i)){#
	for(i in names(sites.i[[s]])){#
		index.cor.precip[[s]][,i] <- cor(sites.i[[s]][,i], climate.site[[s]][,"precip"], method="pearson") #
	}#
}	#
summary(index.cor.precip)#
#
# Now need to merge everything into one stacked file to be used with ggplot 2#
#
test <- data.frame()#
#
# Need to break it down by site#
#
# Harvard#
har.precip.stack <- stack(index.cor.precip[["Harvard"]])#
names(har.precip.stack)<- c("cor", "TreeID")#
har.precip.stack$State <- as.factor("MA")#
har.precip.stack$type <- as.factor("precip")#
summary(har.precip.stack)#
#
har.temp.stack <- stack(index.cor.temp[["Harvard"]])#
names(har.temp.stack)<- c("cor", "TreeID")#
har.temp.stack$State <- as.factor("MA")#
har.temp.stack$type <- as.factor("tmean")#
summary(har.temp.stack)#
#
har.stack <- merge(har.temp.stack, har.precip.stack, all.x=T, all.y=T)#
summary(har.stack)#
#
# Howland#
#
how.precip.stack <- stack(index.cor.precip[["Howland"]])#
names(how.precip.stack)<- c("cor", "TreeID")#
how.precip.stack$State <- as.factor("ME")#
how.precip.stack$type <- as.factor("precip")#
summary(how.precip.stack)#
#
how.temp.stack <- stack(index.cor.temp[["Howland"]])#
names(how.temp.stack)<- c("cor", "TreeID")#
how.temp.stack$State <- as.factor("ME")#
how.temp.stack$type <- as.factor("tmean")#
summary(how.temp.stack)#
#
how.stack <- merge(how.temp.stack, how.precip.stack, all.x=T, all.y=T)#
summary(how.stack)#
#
# Missouri#
#
mo.precip.stack <- stack(index.cor.precip[["Missouri Ozark"]])#
names(mo.precip.stack)<- c("cor", "TreeID")#
mo.precip.stack$State <- as.factor("MO")#
mo.precip.stack$type <- as.factor("precip")#
summary(mo.precip.stack)#
#
mo.temp.stack <- stack(index.cor.temp[["Missouri Ozark"]])#
names(mo.temp.stack)<- c("cor", "TreeID")#
mo.temp.stack$State <- as.factor("MO")#
mo.temp.stack$type <- as.factor("tmean")#
summary(mo.temp.stack)#
#
mo.stack <- merge(mo.temp.stack, mo.precip.stack, all.x=T, all.y=T)#
summary(mo.stack)#
# MMF#
#
mmf.precip.stack <- stack(index.cor.precip[["Morgan Monroe State Park"]])#
names(mmf.precip.stack)<- c("cor", "TreeID")#
mmf.precip.stack$State <- as.factor("IN")#
mmf.precip.stack$type <- as.factor("precip")#
summary(mmf.precip.stack)#
#
mmf.temp.stack <- stack(index.cor.temp[["Morgan Monroe State Park"]])#
names(mmf.temp.stack)<- c("cor", "TreeID")#
mmf.temp.stack$State <- as.factor("IN")#
mmf.temp.stack$type <- as.factor("tmean")#
summary(mmf.temp.stack)#
#
mmf.stack <- merge(mmf.temp.stack, mmf.precip.stack, all.x=T, all.y=T)#
summary(mmf.stack)#
# Oak Openings#
#
oak.precip.stack <- stack(index.cor.precip[["Oak Openings Toledo"]])#
names(oak.precip.stack)<- c("cor", "TreeID")#
oak.precip.stack$State <- as.factor("OH")#
oak.precip.stack$type <- as.factor("precip")#
summary(oak.precip.stack)#
#
oak.temp.stack <- stack(index.cor.temp[["Oak Openings Toledo"]])#
names(oak.temp.stack)<- c("cor", "TreeID")#
oak.temp.stack$State <- as.factor("OH")#
oak.temp.stack$type <- as.factor("tmean")#
summary(oak.temp.stack)#
#
oak.stack <- merge(oak.temp.stack, oak.precip.stack, all.x=T, all.y=T)#
summary(oak.stack)#
#
cor.all.stack <- rbind(har.stack, how.stack, mmf.stack, oak.stack, mo.stack)#
summary(cor.all.stack)#
#
# Calculating Tukey Biweight Robust mean#
#
for(s in unique(cor.all.stack$State)){#
	for(t in unique(cor.all.stack$type)){#
	cor.all.stack[cor.all.stack$State==s & cor.all.stack$type==t,"biweight.mean"] <- TukeyBiweight(cor.all.stack[cor.all.stack$State==s & cor.all.stack$type==t,"cor"], na.rm=T)#
	}#
}#
summary(cor.all.stack)#
#
# creating a significance column#
cor.all.stack$sig <- ifelse(cor.all.stack$cor < -0.2245 | cor.all.stack$cor > 0.2245, "Y", "N")#
cor.all.stack$sig <- factor(cor.all.stack$sig, levels = c("Y", "N"))#
#
cor.all.stack$State <- factor(cor.all.stack$State, levels=c("MO", "IN", "OH", "MA", "ME"))#
summary(cor.all.stack)#
#
cor.all.stack$type <- factor(cor.all.stack$type, levels = c("precip", "tmean"))#
cor.all.stack$series <- as.factor("index")#
#
summary(all.sites.gs)#
summary(cor.all.stack)#
#
summary(cor.all.stack[is.na(cor.all.stack$cor),])#
#
pdf("figures/violin_climate_cor.pdf", height=8, width=13)#
ggplot(data=cor.all.stack) + facet_grid(~type)+#
#
	geom_violin(aes(x=State, y=cor, fill=State), adjust = 2, trim=T) + ylim(-0.6,0.6)+#
	geom_point(data=all.sites.gs[all.sites.gs$type %in% c("precip", "tmean"),],aes(x=State, y=cor), shape=126, size=25)+ ylim(-0.6,0.6)+#
	geom_point(aes(x=State, y=biweight.mean), shape=95, size=25)+ ylim(-0.6,0.6)+#
	geom_hline(yintercept=0.2245, linetype="dashed") + #
  	geom_hline(yintercept=-0.2245, linetype="dashed") + 	#
  	geom_hline(yintercept=0, linetype="solid") +#
#
	scale_color_manual(values=cbbPalette) +#
  	scale_fill_manual(values=cbbPalette) +#
  	poster.theme2 +#
  	theme(axis.text.x = element_text(angle = 45, hjust = 1),panel.grid.major=element_blank(), panel.grid.minor= 	element_blank(), panel.border= element_blank(), panel.background= element_blank()) +#
  	labs(title= "TR Index Climate Correlations", x="State", y=expression(bold(paste("Correlation Value (r)"))))#
dev.off()
library(mgcv)#
library(ggplot2)#
library(car)#
library(reshape)#
library(dplR)#
library(DescTools)#
# Christy's GAMM code#
#
# gam1 <- gamm(Y ~  s(Biomass, bs="cr", k=3, by=PFT) + s(tair, k=k, by=PFT) + s(precipf, k=k, by=PFT) + s(CO2, k=k, by=PFT), random=list(PlotID=~1), data=data) #
#
# Loading in my data#
#
data.use <- read.csv("processed_data/AllSites_tree_plus_climate_and_BA.csv", header=T)#
#
data.use$group <- data.use$Species#
data.use$group <- recode(data.use$group, "'CAOV' = 'CARYA'; 'CACO' = 'CARYA'; #
  							'CATE' = 'CARYA'; 'ACSAC' = 'ACSA'; 'BEAL' = 'BETULA'; 'BELE' = 'BETULA'; 'QUMU' = 'QUAL'")#
#
data.use$group.plot <- as.factor(paste(data.use$group, data.use$PlotID, sep="."))#
#
data.use$Canopy.Class <- recode(data.use$Canopy.Class, "'C' = 'D'")#
summary(data.use)#
# reducing the amount of data for the test runs#
sites.use <- c("Harvard", "Howland", "Morgan Monroe State Park", "Oak Openings Toledo", "Missouri Ozark")#
#
test <- data.use[data.use$Site %in% sites.use & !is.na(data.use$RW) & !is.na(data.use$BA.inc),]#
summary(test)#
#
test$group.cc <- as.factor(paste(test$group, test$Canopy.Class, sep="."))#
summary(test)#
# Get a list of what predictors & responses I'm using#
predictors.all <- c("tmean", "precip", "Species", "dbh.recon", "Canopy.Class", "spp.plot", "group", "group.plot", "group.cc")#
#
# Getting rid of observations that have NAs in the important variables#
test <- test[complete.cases(test[,predictors.all]),]#
test <- test[test$Live.Dead=="LIVE" & !test$Canopy.Class=="F",]#
#
# Subsetting to a set of species that we have enough data to feel good about#
#species.use <- c("TSCA", "QURU", "ACRU", "BEAL", "ACSA", "LITU", "QUAL", "CAOV", "CACO", "CATE", "JUVI", "QUVE", "PCRU", "THOC", "PIST")#
group.use <- c("ACRU", "ACSA", "BETULA", "CARYA", "FAGR", "FRAX", "PIST", "QUAL", "QURU", "QUVE", "SAAL", "TSCA", "ULRU")#
#
test <- test[test$group %in% group.use,]#
#
summary(test)#
#
# Right now just looking at the dominant trees.  Not sure how to show this yet#
test <- test[test$Canopy.Class=="I",]#
#
par(new=F)#
plot(test[test$TreeID=="MMA003", "BA.inc"]~ test[test$TreeID=="MMA003","Year"], type="l")#
summary(test)#
# Truncatign at 1935; at 1935 the sample depth for the oak openings is only 1#
test <- test[test$Year >= 1935 & test$Year <= 2012,]#
#
tree.rw <- test#
summary(tree.rw)#
#
summary(test)#
save(test, file="processed_data/test_tree_data_1935_2012.Rdata")#
#
sites.rw <- list()#
#
tree.rw$Year <- as.factor(tree.rw$Year)#
#
for(s in unique(tree.rw$Site)){#
	sites.rw[[s]] <- recast(tree.rw[tree.rw$Site==s,c("Year", "TreeID", "RW")], Year ~ TreeID)	#
}#
summary(sites.rw)#
#
save(sites.rw, file="processed_data/sites_rw.Rdata")#
summary(sites.rw[[4]])#
sites.rw#
# Making Indices of all the different sites using a 30 yr cubic smoothing spline#
sites.i <- list()#
#
for(s in names(sites.rw)){#
	sites.i[[s]] <- detrend(sites.rw[[s]][,2:ncol(sites.rw[[s]])], method="Spline", nyr=30)#
}#
summary(sites.i[[1]])#
#
# making chronologies for each site#
#
site.chron <- list()#
#
for(s in names(sites.i)){#
	site.chron[[s]] <- chron(sites.i[[s]][,2:ncol(sites.i[[s]])], prefix = substr(s, 1, 3), prewhiten = T) #
	site.chron[[s]][,"Year"]<- c(1935:2012) #
}#
#
summary(site.chron[[5]])#
# Making each site it's own dataframe#
harvard.crn <- as.data.frame(site.chron[[1]])#
#
howland.crn <- as.data.frame(site.chron[[2]])#
#
misso.crn <- as.data.frame(site.chron[[3]])#
#
mmf.crn <- as.data.frame(site.chron[[4]])#
#
oakop.crn <- as.data.frame(site.chron[[5]])#
# Plotting thigns for presentation#
par(cex=2 )#
plot(mmf.crn$Morres ~ mmf.crn$Year, type="l", lwd=5, axes=F, cex=6, col="white")#
abline(h=1,lty="dashed", col="white")#
axis(side =1,tck= 0.05) #
axis(side=2,tck=0.05)#
#
#Plotting out mmfsites#
summary(test)#
#
mmf <- test[test$Site %in% "Morgan Monroe State Park",]#
#
summary(mmf)#
#
for(i in unique(mmf$Year)){#
  mmf[mmf$Year==i,"Mean"] <- mean(mmf[mmf$Year==i,"RW"])#
  mmf[mmf$Year==i,"UB"] <- quantile(mmf[mmf$Year==i,"RW"], 0.975)#
  mmf[mmf$Year==i,"LB"] <- quantile(mmf[mmf$Year==i,"RW"], 0.025)#
}#
#
summary(mmf)#
#
ggplot(data=mmf)+#
  # geom_line(aes(x=Year, y=RW))#
  geom_ribbon(aes(x=Year, ymin=LB, ymax=UB), alpha=0.5, fill="white")+#
  geom_line(aes(x=Year, y=Mean), size=2, color="white")+#
  poster.theme2#
# Merging the residual chronologies back together#
sites.crn <- data.frame(Harvard = harvard.crn[, "Harres"], #
						Howland = howland.crn[,"Howres"], #
						Missouri = misso.crn[,"Misres"],#
						Morgan_Monroe = mmf.crn[,"Morres"], #
						Oak_openings = oakop.crn[,"Oakres"]#
						)#
#
summary(sites.crn)#
# Load in climate data#
#
climate.use <- read.csv("processed_data/climate_growing_season.csv")#
#
summary(climate.use)#
#
climate.use <- climate.use[climate.use$Site %in% sites.use,]#
climate.use <- climate.use[climate.use$Year>=1935 & climate.use$Year <=2012,]#
#
climate.site <- list()#
#
for(s in unique(climate.use$Site)){#
	climate.site[[s]] <- climate.use[climate.use$Site==s,]#
}#
#
summary(climate.site)#
save(climate.site, file="processed_data/sites_use_climate.Rdata")#
class(climate.site[[1]][,"Year"])#
#
head(climate.site[[1]])#
#
summary(climate.site[[1]])#
#
harv.clim <- climate.site[["Harvard"]][,c("tmean", "precip")]#
#
how.clim <- climate.site[["Howland"]][,c("tmean", "precip")]#
#
miss.clim <- climate.site[["Missouri Ozark"]][,c("tmean", "precip")]#
#
mmf.clim <- climate.site[["Morgan Monroe State Park"]][,c("tmean", "precip")]#
#
oak.clim <- climate.site[["Oak Openings Toledo"]][,c("tmean", "precip")]#
dim(harv.clim)#
dim(harvard.crn)#
#
# harvard#
harv.cor<- cor(harvard.crn, harv.clim[,c("tmean", "precip")], method="pearson")#
harvard <- data.frame(cor = c(harv.cor[1:2,"tmean"],  harv.cor[1:2,"precip"]),#
					  var = c("tmean", "tmean", "precip", "precip"))#
harvard$type <- c("std", "res")#
harvard$site <- "Harvard" #
# Howland#
how.cor <- cor(howland.crn, how.clim[,c("tmean", "precip")], method="pearson")#
how.cor#
#
howland <- data.frame(cor = c(how.cor[1:2,"tmean"],  how.cor[1:2,"precip"]),#
					  var = c("tmean", "tmean", "precip", "precip"))#
howland$type <- c("std", "res")#
howland$site <- "Howland" #
# Missouri#
mo.cor <- cor(misso.crn, miss.clim[,c("tmean", "precip")], method="pearson")#
mo.cor#
#
missouri <- data.frame(cor = c(mo.cor[1:2,"tmean"],  mo.cor[1:2,"precip"]),#
					  var = c("tmean", "tmean", "precip", "precip"))#
missouri$type <- c("std", "res")#
missouri$site <- "Missouri" #
#
# Morgan Monroe#
mmf.cor <- cor(mmf.crn, mmf.clim[,c("tmean", "precip")], method="pearson")#
mmf.cor#
#
morgan <- data.frame(cor = c(mmf.cor[1:2,"tmean"],  mmf.cor[1:2,"precip"]),#
					  var = c("tmean", "tmean", "precip", "precip"))#
morgan$type <- c("std", "res")#
morgan$site <- "Morgan-Monroe" #
#
# Oak openings#
oakop.cor <- cor(oakop.crn, oak.clim[,c("tmean", "precip")], method="pearson")#
oakop.cor#
#
oakop <- data.frame(cor = c(oakop.cor[1:2,"tmean"],  oakop.cor[1:2,"precip"]),#
					  var = c("tmean", "tmean", "precip", "precip"))#
oakop$type <- c("std", "res")#
oakop$site <- "Oak-Openings" #
#
# Merging standard chronologies into one file#
#
clim.cor <- merge(harvard, howland, all.x=T, all.y=T)#
clim.cor2 <- merge(clim.cor, missouri,all.x=T, all.y=T)#
clim.cor3 <- merge(clim.cor2, morgan,all.x=T, all.y=T)#
clim.cor4 <- merge(clim.cor3, oakop,all.x=T, all.y=T)#
#
summary(clim.cor4)#
clim.cor4$site <- as.factor(clim.cor4$site)#
clim.cor4$type <- as.factor(clim.cor4$type)#
clim.cor4$cor <- as.numeric(clim.cor4$cor)#
#
# Sig value for 81 df = 0.209#
clim.cor4$sig <- ifelse(clim.cor4$cor < -0.2245 | clim.cor4$cor > 0.2245, "Y", "N")#
clim.cor4$sig <- factor(clim.cor4$sig, levels = c("Y", "N"))#
#
clim.cor4$site <- factor(clim.cor4$site, levels = c("Missouri", "Morgan-Monroe", "Oak-Openings", "Harvard", "Howland"))#
#
clim.cor4$Site <- clim.cor4$site#
clim.cor4$Site <- recode(clim.cor4$Site, "'Missouri' = 'MO'; 'Morgan-Monroe' = 'IN'; 'Oak-Openings' = 'OH'; 'Harvard' = 'MA'; 'Howland' = 'ME'")#
clim.cor4$Site <- factor(clim.cor4$Site, levels = c("MO", "IN", "OH", "MA", "ME"))#
pdf("figures/site_correlations.pdf", width= 13, height = 8.5)#
ggplot(data=clim.cor4[clim.cor4$type=="std",]) + facet_grid(var~. , scales="free_x") +#
	geom_bar(aes(x=Site, y=cor, fill=sig), stat="identity", position="dodge", colour="black") +#
	geom_hline(yintercept=0.2245, linetype="dashed") + #
	geom_hline(yintercept=-0.2245, linetype="dashed") + 	#
	geom_hline(yintercept=0, linetype="solid") +#
	scale_fill_manual(values= c("green", "grey50")) + #
	poster.theme2#
dev.off()#
#
#######################################################################
# Gettign correlations for all for all of the available climate data data#
#######################################################################
# Loading in climate data#
t.mean <- read.csv("processed_data/ch2_tmean.csv", header=T)#
t.min <- read.csv("processed_data/ch2_tmin.csv", header=T)#
t.max <- read.csv("processed_data/ch2_tmax.csv", header=T)#
precip <- read.csv("processed_data/ch2_precip.csv", header=T)#
summary(t.mean)#
#
# Limiting time frame--1935-2012#
t.mean <- t.mean[t.mean$Year >= 1936 & t.mean$Year <= 2012,]#
t.min <- t.min[t.min$Year >= 1936 & t.min$Year <= 2012,]#
t.max <- t.max[t.max$Year >= 1936 & t.max$Year <= 2012,]#
precip <- precip[precip$Year >= 1936 & precip$Year <= 2012,]#
summary(t.mean)#
summary(t.min)#
summary(t.max)#
summary(precip)#
#
head(t.mean)#
unique(t.mean$Site.Name)#
#
t.mean$Site.Name <- recode(t.mean$Site.Name, "'Missouri Ozark' = 'Missouri'; 'Morgan Monroe State Park'='Morgan_Monroe'; 'Oak Openings Toledo' = 'Oak_openings'")#
#
t.min$Site.Name <- recode(t.min$Site.Name, "'Missouri Ozark' = 'Missouri'; 'Morgan Monroe State Park'='Morgan_Monroe'; 'Oak Openings Toledo' = 'Oak_openings'")#
t.max$Site.Name <- recode(t.max$Site.Name, "'Missouri Ozark' = 'Missouri'; 'Morgan Monroe State Park'='Morgan_Monroe'; 'Oak Openings Toledo' = 'Oak_openings'")#
precip$Site.Name <- recode(precip$Site.Name, "'Missouri Ozark' = 'Missouri'; 'Morgan Monroe State Park'='Morgan_Monroe'; 'Oak Openings Toledo' = 'Oak_openings'")#
# getting the ring widths in a data frame#
summary(sites.crn)#
sites.crn$Year <- site.chron[[1]][,"Year"]#
head(sites.crn)#
sites.crn <- sites.crn[sites.crn$Year > 1935,]#
#--------------------------------------------#
# Tmean correlation#
#--------------------------------------------#
#
sites <- c("Harvard", "Howland", "Missouri", "Morgan_Monroe", "Oak_openings")#
#
tmean.corr<-list()#
#
for(i in sites){#
	tmean.corr[[i]] <- cor(sites.crn[,i], t.mean[t.mean$Site.Name %in% i,!names(t.mean) %in% c("Site.Name", "Year")], method="pearson")#
}#
summary(tmean.corr)#
#
# Making each site it's own dataframe#
harvard.tmean <- as.data.frame(tmean.corr[[1]])#
#
harvard.tmean.stack <- stack(harvard.tmean)#
names(harvard.tmean.stack)<- c("cor", "month")#
harvard.tmean.stack$Site <- as.factor("Harvard")#
harvard.tmean.stack$type <- as.factor("tmean")#
#
howland.tmean <- as.data.frame(tmean.corr[[2]])#
#
howland.tmean.stack <- stack(howland.tmean)#
names(howland.tmean.stack)<- c("cor", "month")#
howland.tmean.stack$Site <- as.factor("Howland")#
howland.tmean.stack$type <- as.factor("tmean")#
#
mo.tmean <- as.data.frame(tmean.corr[[3]])#
#
mo.tmean.stack <- stack(mo.tmean)#
names(mo.tmean.stack)<- c("cor", "month")#
mo.tmean.stack$Site <- as.factor("Missouri")#
mo.tmean.stack$type <- as.factor("tmean")#
#
mmf.tmean <- as.data.frame(tmean.corr[[4]])#
#
mmf.tmean.stack <- stack(mmf.tmean)#
names(mmf.tmean.stack)<- c("cor", "month")#
mmf.tmean.stack$Site <- as.factor("MMF")#
mmf.tmean.stack$type <- as.factor("tmean")#
#
oakop.tmean <- as.data.frame(tmean.corr[[5]])#
#
oakop.tmean.stack <- stack(oakop.tmean)#
names(oakop.tmean.stack)<- c("cor", "month")#
oakop.tmean.stack$Site <- as.factor("Oak_openings")#
oakop.tmean.stack$type <- as.factor("tmean")#
#
all.sites.tmean <- rbind(harvard.tmean.stack, howland.tmean.stack, mo.tmean.stack, mmf.tmean.stack, oakop.tmean.stack)#
#
summary(all.sites.tmean)#
#
#--------------------------------------------#
# Tmin correlation#
#--------------------------------------------#
#
sites <- c("Harvard", "Howland", "Missouri", "Morgan_Monroe", "Oak_openings")#
#
tmin.corr<-list()#
#
for(i in sites){#
	tmin.corr[[i]] <- cor(sites.crn[,i], t.min[t.min$Site.Name %in% i,!names(t.min) %in% c("Site.Name", "Year")], method="pearson")#
}#
summary(tmin.corr)#
#
# Making each site it's own dataframe#
harvard.tmin <- as.data.frame(tmin.corr[[1]])#
#
harvard.tmin.stack <- stack(harvard.tmin)#
names(harvard.tmin.stack)<- c("cor", "month")#
harvard.tmin.stack$Site <- as.factor("Harvard")#
harvard.tmin.stack$type <- as.factor("tmin")#
#
howland.tmin <- as.data.frame(tmin.corr[[2]])#
#
howland.tmin.stack <- stack(howland.tmin)#
names(howland.tmin.stack)<- c("cor", "month")#
howland.tmin.stack$Site <- as.factor("Howland")#
howland.tmin.stack$type <- as.factor("tmin")#
#
mo.tmin <- as.data.frame(tmin.corr[[3]])#
#
mo.tmin.stack <- stack(mo.tmin)#
names(mo.tmin.stack)<- c("cor", "month")#
mo.tmin.stack$Site <- as.factor("Missouri")#
mo.tmin.stack$type <- as.factor("tmin")#
#
mmf.tmin <- as.data.frame(tmin.corr[[4]])#
#
mmf.tmin.stack <- stack(mmf.tmin)#
names(mmf.tmin.stack)<- c("cor", "month")#
mmf.tmin.stack$Site <- as.factor("MMF")#
mmf.tmin.stack$type <- as.factor("tmin")#
#
oakop.tmin <- as.data.frame(tmin.corr[[5]])#
#
oakop.tmin.stack <- stack(oakop.tmin)#
names(oakop.tmin.stack)<- c("cor", "month")#
oakop.tmin.stack$Site <- as.factor("Oak_openings")#
oakop.tmin.stack$type <- as.factor("tmin")#
#
all.sites.tmin <- rbind(harvard.tmin.stack, howland.tmin.stack, mo.tmin.stack, mmf.tmin.stack, oakop.tmin.stack)#
#
summary(all.sites.tmin)#
#--------------------------------------------#
# Tmax correlation#
#--------------------------------------------#
#
sites <- c("Harvard", "Howland", "Missouri", "Morgan_Monroe", "Oak_openings")#
#
tmax.corr<-list()#
#
for(i in sites){#
	tmax.corr[[i]] <- cor(sites.crn[,i], t.max[t.max$Site.Name %in% i,!names(t.max) %in% c("Site.Name", "Year")], method="pearson")#
}#
summary(tmax.corr)#
#
# Making each site it's own dataframe#
harvard.tmax <- as.data.frame(tmax.corr[[1]])#
#
harvard.tmax.stack <- stack(harvard.tmax)#
names(harvard.tmax.stack)<- c("cor", "month")#
harvard.tmax.stack$Site <- as.factor("Harvard")#
harvard.tmax.stack$type <- as.factor("tmax")#
#
howland.tmax <- as.data.frame(tmax.corr[[2]])#
#
howland.tmax.stack <- stack(howland.tmax)#
names(howland.tmax.stack)<- c("cor", "month")#
howland.tmax.stack$Site <- as.factor("Howland")#
howland.tmax.stack$type <- as.factor("tmax")#
#
mo.tmax <- as.data.frame(tmax.corr[[3]])#
#
mo.tmax.stack <- stack(mo.tmax)#
names(mo.tmax.stack)<- c("cor", "month")#
mo.tmax.stack$Site <- as.factor("Missouri")#
mo.tmax.stack$type <- as.factor("tmax")#
#
mmf.tmax <- as.data.frame(tmax.corr[[4]])#
#
mmf.tmax.stack <- stack(mmf.tmax)#
names(mmf.tmax.stack)<- c("cor", "month")#
mmf.tmax.stack$Site <- as.factor("MMF")#
mmf.tmax.stack$type <- as.factor("tmax")#
#
oakop.tmax <- as.data.frame(tmax.corr[[5]])#
#
oakop.tmax.stack <- stack(oakop.tmax)#
names(oakop.tmax.stack)<- c("cor", "month")#
oakop.tmax.stack$Site <- as.factor("Oak_openings")#
oakop.tmax.stack$type <- as.factor("tmax")#
#
all.sites.tmax <- rbind(harvard.tmax.stack, howland.tmax.stack, mo.tmax.stack, mmf.tmax.stack, oakop.tmax.stack)#
#
summary(all.sites.tmax)#
#--------------------------------------------#
# Precip correlation#
#--------------------------------------------#
sites <- c("Harvard", "Howland", "Missouri", "Morgan_Monroe", "Oak_openings")#
#
precip.corr<-list()#
#
for(i in sites){#
	precip.corr[[i]] <- cor(sites.crn[,i], precip[precip$Site.Name %in% i,!names(precip) %in% c("Site.Name", "Year")], method="pearson")#
}#
summary(precip.corr)#
#
# Making each site it's own dataframe#
harvard.precip <- as.data.frame(precip.corr[[1]])#
#
harvard.precip.stack <- stack(harvard.precip)#
names(harvard.precip.stack)<- c("cor", "month")#
harvard.precip.stack$Site <- as.factor("Harvard")#
harvard.precip.stack$type <- as.factor("precip")#
#
howland.precip <- as.data.frame(precip.corr[[2]])#
#
howland.precip.stack <- stack(howland.precip)#
names(howland.precip.stack)<- c("cor", "month")#
howland.precip.stack$Site <- as.factor("Howland")#
howland.precip.stack$type <- as.factor("precip")#
#
mo.precip <- as.data.frame(precip.corr[[3]])#
#
mo.precip.stack <- stack(mo.precip)#
names(mo.precip.stack)<- c("cor", "month")#
mo.precip.stack$Site <- as.factor("Missouri")#
mo.precip.stack$type <- as.factor("precip")#
#
mmf.precip <- as.data.frame(precip.corr[[4]])#
#
mmf.precip.stack <- stack(mmf.precip)#
names(mmf.precip.stack)<- c("cor", "month")#
mmf.precip.stack$Site <- as.factor("MMF")#
mmf.precip.stack$type <- as.factor("precip")#
#
oakop.precip <- as.data.frame(precip.corr[[5]])#
#
oakop.precip.stack <- stack(oakop.precip)#
names(oakop.precip.stack)<- c("cor", "month")#
oakop.precip.stack$Site <- as.factor("Oak_openings")#
oakop.precip.stack$type <- as.factor("precip")#
#
all.sites.precip <- rbind(harvard.precip.stack, howland.precip.stack, mo.precip.stack, mmf.precip.stack, oakop.precip.stack)#
#
summary(all.sites.precip)#
#
# Merging all stacked dataframes together to make plotting easier#
#
all.sites.climate <- rbind(all.sites.precip, all.sites.tmax, all.sites.tmin, all.sites.tmean)#
summary(all.sites.climate)#
#
# Sig value for 75 df = 0.2245#
all.sites.climate$sig <- ifelse(all.sites.climate$cor < -0.2245 | all.sites.climate$cor > 0.2245, "Y", "N")#
all.sites.climate$sig <- factor(all.sites.climate$sig, levels = c("Y", "N"))#
all.sites.climate$month <- factor(all.sites.climate$month, levels = c("pJan", "pFeb", "pMar", "pApr", "pMay", "pJun", "pJul", "pAug", "pSep", "pOct", "pNov", "pDec", "Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec", "pfall", "winter", "spring", "summer", "grow.seas"))#
#
all.sites.climate$Site <- factor(all.sites.climate$Site, levels = c("Missouri", "MMF", "Oak_openings", "Harvard", "Howland"))#
#
pdf("figures/site_correlations_allmonths_short.pdf", width= 13, height = 8.5)#
ggplot(data=all.sites.climate[all.sites.climate$month %in% c("pOct", "pNov", "pDec", "Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec", "spring", "summer", "pfall", "winter", "grow.seas"),]) + facet_grid(Site ~ type ) +#
	geom_bar(aes(x=month, y=cor, fill=sig), stat="identity", position="dodge", colour="black") +#
	geom_hline(yintercept=0.2245, linetype="dashed") + #
	geom_hline(yintercept=-0.2245, linetype="dashed") + 	#
	geom_hline(yintercept=0, linetype="solid") +#
	scale_fill_manual(values= c("green", "grey50"))+#
	theme(axis.text.x = element_text(angle = 45, hjust = 1))#
dev.off()#
#
summary(all.sites.climate$month)#
#
all.sites.gs <- all.sites.climate[all.sites.climate$month=="grow.seas",]#
summary(all.sites.gs)#
#
cbbPalette <- c("#009E73", "#e79f00", "#9ad0f3", "#0072B2", "#D55E00")#
#
all.sites.climate$type <- factor(all.sites.climate$type, levels=c("tmean", "precip", "tmin", "tmax"))#
pdf("figures/site_correlations_growing season.pdf", width= 13, height = 8.5)#
ggplot(data=all.sites.climate[all.sites.climate$month %in% "grow.seas" & all.sites.climate$type %in% c("tmean", "precip"),]) + facet_grid(~type) +#
  geom_bar(aes(x=month, y=cor, color=Site), stat="identity", position="dodge", fill=NA) + ylim(-0.6,0.6)+#
  geom_bar(aes(x=month, y=cor, color=Site), stat="identity", position="dodge", fill=NA) +ylim(-0.6,0.6)+#
  geom_bar(aes(x=month, y=cor, fill=Site, alpha=sig), stat="identity", position="dodge") +ylim(-0.6,0.6)+#
  geom_hline(yintercept=0.2245, linetype="dashed") + #
  geom_hline(yintercept=-0.2245, linetype="dashed") + 	#
  geom_hline(yintercept=0, linetype="solid") +#
 # scale_fill_manual(values= cbbPalette)+#
  scale_color_manual(values=cbbPalette) +#
  scale_fill_manual(values=cbbPalette) +#
  scale_alpha_manual(values = c(1, 0.2))+#
  poster.theme2 +#
  theme(axis.text.x = element_text(angle = 45, hjust = 1),panel.grid.major=element_blank(), panel.grid.minor= element_blank(), panel.border= element_blank(), panel.background= element_blank()) +#
  labs(title= "TR Site Climate Correlations", x="Seasons", y=expression(bold(paste("Correlation Value (r)"))))#
#
dev.off()#
#
#################################################################################
# Running correlations on the individual indices to get the full spread of the #
#################################################################################
#
all.sites.gs <- all.sites.climate[all.sites.climate$month=="grow.seas",]#
summary(all.sites.gs)#
#
all.sites.gs$State <- recode(all.sites.gs$Site, "'Missouri'='MO';'MMF'='IN';'Oak_openings'='OH';'Harvard'='MA';'Howland'='ME'")#
all.sites.gs$series <- as.factor("chron")#
summary(all.sites.gs)#
#
summary(climate.site$Howland[,])#
head(sites.i$Howland)#
#
summary(sites.i)#
index.cor.temp <- sites.i#
index.cor.precip <- sites.i#
#
test <- sites.i#
meow <- test#
#
# Running correlations fro Tmean and Precip on individual indices#
for(s in names(sites.i)){#
	for(i in names(sites.i[[s]])){#
		index.cor.temp[[s]][,i] <- cor(sites.i[[s]][,i], climate.site[[s]][,"tmean"], method="pearson")#
	}#
}	#
#
test <- cor(sites.i[["Harvard"]][,c(1:10)], climate.site[["Harvard"]][,"tmean"], method="pearson")#
for(s in names(sites.i)){#
	for(i in names(sites.i[[s]])){#
		index.cor.precip[[s]][,i] <- cor(sites.i[[s]][,i], climate.site[[s]][,"precip"], method="pearson") #
	}#
}	#
summary(index.cor.precip)#
#
# Now need to merge everything into one stacked file to be used with ggplot 2#
#
test <- data.frame()#
#
# Need to break it down by site#
#
# Harvard#
har.precip.stack <- stack(index.cor.precip[["Harvard"]])#
names(har.precip.stack)<- c("cor", "TreeID")#
har.precip.stack$State <- as.factor("MA")#
har.precip.stack$type <- as.factor("precip")#
summary(har.precip.stack)#
#
har.temp.stack <- stack(index.cor.temp[["Harvard"]])#
names(har.temp.stack)<- c("cor", "TreeID")#
har.temp.stack$State <- as.factor("MA")#
har.temp.stack$type <- as.factor("tmean")#
summary(har.temp.stack)#
#
har.stack <- merge(har.temp.stack, har.precip.stack, all.x=T, all.y=T)#
summary(har.stack)#
#
# Howland#
#
how.precip.stack <- stack(index.cor.precip[["Howland"]])#
names(how.precip.stack)<- c("cor", "TreeID")#
how.precip.stack$State <- as.factor("ME")#
how.precip.stack$type <- as.factor("precip")#
summary(how.precip.stack)#
#
how.temp.stack <- stack(index.cor.temp[["Howland"]])#
names(how.temp.stack)<- c("cor", "TreeID")#
how.temp.stack$State <- as.factor("ME")#
how.temp.stack$type <- as.factor("tmean")#
summary(how.temp.stack)#
#
how.stack <- merge(how.temp.stack, how.precip.stack, all.x=T, all.y=T)#
summary(how.stack)#
#
# Missouri#
#
mo.precip.stack <- stack(index.cor.precip[["Missouri Ozark"]])#
names(mo.precip.stack)<- c("cor", "TreeID")#
mo.precip.stack$State <- as.factor("MO")#
mo.precip.stack$type <- as.factor("precip")#
summary(mo.precip.stack)#
#
mo.temp.stack <- stack(index.cor.temp[["Missouri Ozark"]])#
names(mo.temp.stack)<- c("cor", "TreeID")#
mo.temp.stack$State <- as.factor("MO")#
mo.temp.stack$type <- as.factor("tmean")#
summary(mo.temp.stack)#
#
mo.stack <- merge(mo.temp.stack, mo.precip.stack, all.x=T, all.y=T)#
summary(mo.stack)#
# MMF#
#
mmf.precip.stack <- stack(index.cor.precip[["Morgan Monroe State Park"]])#
names(mmf.precip.stack)<- c("cor", "TreeID")#
mmf.precip.stack$State <- as.factor("IN")#
mmf.precip.stack$type <- as.factor("precip")#
summary(mmf.precip.stack)#
#
mmf.temp.stack <- stack(index.cor.temp[["Morgan Monroe State Park"]])#
names(mmf.temp.stack)<- c("cor", "TreeID")#
mmf.temp.stack$State <- as.factor("IN")#
mmf.temp.stack$type <- as.factor("tmean")#
summary(mmf.temp.stack)#
#
mmf.stack <- merge(mmf.temp.stack, mmf.precip.stack, all.x=T, all.y=T)#
summary(mmf.stack)#
# Oak Openings#
#
oak.precip.stack <- stack(index.cor.precip[["Oak Openings Toledo"]])#
names(oak.precip.stack)<- c("cor", "TreeID")#
oak.precip.stack$State <- as.factor("OH")#
oak.precip.stack$type <- as.factor("precip")#
summary(oak.precip.stack)#
#
oak.temp.stack <- stack(index.cor.temp[["Oak Openings Toledo"]])#
names(oak.temp.stack)<- c("cor", "TreeID")#
oak.temp.stack$State <- as.factor("OH")#
oak.temp.stack$type <- as.factor("tmean")#
summary(oak.temp.stack)#
#
oak.stack <- merge(oak.temp.stack, oak.precip.stack, all.x=T, all.y=T)#
summary(oak.stack)#
#
cor.all.stack <- rbind(har.stack, how.stack, mmf.stack, oak.stack, mo.stack)#
summary(cor.all.stack)#
#
# Calculating Tukey Biweight Robust mean#
#
for(s in unique(cor.all.stack$State)){#
	for(t in unique(cor.all.stack$type)){#
	cor.all.stack[cor.all.stack$State==s & cor.all.stack$type==t,"biweight.mean"] <- TukeyBiweight(cor.all.stack[cor.all.stack$State==s & cor.all.stack$type==t,"cor"], na.rm=T)#
	}#
}#
summary(cor.all.stack)#
#
# creating a significance column#
cor.all.stack$sig <- ifelse(cor.all.stack$cor < -0.2245 | cor.all.stack$cor > 0.2245, "Y", "N")#
cor.all.stack$sig <- factor(cor.all.stack$sig, levels = c("Y", "N"))#
#
cor.all.stack$State <- factor(cor.all.stack$State, levels=c("MO", "IN", "OH", "MA", "ME"))#
summary(cor.all.stack)#
#
cor.all.stack$type <- factor(cor.all.stack$type, levels = c("precip", "tmean"))#
cor.all.stack$series <- as.factor("index")#
#
summary(all.sites.gs)#
summary(cor.all.stack)#
#
summary(cor.all.stack[is.na(cor.all.stack$cor),])#
#
pdf("figures/violin_climate_cor.pdf", height=8, width=13)#
ggplot(data=cor.all.stack) + facet_grid(~type)+#
#
	geom_violin(aes(x=State, y=cor, fill=State), adjust = 2, trim=T) + ylim(-0.6,0.6)+#
	geom_point(data=all.sites.gs[all.sites.gs$type %in% c("precip", "tmean"),],aes(x=State, y=cor), shape=126, size=25)+ ylim(-0.6,0.6)+#
	geom_point(aes(x=State, y=biweight.mean), shape=95, size=25)+ ylim(-0.6,0.6)+#
	geom_hline(yintercept=0.2245, linetype="dashed") + #
  	geom_hline(yintercept=-0.2245, linetype="dashed") + 	#
  	geom_hline(yintercept=0, linetype="solid") +#
#
	scale_color_manual(values=cbbPalette) +#
  	scale_fill_manual(values=cbbPalette) +#
  	poster.theme2 +#
  	theme(axis.text.x = element_text(angle = 45, hjust = 1),panel.grid.major=element_blank(), panel.grid.minor= 	element_blank(), panel.border= element_blank(), panel.background= element_blank()) +#
  	labs(title= "TR Index Climate Correlations", x="State", y=expression(bold(paste("Correlation Value (r)"))))#
dev.off()
library(mgcv)#
library(ggplot2)#
library(car)#
library(reshape)#
library(dplR)#
library(DescTools)#
# Christy's GAMM code#
#
# gam1 <- gamm(Y ~  s(Biomass, bs="cr", k=3, by=PFT) + s(tair, k=k, by=PFT) + s(precipf, k=k, by=PFT) + s(CO2, k=k, by=PFT), random=list(PlotID=~1), data=data) #
#
# Loading in my data#
#
data.use <- read.csv("processed_data/AllSites_tree_plus_climate_and_BA.csv", header=T)#
#
data.use$group <- data.use$Species#
data.use$group <- recode(data.use$group, "'CAOV' = 'CARYA'; 'CACO' = 'CARYA'; #
  							'CATE' = 'CARYA'; 'ACSAC' = 'ACSA'; 'BEAL' = 'BETULA'; 'BELE' = 'BETULA'; 'QUMU' = 'QUAL'")#
#
data.use$group.plot <- as.factor(paste(data.use$group, data.use$PlotID, sep="."))#
#
data.use$Canopy.Class <- recode(data.use$Canopy.Class, "'C' = 'D'")#
summary(data.use)#
# reducing the amount of data for the test runs#
sites.use <- c("Harvard", "Howland", "Morgan Monroe State Park", "Oak Openings Toledo", "Missouri Ozark")#
#
test <- data.use[data.use$Site %in% sites.use & !is.na(data.use$RW) & !is.na(data.use$BA.inc),]#
summary(test)#
#
test$group.cc <- as.factor(paste(test$group, test$Canopy.Class, sep="."))#
summary(test)#
# Get a list of what predictors & responses I'm using#
predictors.all <- c("tmean", "precip", "Species", "dbh.recon", "Canopy.Class", "spp.plot", "group", "group.plot", "group.cc")#
#
# Getting rid of observations that have NAs in the important variables#
test <- test[complete.cases(test[,predictors.all]),]#
test <- test[test$Live.Dead=="LIVE" & !test$Canopy.Class=="F",]#
#
# Subsetting to a set of species that we have enough data to feel good about#
#species.use <- c("TSCA", "QURU", "ACRU", "BEAL", "ACSA", "LITU", "QUAL", "CAOV", "CACO", "CATE", "JUVI", "QUVE", "PCRU", "THOC", "PIST")#
group.use <- c("ACRU", "ACSA", "BETULA", "CARYA", "FAGR", "FRAX", "PIST", "QUAL", "QURU", "QUVE", "SAAL", "TSCA", "ULRU")#
#
test <- test[test$group %in% group.use,]#
#
summary(test)#
#
# Right now just looking at the dominant trees.  Not sure how to show this yet#
test <- test[test$Canopy.Class=="S",]#
#
par(new=F)#
plot(test[test$TreeID=="MMA003", "BA.inc"]~ test[test$TreeID=="MMA003","Year"], type="l")#
summary(test)#
# Truncatign at 1935; at 1935 the sample depth for the oak openings is only 1#
test <- test[test$Year >= 1935 & test$Year <= 2012,]#
#
tree.rw <- test#
summary(tree.rw)#
#
summary(test)#
save(test, file="processed_data/test_tree_data_1935_2012.Rdata")#
#
sites.rw <- list()#
#
tree.rw$Year <- as.factor(tree.rw$Year)#
#
for(s in unique(tree.rw$Site)){#
	sites.rw[[s]] <- recast(tree.rw[tree.rw$Site==s,c("Year", "TreeID", "RW")], Year ~ TreeID)	#
}#
summary(sites.rw)#
#
save(sites.rw, file="processed_data/sites_rw.Rdata")#
summary(sites.rw[[4]])#
sites.rw#
# Making Indices of all the different sites using a 30 yr cubic smoothing spline#
sites.i <- list()#
#
for(s in names(sites.rw)){#
	sites.i[[s]] <- detrend(sites.rw[[s]][,2:ncol(sites.rw[[s]])], method="Spline", nyr=30)#
}#
summary(sites.i[[1]])#
#
# making chronologies for each site#
#
site.chron <- list()#
#
for(s in names(sites.i)){#
	site.chron[[s]] <- chron(sites.i[[s]][,2:ncol(sites.i[[s]])], prefix = substr(s, 1, 3), prewhiten = T) #
	site.chron[[s]][,"Year"]<- c(1935:2012) #
}#
#
summary(site.chron[[5]])#
# Making each site it's own dataframe#
harvard.crn <- as.data.frame(site.chron[[1]])#
#
howland.crn <- as.data.frame(site.chron[[2]])#
#
misso.crn <- as.data.frame(site.chron[[3]])#
#
mmf.crn <- as.data.frame(site.chron[[4]])#
#
oakop.crn <- as.data.frame(site.chron[[5]])#
# Plotting thigns for presentation#
par(cex=2 )#
plot(mmf.crn$Morres ~ mmf.crn$Year, type="l", lwd=5, axes=F, cex=6, col="white")#
abline(h=1,lty="dashed", col="white")#
axis(side =1,tck= 0.05) #
axis(side=2,tck=0.05)#
#
#Plotting out mmfsites#
summary(test)#
#
mmf <- test[test$Site %in% "Morgan Monroe State Park",]#
#
summary(mmf)#
#
for(i in unique(mmf$Year)){#
  mmf[mmf$Year==i,"Mean"] <- mean(mmf[mmf$Year==i,"RW"])#
  mmf[mmf$Year==i,"UB"] <- quantile(mmf[mmf$Year==i,"RW"], 0.975)#
  mmf[mmf$Year==i,"LB"] <- quantile(mmf[mmf$Year==i,"RW"], 0.025)#
}#
#
summary(mmf)#
#
ggplot(data=mmf)+#
  # geom_line(aes(x=Year, y=RW))#
  geom_ribbon(aes(x=Year, ymin=LB, ymax=UB), alpha=0.5, fill="white")+#
  geom_line(aes(x=Year, y=Mean), size=2, color="white")+#
  poster.theme2#
# Merging the residual chronologies back together#
sites.crn <- data.frame(Harvard = harvard.crn[, "Harres"], #
						Howland = howland.crn[,"Howres"], #
						Missouri = misso.crn[,"Misres"],#
						Morgan_Monroe = mmf.crn[,"Morres"], #
						Oak_openings = oakop.crn[,"Oakres"]#
						)#
#
summary(sites.crn)#
# Load in climate data#
#
climate.use <- read.csv("processed_data/climate_growing_season.csv")#
#
summary(climate.use)#
#
climate.use <- climate.use[climate.use$Site %in% sites.use,]#
climate.use <- climate.use[climate.use$Year>=1935 & climate.use$Year <=2012,]#
#
climate.site <- list()#
#
for(s in unique(climate.use$Site)){#
	climate.site[[s]] <- climate.use[climate.use$Site==s,]#
}#
#
summary(climate.site)#
save(climate.site, file="processed_data/sites_use_climate.Rdata")#
class(climate.site[[1]][,"Year"])#
#
head(climate.site[[1]])#
#
summary(climate.site[[1]])#
#
harv.clim <- climate.site[["Harvard"]][,c("tmean", "precip")]#
#
how.clim <- climate.site[["Howland"]][,c("tmean", "precip")]#
#
miss.clim <- climate.site[["Missouri Ozark"]][,c("tmean", "precip")]#
#
mmf.clim <- climate.site[["Morgan Monroe State Park"]][,c("tmean", "precip")]#
#
oak.clim <- climate.site[["Oak Openings Toledo"]][,c("tmean", "precip")]#
dim(harv.clim)#
dim(harvard.crn)#
#
# harvard#
harv.cor<- cor(harvard.crn, harv.clim[,c("tmean", "precip")], method="pearson")#
harvard <- data.frame(cor = c(harv.cor[1:2,"tmean"],  harv.cor[1:2,"precip"]),#
					  var = c("tmean", "tmean", "precip", "precip"))#
harvard$type <- c("std", "res")#
harvard$site <- "Harvard" #
# Howland#
how.cor <- cor(howland.crn, how.clim[,c("tmean", "precip")], method="pearson")#
how.cor#
#
howland <- data.frame(cor = c(how.cor[1:2,"tmean"],  how.cor[1:2,"precip"]),#
					  var = c("tmean", "tmean", "precip", "precip"))#
howland$type <- c("std", "res")#
howland$site <- "Howland" #
# Missouri#
mo.cor <- cor(misso.crn, miss.clim[,c("tmean", "precip")], method="pearson")#
mo.cor#
#
missouri <- data.frame(cor = c(mo.cor[1:2,"tmean"],  mo.cor[1:2,"precip"]),#
					  var = c("tmean", "tmean", "precip", "precip"))#
missouri$type <- c("std", "res")#
missouri$site <- "Missouri" #
#
# Morgan Monroe#
mmf.cor <- cor(mmf.crn, mmf.clim[,c("tmean", "precip")], method="pearson")#
mmf.cor#
#
morgan <- data.frame(cor = c(mmf.cor[1:2,"tmean"],  mmf.cor[1:2,"precip"]),#
					  var = c("tmean", "tmean", "precip", "precip"))#
morgan$type <- c("std", "res")#
morgan$site <- "Morgan-Monroe" #
#
# Oak openings#
oakop.cor <- cor(oakop.crn, oak.clim[,c("tmean", "precip")], method="pearson")#
oakop.cor#
#
oakop <- data.frame(cor = c(oakop.cor[1:2,"tmean"],  oakop.cor[1:2,"precip"]),#
					  var = c("tmean", "tmean", "precip", "precip"))#
oakop$type <- c("std", "res")#
oakop$site <- "Oak-Openings" #
#
# Merging standard chronologies into one file#
#
clim.cor <- merge(harvard, howland, all.x=T, all.y=T)#
clim.cor2 <- merge(clim.cor, missouri,all.x=T, all.y=T)#
clim.cor3 <- merge(clim.cor2, morgan,all.x=T, all.y=T)#
clim.cor4 <- merge(clim.cor3, oakop,all.x=T, all.y=T)#
#
summary(clim.cor4)#
clim.cor4$site <- as.factor(clim.cor4$site)#
clim.cor4$type <- as.factor(clim.cor4$type)#
clim.cor4$cor <- as.numeric(clim.cor4$cor)#
#
# Sig value for 81 df = 0.209#
clim.cor4$sig <- ifelse(clim.cor4$cor < -0.2245 | clim.cor4$cor > 0.2245, "Y", "N")#
clim.cor4$sig <- factor(clim.cor4$sig, levels = c("Y", "N"))#
#
clim.cor4$site <- factor(clim.cor4$site, levels = c("Missouri", "Morgan-Monroe", "Oak-Openings", "Harvard", "Howland"))#
#
clim.cor4$Site <- clim.cor4$site#
clim.cor4$Site <- recode(clim.cor4$Site, "'Missouri' = 'MO'; 'Morgan-Monroe' = 'IN'; 'Oak-Openings' = 'OH'; 'Harvard' = 'MA'; 'Howland' = 'ME'")#
clim.cor4$Site <- factor(clim.cor4$Site, levels = c("MO", "IN", "OH", "MA", "ME"))#
pdf("figures/site_correlations.pdf", width= 13, height = 8.5)#
ggplot(data=clim.cor4[clim.cor4$type=="std",]) + facet_grid(var~. , scales="free_x") +#
	geom_bar(aes(x=Site, y=cor, fill=sig), stat="identity", position="dodge", colour="black") +#
	geom_hline(yintercept=0.2245, linetype="dashed") + #
	geom_hline(yintercept=-0.2245, linetype="dashed") + 	#
	geom_hline(yintercept=0, linetype="solid") +#
	scale_fill_manual(values= c("green", "grey50")) + #
	poster.theme2#
dev.off()#
#
#######################################################################
# Gettign correlations for all for all of the available climate data data#
#######################################################################
# Loading in climate data#
t.mean <- read.csv("processed_data/ch2_tmean.csv", header=T)#
t.min <- read.csv("processed_data/ch2_tmin.csv", header=T)#
t.max <- read.csv("processed_data/ch2_tmax.csv", header=T)#
precip <- read.csv("processed_data/ch2_precip.csv", header=T)#
summary(t.mean)#
#
# Limiting time frame--1935-2012#
t.mean <- t.mean[t.mean$Year >= 1936 & t.mean$Year <= 2012,]#
t.min <- t.min[t.min$Year >= 1936 & t.min$Year <= 2012,]#
t.max <- t.max[t.max$Year >= 1936 & t.max$Year <= 2012,]#
precip <- precip[precip$Year >= 1936 & precip$Year <= 2012,]#
summary(t.mean)#
summary(t.min)#
summary(t.max)#
summary(precip)#
#
head(t.mean)#
unique(t.mean$Site.Name)#
#
t.mean$Site.Name <- recode(t.mean$Site.Name, "'Missouri Ozark' = 'Missouri'; 'Morgan Monroe State Park'='Morgan_Monroe'; 'Oak Openings Toledo' = 'Oak_openings'")#
#
t.min$Site.Name <- recode(t.min$Site.Name, "'Missouri Ozark' = 'Missouri'; 'Morgan Monroe State Park'='Morgan_Monroe'; 'Oak Openings Toledo' = 'Oak_openings'")#
t.max$Site.Name <- recode(t.max$Site.Name, "'Missouri Ozark' = 'Missouri'; 'Morgan Monroe State Park'='Morgan_Monroe'; 'Oak Openings Toledo' = 'Oak_openings'")#
precip$Site.Name <- recode(precip$Site.Name, "'Missouri Ozark' = 'Missouri'; 'Morgan Monroe State Park'='Morgan_Monroe'; 'Oak Openings Toledo' = 'Oak_openings'")#
# getting the ring widths in a data frame#
summary(sites.crn)#
sites.crn$Year <- site.chron[[1]][,"Year"]#
head(sites.crn)#
sites.crn <- sites.crn[sites.crn$Year > 1935,]#
#--------------------------------------------#
# Tmean correlation#
#--------------------------------------------#
#
sites <- c("Harvard", "Howland", "Missouri", "Morgan_Monroe", "Oak_openings")#
#
tmean.corr<-list()#
#
for(i in sites){#
	tmean.corr[[i]] <- cor(sites.crn[,i], t.mean[t.mean$Site.Name %in% i,!names(t.mean) %in% c("Site.Name", "Year")], method="pearson")#
}#
summary(tmean.corr)#
#
# Making each site it's own dataframe#
harvard.tmean <- as.data.frame(tmean.corr[[1]])#
#
harvard.tmean.stack <- stack(harvard.tmean)#
names(harvard.tmean.stack)<- c("cor", "month")#
harvard.tmean.stack$Site <- as.factor("Harvard")#
harvard.tmean.stack$type <- as.factor("tmean")#
#
howland.tmean <- as.data.frame(tmean.corr[[2]])#
#
howland.tmean.stack <- stack(howland.tmean)#
names(howland.tmean.stack)<- c("cor", "month")#
howland.tmean.stack$Site <- as.factor("Howland")#
howland.tmean.stack$type <- as.factor("tmean")#
#
mo.tmean <- as.data.frame(tmean.corr[[3]])#
#
mo.tmean.stack <- stack(mo.tmean)#
names(mo.tmean.stack)<- c("cor", "month")#
mo.tmean.stack$Site <- as.factor("Missouri")#
mo.tmean.stack$type <- as.factor("tmean")#
#
mmf.tmean <- as.data.frame(tmean.corr[[4]])#
#
mmf.tmean.stack <- stack(mmf.tmean)#
names(mmf.tmean.stack)<- c("cor", "month")#
mmf.tmean.stack$Site <- as.factor("MMF")#
mmf.tmean.stack$type <- as.factor("tmean")#
#
oakop.tmean <- as.data.frame(tmean.corr[[5]])#
#
oakop.tmean.stack <- stack(oakop.tmean)#
names(oakop.tmean.stack)<- c("cor", "month")#
oakop.tmean.stack$Site <- as.factor("Oak_openings")#
oakop.tmean.stack$type <- as.factor("tmean")#
#
all.sites.tmean <- rbind(harvard.tmean.stack, howland.tmean.stack, mo.tmean.stack, mmf.tmean.stack, oakop.tmean.stack)#
#
summary(all.sites.tmean)#
#
#--------------------------------------------#
# Tmin correlation#
#--------------------------------------------#
#
sites <- c("Harvard", "Howland", "Missouri", "Morgan_Monroe", "Oak_openings")#
#
tmin.corr<-list()#
#
for(i in sites){#
	tmin.corr[[i]] <- cor(sites.crn[,i], t.min[t.min$Site.Name %in% i,!names(t.min) %in% c("Site.Name", "Year")], method="pearson")#
}#
summary(tmin.corr)#
#
# Making each site it's own dataframe#
harvard.tmin <- as.data.frame(tmin.corr[[1]])#
#
harvard.tmin.stack <- stack(harvard.tmin)#
names(harvard.tmin.stack)<- c("cor", "month")#
harvard.tmin.stack$Site <- as.factor("Harvard")#
harvard.tmin.stack$type <- as.factor("tmin")#
#
howland.tmin <- as.data.frame(tmin.corr[[2]])#
#
howland.tmin.stack <- stack(howland.tmin)#
names(howland.tmin.stack)<- c("cor", "month")#
howland.tmin.stack$Site <- as.factor("Howland")#
howland.tmin.stack$type <- as.factor("tmin")#
#
mo.tmin <- as.data.frame(tmin.corr[[3]])#
#
mo.tmin.stack <- stack(mo.tmin)#
names(mo.tmin.stack)<- c("cor", "month")#
mo.tmin.stack$Site <- as.factor("Missouri")#
mo.tmin.stack$type <- as.factor("tmin")#
#
mmf.tmin <- as.data.frame(tmin.corr[[4]])#
#
mmf.tmin.stack <- stack(mmf.tmin)#
names(mmf.tmin.stack)<- c("cor", "month")#
mmf.tmin.stack$Site <- as.factor("MMF")#
mmf.tmin.stack$type <- as.factor("tmin")#
#
oakop.tmin <- as.data.frame(tmin.corr[[5]])#
#
oakop.tmin.stack <- stack(oakop.tmin)#
names(oakop.tmin.stack)<- c("cor", "month")#
oakop.tmin.stack$Site <- as.factor("Oak_openings")#
oakop.tmin.stack$type <- as.factor("tmin")#
#
all.sites.tmin <- rbind(harvard.tmin.stack, howland.tmin.stack, mo.tmin.stack, mmf.tmin.stack, oakop.tmin.stack)#
#
summary(all.sites.tmin)#
#--------------------------------------------#
# Tmax correlation#
#--------------------------------------------#
#
sites <- c("Harvard", "Howland", "Missouri", "Morgan_Monroe", "Oak_openings")#
#
tmax.corr<-list()#
#
for(i in sites){#
	tmax.corr[[i]] <- cor(sites.crn[,i], t.max[t.max$Site.Name %in% i,!names(t.max) %in% c("Site.Name", "Year")], method="pearson")#
}#
summary(tmax.corr)#
#
# Making each site it's own dataframe#
harvard.tmax <- as.data.frame(tmax.corr[[1]])#
#
harvard.tmax.stack <- stack(harvard.tmax)#
names(harvard.tmax.stack)<- c("cor", "month")#
harvard.tmax.stack$Site <- as.factor("Harvard")#
harvard.tmax.stack$type <- as.factor("tmax")#
#
howland.tmax <- as.data.frame(tmax.corr[[2]])#
#
howland.tmax.stack <- stack(howland.tmax)#
names(howland.tmax.stack)<- c("cor", "month")#
howland.tmax.stack$Site <- as.factor("Howland")#
howland.tmax.stack$type <- as.factor("tmax")#
#
mo.tmax <- as.data.frame(tmax.corr[[3]])#
#
mo.tmax.stack <- stack(mo.tmax)#
names(mo.tmax.stack)<- c("cor", "month")#
mo.tmax.stack$Site <- as.factor("Missouri")#
mo.tmax.stack$type <- as.factor("tmax")#
#
mmf.tmax <- as.data.frame(tmax.corr[[4]])#
#
mmf.tmax.stack <- stack(mmf.tmax)#
names(mmf.tmax.stack)<- c("cor", "month")#
mmf.tmax.stack$Site <- as.factor("MMF")#
mmf.tmax.stack$type <- as.factor("tmax")#
#
oakop.tmax <- as.data.frame(tmax.corr[[5]])#
#
oakop.tmax.stack <- stack(oakop.tmax)#
names(oakop.tmax.stack)<- c("cor", "month")#
oakop.tmax.stack$Site <- as.factor("Oak_openings")#
oakop.tmax.stack$type <- as.factor("tmax")#
#
all.sites.tmax <- rbind(harvard.tmax.stack, howland.tmax.stack, mo.tmax.stack, mmf.tmax.stack, oakop.tmax.stack)#
#
summary(all.sites.tmax)#
#--------------------------------------------#
# Precip correlation#
#--------------------------------------------#
sites <- c("Harvard", "Howland", "Missouri", "Morgan_Monroe", "Oak_openings")#
#
precip.corr<-list()#
#
for(i in sites){#
	precip.corr[[i]] <- cor(sites.crn[,i], precip[precip$Site.Name %in% i,!names(precip) %in% c("Site.Name", "Year")], method="pearson")#
}#
summary(precip.corr)#
#
# Making each site it's own dataframe#
harvard.precip <- as.data.frame(precip.corr[[1]])#
#
harvard.precip.stack <- stack(harvard.precip)#
names(harvard.precip.stack)<- c("cor", "month")#
harvard.precip.stack$Site <- as.factor("Harvard")#
harvard.precip.stack$type <- as.factor("precip")#
#
howland.precip <- as.data.frame(precip.corr[[2]])#
#
howland.precip.stack <- stack(howland.precip)#
names(howland.precip.stack)<- c("cor", "month")#
howland.precip.stack$Site <- as.factor("Howland")#
howland.precip.stack$type <- as.factor("precip")#
#
mo.precip <- as.data.frame(precip.corr[[3]])#
#
mo.precip.stack <- stack(mo.precip)#
names(mo.precip.stack)<- c("cor", "month")#
mo.precip.stack$Site <- as.factor("Missouri")#
mo.precip.stack$type <- as.factor("precip")#
#
mmf.precip <- as.data.frame(precip.corr[[4]])#
#
mmf.precip.stack <- stack(mmf.precip)#
names(mmf.precip.stack)<- c("cor", "month")#
mmf.precip.stack$Site <- as.factor("MMF")#
mmf.precip.stack$type <- as.factor("precip")#
#
oakop.precip <- as.data.frame(precip.corr[[5]])#
#
oakop.precip.stack <- stack(oakop.precip)#
names(oakop.precip.stack)<- c("cor", "month")#
oakop.precip.stack$Site <- as.factor("Oak_openings")#
oakop.precip.stack$type <- as.factor("precip")#
#
all.sites.precip <- rbind(harvard.precip.stack, howland.precip.stack, mo.precip.stack, mmf.precip.stack, oakop.precip.stack)#
#
summary(all.sites.precip)#
#
# Merging all stacked dataframes together to make plotting easier#
#
all.sites.climate <- rbind(all.sites.precip, all.sites.tmax, all.sites.tmin, all.sites.tmean)#
summary(all.sites.climate)#
#
# Sig value for 75 df = 0.2245#
all.sites.climate$sig <- ifelse(all.sites.climate$cor < -0.2245 | all.sites.climate$cor > 0.2245, "Y", "N")#
all.sites.climate$sig <- factor(all.sites.climate$sig, levels = c("Y", "N"))#
all.sites.climate$month <- factor(all.sites.climate$month, levels = c("pJan", "pFeb", "pMar", "pApr", "pMay", "pJun", "pJul", "pAug", "pSep", "pOct", "pNov", "pDec", "Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec", "pfall", "winter", "spring", "summer", "grow.seas"))#
#
all.sites.climate$Site <- factor(all.sites.climate$Site, levels = c("Missouri", "MMF", "Oak_openings", "Harvard", "Howland"))#
#
pdf("figures/site_correlations_allmonths_short.pdf", width= 13, height = 8.5)#
ggplot(data=all.sites.climate[all.sites.climate$month %in% c("pOct", "pNov", "pDec", "Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec", "spring", "summer", "pfall", "winter", "grow.seas"),]) + facet_grid(Site ~ type ) +#
	geom_bar(aes(x=month, y=cor, fill=sig), stat="identity", position="dodge", colour="black") +#
	geom_hline(yintercept=0.2245, linetype="dashed") + #
	geom_hline(yintercept=-0.2245, linetype="dashed") + 	#
	geom_hline(yintercept=0, linetype="solid") +#
	scale_fill_manual(values= c("green", "grey50"))+#
	theme(axis.text.x = element_text(angle = 45, hjust = 1))#
dev.off()#
#
summary(all.sites.climate$month)#
#
all.sites.gs <- all.sites.climate[all.sites.climate$month=="grow.seas",]#
summary(all.sites.gs)#
#
cbbPalette <- c("#009E73", "#e79f00", "#9ad0f3", "#0072B2", "#D55E00")#
#
all.sites.climate$type <- factor(all.sites.climate$type, levels=c("tmean", "precip", "tmin", "tmax"))#
pdf("figures/site_correlations_growing season.pdf", width= 13, height = 8.5)#
ggplot(data=all.sites.climate[all.sites.climate$month %in% "grow.seas" & all.sites.climate$type %in% c("tmean", "precip"),]) + facet_grid(~type) +#
  geom_bar(aes(x=month, y=cor, color=Site), stat="identity", position="dodge", fill=NA) + ylim(-0.6,0.6)+#
  geom_bar(aes(x=month, y=cor, color=Site), stat="identity", position="dodge", fill=NA) +ylim(-0.6,0.6)+#
  geom_bar(aes(x=month, y=cor, fill=Site, alpha=sig), stat="identity", position="dodge") +ylim(-0.6,0.6)+#
  geom_hline(yintercept=0.2245, linetype="dashed") + #
  geom_hline(yintercept=-0.2245, linetype="dashed") + 	#
  geom_hline(yintercept=0, linetype="solid") +#
 # scale_fill_manual(values= cbbPalette)+#
  scale_color_manual(values=cbbPalette) +#
  scale_fill_manual(values=cbbPalette) +#
  scale_alpha_manual(values = c(1, 0.2))+#
  poster.theme2 +#
  theme(axis.text.x = element_text(angle = 45, hjust = 1),panel.grid.major=element_blank(), panel.grid.minor= element_blank(), panel.border= element_blank(), panel.background= element_blank()) +#
  labs(title= "TR Site Climate Correlations", x="Seasons", y=expression(bold(paste("Correlation Value (r)"))))#
#
dev.off()#
#
#################################################################################
# Running correlations on the individual indices to get the full spread of the #
#################################################################################
#
all.sites.gs <- all.sites.climate[all.sites.climate$month=="grow.seas",]#
summary(all.sites.gs)#
#
all.sites.gs$State <- recode(all.sites.gs$Site, "'Missouri'='MO';'MMF'='IN';'Oak_openings'='OH';'Harvard'='MA';'Howland'='ME'")#
all.sites.gs$series <- as.factor("chron")#
summary(all.sites.gs)#
#
summary(climate.site$Howland[,])#
head(sites.i$Howland)#
#
summary(sites.i)#
index.cor.temp <- sites.i#
index.cor.precip <- sites.i#
#
test <- sites.i#
meow <- test#
#
# Running correlations fro Tmean and Precip on individual indices#
for(s in names(sites.i)){#
	for(i in names(sites.i[[s]])){#
		index.cor.temp[[s]][,i] <- cor(sites.i[[s]][,i], climate.site[[s]][,"tmean"], method="pearson")#
	}#
}	#
#
test <- cor(sites.i[["Harvard"]][,c(1:10)], climate.site[["Harvard"]][,"tmean"], method="pearson")#
for(s in names(sites.i)){#
	for(i in names(sites.i[[s]])){#
		index.cor.precip[[s]][,i] <- cor(sites.i[[s]][,i], climate.site[[s]][,"precip"], method="pearson") #
	}#
}	#
summary(index.cor.precip)#
#
# Now need to merge everything into one stacked file to be used with ggplot 2#
#
test <- data.frame()#
#
# Need to break it down by site#
#
# Harvard#
har.precip.stack <- stack(index.cor.precip[["Harvard"]])#
names(har.precip.stack)<- c("cor", "TreeID")#
har.precip.stack$State <- as.factor("MA")#
har.precip.stack$type <- as.factor("precip")#
summary(har.precip.stack)#
#
har.temp.stack <- stack(index.cor.temp[["Harvard"]])#
names(har.temp.stack)<- c("cor", "TreeID")#
har.temp.stack$State <- as.factor("MA")#
har.temp.stack$type <- as.factor("tmean")#
summary(har.temp.stack)#
#
har.stack <- merge(har.temp.stack, har.precip.stack, all.x=T, all.y=T)#
summary(har.stack)#
#
# Howland#
#
how.precip.stack <- stack(index.cor.precip[["Howland"]])#
names(how.precip.stack)<- c("cor", "TreeID")#
how.precip.stack$State <- as.factor("ME")#
how.precip.stack$type <- as.factor("precip")#
summary(how.precip.stack)#
#
how.temp.stack <- stack(index.cor.temp[["Howland"]])#
names(how.temp.stack)<- c("cor", "TreeID")#
how.temp.stack$State <- as.factor("ME")#
how.temp.stack$type <- as.factor("tmean")#
summary(how.temp.stack)#
#
how.stack <- merge(how.temp.stack, how.precip.stack, all.x=T, all.y=T)#
summary(how.stack)#
#
# Missouri#
#
mo.precip.stack <- stack(index.cor.precip[["Missouri Ozark"]])#
names(mo.precip.stack)<- c("cor", "TreeID")#
mo.precip.stack$State <- as.factor("MO")#
mo.precip.stack$type <- as.factor("precip")#
summary(mo.precip.stack)#
#
mo.temp.stack <- stack(index.cor.temp[["Missouri Ozark"]])#
names(mo.temp.stack)<- c("cor", "TreeID")#
mo.temp.stack$State <- as.factor("MO")#
mo.temp.stack$type <- as.factor("tmean")#
summary(mo.temp.stack)#
#
mo.stack <- merge(mo.temp.stack, mo.precip.stack, all.x=T, all.y=T)#
summary(mo.stack)#
# MMF#
#
mmf.precip.stack <- stack(index.cor.precip[["Morgan Monroe State Park"]])#
names(mmf.precip.stack)<- c("cor", "TreeID")#
mmf.precip.stack$State <- as.factor("IN")#
mmf.precip.stack$type <- as.factor("precip")#
summary(mmf.precip.stack)#
#
mmf.temp.stack <- stack(index.cor.temp[["Morgan Monroe State Park"]])#
names(mmf.temp.stack)<- c("cor", "TreeID")#
mmf.temp.stack$State <- as.factor("IN")#
mmf.temp.stack$type <- as.factor("tmean")#
summary(mmf.temp.stack)#
#
mmf.stack <- merge(mmf.temp.stack, mmf.precip.stack, all.x=T, all.y=T)#
summary(mmf.stack)#
# Oak Openings#
#
oak.precip.stack <- stack(index.cor.precip[["Oak Openings Toledo"]])#
names(oak.precip.stack)<- c("cor", "TreeID")#
oak.precip.stack$State <- as.factor("OH")#
oak.precip.stack$type <- as.factor("precip")#
summary(oak.precip.stack)#
#
oak.temp.stack <- stack(index.cor.temp[["Oak Openings Toledo"]])#
names(oak.temp.stack)<- c("cor", "TreeID")#
oak.temp.stack$State <- as.factor("OH")#
oak.temp.stack$type <- as.factor("tmean")#
summary(oak.temp.stack)#
#
oak.stack <- merge(oak.temp.stack, oak.precip.stack, all.x=T, all.y=T)#
summary(oak.stack)#
#
cor.all.stack <- rbind(har.stack, how.stack, mmf.stack, oak.stack, mo.stack)#
summary(cor.all.stack)#
#
# Calculating Tukey Biweight Robust mean#
#
for(s in unique(cor.all.stack$State)){#
	for(t in unique(cor.all.stack$type)){#
	cor.all.stack[cor.all.stack$State==s & cor.all.stack$type==t,"biweight.mean"] <- TukeyBiweight(cor.all.stack[cor.all.stack$State==s & cor.all.stack$type==t,"cor"], na.rm=T)#
	}#
}#
summary(cor.all.stack)#
#
# creating a significance column#
cor.all.stack$sig <- ifelse(cor.all.stack$cor < -0.2245 | cor.all.stack$cor > 0.2245, "Y", "N")#
cor.all.stack$sig <- factor(cor.all.stack$sig, levels = c("Y", "N"))#
#
cor.all.stack$State <- factor(cor.all.stack$State, levels=c("MO", "IN", "OH", "MA", "ME"))#
summary(cor.all.stack)#
#
cor.all.stack$type <- factor(cor.all.stack$type, levels = c("precip", "tmean"))#
cor.all.stack$series <- as.factor("index")#
#
summary(all.sites.gs)#
summary(cor.all.stack)#
#
summary(cor.all.stack[is.na(cor.all.stack$cor),])#
#
pdf("figures/violin_climate_cor.pdf", height=8, width=13)#
ggplot(data=cor.all.stack) + facet_grid(~type)+#
#
	geom_violin(aes(x=State, y=cor, fill=State), adjust = 2, trim=T) + ylim(-0.6,0.6)+#
	geom_point(data=all.sites.gs[all.sites.gs$type %in% c("precip", "tmean"),],aes(x=State, y=cor), shape=126, size=25)+ ylim(-0.6,0.6)+#
	geom_point(aes(x=State, y=biweight.mean), shape=95, size=25)+ ylim(-0.6,0.6)+#
	geom_hline(yintercept=0.2245, linetype="dashed") + #
  	geom_hline(yintercept=-0.2245, linetype="dashed") + 	#
  	geom_hline(yintercept=0, linetype="solid") +#
#
	scale_color_manual(values=cbbPalette) +#
  	scale_fill_manual(values=cbbPalette) +#
  	poster.theme2 +#
  	theme(axis.text.x = element_text(angle = 45, hjust = 1),panel.grid.major=element_blank(), panel.grid.minor= 	element_blank(), panel.border= element_blank(), panel.background= element_blank()) +#
  	labs(title= "TR Index Climate Correlations", x="State", y=expression(bold(paste("Correlation Value (r)"))))#
dev.off()
library(mgcv)#
library(ggplot2)#
library(car)#
library(reshape)#
library(dplR)#
library(DescTools)#
# Christy's GAMM code#
#
# gam1 <- gamm(Y ~  s(Biomass, bs="cr", k=3, by=PFT) + s(tair, k=k, by=PFT) + s(precipf, k=k, by=PFT) + s(CO2, k=k, by=PFT), random=list(PlotID=~1), data=data) #
#
# Loading in my data#
#
data.use <- read.csv("processed_data/AllSites_tree_plus_climate_and_BA.csv", header=T)#
#
data.use$group <- data.use$Species#
data.use$group <- recode(data.use$group, "'CAOV' = 'CARYA'; 'CACO' = 'CARYA'; #
  							'CATE' = 'CARYA'; 'ACSAC' = 'ACSA'; 'BEAL' = 'BETULA'; 'BELE' = 'BETULA'; 'QUMU' = 'QUAL'")#
#
data.use$group.plot <- as.factor(paste(data.use$group, data.use$PlotID, sep="."))#
#
data.use$Canopy.Class <- recode(data.use$Canopy.Class, "'C' = 'D'")#
summary(data.use)#
# reducing the amount of data for the test runs#
sites.use <- c("Harvard", "Howland", "Morgan Monroe State Park", "Oak Openings Toledo", "Missouri Ozark")#
#
test <- data.use[data.use$Site %in% sites.use & !is.na(data.use$RW) & !is.na(data.use$BA.inc),]#
summary(test)#
#
test$group.cc <- as.factor(paste(test$group, test$Canopy.Class, sep="."))#
summary(test)#
# Get a list of what predictors & responses I'm using#
predictors.all <- c("tmean", "precip", "Species", "dbh.recon", "Canopy.Class", "spp.plot", "group", "group.plot", "group.cc")#
#
# Getting rid of observations that have NAs in the important variables#
test <- test[complete.cases(test[,predictors.all]),]#
test <- test[test$Live.Dead=="LIVE" & !test$Canopy.Class=="F",]#
#
# Subsetting to a set of species that we have enough data to feel good about#
#species.use <- c("TSCA", "QURU", "ACRU", "BEAL", "ACSA", "LITU", "QUAL", "CAOV", "CACO", "CATE", "JUVI", "QUVE", "PCRU", "THOC", "PIST")#
group.use <- c("ACRU", "ACSA", "BETULA", "CARYA", "FAGR", "FRAX", "PIST", "QUAL", "QURU", "QUVE", "SAAL", "TSCA", "ULRU")#
#
test <- test[test$group %in% group.use,]#
#
summary(test)#
#
# Right now just looking at the dominant trees.  Not sure how to show this yet#
#test <- test[test$Canopy.Class=="D",]#
#
par(new=F)#
plot(test[test$TreeID=="MMA003", "BA.inc"]~ test[test$TreeID=="MMA003","Year"], type="l")#
summary(test)#
# Truncatign at 1935; at 1935 the sample depth for the oak openings is only 1#
test <- test[test$Year >= 1935 & test$Year <= 2012,]#
#
tree.rw <- test#
summary(tree.rw)#
#
summary(test)#
save(test, file="processed_data/test_tree_data_1935_2012.Rdata")#
#
sites.rw <- list()#
#
tree.rw$Year <- as.factor(tree.rw$Year)#
#
for(s in unique(tree.rw$Site)){#
	sites.rw[[s]] <- recast(tree.rw[tree.rw$Site==s,c("Year", "TreeID", "RW")], Year ~ TreeID)	#
}#
summary(sites.rw)#
#
save(sites.rw, file="processed_data/sites_rw.Rdata")#
summary(sites.rw[[4]])#
sites.rw#
# Making Indices of all the different sites using a 30 yr cubic smoothing spline#
sites.i <- list()#
#
for(s in names(sites.rw)){#
	sites.i[[s]] <- detrend(sites.rw[[s]][,2:ncol(sites.rw[[s]])], method="Spline", nyr=30)#
}#
summary(sites.i[[1]])#
#
# making chronologies for each site#
#
site.chron <- list()#
#
for(s in names(sites.i)){#
	site.chron[[s]] <- chron(sites.i[[s]][,2:ncol(sites.i[[s]])], prefix = substr(s, 1, 3), prewhiten = T) #
	site.chron[[s]][,"Year"]<- c(1935:2012) #
}#
#
summary(site.chron[[5]])#
# Making each site it's own dataframe#
harvard.crn <- as.data.frame(site.chron[[1]])#
#
howland.crn <- as.data.frame(site.chron[[2]])#
#
misso.crn <- as.data.frame(site.chron[[3]])#
#
mmf.crn <- as.data.frame(site.chron[[4]])#
#
oakop.crn <- as.data.frame(site.chron[[5]])#
# Plotting thigns for presentation#
par(cex=2 )#
plot(mmf.crn$Morres ~ mmf.crn$Year, type="l", lwd=5, axes=F, cex=6, col="white")#
abline(h=1,lty="dashed", col="white")#
axis(side =1,tck= 0.05) #
axis(side=2,tck=0.05)#
#
#Plotting out mmfsites#
summary(test)#
#
mmf <- test[test$Site %in% "Morgan Monroe State Park",]#
#
summary(mmf)#
#
for(i in unique(mmf$Year)){#
  mmf[mmf$Year==i,"Mean"] <- mean(mmf[mmf$Year==i,"RW"])#
  mmf[mmf$Year==i,"UB"] <- quantile(mmf[mmf$Year==i,"RW"], 0.975)#
  mmf[mmf$Year==i,"LB"] <- quantile(mmf[mmf$Year==i,"RW"], 0.025)#
}#
#
summary(mmf)#
#
ggplot(data=mmf)+#
  # geom_line(aes(x=Year, y=RW))#
  geom_ribbon(aes(x=Year, ymin=LB, ymax=UB), alpha=0.5, fill="white")+#
  geom_line(aes(x=Year, y=Mean), size=2, color="white")+#
  poster.theme2#
# Merging the residual chronologies back together#
sites.crn <- data.frame(Harvard = harvard.crn[, "Harres"], #
						Howland = howland.crn[,"Howres"], #
						Missouri = misso.crn[,"Misres"],#
						Morgan_Monroe = mmf.crn[,"Morres"], #
						Oak_openings = oakop.crn[,"Oakres"]#
						)#
#
summary(sites.crn)#
# Load in climate data#
#
climate.use <- read.csv("processed_data/climate_growing_season.csv")#
#
summary(climate.use)#
#
climate.use <- climate.use[climate.use$Site %in% sites.use,]#
climate.use <- climate.use[climate.use$Year>=1935 & climate.use$Year <=2012,]#
#
climate.site <- list()#
#
for(s in unique(climate.use$Site)){#
	climate.site[[s]] <- climate.use[climate.use$Site==s,]#
}#
#
summary(climate.site)#
save(climate.site, file="processed_data/sites_use_climate.Rdata")#
class(climate.site[[1]][,"Year"])#
#
head(climate.site[[1]])#
#
summary(climate.site[[1]])#
#
harv.clim <- climate.site[["Harvard"]][,c("tmean", "precip")]#
#
how.clim <- climate.site[["Howland"]][,c("tmean", "precip")]#
#
miss.clim <- climate.site[["Missouri Ozark"]][,c("tmean", "precip")]#
#
mmf.clim <- climate.site[["Morgan Monroe State Park"]][,c("tmean", "precip")]#
#
oak.clim <- climate.site[["Oak Openings Toledo"]][,c("tmean", "precip")]#
dim(harv.clim)#
dim(harvard.crn)#
#
# harvard#
harv.cor<- cor(harvard.crn, harv.clim[,c("tmean", "precip")], method="pearson")#
harvard <- data.frame(cor = c(harv.cor[1:2,"tmean"],  harv.cor[1:2,"precip"]),#
					  var = c("tmean", "tmean", "precip", "precip"))#
harvard$type <- c("std", "res")#
harvard$site <- "Harvard" #
# Howland#
how.cor <- cor(howland.crn, how.clim[,c("tmean", "precip")], method="pearson")#
how.cor#
#
howland <- data.frame(cor = c(how.cor[1:2,"tmean"],  how.cor[1:2,"precip"]),#
					  var = c("tmean", "tmean", "precip", "precip"))#
howland$type <- c("std", "res")#
howland$site <- "Howland" #
# Missouri#
mo.cor <- cor(misso.crn, miss.clim[,c("tmean", "precip")], method="pearson")#
mo.cor#
#
missouri <- data.frame(cor = c(mo.cor[1:2,"tmean"],  mo.cor[1:2,"precip"]),#
					  var = c("tmean", "tmean", "precip", "precip"))#
missouri$type <- c("std", "res")#
missouri$site <- "Missouri" #
#
# Morgan Monroe#
mmf.cor <- cor(mmf.crn, mmf.clim[,c("tmean", "precip")], method="pearson")#
mmf.cor#
#
morgan <- data.frame(cor = c(mmf.cor[1:2,"tmean"],  mmf.cor[1:2,"precip"]),#
					  var = c("tmean", "tmean", "precip", "precip"))#
morgan$type <- c("std", "res")#
morgan$site <- "Morgan-Monroe" #
#
# Oak openings#
oakop.cor <- cor(oakop.crn, oak.clim[,c("tmean", "precip")], method="pearson")#
oakop.cor#
#
oakop <- data.frame(cor = c(oakop.cor[1:2,"tmean"],  oakop.cor[1:2,"precip"]),#
					  var = c("tmean", "tmean", "precip", "precip"))#
oakop$type <- c("std", "res")#
oakop$site <- "Oak-Openings" #
#
# Merging standard chronologies into one file#
#
clim.cor <- merge(harvard, howland, all.x=T, all.y=T)#
clim.cor2 <- merge(clim.cor, missouri,all.x=T, all.y=T)#
clim.cor3 <- merge(clim.cor2, morgan,all.x=T, all.y=T)#
clim.cor4 <- merge(clim.cor3, oakop,all.x=T, all.y=T)#
#
summary(clim.cor4)#
clim.cor4$site <- as.factor(clim.cor4$site)#
clim.cor4$type <- as.factor(clim.cor4$type)#
clim.cor4$cor <- as.numeric(clim.cor4$cor)#
#
# Sig value for 81 df = 0.209#
clim.cor4$sig <- ifelse(clim.cor4$cor < -0.2245 | clim.cor4$cor > 0.2245, "Y", "N")#
clim.cor4$sig <- factor(clim.cor4$sig, levels = c("Y", "N"))#
#
clim.cor4$site <- factor(clim.cor4$site, levels = c("Missouri", "Morgan-Monroe", "Oak-Openings", "Harvard", "Howland"))#
#
clim.cor4$Site <- clim.cor4$site#
clim.cor4$Site <- recode(clim.cor4$Site, "'Missouri' = 'MO'; 'Morgan-Monroe' = 'IN'; 'Oak-Openings' = 'OH'; 'Harvard' = 'MA'; 'Howland' = 'ME'")#
clim.cor4$Site <- factor(clim.cor4$Site, levels = c("MO", "IN", "OH", "MA", "ME"))#
pdf("figures/site_correlations.pdf", width= 13, height = 8.5)#
ggplot(data=clim.cor4[clim.cor4$type=="std",]) + facet_grid(var~. , scales="free_x") +#
	geom_bar(aes(x=Site, y=cor, fill=sig), stat="identity", position="dodge", colour="black") +#
	geom_hline(yintercept=0.2245, linetype="dashed") + #
	geom_hline(yintercept=-0.2245, linetype="dashed") + 	#
	geom_hline(yintercept=0, linetype="solid") +#
	scale_fill_manual(values= c("green", "grey50")) + #
	poster.theme2#
dev.off()#
#
#######################################################################
# Gettign correlations for all for all of the available climate data data#
#######################################################################
# Loading in climate data#
t.mean <- read.csv("processed_data/ch2_tmean.csv", header=T)#
t.min <- read.csv("processed_data/ch2_tmin.csv", header=T)#
t.max <- read.csv("processed_data/ch2_tmax.csv", header=T)#
precip <- read.csv("processed_data/ch2_precip.csv", header=T)#
summary(t.mean)#
#
# Limiting time frame--1935-2012#
t.mean <- t.mean[t.mean$Year >= 1936 & t.mean$Year <= 2012,]#
t.min <- t.min[t.min$Year >= 1936 & t.min$Year <= 2012,]#
t.max <- t.max[t.max$Year >= 1936 & t.max$Year <= 2012,]#
precip <- precip[precip$Year >= 1936 & precip$Year <= 2012,]#
summary(t.mean)#
summary(t.min)#
summary(t.max)#
summary(precip)#
#
head(t.mean)#
unique(t.mean$Site.Name)#
#
t.mean$Site.Name <- recode(t.mean$Site.Name, "'Missouri Ozark' = 'Missouri'; 'Morgan Monroe State Park'='Morgan_Monroe'; 'Oak Openings Toledo' = 'Oak_openings'")#
#
t.min$Site.Name <- recode(t.min$Site.Name, "'Missouri Ozark' = 'Missouri'; 'Morgan Monroe State Park'='Morgan_Monroe'; 'Oak Openings Toledo' = 'Oak_openings'")#
t.max$Site.Name <- recode(t.max$Site.Name, "'Missouri Ozark' = 'Missouri'; 'Morgan Monroe State Park'='Morgan_Monroe'; 'Oak Openings Toledo' = 'Oak_openings'")#
precip$Site.Name <- recode(precip$Site.Name, "'Missouri Ozark' = 'Missouri'; 'Morgan Monroe State Park'='Morgan_Monroe'; 'Oak Openings Toledo' = 'Oak_openings'")#
# getting the ring widths in a data frame#
summary(sites.crn)#
sites.crn$Year <- site.chron[[1]][,"Year"]#
head(sites.crn)#
sites.crn <- sites.crn[sites.crn$Year > 1935,]#
#--------------------------------------------#
# Tmean correlation#
#--------------------------------------------#
#
sites <- c("Harvard", "Howland", "Missouri", "Morgan_Monroe", "Oak_openings")#
#
tmean.corr<-list()#
#
for(i in sites){#
	tmean.corr[[i]] <- cor(sites.crn[,i], t.mean[t.mean$Site.Name %in% i,!names(t.mean) %in% c("Site.Name", "Year")], method="pearson")#
}#
summary(tmean.corr)#
#
# Making each site it's own dataframe#
harvard.tmean <- as.data.frame(tmean.corr[[1]])#
#
harvard.tmean.stack <- stack(harvard.tmean)#
names(harvard.tmean.stack)<- c("cor", "month")#
harvard.tmean.stack$Site <- as.factor("Harvard")#
harvard.tmean.stack$type <- as.factor("tmean")#
#
howland.tmean <- as.data.frame(tmean.corr[[2]])#
#
howland.tmean.stack <- stack(howland.tmean)#
names(howland.tmean.stack)<- c("cor", "month")#
howland.tmean.stack$Site <- as.factor("Howland")#
howland.tmean.stack$type <- as.factor("tmean")#
#
mo.tmean <- as.data.frame(tmean.corr[[3]])#
#
mo.tmean.stack <- stack(mo.tmean)#
names(mo.tmean.stack)<- c("cor", "month")#
mo.tmean.stack$Site <- as.factor("Missouri")#
mo.tmean.stack$type <- as.factor("tmean")#
#
mmf.tmean <- as.data.frame(tmean.corr[[4]])#
#
mmf.tmean.stack <- stack(mmf.tmean)#
names(mmf.tmean.stack)<- c("cor", "month")#
mmf.tmean.stack$Site <- as.factor("MMF")#
mmf.tmean.stack$type <- as.factor("tmean")#
#
oakop.tmean <- as.data.frame(tmean.corr[[5]])#
#
oakop.tmean.stack <- stack(oakop.tmean)#
names(oakop.tmean.stack)<- c("cor", "month")#
oakop.tmean.stack$Site <- as.factor("Oak_openings")#
oakop.tmean.stack$type <- as.factor("tmean")#
#
all.sites.tmean <- rbind(harvard.tmean.stack, howland.tmean.stack, mo.tmean.stack, mmf.tmean.stack, oakop.tmean.stack)#
#
summary(all.sites.tmean)#
#
#--------------------------------------------#
# Tmin correlation#
#--------------------------------------------#
#
sites <- c("Harvard", "Howland", "Missouri", "Morgan_Monroe", "Oak_openings")#
#
tmin.corr<-list()#
#
for(i in sites){#
	tmin.corr[[i]] <- cor(sites.crn[,i], t.min[t.min$Site.Name %in% i,!names(t.min) %in% c("Site.Name", "Year")], method="pearson")#
}#
summary(tmin.corr)#
#
# Making each site it's own dataframe#
harvard.tmin <- as.data.frame(tmin.corr[[1]])#
#
harvard.tmin.stack <- stack(harvard.tmin)#
names(harvard.tmin.stack)<- c("cor", "month")#
harvard.tmin.stack$Site <- as.factor("Harvard")#
harvard.tmin.stack$type <- as.factor("tmin")#
#
howland.tmin <- as.data.frame(tmin.corr[[2]])#
#
howland.tmin.stack <- stack(howland.tmin)#
names(howland.tmin.stack)<- c("cor", "month")#
howland.tmin.stack$Site <- as.factor("Howland")#
howland.tmin.stack$type <- as.factor("tmin")#
#
mo.tmin <- as.data.frame(tmin.corr[[3]])#
#
mo.tmin.stack <- stack(mo.tmin)#
names(mo.tmin.stack)<- c("cor", "month")#
mo.tmin.stack$Site <- as.factor("Missouri")#
mo.tmin.stack$type <- as.factor("tmin")#
#
mmf.tmin <- as.data.frame(tmin.corr[[4]])#
#
mmf.tmin.stack <- stack(mmf.tmin)#
names(mmf.tmin.stack)<- c("cor", "month")#
mmf.tmin.stack$Site <- as.factor("MMF")#
mmf.tmin.stack$type <- as.factor("tmin")#
#
oakop.tmin <- as.data.frame(tmin.corr[[5]])#
#
oakop.tmin.stack <- stack(oakop.tmin)#
names(oakop.tmin.stack)<- c("cor", "month")#
oakop.tmin.stack$Site <- as.factor("Oak_openings")#
oakop.tmin.stack$type <- as.factor("tmin")#
#
all.sites.tmin <- rbind(harvard.tmin.stack, howland.tmin.stack, mo.tmin.stack, mmf.tmin.stack, oakop.tmin.stack)#
#
summary(all.sites.tmin)#
#--------------------------------------------#
# Tmax correlation#
#--------------------------------------------#
#
sites <- c("Harvard", "Howland", "Missouri", "Morgan_Monroe", "Oak_openings")#
#
tmax.corr<-list()#
#
for(i in sites){#
	tmax.corr[[i]] <- cor(sites.crn[,i], t.max[t.max$Site.Name %in% i,!names(t.max) %in% c("Site.Name", "Year")], method="pearson")#
}#
summary(tmax.corr)#
#
# Making each site it's own dataframe#
harvard.tmax <- as.data.frame(tmax.corr[[1]])#
#
harvard.tmax.stack <- stack(harvard.tmax)#
names(harvard.tmax.stack)<- c("cor", "month")#
harvard.tmax.stack$Site <- as.factor("Harvard")#
harvard.tmax.stack$type <- as.factor("tmax")#
#
howland.tmax <- as.data.frame(tmax.corr[[2]])#
#
howland.tmax.stack <- stack(howland.tmax)#
names(howland.tmax.stack)<- c("cor", "month")#
howland.tmax.stack$Site <- as.factor("Howland")#
howland.tmax.stack$type <- as.factor("tmax")#
#
mo.tmax <- as.data.frame(tmax.corr[[3]])#
#
mo.tmax.stack <- stack(mo.tmax)#
names(mo.tmax.stack)<- c("cor", "month")#
mo.tmax.stack$Site <- as.factor("Missouri")#
mo.tmax.stack$type <- as.factor("tmax")#
#
mmf.tmax <- as.data.frame(tmax.corr[[4]])#
#
mmf.tmax.stack <- stack(mmf.tmax)#
names(mmf.tmax.stack)<- c("cor", "month")#
mmf.tmax.stack$Site <- as.factor("MMF")#
mmf.tmax.stack$type <- as.factor("tmax")#
#
oakop.tmax <- as.data.frame(tmax.corr[[5]])#
#
oakop.tmax.stack <- stack(oakop.tmax)#
names(oakop.tmax.stack)<- c("cor", "month")#
oakop.tmax.stack$Site <- as.factor("Oak_openings")#
oakop.tmax.stack$type <- as.factor("tmax")#
#
all.sites.tmax <- rbind(harvard.tmax.stack, howland.tmax.stack, mo.tmax.stack, mmf.tmax.stack, oakop.tmax.stack)#
#
summary(all.sites.tmax)#
#--------------------------------------------#
# Precip correlation#
#--------------------------------------------#
sites <- c("Harvard", "Howland", "Missouri", "Morgan_Monroe", "Oak_openings")#
#
precip.corr<-list()#
#
for(i in sites){#
	precip.corr[[i]] <- cor(sites.crn[,i], precip[precip$Site.Name %in% i,!names(precip) %in% c("Site.Name", "Year")], method="pearson")#
}#
summary(precip.corr)#
#
# Making each site it's own dataframe#
harvard.precip <- as.data.frame(precip.corr[[1]])#
#
harvard.precip.stack <- stack(harvard.precip)#
names(harvard.precip.stack)<- c("cor", "month")#
harvard.precip.stack$Site <- as.factor("Harvard")#
harvard.precip.stack$type <- as.factor("precip")#
#
howland.precip <- as.data.frame(precip.corr[[2]])#
#
howland.precip.stack <- stack(howland.precip)#
names(howland.precip.stack)<- c("cor", "month")#
howland.precip.stack$Site <- as.factor("Howland")#
howland.precip.stack$type <- as.factor("precip")#
#
mo.precip <- as.data.frame(precip.corr[[3]])#
#
mo.precip.stack <- stack(mo.precip)#
names(mo.precip.stack)<- c("cor", "month")#
mo.precip.stack$Site <- as.factor("Missouri")#
mo.precip.stack$type <- as.factor("precip")#
#
mmf.precip <- as.data.frame(precip.corr[[4]])#
#
mmf.precip.stack <- stack(mmf.precip)#
names(mmf.precip.stack)<- c("cor", "month")#
mmf.precip.stack$Site <- as.factor("MMF")#
mmf.precip.stack$type <- as.factor("precip")#
#
oakop.precip <- as.data.frame(precip.corr[[5]])#
#
oakop.precip.stack <- stack(oakop.precip)#
names(oakop.precip.stack)<- c("cor", "month")#
oakop.precip.stack$Site <- as.factor("Oak_openings")#
oakop.precip.stack$type <- as.factor("precip")#
#
all.sites.precip <- rbind(harvard.precip.stack, howland.precip.stack, mo.precip.stack, mmf.precip.stack, oakop.precip.stack)#
#
summary(all.sites.precip)#
#
# Merging all stacked dataframes together to make plotting easier#
#
all.sites.climate <- rbind(all.sites.precip, all.sites.tmax, all.sites.tmin, all.sites.tmean)#
summary(all.sites.climate)#
#
# Sig value for 75 df = 0.2245#
all.sites.climate$sig <- ifelse(all.sites.climate$cor < -0.2245 | all.sites.climate$cor > 0.2245, "Y", "N")#
all.sites.climate$sig <- factor(all.sites.climate$sig, levels = c("Y", "N"))#
all.sites.climate$month <- factor(all.sites.climate$month, levels = c("pJan", "pFeb", "pMar", "pApr", "pMay", "pJun", "pJul", "pAug", "pSep", "pOct", "pNov", "pDec", "Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec", "pfall", "winter", "spring", "summer", "grow.seas"))#
#
all.sites.climate$Site <- factor(all.sites.climate$Site, levels = c("Missouri", "MMF", "Oak_openings", "Harvard", "Howland"))#
#
pdf("figures/site_correlations_allmonths_short.pdf", width= 13, height = 8.5)#
ggplot(data=all.sites.climate[all.sites.climate$month %in% c("pOct", "pNov", "pDec", "Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec", "spring", "summer", "pfall", "winter", "grow.seas"),]) + facet_grid(Site ~ type ) +#
	geom_bar(aes(x=month, y=cor, fill=sig), stat="identity", position="dodge", colour="black") +#
	geom_hline(yintercept=0.2245, linetype="dashed") + #
	geom_hline(yintercept=-0.2245, linetype="dashed") + 	#
	geom_hline(yintercept=0, linetype="solid") +#
	scale_fill_manual(values= c("green", "grey50"))+#
	theme(axis.text.x = element_text(angle = 45, hjust = 1))#
dev.off()#
#
summary(all.sites.climate$month)#
#
all.sites.gs <- all.sites.climate[all.sites.climate$month=="grow.seas",]#
summary(all.sites.gs)#
#
cbbPalette <- c("#009E73", "#e79f00", "#9ad0f3", "#0072B2", "#D55E00")#
#
all.sites.climate$type <- factor(all.sites.climate$type, levels=c("tmean", "precip", "tmin", "tmax"))#
pdf("figures/site_correlations_growing season.pdf", width= 13, height = 8.5)#
ggplot(data=all.sites.climate[all.sites.climate$month %in% "grow.seas" & all.sites.climate$type %in% c("tmean", "precip"),]) + facet_grid(~type) +#
  geom_bar(aes(x=month, y=cor, color=Site), stat="identity", position="dodge", fill=NA) + ylim(-0.6,0.6)+#
  geom_bar(aes(x=month, y=cor, color=Site), stat="identity", position="dodge", fill=NA) +ylim(-0.6,0.6)+#
  geom_bar(aes(x=month, y=cor, fill=Site, alpha=sig), stat="identity", position="dodge") +ylim(-0.6,0.6)+#
  geom_hline(yintercept=0.2245, linetype="dashed") + #
  geom_hline(yintercept=-0.2245, linetype="dashed") + 	#
  geom_hline(yintercept=0, linetype="solid") +#
 # scale_fill_manual(values= cbbPalette)+#
  scale_color_manual(values=cbbPalette) +#
  scale_fill_manual(values=cbbPalette) +#
  scale_alpha_manual(values = c(1, 0.2))+#
  poster.theme2 +#
  theme(axis.text.x = element_text(angle = 45, hjust = 1),panel.grid.major=element_blank(), panel.grid.minor= element_blank(), panel.border= element_blank(), panel.background= element_blank()) +#
  labs(title= "TR Site Climate Correlations", x="Seasons", y=expression(bold(paste("Correlation Value (r)"))))#
#
dev.off()#
#
#################################################################################
# Running correlations on the individual indices to get the full spread of the #
#################################################################################
#
all.sites.gs <- all.sites.climate[all.sites.climate$month=="grow.seas",]#
summary(all.sites.gs)#
#
all.sites.gs$State <- recode(all.sites.gs$Site, "'Missouri'='MO';'MMF'='IN';'Oak_openings'='OH';'Harvard'='MA';'Howland'='ME'")#
all.sites.gs$series <- as.factor("chron")#
summary(all.sites.gs)#
#
summary(climate.site$Howland[,])#
head(sites.i$Howland)#
#
summary(sites.i)#
index.cor.temp <- sites.i#
index.cor.precip <- sites.i#
#
test <- sites.i#
meow <- test#
#
# Running correlations fro Tmean and Precip on individual indices#
for(s in names(sites.i)){#
	for(i in names(sites.i[[s]])){#
		index.cor.temp[[s]][,i] <- cor(sites.i[[s]][,i], climate.site[[s]][,"tmean"], method="pearson")#
	}#
}	#
#
test <- cor(sites.i[["Harvard"]][,c(1:10)], climate.site[["Harvard"]][,"tmean"], method="pearson")#
for(s in names(sites.i)){#
	for(i in names(sites.i[[s]])){#
		index.cor.precip[[s]][,i] <- cor(sites.i[[s]][,i], climate.site[[s]][,"precip"], method="pearson") #
	}#
}	#
summary(index.cor.precip)#
#
# Now need to merge everything into one stacked file to be used with ggplot 2#
#
test <- data.frame()#
#
# Need to break it down by site#
#
# Harvard#
har.precip.stack <- stack(index.cor.precip[["Harvard"]])#
names(har.precip.stack)<- c("cor", "TreeID")#
har.precip.stack$State <- as.factor("MA")#
har.precip.stack$type <- as.factor("precip")#
summary(har.precip.stack)#
#
har.temp.stack <- stack(index.cor.temp[["Harvard"]])#
names(har.temp.stack)<- c("cor", "TreeID")#
har.temp.stack$State <- as.factor("MA")#
har.temp.stack$type <- as.factor("tmean")#
summary(har.temp.stack)#
#
har.stack <- merge(har.temp.stack, har.precip.stack, all.x=T, all.y=T)#
summary(har.stack)#
#
# Howland#
#
how.precip.stack <- stack(index.cor.precip[["Howland"]])#
names(how.precip.stack)<- c("cor", "TreeID")#
how.precip.stack$State <- as.factor("ME")#
how.precip.stack$type <- as.factor("precip")#
summary(how.precip.stack)#
#
how.temp.stack <- stack(index.cor.temp[["Howland"]])#
names(how.temp.stack)<- c("cor", "TreeID")#
how.temp.stack$State <- as.factor("ME")#
how.temp.stack$type <- as.factor("tmean")#
summary(how.temp.stack)#
#
how.stack <- merge(how.temp.stack, how.precip.stack, all.x=T, all.y=T)#
summary(how.stack)#
#
# Missouri#
#
mo.precip.stack <- stack(index.cor.precip[["Missouri Ozark"]])#
names(mo.precip.stack)<- c("cor", "TreeID")#
mo.precip.stack$State <- as.factor("MO")#
mo.precip.stack$type <- as.factor("precip")#
summary(mo.precip.stack)#
#
mo.temp.stack <- stack(index.cor.temp[["Missouri Ozark"]])#
names(mo.temp.stack)<- c("cor", "TreeID")#
mo.temp.stack$State <- as.factor("MO")#
mo.temp.stack$type <- as.factor("tmean")#
summary(mo.temp.stack)#
#
mo.stack <- merge(mo.temp.stack, mo.precip.stack, all.x=T, all.y=T)#
summary(mo.stack)#
# MMF#
#
mmf.precip.stack <- stack(index.cor.precip[["Morgan Monroe State Park"]])#
names(mmf.precip.stack)<- c("cor", "TreeID")#
mmf.precip.stack$State <- as.factor("IN")#
mmf.precip.stack$type <- as.factor("precip")#
summary(mmf.precip.stack)#
#
mmf.temp.stack <- stack(index.cor.temp[["Morgan Monroe State Park"]])#
names(mmf.temp.stack)<- c("cor", "TreeID")#
mmf.temp.stack$State <- as.factor("IN")#
mmf.temp.stack$type <- as.factor("tmean")#
summary(mmf.temp.stack)#
#
mmf.stack <- merge(mmf.temp.stack, mmf.precip.stack, all.x=T, all.y=T)#
summary(mmf.stack)#
# Oak Openings#
#
oak.precip.stack <- stack(index.cor.precip[["Oak Openings Toledo"]])#
names(oak.precip.stack)<- c("cor", "TreeID")#
oak.precip.stack$State <- as.factor("OH")#
oak.precip.stack$type <- as.factor("precip")#
summary(oak.precip.stack)#
#
oak.temp.stack <- stack(index.cor.temp[["Oak Openings Toledo"]])#
names(oak.temp.stack)<- c("cor", "TreeID")#
oak.temp.stack$State <- as.factor("OH")#
oak.temp.stack$type <- as.factor("tmean")#
summary(oak.temp.stack)#
#
oak.stack <- merge(oak.temp.stack, oak.precip.stack, all.x=T, all.y=T)#
summary(oak.stack)#
#
cor.all.stack <- rbind(har.stack, how.stack, mmf.stack, oak.stack, mo.stack)#
summary(cor.all.stack)#
#
# Calculating Tukey Biweight Robust mean#
#
for(s in unique(cor.all.stack$State)){#
	for(t in unique(cor.all.stack$type)){#
	cor.all.stack[cor.all.stack$State==s & cor.all.stack$type==t,"biweight.mean"] <- TukeyBiweight(cor.all.stack[cor.all.stack$State==s & cor.all.stack$type==t,"cor"], na.rm=T)#
	}#
}#
summary(cor.all.stack)#
#
# creating a significance column#
cor.all.stack$sig <- ifelse(cor.all.stack$cor < -0.2245 | cor.all.stack$cor > 0.2245, "Y", "N")#
cor.all.stack$sig <- factor(cor.all.stack$sig, levels = c("Y", "N"))#
#
cor.all.stack$State <- factor(cor.all.stack$State, levels=c("MO", "IN", "OH", "MA", "ME"))#
summary(cor.all.stack)#
#
cor.all.stack$type <- factor(cor.all.stack$type, levels = c("precip", "tmean"))#
cor.all.stack$series <- as.factor("index")#
#
summary(all.sites.gs)#
summary(cor.all.stack)#
#
summary(cor.all.stack[is.na(cor.all.stack$cor),])#
#
pdf("figures/violin_climate_cor.pdf", height=8, width=13)#
ggplot(data=cor.all.stack) + facet_grid(~type)+#
#
	geom_violin(aes(x=State, y=cor, fill=State), adjust = 2, trim=T) + ylim(-0.6,0.6)+#
	geom_point(data=all.sites.gs[all.sites.gs$type %in% c("precip", "tmean"),],aes(x=State, y=cor), shape=126, size=25)+ ylim(-0.6,0.6)+#
	geom_point(aes(x=State, y=biweight.mean), shape=95, size=25)+ ylim(-0.6,0.6)+#
	geom_hline(yintercept=0.2245, linetype="dashed") + #
  	geom_hline(yintercept=-0.2245, linetype="dashed") + 	#
  	geom_hline(yintercept=0, linetype="solid") +#
#
	scale_color_manual(values=cbbPalette) +#
  	scale_fill_manual(values=cbbPalette) +#
  	poster.theme2 +#
  	theme(axis.text.x = element_text(angle = 45, hjust = 1),panel.grid.major=element_blank(), panel.grid.minor= 	element_blank(), panel.border= element_blank(), panel.background= element_blank()) +#
  	labs(title= "TR Index Climate Correlations", x="State", y=expression(bold(paste("Correlation Value (r)"))))#
dev.off()
library(dplR)#
library(ggplot2)#
library(stringr)#
# -------------------------------------------------------------------------------------#
# Using MMF and Harvard as two examples#
# -------------------------------------------------------------------------------------#
load("processed_data/sites_use_climate.Rdata")#
summary(climate.site)#
#
load("processed_data/sites_rw.Rdata")#
summary(sites.rw)#
#
load("processed_data/test_tree_data_1950_2012.Rdata")#
summary(test)#
#
# Creating lists for harvard and mmf species#
#
sites.use2 <- c("Harvard", "Morgan Monroe State Park")#
#
summary(sites.rw[[1]])#
names(sites.rw)#
# canopy.data <- sites.rw[names(sites.rw) %in% sites.use2]#
#
canopy.data <- sites.rw#
summary(canopy.data)
library(dplR)#
library(ggplot2)#
library(stringr)#
# -------------------------------------------------------------------------------------#
# Using MMF and Harvard as two examples#
# -------------------------------------------------------------------------------------#
load("processed_data/sites_use_climate.Rdata")#
summary(climate.site)#
#
load("processed_data/sites_rw.Rdata")#
summary(sites.rw)#
#
load("processed_data/test_tree_data_1935_2012.Rdata")#
summary(test)
sites.use2 <- c("Harvard", "Morgan Monroe State Park")
summary(sites.rw[[1]])#
names(sites.rw)#
# canopy.data <- sites.rw[names(sites.rw) %in% sites.use2]#
#
canopy.data <- sites.rw#
summary(canopy.data)
short.canopy <- list()#
#
for(s in names(canopy.data)){#
	for(i in unique(test[test$Site ==s, "Canopy.Class"])){#
		cols.use <- unique(test[test$Site==s & test$Canopy.Class==i,"TreeID"])#
		short.canopy[[paste(s, i, sep=".")]] <- canopy.data[[s]][,paste(cols.use)]#
	} #
}
summary(short.canopy)
summary(short.canopy)#
# summary(short.canopy[["Morgan Monroe State Park.D"]])#
# Making each tree an index using a 30 yr. spline#
short.can.index <- list()#
for(s in names(short.canopy)){#
	short.can.index[[s]] <- detrend(short.canopy[[s]], method="Spline", nyrs=30)#
}#
summary(short.can.index)
ggplot(data = canopy.df[canopy.df$chr=="std",]) + facet_grid(Factor~Site) + #
	geom_bar(aes(x=CC, y=cor, fill=sig), stat="identity", position="dodge", colour="black") +#
	geom_hline(yintercept=0.209, linetype="dashed") + #
	geom_hline(yintercept=-0.209, linetype="dashed") + 	#
	geom_hline(yintercept=0, linetype="solid") +#
	scale_fill_manual(values= c("green", "grey50")) + #
	poster.theme2 #
	#theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
library(dplR)#
library(ggplot2)#
library(stringr)#
# -------------------------------------------------------------------------------------#
# Using MMF and Harvard as two examples#
# -------------------------------------------------------------------------------------#
load("processed_data/sites_use_climate.Rdata")#
summary(climate.site)#
#
load("processed_data/sites_rw.Rdata")#
summary(sites.rw)#
#
load("processed_data/test_tree_data_1935_2012.Rdata")#
summary(test)#
#
# Creating lists for harvard and mmf species#
#
sites.use2 <- c("Harvard", "Morgan Monroe State Park")#
#
summary(sites.rw[[1]])#
names(sites.rw)#
# canopy.data <- sites.rw[names(sites.rw) %in% sites.use2]#
#
canopy.data <- sites.rw#
summary(canopy.data)#
# Gettign mmf data#
#
short.canopy <- list()#
#
for(s in names(canopy.data)){#
	for(i in unique(test[test$Site ==s, "Canopy.Class"])){#
		cols.use <- unique(test[test$Site==s & test$Canopy.Class==i,"TreeID"])#
		short.canopy[[paste(s, i, sep=".")]] <- canopy.data[[s]][,paste(cols.use)]#
	} #
}#
summary(short.canopy)#
# summary(short.canopy[["Morgan Monroe State Park.D"]])#
# Making each tree an index using a 30 yr. spline#
short.can.index <- list()#
for(s in names(short.canopy)){#
	short.can.index[[s]] <- detrend(short.canopy[[s]], method="Spline", nyrs=30)#
}#
summary(short.can.index)#
# Making chronologies from these indicies#
short.can.chr <- list()#
#
for(s in names(short.can.index)){#
	short.can.chr[[s]] <- chron(short.can.index[[s]], prewhiten=T)#
}#
summary(short.can.chr[[1]])#
# Correlating these spp level chronologies with climate#
#
corr.can <- list()#
for(i in names(short.can.chr)){#
	site <- unlist(strsplit(i, "[.]"))[1]#
	corr.can[[i]] <- as.data.frame(cor(short.can.chr[[i]][, 1:2], climate.site[[site]][, c("tmean", 					"precip")], method="pearson"))#
	corr.can[[i]]$chr <- row.names(corr.can[[i]])#
}#
corr.can[[1]]#
#
for(i in names(corr.can)){#
	corr.can[[i]][,"chr"] <- substr(corr.can[[i]][,"chr"], 4, 6)#
}#
corr.can[[1]]#
#
site.df <- data.frame(Site.Can=names(corr.can))#
chr <- data.frame(chr=c("std", "res"))#
site.chr <- merge(site.df, chr)#
#
canopy.df <- merge(site.chr, data.frame(Factor=c("tmean", "precip")))#
for(i in names(corr.can)){#
	for(j in unique(canopy.df$Factor)){#
		for(k in unique(canopy.df$chr)){#
			canopy.df[canopy.df$Site.Can==i & canopy.df$Factor==j & canopy.df$chr==k, "cor"] <- #
						corr.can[[i]][corr.can[[i]][,"chr"]==k, j]#
		}#
	}#
}#
summary(canopy.df)#
# canopy.df$Site <- as.factor(ifelse(substr(canopy.df$Site.Can,1, 1)=="H", "HF", "MMF"))#
#
for(i in 1:nrow(canopy.df)){#
	if(substr(paste(canopy.df[i,"Site.Can"]),1,2)=="Ha") {canopy.df[i,"Site"] <- "MA"}#
	if(substr(paste(canopy.df[i,"Site.Can"]),1,2)=="Ho") {canopy.df[i,"Site"] <- "ME"}#
	if(substr(paste(canopy.df[i,"Site.Can"]),1,2)=="Mi") {canopy.df[i,"Site"]<- "MO"}#
	if(substr(paste(canopy.df[i,"Site.Can"]),1,2)=="Mo") {canopy.df[i,"Site"] <- "IN"}#
	if(substr(paste(canopy.df[i,"Site.Can"]),1,2)=="Oa") {canopy.df[i,"Site"] <- "OH"}#
}#
canopy.df$Site <- factor(canopy.df$Site, levels = c("MO", "IN", "OH", "MA", "ME"))#
summary(canopy.df)#
#
class(canopy.df$Site.Can)#
#
for(i in unique(canopy.df$Site.Can)){#
	canopy.df[canopy.df$Site.Can==i,"CC"] <-str_sub(canopy.df[canopy.df$Site.Can==i,"Site.Can"],-1,-1)#
}#
canopy.df$CC <- factor(canopy.df$CC, levels = c("D", "I", "S"))#
summary(canopy.df)#
# Sig value for 61 df = 0.209#
canopy.df$sig <- ifelse(canopy.df$cor < -0.209 | canopy.df$cor > 0.209, "Y", "N")#
canopy.df$sig <- factor(canopy.df$sig, levels = c("Y", "N"))#
source("poster_theme.R")
ggplot(data = canopy.df[canopy.df$chr=="std",]) + facet_grid(Factor~Site) + #
	geom_bar(aes(x=CC, y=cor, fill=sig), stat="identity", position="dodge", colour="black") +#
	geom_hline(yintercept=0.209, linetype="dashed") + #
	geom_hline(yintercept=-0.209, linetype="dashed") + 	#
	geom_hline(yintercept=0, linetype="solid") +#
	scale_fill_manual(values= c("green", "grey50")) + #
	poster.theme2
summary(short.can.index)
for(i in names(short.can.chr)){#
	site <- unlist(strsplit(i, "[.]"))[1]#
	corr.can[[i]] <- as.data.frame(cor(short.can.chr[[i]][, 1:2], climate.site[[site]][, c("tmean", 					"precip")], method="pearson"))#
	corr.can[[i]]$chr <- row.names(corr.can[[i]])#
}
summary(corr.can)
summary(corr.can[[1]])
library(mgcv)#
library(ggplot2)#
library(car)#
library(reshape)#
library(dplR)#
library(DescTools)#
# Christy's GAMM code#
#
# gam1 <- gamm(Y ~  s(Biomass, bs="cr", k=3, by=PFT) + s(tair, k=k, by=PFT) + s(precipf, k=k, by=PFT) + s(CO2, k=k, by=PFT), random=list(PlotID=~1), data=data) #
#
# Loading in my data#
#
data.use <- read.csv("processed_data/AllSites_tree_plus_climate_and_BA.csv", header=T)#
#
data.use$group <- data.use$Species#
data.use$group <- recode(data.use$group, "'CAOV' = 'CARYA'; 'CACO' = 'CARYA'; #
  							'CATE' = 'CARYA'; 'ACSAC' = 'ACSA'; 'BEAL' = 'BETULA'; 'BELE' = 'BETULA'; 'QUMU' = 'QUAL'")#
#
data.use$group.plot <- as.factor(paste(data.use$group, data.use$PlotID, sep="."))#
#
data.use$Canopy.Class <- recode(data.use$Canopy.Class, "'C' = 'D'")#
summary(data.use)#
# reducing the amount of data for the test runs#
sites.use <- c("Harvard", "Howland", "Morgan Monroe State Park", "Oak Openings Toledo", "Missouri Ozark")#
#
test <- data.use[data.use$Site %in% sites.use & !is.na(data.use$RW) & !is.na(data.use$BA.inc),]#
summary(test)#
#
test$group.cc <- as.factor(paste(test$group, test$Canopy.Class, sep="."))#
summary(test)#
# Get a list of what predictors & responses I'm using#
predictors.all <- c("tmean", "precip", "Species", "dbh.recon", "Canopy.Class", "spp.plot", "group", "group.plot", "group.cc")#
#
# Getting rid of observations that have NAs in the important variables#
test <- test[complete.cases(test[,predictors.all]),]#
test <- test[test$Live.Dead=="LIVE" & !test$Canopy.Class=="F",]#
#
# Subsetting to a set of species that we have enough data to feel good about#
#species.use <- c("TSCA", "QURU", "ACRU", "BEAL", "ACSA", "LITU", "QUAL", "CAOV", "CACO", "CATE", "JUVI", "QUVE", "PCRU", "THOC", "PIST")#
group.use <- c("ACRU", "ACSA", "BETULA", "CARYA", "FAGR", "FRAX", "PIST", "QUAL", "QURU", "QUVE", "SAAL", "TSCA", "ULRU")#
#
test <- test[test$group %in% group.use,]#
#
summary(test)#
#
# Right now just looking at the dominant trees.  Not sure how to show this yet#
test <- test[test$Canopy.Class=="S",]#
#
par(new=F)#
plot(test[test$TreeID=="MMA003", "BA.inc"]~ test[test$TreeID=="MMA003","Year"], type="l")#
summary(test)#
# Truncatign at 1935; at 1935 the sample depth for the oak openings is only 1#
test <- test[test$Year >= 1935 & test$Year <= 2012,]#
#
tree.rw <- test#
summary(tree.rw)#
#
summary(test)#
save(test, file="processed_data/test_tree_data_1935_2012.Rdata")#
#
sites.rw <- list()#
#
tree.rw$Year <- as.factor(tree.rw$Year)#
#
for(s in unique(tree.rw$Site)){#
	sites.rw[[s]] <- recast(tree.rw[tree.rw$Site==s,c("Year", "TreeID", "RW")], Year ~ TreeID)	#
}#
summary(sites.rw)#
#
save(sites.rw, file="processed_data/sites_rw.Rdata")#
summary(sites.rw[[4]])#
sites.rw#
# Making Indices of all the different sites using a 30 yr cubic smoothing spline#
sites.i <- list()#
#
for(s in names(sites.rw)){#
	sites.i[[s]] <- detrend(sites.rw[[s]][,2:ncol(sites.rw[[s]])], method="Spline", nyr=30)#
}#
summary(sites.i[[1]])#
#
# making chronologies for each site#
#
site.chron <- list()#
#
for(s in names(sites.i)){#
	site.chron[[s]] <- chron(sites.i[[s]][,2:ncol(sites.i[[s]])], prefix = substr(s, 1, 3), prewhiten = T) #
	site.chron[[s]][,"Year"]<- c(1935:2012) #
}#
#
summary(site.chron[[5]])#
# Making each site it's own dataframe#
harvard.crn <- as.data.frame(site.chron[[1]])#
#
howland.crn <- as.data.frame(site.chron[[2]])#
#
misso.crn <- as.data.frame(site.chron[[3]])#
#
mmf.crn <- as.data.frame(site.chron[[4]])#
#
oakop.crn <- as.data.frame(site.chron[[5]])#
# Plotting thigns for presentation#
par(cex=2 )#
plot(mmf.crn$Morres ~ mmf.crn$Year, type="l", lwd=5, axes=F, cex=6, col="white")#
abline(h=1,lty="dashed", col="white")#
axis(side =1,tck= 0.05) #
axis(side=2,tck=0.05)#
#
#Plotting out mmfsites#
summary(test)#
#
mmf <- test[test$Site %in% "Morgan Monroe State Park",]#
#
summary(mmf)#
#
for(i in unique(mmf$Year)){#
  mmf[mmf$Year==i,"Mean"] <- mean(mmf[mmf$Year==i,"RW"])#
  mmf[mmf$Year==i,"UB"] <- quantile(mmf[mmf$Year==i,"RW"], 0.975)#
  mmf[mmf$Year==i,"LB"] <- quantile(mmf[mmf$Year==i,"RW"], 0.025)#
}#
#
summary(mmf)#
#
ggplot(data=mmf)+#
  # geom_line(aes(x=Year, y=RW))#
  geom_ribbon(aes(x=Year, ymin=LB, ymax=UB), alpha=0.5, fill="white")+#
  geom_line(aes(x=Year, y=Mean), size=2, color="white")+#
  poster.theme2#
# Merging the residual chronologies back together#
sites.crn <- data.frame(Harvard = harvard.crn[, "Harres"], #
						Howland = howland.crn[,"Howres"], #
						Missouri = misso.crn[,"Misres"],#
						Morgan_Monroe = mmf.crn[,"Morres"], #
						Oak_openings = oakop.crn[,"Oakres"]#
						)#
#
summary(sites.crn)#
# Load in climate data#
#
climate.use <- read.csv("processed_data/climate_growing_season.csv")#
#
summary(climate.use)#
#
climate.use <- climate.use[climate.use$Site %in% sites.use,]#
climate.use <- climate.use[climate.use$Year>=1935 & climate.use$Year <=2012,]#
#
climate.site <- list()#
#
for(s in unique(climate.use$Site)){#
	climate.site[[s]] <- climate.use[climate.use$Site==s,]#
}#
#
summary(climate.site)#
save(climate.site, file="processed_data/sites_use_climate.Rdata")#
class(climate.site[[1]][,"Year"])#
#
head(climate.site[[1]])#
#
summary(climate.site[[1]])#
#
harv.clim <- climate.site[["Harvard"]][,c("tmean", "precip")]#
#
how.clim <- climate.site[["Howland"]][,c("tmean", "precip")]#
#
miss.clim <- climate.site[["Missouri Ozark"]][,c("tmean", "precip")]#
#
mmf.clim <- climate.site[["Morgan Monroe State Park"]][,c("tmean", "precip")]#
#
oak.clim <- climate.site[["Oak Openings Toledo"]][,c("tmean", "precip")]#
dim(harv.clim)#
dim(harvard.crn)#
#
# harvard#
harv.cor<- cor(harvard.crn, harv.clim[,c("tmean", "precip")], method="pearson")#
harvard <- data.frame(cor = c(harv.cor[1:2,"tmean"],  harv.cor[1:2,"precip"]),#
					  var = c("tmean", "tmean", "precip", "precip"))#
harvard$type <- c("std", "res")#
harvard$site <- "Harvard" #
# Howland#
how.cor <- cor(howland.crn, how.clim[,c("tmean", "precip")], method="pearson")#
how.cor#
#
howland <- data.frame(cor = c(how.cor[1:2,"tmean"],  how.cor[1:2,"precip"]),#
					  var = c("tmean", "tmean", "precip", "precip"))#
howland$type <- c("std", "res")#
howland$site <- "Howland" #
# Missouri#
mo.cor <- cor(misso.crn, miss.clim[,c("tmean", "precip")], method="pearson")#
mo.cor#
#
missouri <- data.frame(cor = c(mo.cor[1:2,"tmean"],  mo.cor[1:2,"precip"]),#
					  var = c("tmean", "tmean", "precip", "precip"))#
missouri$type <- c("std", "res")#
missouri$site <- "Missouri" #
#
# Morgan Monroe#
mmf.cor <- cor(mmf.crn, mmf.clim[,c("tmean", "precip")], method="pearson")#
mmf.cor#
#
morgan <- data.frame(cor = c(mmf.cor[1:2,"tmean"],  mmf.cor[1:2,"precip"]),#
					  var = c("tmean", "tmean", "precip", "precip"))#
morgan$type <- c("std", "res")#
morgan$site <- "Morgan-Monroe" #
#
# Oak openings#
oakop.cor <- cor(oakop.crn, oak.clim[,c("tmean", "precip")], method="pearson")#
oakop.cor#
#
oakop <- data.frame(cor = c(oakop.cor[1:2,"tmean"],  oakop.cor[1:2,"precip"]),#
					  var = c("tmean", "tmean", "precip", "precip"))#
oakop$type <- c("std", "res")#
oakop$site <- "Oak-Openings" #
#
# Merging standard chronologies into one file#
#
clim.cor <- merge(harvard, howland, all.x=T, all.y=T)#
clim.cor2 <- merge(clim.cor, missouri,all.x=T, all.y=T)#
clim.cor3 <- merge(clim.cor2, morgan,all.x=T, all.y=T)#
clim.cor4 <- merge(clim.cor3, oakop,all.x=T, all.y=T)#
#
summary(clim.cor4)#
clim.cor4$site <- as.factor(clim.cor4$site)#
clim.cor4$type <- as.factor(clim.cor4$type)#
clim.cor4$cor <- as.numeric(clim.cor4$cor)#
#
# Sig value for 81 df = 0.209#
clim.cor4$sig <- ifelse(clim.cor4$cor < -0.2245 | clim.cor4$cor > 0.2245, "Y", "N")#
clim.cor4$sig <- factor(clim.cor4$sig, levels = c("Y", "N"))#
#
clim.cor4$site <- factor(clim.cor4$site, levels = c("Missouri", "Morgan-Monroe", "Oak-Openings", "Harvard", "Howland"))#
#
clim.cor4$Site <- clim.cor4$site#
clim.cor4$Site <- recode(clim.cor4$Site, "'Missouri' = 'MO'; 'Morgan-Monroe' = 'IN'; 'Oak-Openings' = 'OH'; 'Harvard' = 'MA'; 'Howland' = 'ME'")#
clim.cor4$Site <- factor(clim.cor4$Site, levels = c("MO", "IN", "OH", "MA", "ME"))#
pdf("figures/site_correlations.pdf", width= 13, height = 8.5)#
ggplot(data=clim.cor4[clim.cor4$type=="std",]) + facet_grid(var~. , scales="free_x") +#
	geom_bar(aes(x=Site, y=cor, fill=sig), stat="identity", position="dodge", colour="black") +#
	geom_hline(yintercept=0.2245, linetype="dashed") + #
	geom_hline(yintercept=-0.2245, linetype="dashed") + 	#
	geom_hline(yintercept=0, linetype="solid") +#
	scale_fill_manual(values= c("green", "grey50")) + #
	poster.theme2#
dev.off()#
#
#######################################################################
# Gettign correlations for all for all of the available climate data data#
#######################################################################
# Loading in climate data#
t.mean <- read.csv("processed_data/ch2_tmean.csv", header=T)#
t.min <- read.csv("processed_data/ch2_tmin.csv", header=T)#
t.max <- read.csv("processed_data/ch2_tmax.csv", header=T)#
precip <- read.csv("processed_data/ch2_precip.csv", header=T)#
summary(t.mean)#
#
# Limiting time frame--1935-2012#
t.mean <- t.mean[t.mean$Year >= 1936 & t.mean$Year <= 2012,]#
t.min <- t.min[t.min$Year >= 1936 & t.min$Year <= 2012,]#
t.max <- t.max[t.max$Year >= 1936 & t.max$Year <= 2012,]#
precip <- precip[precip$Year >= 1936 & precip$Year <= 2012,]#
summary(t.mean)#
summary(t.min)#
summary(t.max)#
summary(precip)#
#
head(t.mean)#
unique(t.mean$Site.Name)#
#
t.mean$Site.Name <- recode(t.mean$Site.Name, "'Missouri Ozark' = 'Missouri'; 'Morgan Monroe State Park'='Morgan_Monroe'; 'Oak Openings Toledo' = 'Oak_openings'")#
#
t.min$Site.Name <- recode(t.min$Site.Name, "'Missouri Ozark' = 'Missouri'; 'Morgan Monroe State Park'='Morgan_Monroe'; 'Oak Openings Toledo' = 'Oak_openings'")#
t.max$Site.Name <- recode(t.max$Site.Name, "'Missouri Ozark' = 'Missouri'; 'Morgan Monroe State Park'='Morgan_Monroe'; 'Oak Openings Toledo' = 'Oak_openings'")#
precip$Site.Name <- recode(precip$Site.Name, "'Missouri Ozark' = 'Missouri'; 'Morgan Monroe State Park'='Morgan_Monroe'; 'Oak Openings Toledo' = 'Oak_openings'")#
# getting the ring widths in a data frame#
summary(sites.crn)#
sites.crn$Year <- site.chron[[1]][,"Year"]#
head(sites.crn)#
sites.crn <- sites.crn[sites.crn$Year > 1935,]#
#--------------------------------------------#
# Tmean correlation#
#--------------------------------------------#
#
sites <- c("Harvard", "Howland", "Missouri", "Morgan_Monroe", "Oak_openings")#
#
tmean.corr<-list()#
#
for(i in sites){#
	tmean.corr[[i]] <- cor(sites.crn[,i], t.mean[t.mean$Site.Name %in% i,!names(t.mean) %in% c("Site.Name", "Year")], method="pearson")#
}#
summary(tmean.corr)#
#
# Making each site it's own dataframe#
harvard.tmean <- as.data.frame(tmean.corr[[1]])#
#
harvard.tmean.stack <- stack(harvard.tmean)#
names(harvard.tmean.stack)<- c("cor", "month")#
harvard.tmean.stack$Site <- as.factor("Harvard")#
harvard.tmean.stack$type <- as.factor("tmean")#
#
howland.tmean <- as.data.frame(tmean.corr[[2]])#
#
howland.tmean.stack <- stack(howland.tmean)#
names(howland.tmean.stack)<- c("cor", "month")#
howland.tmean.stack$Site <- as.factor("Howland")#
howland.tmean.stack$type <- as.factor("tmean")#
#
mo.tmean <- as.data.frame(tmean.corr[[3]])#
#
mo.tmean.stack <- stack(mo.tmean)#
names(mo.tmean.stack)<- c("cor", "month")#
mo.tmean.stack$Site <- as.factor("Missouri")#
mo.tmean.stack$type <- as.factor("tmean")#
#
mmf.tmean <- as.data.frame(tmean.corr[[4]])#
#
mmf.tmean.stack <- stack(mmf.tmean)#
names(mmf.tmean.stack)<- c("cor", "month")#
mmf.tmean.stack$Site <- as.factor("MMF")#
mmf.tmean.stack$type <- as.factor("tmean")#
#
oakop.tmean <- as.data.frame(tmean.corr[[5]])#
#
oakop.tmean.stack <- stack(oakop.tmean)#
names(oakop.tmean.stack)<- c("cor", "month")#
oakop.tmean.stack$Site <- as.factor("Oak_openings")#
oakop.tmean.stack$type <- as.factor("tmean")#
#
all.sites.tmean <- rbind(harvard.tmean.stack, howland.tmean.stack, mo.tmean.stack, mmf.tmean.stack, oakop.tmean.stack)#
#
summary(all.sites.tmean)#
#
#--------------------------------------------#
# Tmin correlation#
#--------------------------------------------#
#
sites <- c("Harvard", "Howland", "Missouri", "Morgan_Monroe", "Oak_openings")#
#
tmin.corr<-list()#
#
for(i in sites){#
	tmin.corr[[i]] <- cor(sites.crn[,i], t.min[t.min$Site.Name %in% i,!names(t.min) %in% c("Site.Name", "Year")], method="pearson")#
}#
summary(tmin.corr)#
#
# Making each site it's own dataframe#
harvard.tmin <- as.data.frame(tmin.corr[[1]])#
#
harvard.tmin.stack <- stack(harvard.tmin)#
names(harvard.tmin.stack)<- c("cor", "month")#
harvard.tmin.stack$Site <- as.factor("Harvard")#
harvard.tmin.stack$type <- as.factor("tmin")#
#
howland.tmin <- as.data.frame(tmin.corr[[2]])#
#
howland.tmin.stack <- stack(howland.tmin)#
names(howland.tmin.stack)<- c("cor", "month")#
howland.tmin.stack$Site <- as.factor("Howland")#
howland.tmin.stack$type <- as.factor("tmin")#
#
mo.tmin <- as.data.frame(tmin.corr[[3]])#
#
mo.tmin.stack <- stack(mo.tmin)#
names(mo.tmin.stack)<- c("cor", "month")#
mo.tmin.stack$Site <- as.factor("Missouri")#
mo.tmin.stack$type <- as.factor("tmin")#
#
mmf.tmin <- as.data.frame(tmin.corr[[4]])#
#
mmf.tmin.stack <- stack(mmf.tmin)#
names(mmf.tmin.stack)<- c("cor", "month")#
mmf.tmin.stack$Site <- as.factor("MMF")#
mmf.tmin.stack$type <- as.factor("tmin")#
#
oakop.tmin <- as.data.frame(tmin.corr[[5]])#
#
oakop.tmin.stack <- stack(oakop.tmin)#
names(oakop.tmin.stack)<- c("cor", "month")#
oakop.tmin.stack$Site <- as.factor("Oak_openings")#
oakop.tmin.stack$type <- as.factor("tmin")#
#
all.sites.tmin <- rbind(harvard.tmin.stack, howland.tmin.stack, mo.tmin.stack, mmf.tmin.stack, oakop.tmin.stack)#
#
summary(all.sites.tmin)#
#--------------------------------------------#
# Tmax correlation#
#--------------------------------------------#
#
sites <- c("Harvard", "Howland", "Missouri", "Morgan_Monroe", "Oak_openings")#
#
tmax.corr<-list()#
#
for(i in sites){#
	tmax.corr[[i]] <- cor(sites.crn[,i], t.max[t.max$Site.Name %in% i,!names(t.max) %in% c("Site.Name", "Year")], method="pearson")#
}#
summary(tmax.corr)#
#
# Making each site it's own dataframe#
harvard.tmax <- as.data.frame(tmax.corr[[1]])#
#
harvard.tmax.stack <- stack(harvard.tmax)#
names(harvard.tmax.stack)<- c("cor", "month")#
harvard.tmax.stack$Site <- as.factor("Harvard")#
harvard.tmax.stack$type <- as.factor("tmax")#
#
howland.tmax <- as.data.frame(tmax.corr[[2]])#
#
howland.tmax.stack <- stack(howland.tmax)#
names(howland.tmax.stack)<- c("cor", "month")#
howland.tmax.stack$Site <- as.factor("Howland")#
howland.tmax.stack$type <- as.factor("tmax")#
#
mo.tmax <- as.data.frame(tmax.corr[[3]])#
#
mo.tmax.stack <- stack(mo.tmax)#
names(mo.tmax.stack)<- c("cor", "month")#
mo.tmax.stack$Site <- as.factor("Missouri")#
mo.tmax.stack$type <- as.factor("tmax")#
#
mmf.tmax <- as.data.frame(tmax.corr[[4]])#
#
mmf.tmax.stack <- stack(mmf.tmax)#
names(mmf.tmax.stack)<- c("cor", "month")#
mmf.tmax.stack$Site <- as.factor("MMF")#
mmf.tmax.stack$type <- as.factor("tmax")#
#
oakop.tmax <- as.data.frame(tmax.corr[[5]])#
#
oakop.tmax.stack <- stack(oakop.tmax)#
names(oakop.tmax.stack)<- c("cor", "month")#
oakop.tmax.stack$Site <- as.factor("Oak_openings")#
oakop.tmax.stack$type <- as.factor("tmax")#
#
all.sites.tmax <- rbind(harvard.tmax.stack, howland.tmax.stack, mo.tmax.stack, mmf.tmax.stack, oakop.tmax.stack)#
#
summary(all.sites.tmax)#
#--------------------------------------------#
# Precip correlation#
#--------------------------------------------#
sites <- c("Harvard", "Howland", "Missouri", "Morgan_Monroe", "Oak_openings")#
#
precip.corr<-list()#
#
for(i in sites){#
	precip.corr[[i]] <- cor(sites.crn[,i], precip[precip$Site.Name %in% i,!names(precip) %in% c("Site.Name", "Year")], method="pearson")#
}#
summary(precip.corr)#
#
# Making each site it's own dataframe#
harvard.precip <- as.data.frame(precip.corr[[1]])#
#
harvard.precip.stack <- stack(harvard.precip)#
names(harvard.precip.stack)<- c("cor", "month")#
harvard.precip.stack$Site <- as.factor("Harvard")#
harvard.precip.stack$type <- as.factor("precip")#
#
howland.precip <- as.data.frame(precip.corr[[2]])#
#
howland.precip.stack <- stack(howland.precip)#
names(howland.precip.stack)<- c("cor", "month")#
howland.precip.stack$Site <- as.factor("Howland")#
howland.precip.stack$type <- as.factor("precip")#
#
mo.precip <- as.data.frame(precip.corr[[3]])#
#
mo.precip.stack <- stack(mo.precip)#
names(mo.precip.stack)<- c("cor", "month")#
mo.precip.stack$Site <- as.factor("Missouri")#
mo.precip.stack$type <- as.factor("precip")#
#
mmf.precip <- as.data.frame(precip.corr[[4]])#
#
mmf.precip.stack <- stack(mmf.precip)#
names(mmf.precip.stack)<- c("cor", "month")#
mmf.precip.stack$Site <- as.factor("MMF")#
mmf.precip.stack$type <- as.factor("precip")#
#
oakop.precip <- as.data.frame(precip.corr[[5]])#
#
oakop.precip.stack <- stack(oakop.precip)#
names(oakop.precip.stack)<- c("cor", "month")#
oakop.precip.stack$Site <- as.factor("Oak_openings")#
oakop.precip.stack$type <- as.factor("precip")#
#
all.sites.precip <- rbind(harvard.precip.stack, howland.precip.stack, mo.precip.stack, mmf.precip.stack, oakop.precip.stack)#
#
summary(all.sites.precip)#
#
# Merging all stacked dataframes together to make plotting easier#
#
all.sites.climate <- rbind(all.sites.precip, all.sites.tmax, all.sites.tmin, all.sites.tmean)#
summary(all.sites.climate)#
#
# Sig value for 75 df = 0.2245#
all.sites.climate$sig <- ifelse(all.sites.climate$cor < -0.2245 | all.sites.climate$cor > 0.2245, "Y", "N")#
all.sites.climate$sig <- factor(all.sites.climate$sig, levels = c("Y", "N"))#
all.sites.climate$month <- factor(all.sites.climate$month, levels = c("pJan", "pFeb", "pMar", "pApr", "pMay", "pJun", "pJul", "pAug", "pSep", "pOct", "pNov", "pDec", "Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec", "pfall", "winter", "spring", "summer", "grow.seas"))#
#
all.sites.climate$Site <- factor(all.sites.climate$Site, levels = c("Missouri", "MMF", "Oak_openings", "Harvard", "Howland"))#
#
pdf("figures/site_correlations_allmonths_short.pdf", width= 13, height = 8.5)#
ggplot(data=all.sites.climate[all.sites.climate$month %in% c("pOct", "pNov", "pDec", "Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec", "spring", "summer", "pfall", "winter", "grow.seas"),]) + facet_grid(Site ~ type ) +#
	geom_bar(aes(x=month, y=cor, fill=sig), stat="identity", position="dodge", colour="black") +#
	geom_hline(yintercept=0.2245, linetype="dashed") + #
	geom_hline(yintercept=-0.2245, linetype="dashed") + 	#
	geom_hline(yintercept=0, linetype="solid") +#
	scale_fill_manual(values= c("green", "grey50"))+#
	theme(axis.text.x = element_text(angle = 45, hjust = 1))#
dev.off()#
#
summary(all.sites.climate$month)#
#
all.sites.gs <- all.sites.climate[all.sites.climate$month=="grow.seas",]#
summary(all.sites.gs)#
#
cbbPalette <- c("#009E73", "#e79f00", "#9ad0f3", "#0072B2", "#D55E00")#
#
all.sites.climate$type <- factor(all.sites.climate$type, levels=c("tmean", "precip", "tmin", "tmax"))#
pdf("figures/site_correlations_growing season.pdf", width= 13, height = 8.5)#
ggplot(data=all.sites.climate[all.sites.climate$month %in% "grow.seas" & all.sites.climate$type %in% c("tmean", "precip"),]) + facet_grid(~type) +#
  geom_bar(aes(x=month, y=cor, color=Site), stat="identity", position="dodge", fill=NA) + ylim(-0.6,0.6)+#
  geom_bar(aes(x=month, y=cor, color=Site), stat="identity", position="dodge", fill=NA) +ylim(-0.6,0.6)+#
  geom_bar(aes(x=month, y=cor, fill=Site, alpha=sig), stat="identity", position="dodge") +ylim(-0.6,0.6)+#
  geom_hline(yintercept=0.2245, linetype="dashed") + #
  geom_hline(yintercept=-0.2245, linetype="dashed") + 	#
  geom_hline(yintercept=0, linetype="solid") +#
 # scale_fill_manual(values= cbbPalette)+#
  scale_color_manual(values=cbbPalette) +#
  scale_fill_manual(values=cbbPalette) +#
  scale_alpha_manual(values = c(1, 0.2))+#
  poster.theme2 +#
  theme(axis.text.x = element_text(angle = 45, hjust = 1),panel.grid.major=element_blank(), panel.grid.minor= element_blank(), panel.border= element_blank(), panel.background= element_blank()) +#
  labs(title= "TR Site Climate Correlations", x="Seasons", y=expression(bold(paste("Correlation Value (r)"))))#
#
dev.off()#
#
#################################################################################
# Running correlations on the individual indices to get the full spread of the #
#################################################################################
#
all.sites.gs <- all.sites.climate[all.sites.climate$month=="grow.seas",]#
summary(all.sites.gs)#
#
all.sites.gs$State <- recode(all.sites.gs$Site, "'Missouri'='MO';'MMF'='IN';'Oak_openings'='OH';'Harvard'='MA';'Howland'='ME'")#
all.sites.gs$series <- as.factor("chron")#
summary(all.sites.gs)#
#
summary(climate.site$Howland[,])#
head(sites.i$Howland)#
#
summary(sites.i)#
index.cor.temp <- sites.i#
index.cor.precip <- sites.i#
#
test <- sites.i#
meow <- test#
#
# Running correlations fro Tmean and Precip on individual indices#
for(s in names(sites.i)){#
	for(i in names(sites.i[[s]])){#
		index.cor.temp[[s]][,i] <- cor(sites.i[[s]][,i], climate.site[[s]][,"tmean"], method="pearson")#
	}#
}	#
#
test <- cor(sites.i[["Harvard"]][,c(1:10)], climate.site[["Harvard"]][,"tmean"], method="pearson")#
for(s in names(sites.i)){#
	for(i in names(sites.i[[s]])){#
		index.cor.precip[[s]][,i] <- cor(sites.i[[s]][,i], climate.site[[s]][,"precip"], method="pearson") #
	}#
}	#
summary(index.cor.precip)#
#
# Now need to merge everything into one stacked file to be used with ggplot 2#
#
test <- data.frame()#
#
# Need to break it down by site#
#
# Harvard#
har.precip.stack <- stack(index.cor.precip[["Harvard"]])#
names(har.precip.stack)<- c("cor", "TreeID")#
har.precip.stack$State <- as.factor("MA")#
har.precip.stack$type <- as.factor("precip")#
summary(har.precip.stack)#
#
har.temp.stack <- stack(index.cor.temp[["Harvard"]])#
names(har.temp.stack)<- c("cor", "TreeID")#
har.temp.stack$State <- as.factor("MA")#
har.temp.stack$type <- as.factor("tmean")#
summary(har.temp.stack)#
#
har.stack <- merge(har.temp.stack, har.precip.stack, all.x=T, all.y=T)#
summary(har.stack)#
#
# Howland#
#
how.precip.stack <- stack(index.cor.precip[["Howland"]])#
names(how.precip.stack)<- c("cor", "TreeID")#
how.precip.stack$State <- as.factor("ME")#
how.precip.stack$type <- as.factor("precip")#
summary(how.precip.stack)#
#
how.temp.stack <- stack(index.cor.temp[["Howland"]])#
names(how.temp.stack)<- c("cor", "TreeID")#
how.temp.stack$State <- as.factor("ME")#
how.temp.stack$type <- as.factor("tmean")#
summary(how.temp.stack)#
#
how.stack <- merge(how.temp.stack, how.precip.stack, all.x=T, all.y=T)#
summary(how.stack)#
#
# Missouri#
#
mo.precip.stack <- stack(index.cor.precip[["Missouri Ozark"]])#
names(mo.precip.stack)<- c("cor", "TreeID")#
mo.precip.stack$State <- as.factor("MO")#
mo.precip.stack$type <- as.factor("precip")#
summary(mo.precip.stack)#
#
mo.temp.stack <- stack(index.cor.temp[["Missouri Ozark"]])#
names(mo.temp.stack)<- c("cor", "TreeID")#
mo.temp.stack$State <- as.factor("MO")#
mo.temp.stack$type <- as.factor("tmean")#
summary(mo.temp.stack)#
#
mo.stack <- merge(mo.temp.stack, mo.precip.stack, all.x=T, all.y=T)#
summary(mo.stack)#
# MMF#
#
mmf.precip.stack <- stack(index.cor.precip[["Morgan Monroe State Park"]])#
names(mmf.precip.stack)<- c("cor", "TreeID")#
mmf.precip.stack$State <- as.factor("IN")#
mmf.precip.stack$type <- as.factor("precip")#
summary(mmf.precip.stack)#
#
mmf.temp.stack <- stack(index.cor.temp[["Morgan Monroe State Park"]])#
names(mmf.temp.stack)<- c("cor", "TreeID")#
mmf.temp.stack$State <- as.factor("IN")#
mmf.temp.stack$type <- as.factor("tmean")#
summary(mmf.temp.stack)#
#
mmf.stack <- merge(mmf.temp.stack, mmf.precip.stack, all.x=T, all.y=T)#
summary(mmf.stack)#
# Oak Openings#
#
oak.precip.stack <- stack(index.cor.precip[["Oak Openings Toledo"]])#
names(oak.precip.stack)<- c("cor", "TreeID")#
oak.precip.stack$State <- as.factor("OH")#
oak.precip.stack$type <- as.factor("precip")#
summary(oak.precip.stack)#
#
oak.temp.stack <- stack(index.cor.temp[["Oak Openings Toledo"]])#
names(oak.temp.stack)<- c("cor", "TreeID")#
oak.temp.stack$State <- as.factor("OH")#
oak.temp.stack$type <- as.factor("tmean")#
summary(oak.temp.stack)#
#
oak.stack <- merge(oak.temp.stack, oak.precip.stack, all.x=T, all.y=T)#
summary(oak.stack)#
#
cor.all.stack <- rbind(har.stack, how.stack, mmf.stack, oak.stack, mo.stack)#
summary(cor.all.stack)#
#
# Calculating Tukey Biweight Robust mean#
#
for(s in unique(cor.all.stack$State)){#
	for(t in unique(cor.all.stack$type)){#
	cor.all.stack[cor.all.stack$State==s & cor.all.stack$type==t,"biweight.mean"] <- TukeyBiweight(cor.all.stack[cor.all.stack$State==s & cor.all.stack$type==t,"cor"], na.rm=T)#
	}#
}#
summary(cor.all.stack)#
#
# creating a significance column#
cor.all.stack$sig <- ifelse(cor.all.stack$cor < -0.2245 | cor.all.stack$cor > 0.2245, "Y", "N")#
cor.all.stack$sig <- factor(cor.all.stack$sig, levels = c("Y", "N"))#
#
cor.all.stack$State <- factor(cor.all.stack$State, levels=c("MO", "IN", "OH", "MA", "ME"))#
summary(cor.all.stack)#
#
cor.all.stack$type <- factor(cor.all.stack$type, levels = c("precip", "tmean"))#
cor.all.stack$series <- as.factor("index")#
#
summary(all.sites.gs)#
summary(cor.all.stack)#
#
summary(cor.all.stack[is.na(cor.all.stack$cor),])#
#
pdf("figures/violin_climate_cor.pdf", height=8, width=13)#
ggplot(data=cor.all.stack) + facet_grid(~type)+#
#
	geom_violin(aes(x=State, y=cor, fill=State), adjust = 2, trim=T) + ylim(-0.6,0.6)+#
	geom_point(data=all.sites.gs[all.sites.gs$type %in% c("precip", "tmean"),],aes(x=State, y=cor), shape=126, size=25)+ ylim(-0.6,0.6)+#
	geom_point(aes(x=State, y=biweight.mean), shape=95, size=25)+ ylim(-0.6,0.6)+#
	geom_hline(yintercept=0.2245, linetype="dashed") + #
  	geom_hline(yintercept=-0.2245, linetype="dashed") + 	#
  	geom_hline(yintercept=0, linetype="solid") +#
#
	scale_color_manual(values=cbbPalette) +#
  	scale_fill_manual(values=cbbPalette) +#
  	poster.theme2 +#
  	theme(axis.text.x = element_text(angle = 45, hjust = 1),panel.grid.major=element_blank(), panel.grid.minor= 	element_blank(), panel.border= element_blank(), panel.background= element_blank()) +#
  	labs(title= "TR Index Climate Correlations", x="State", y=expression(bold(paste("Correlation Value (r)"))))#
dev.off()
all.sites.gs <- all.sites.climate[all.sites.climate$month=="grow.seas",]
summary(all.sites.gs)
all.sites.climate <- rbind(all.sites.precip, all.sites.tmax, all.sites.tmin, all.sites.tmean)#
summary(all.sites.climate)
summary(all.sites.precip)
library(mgcv)#
library(ggplot2)#
library(car)#
library(reshape)#
library(dplR)#
library(DescTools)#
# Christy's GAMM code#
#
# gam1 <- gamm(Y ~  s(Biomass, bs="cr", k=3, by=PFT) + s(tair, k=k, by=PFT) + s(precipf, k=k, by=PFT) + s(CO2, k=k, by=PFT), random=list(PlotID=~1), data=data) #
#
# Loading in my data#
#
data.use <- read.csv("processed_data/AllSites_tree_plus_climate_and_BA.csv", header=T)#
#
data.use$group <- data.use$Species#
data.use$group <- recode(data.use$group, "'CAOV' = 'CARYA'; 'CACO' = 'CARYA'; #
  							'CATE' = 'CARYA'; 'ACSAC' = 'ACSA'; 'BEAL' = 'BETULA'; 'BELE' = 'BETULA'; 'QUMU' = 'QUAL'")#
#
data.use$group.plot <- as.factor(paste(data.use$group, data.use$PlotID, sep="."))#
#
data.use$Canopy.Class <- recode(data.use$Canopy.Class, "'C' = 'D'")#
summary(data.use)#
# reducing the amount of data for the test runs#
sites.use <- c("Harvard", "Howland", "Morgan Monroe State Park", "Oak Openings Toledo", "Missouri Ozark")#
#
test <- data.use[data.use$Site %in% sites.use & !is.na(data.use$RW) & !is.na(data.use$BA.inc),]#
summary(test)#
#
test$group.cc <- as.factor(paste(test$group, test$Canopy.Class, sep="."))#
summary(test)#
# Get a list of what predictors & responses I'm using#
predictors.all <- c("tmean", "precip", "Species", "dbh.recon", "Canopy.Class", "spp.plot", "group", "group.plot", "group.cc")#
#
# Getting rid of observations that have NAs in the important variables#
test <- test[complete.cases(test[,predictors.all]),]#
test <- test[test$Live.Dead=="LIVE" & !test$Canopy.Class=="F",]#
#
# Subsetting to a set of species that we have enough data to feel good about#
#species.use <- c("TSCA", "QURU", "ACRU", "BEAL", "ACSA", "LITU", "QUAL", "CAOV", "CACO", "CATE", "JUVI", "QUVE", "PCRU", "THOC", "PIST")#
group.use <- c("ACRU", "ACSA", "BETULA", "CARYA", "FAGR", "FRAX", "PIST", "QUAL", "QURU", "QUVE", "SAAL", "TSCA", "ULRU")#
#
test <- test[test$group %in% group.use,]#
#
summary(test)#
#
# Right now just looking at the dominant trees.  Not sure how to show this yet#
test <- test[test$Canopy.Class=="S",]#
#
par(new=F)#
plot(test[test$TreeID=="MMA003", "BA.inc"]~ test[test$TreeID=="MMA003","Year"], type="l")#
summary(test)#
# Truncatign at 1935; at 1935 the sample depth for the oak openings is only 1#
test <- test[test$Year >= 1935 & test$Year <= 2012,]#
#
tree.rw <- test#
summary(tree.rw)#
#
summary(test)#
save(test, file="processed_data/test_tree_data_1935_2012.Rdata")#
#
sites.rw <- list()#
#
tree.rw$Year <- as.factor(tree.rw$Year)#
#
for(s in unique(tree.rw$Site)){#
	sites.rw[[s]] <- recast(tree.rw[tree.rw$Site==s,c("Year", "TreeID", "RW")], Year ~ TreeID)	#
}#
summary(sites.rw)#
#
save(sites.rw, file="processed_data/sites_rw.Rdata")#
summary(sites.rw[[4]])#
sites.rw#
# Making Indices of all the different sites using a 30 yr cubic smoothing spline#
sites.i <- list()#
#
for(s in names(sites.rw)){#
	sites.i[[s]] <- detrend(sites.rw[[s]][,2:ncol(sites.rw[[s]])], method="Spline", nyr=30)#
}#
summary(sites.i[[1]])#
#
# making chronologies for each site#
#
site.chron <- list()#
#
for(s in names(sites.i)){#
	site.chron[[s]] <- chron(sites.i[[s]][,2:ncol(sites.i[[s]])], prefix = substr(s, 1, 3), prewhiten = T) #
	site.chron[[s]][,"Year"]<- c(1935:2012) #
}#
#
summary(site.chron[[5]])#
# Making each site it's own dataframe#
harvard.crn <- as.data.frame(site.chron[[1]])#
#
howland.crn <- as.data.frame(site.chron[[2]])#
#
misso.crn <- as.data.frame(site.chron[[3]])#
#
mmf.crn <- as.data.frame(site.chron[[4]])#
#
oakop.crn <- as.data.frame(site.chron[[5]])#
# Plotting thigns for presentation#
par(cex=2 )#
plot(mmf.crn$Morres ~ mmf.crn$Year, type="l", lwd=5, axes=F, cex=6, col="white")#
abline(h=1,lty="dashed", col="white")#
axis(side =1,tck= 0.05) #
axis(side=2,tck=0.05)#
#
#Plotting out mmfsites#
summary(test)#
#
mmf <- test[test$Site %in% "Morgan Monroe State Park",]#
#
summary(mmf)#
#
for(i in unique(mmf$Year)){#
  mmf[mmf$Year==i,"Mean"] <- mean(mmf[mmf$Year==i,"RW"])#
  mmf[mmf$Year==i,"UB"] <- quantile(mmf[mmf$Year==i,"RW"], 0.975)#
  mmf[mmf$Year==i,"LB"] <- quantile(mmf[mmf$Year==i,"RW"], 0.025)#
}#
#
summary(mmf)#
#
ggplot(data=mmf)+#
  # geom_line(aes(x=Year, y=RW))#
  geom_ribbon(aes(x=Year, ymin=LB, ymax=UB), alpha=0.5, fill="white")+#
  geom_line(aes(x=Year, y=Mean), size=2, color="white")+#
  poster.theme2#
# Merging the residual chronologies back together#
sites.crn <- data.frame(Harvard = harvard.crn[, "Harres"], #
						Howland = howland.crn[,"Howres"], #
						Missouri = misso.crn[,"Misres"],#
						Morgan_Monroe = mmf.crn[,"Morres"], #
						Oak_openings = oakop.crn[,"Oakres"]#
						)#
#
summary(sites.crn)#
# Load in climate data#
#
climate.use <- read.csv("processed_data/climate_growing_season.csv")#
#
summary(climate.use)#
#
climate.use <- climate.use[climate.use$Site %in% sites.use,]#
climate.use <- climate.use[climate.use$Year>=1935 & climate.use$Year <=2012,]#
#
climate.site <- list()#
#
for(s in unique(climate.use$Site)){#
	climate.site[[s]] <- climate.use[climate.use$Site==s,]#
}#
#
summary(climate.site)#
save(climate.site, file="processed_data/sites_use_climate.Rdata")#
class(climate.site[[1]][,"Year"])#
#
head(climate.site[[1]])#
#
summary(climate.site[[1]])#
#
harv.clim <- climate.site[["Harvard"]][,c("tmean", "precip")]#
#
how.clim <- climate.site[["Howland"]][,c("tmean", "precip")]#
#
miss.clim <- climate.site[["Missouri Ozark"]][,c("tmean", "precip")]#
#
mmf.clim <- climate.site[["Morgan Monroe State Park"]][,c("tmean", "precip")]#
#
oak.clim <- climate.site[["Oak Openings Toledo"]][,c("tmean", "precip")]#
dim(harv.clim)#
dim(harvard.crn)#
#
# harvard#
harv.cor<- cor(harvard.crn, harv.clim[,c("tmean", "precip")], method="pearson")#
harvard <- data.frame(cor = c(harv.cor[1:2,"tmean"],  harv.cor[1:2,"precip"]),#
					  var = c("tmean", "tmean", "precip", "precip"))#
harvard$type <- c("std", "res")#
harvard$site <- "Harvard" #
# Howland#
how.cor <- cor(howland.crn, how.clim[,c("tmean", "precip")], method="pearson")#
how.cor#
#
howland <- data.frame(cor = c(how.cor[1:2,"tmean"],  how.cor[1:2,"precip"]),#
					  var = c("tmean", "tmean", "precip", "precip"))#
howland$type <- c("std", "res")#
howland$site <- "Howland" #
# Missouri#
mo.cor <- cor(misso.crn, miss.clim[,c("tmean", "precip")], method="pearson")#
mo.cor#
#
missouri <- data.frame(cor = c(mo.cor[1:2,"tmean"],  mo.cor[1:2,"precip"]),#
					  var = c("tmean", "tmean", "precip", "precip"))#
missouri$type <- c("std", "res")#
missouri$site <- "Missouri" #
#
# Morgan Monroe#
mmf.cor <- cor(mmf.crn, mmf.clim[,c("tmean", "precip")], method="pearson")#
mmf.cor#
#
morgan <- data.frame(cor = c(mmf.cor[1:2,"tmean"],  mmf.cor[1:2,"precip"]),#
					  var = c("tmean", "tmean", "precip", "precip"))#
morgan$type <- c("std", "res")#
morgan$site <- "Morgan-Monroe" #
#
# Oak openings#
oakop.cor <- cor(oakop.crn, oak.clim[,c("tmean", "precip")], method="pearson")#
oakop.cor#
#
oakop <- data.frame(cor = c(oakop.cor[1:2,"tmean"],  oakop.cor[1:2,"precip"]),#
					  var = c("tmean", "tmean", "precip", "precip"))#
oakop$type <- c("std", "res")#
oakop$site <- "Oak-Openings" #
#
# Merging standard chronologies into one file#
#
clim.cor <- merge(harvard, howland, all.x=T, all.y=T)#
clim.cor2 <- merge(clim.cor, missouri,all.x=T, all.y=T)#
clim.cor3 <- merge(clim.cor2, morgan,all.x=T, all.y=T)#
clim.cor4 <- merge(clim.cor3, oakop,all.x=T, all.y=T)#
#
summary(clim.cor4)#
clim.cor4$site <- as.factor(clim.cor4$site)#
clim.cor4$type <- as.factor(clim.cor4$type)#
clim.cor4$cor <- as.numeric(clim.cor4$cor)#
#
# Sig value for 81 df = 0.209#
clim.cor4$sig <- ifelse(clim.cor4$cor < -0.2245 | clim.cor4$cor > 0.2245, "Y", "N")#
clim.cor4$sig <- factor(clim.cor4$sig, levels = c("Y", "N"))#
#
clim.cor4$site <- factor(clim.cor4$site, levels = c("Missouri", "Morgan-Monroe", "Oak-Openings", "Harvard", "Howland"))#
#
clim.cor4$Site <- clim.cor4$site#
clim.cor4$Site <- recode(clim.cor4$Site, "'Missouri' = 'MO'; 'Morgan-Monroe' = 'IN'; 'Oak-Openings' = 'OH'; 'Harvard' = 'MA'; 'Howland' = 'ME'")#
clim.cor4$Site <- factor(clim.cor4$Site, levels = c("MO", "IN", "OH", "MA", "ME"))#
pdf("figures/site_correlations.pdf", width= 13, height = 8.5)#
ggplot(data=clim.cor4[clim.cor4$type=="std",]) + facet_grid(var~. , scales="free_x") +#
	geom_bar(aes(x=Site, y=cor, fill=sig), stat="identity", position="dodge", colour="black") +#
	geom_hline(yintercept=0.2245, linetype="dashed") + #
	geom_hline(yintercept=-0.2245, linetype="dashed") + 	#
	geom_hline(yintercept=0, linetype="solid") +#
	scale_fill_manual(values= c("green", "grey50")) + #
	poster.theme2#
dev.off()#
#
#######################################################################
# Gettign correlations for all for all of the available climate data data#
#######################################################################
# Loading in climate data#
t.mean <- read.csv("processed_data/ch2_tmean.csv", header=T)#
t.min <- read.csv("processed_data/ch2_tmin.csv", header=T)#
t.max <- read.csv("processed_data/ch2_tmax.csv", header=T)#
precip <- read.csv("processed_data/ch2_precip.csv", header=T)#
summary(t.mean)#
#
# Limiting time frame--1935-2012#
t.mean <- t.mean[t.mean$Year >= 1936 & t.mean$Year <= 2012,]#
t.min <- t.min[t.min$Year >= 1936 & t.min$Year <= 2012,]#
t.max <- t.max[t.max$Year >= 1936 & t.max$Year <= 2012,]#
precip <- precip[precip$Year >= 1936 & precip$Year <= 2012,]#
summary(t.mean)#
summary(t.min)#
summary(t.max)#
summary(precip)#
#
head(t.mean)#
unique(t.mean$Site.Name)#
#
t.mean$Site.Name <- recode(t.mean$Site.Name, "'Missouri Ozark' = 'Missouri'; 'Morgan Monroe State Park'='Morgan_Monroe'; 'Oak Openings Toledo' = 'Oak_openings'")#
#
t.min$Site.Name <- recode(t.min$Site.Name, "'Missouri Ozark' = 'Missouri'; 'Morgan Monroe State Park'='Morgan_Monroe'; 'Oak Openings Toledo' = 'Oak_openings'")#
t.max$Site.Name <- recode(t.max$Site.Name, "'Missouri Ozark' = 'Missouri'; 'Morgan Monroe State Park'='Morgan_Monroe'; 'Oak Openings Toledo' = 'Oak_openings'")#
precip$Site.Name <- recode(precip$Site.Name, "'Missouri Ozark' = 'Missouri'; 'Morgan Monroe State Park'='Morgan_Monroe'; 'Oak Openings Toledo' = 'Oak_openings'")#
# getting the ring widths in a data frame#
summary(sites.crn)#
sites.crn$Year <- site.chron[[1]][,"Year"]#
head(sites.crn)#
sites.crn <- sites.crn[sites.crn$Year > 1935,]#
#--------------------------------------------#
# Tmean correlation#
#--------------------------------------------#
#
sites <- c("Harvard", "Howland", "Missouri", "Morgan_Monroe", "Oak_openings")#
#
tmean.corr<-list()#
#
for(i in sites){#
	tmean.corr[[i]] <- cor(sites.crn[,i], t.mean[t.mean$Site.Name %in% i,!names(t.mean) %in% c("Site.Name", "Year")], method="pearson")#
}#
summary(tmean.corr)#
#
# Making each site it's own dataframe#
harvard.tmean <- as.data.frame(tmean.corr[[1]])#
#
harvard.tmean.stack <- stack(harvard.tmean)#
names(harvard.tmean.stack)<- c("cor", "month")#
harvard.tmean.stack$Site <- as.factor("Harvard")#
harvard.tmean.stack$type <- as.factor("tmean")#
#
howland.tmean <- as.data.frame(tmean.corr[[2]])#
#
howland.tmean.stack <- stack(howland.tmean)#
names(howland.tmean.stack)<- c("cor", "month")#
howland.tmean.stack$Site <- as.factor("Howland")#
howland.tmean.stack$type <- as.factor("tmean")#
#
mo.tmean <- as.data.frame(tmean.corr[[3]])#
#
mo.tmean.stack <- stack(mo.tmean)#
names(mo.tmean.stack)<- c("cor", "month")#
mo.tmean.stack$Site <- as.factor("Missouri")#
mo.tmean.stack$type <- as.factor("tmean")#
#
mmf.tmean <- as.data.frame(tmean.corr[[4]])#
#
mmf.tmean.stack <- stack(mmf.tmean)#
names(mmf.tmean.stack)<- c("cor", "month")#
mmf.tmean.stack$Site <- as.factor("MMF")#
mmf.tmean.stack$type <- as.factor("tmean")#
#
oakop.tmean <- as.data.frame(tmean.corr[[5]])#
#
oakop.tmean.stack <- stack(oakop.tmean)#
names(oakop.tmean.stack)<- c("cor", "month")#
oakop.tmean.stack$Site <- as.factor("Oak_openings")#
oakop.tmean.stack$type <- as.factor("tmean")#
#
all.sites.tmean <- rbind(harvard.tmean.stack, howland.tmean.stack, mo.tmean.stack, mmf.tmean.stack, oakop.tmean.stack)#
#
summary(all.sites.tmean)#
#
#--------------------------------------------#
# Tmin correlation#
#--------------------------------------------#
#
sites <- c("Harvard", "Howland", "Missouri", "Morgan_Monroe", "Oak_openings")#
#
tmin.corr<-list()#
#
for(i in sites){#
	tmin.corr[[i]] <- cor(sites.crn[,i], t.min[t.min$Site.Name %in% i,!names(t.min) %in% c("Site.Name", "Year")], method="pearson")#
}#
summary(tmin.corr)#
#
# Making each site it's own dataframe#
harvard.tmin <- as.data.frame(tmin.corr[[1]])#
#
harvard.tmin.stack <- stack(harvard.tmin)#
names(harvard.tmin.stack)<- c("cor", "month")#
harvard.tmin.stack$Site <- as.factor("Harvard")#
harvard.tmin.stack$type <- as.factor("tmin")#
#
howland.tmin <- as.data.frame(tmin.corr[[2]])#
#
howland.tmin.stack <- stack(howland.tmin)#
names(howland.tmin.stack)<- c("cor", "month")#
howland.tmin.stack$Site <- as.factor("Howland")#
howland.tmin.stack$type <- as.factor("tmin")#
#
mo.tmin <- as.data.frame(tmin.corr[[3]])#
#
mo.tmin.stack <- stack(mo.tmin)#
names(mo.tmin.stack)<- c("cor", "month")#
mo.tmin.stack$Site <- as.factor("Missouri")#
mo.tmin.stack$type <- as.factor("tmin")#
#
mmf.tmin <- as.data.frame(tmin.corr[[4]])#
#
mmf.tmin.stack <- stack(mmf.tmin)#
names(mmf.tmin.stack)<- c("cor", "month")#
mmf.tmin.stack$Site <- as.factor("MMF")#
mmf.tmin.stack$type <- as.factor("tmin")#
#
oakop.tmin <- as.data.frame(tmin.corr[[5]])#
#
oakop.tmin.stack <- stack(oakop.tmin)#
names(oakop.tmin.stack)<- c("cor", "month")#
oakop.tmin.stack$Site <- as.factor("Oak_openings")#
oakop.tmin.stack$type <- as.factor("tmin")#
#
all.sites.tmin <- rbind(harvard.tmin.stack, howland.tmin.stack, mo.tmin.stack, mmf.tmin.stack, oakop.tmin.stack)#
#
summary(all.sites.tmin)#
#--------------------------------------------#
# Tmax correlation#
#--------------------------------------------#
#
sites <- c("Harvard", "Howland", "Missouri", "Morgan_Monroe", "Oak_openings")#
#
tmax.corr<-list()#
#
for(i in sites){#
	tmax.corr[[i]] <- cor(sites.crn[,i], t.max[t.max$Site.Name %in% i,!names(t.max) %in% c("Site.Name", "Year")], method="pearson")#
}#
summary(tmax.corr)#
#
# Making each site it's own dataframe#
harvard.tmax <- as.data.frame(tmax.corr[[1]])#
#
harvard.tmax.stack <- stack(harvard.tmax)#
names(harvard.tmax.stack)<- c("cor", "month")#
harvard.tmax.stack$Site <- as.factor("Harvard")#
harvard.tmax.stack$type <- as.factor("tmax")#
#
howland.tmax <- as.data.frame(tmax.corr[[2]])#
#
howland.tmax.stack <- stack(howland.tmax)#
names(howland.tmax.stack)<- c("cor", "month")#
howland.tmax.stack$Site <- as.factor("Howland")#
howland.tmax.stack$type <- as.factor("tmax")#
#
mo.tmax <- as.data.frame(tmax.corr[[3]])#
#
mo.tmax.stack <- stack(mo.tmax)#
names(mo.tmax.stack)<- c("cor", "month")#
mo.tmax.stack$Site <- as.factor("Missouri")#
mo.tmax.stack$type <- as.factor("tmax")#
#
mmf.tmax <- as.data.frame(tmax.corr[[4]])#
#
mmf.tmax.stack <- stack(mmf.tmax)#
names(mmf.tmax.stack)<- c("cor", "month")#
mmf.tmax.stack$Site <- as.factor("MMF")#
mmf.tmax.stack$type <- as.factor("tmax")#
#
oakop.tmax <- as.data.frame(tmax.corr[[5]])#
#
oakop.tmax.stack <- stack(oakop.tmax)#
names(oakop.tmax.stack)<- c("cor", "month")#
oakop.tmax.stack$Site <- as.factor("Oak_openings")#
oakop.tmax.stack$type <- as.factor("tmax")#
#
all.sites.tmax <- rbind(harvard.tmax.stack, howland.tmax.stack, mo.tmax.stack, mmf.tmax.stack, oakop.tmax.stack)#
#
summary(all.sites.tmax)#
#--------------------------------------------#
# Precip correlation#
#--------------------------------------------#
sites <- c("Harvard", "Howland", "Missouri", "Morgan_Monroe", "Oak_openings")#
#
precip.corr<-list()#
#
for(i in sites){#
	precip.corr[[i]] <- cor(sites.crn[,i], precip[precip$Site.Name %in% i,!names(precip) %in% c("Site.Name", "Year")], method="pearson")#
}#
summary(precip.corr)#
#
# Making each site it's own dataframe#
harvard.precip <- as.data.frame(precip.corr[[1]])#
#
harvard.precip.stack <- stack(harvard.precip)#
names(harvard.precip.stack)<- c("cor", "month")#
harvard.precip.stack$Site <- as.factor("Harvard")#
harvard.precip.stack$type <- as.factor("precip")#
#
howland.precip <- as.data.frame(precip.corr[[2]])#
#
howland.precip.stack <- stack(howland.precip)#
names(howland.precip.stack)<- c("cor", "month")#
howland.precip.stack$Site <- as.factor("Howland")#
howland.precip.stack$type <- as.factor("precip")#
#
mo.precip <- as.data.frame(precip.corr[[3]])#
#
mo.precip.stack <- stack(mo.precip)#
names(mo.precip.stack)<- c("cor", "month")#
mo.precip.stack$Site <- as.factor("Missouri")#
mo.precip.stack$type <- as.factor("precip")#
#
mmf.precip <- as.data.frame(precip.corr[[4]])#
#
mmf.precip.stack <- stack(mmf.precip)#
names(mmf.precip.stack)<- c("cor", "month")#
mmf.precip.stack$Site <- as.factor("MMF")#
mmf.precip.stack$type <- as.factor("precip")#
#
oakop.precip <- as.data.frame(precip.corr[[5]])#
#
oakop.precip.stack <- stack(oakop.precip)#
names(oakop.precip.stack)<- c("cor", "month")#
oakop.precip.stack$Site <- as.factor("Oak_openings")#
oakop.precip.stack$type <- as.factor("precip")#
#
all.sites.precip <- rbind(harvard.precip.stack, howland.precip.stack, mo.precip.stack, mmf.precip.stack, oakop.precip.stack)#
#
summary(all.sites.precip)
library(mgcv)#
library(ggplot2)#
library(car)#
library(reshape)#
library(dplR)#
library(DescTools)#
# Christy's GAMM code#
#
# gam1 <- gamm(Y ~  s(Biomass, bs="cr", k=3, by=PFT) + s(tair, k=k, by=PFT) + s(precipf, k=k, by=PFT) + s(CO2, k=k, by=PFT), random=list(PlotID=~1), data=data) #
#
# Loading in my data#
#
data.use <- read.csv("processed_data/AllSites_tree_plus_climate_and_BA.csv", header=T)#
#
data.use$group <- data.use$Species#
data.use$group <- recode(data.use$group, "'CAOV' = 'CARYA'; 'CACO' = 'CARYA'; #
  							'CATE' = 'CARYA'; 'ACSAC' = 'ACSA'; 'BEAL' = 'BETULA'; 'BELE' = 'BETULA'; 'QUMU' = 'QUAL'")#
#
data.use$group.plot <- as.factor(paste(data.use$group, data.use$PlotID, sep="."))#
#
data.use$Canopy.Class <- recode(data.use$Canopy.Class, "'C' = 'D'")#
summary(data.use)#
# reducing the amount of data for the test runs#
sites.use <- c("Harvard", "Howland", "Morgan Monroe State Park", "Oak Openings Toledo", "Missouri Ozark")#
#
test <- data.use[data.use$Site %in% sites.use & !is.na(data.use$RW) & !is.na(data.use$BA.inc),]#
summary(test)#
#
test$group.cc <- as.factor(paste(test$group, test$Canopy.Class, sep="."))#
summary(test)#
# Get a list of what predictors & responses I'm using#
predictors.all <- c("tmean", "precip", "Species", "dbh.recon", "Canopy.Class", "spp.plot", "group", "group.plot", "group.cc")#
#
# Getting rid of observations that have NAs in the important variables#
test <- test[complete.cases(test[,predictors.all]),]#
test <- test[test$Live.Dead=="LIVE" & !test$Canopy.Class=="F",]#
#
# Subsetting to a set of species that we have enough data to feel good about#
#species.use <- c("TSCA", "QURU", "ACRU", "BEAL", "ACSA", "LITU", "QUAL", "CAOV", "CACO", "CATE", "JUVI", "QUVE", "PCRU", "THOC", "PIST")#
group.use <- c("ACRU", "ACSA", "BETULA", "CARYA", "FAGR", "FRAX", "PIST", "QUAL", "QURU", "QUVE", "SAAL", "TSCA", "ULRU")#
#
test <- test[test$group %in% group.use,]
summary(test)#
#
# Right now just looking at the dominant trees.  Not sure how to show this yet#
test <- test[test$Canopy.Class=="S",]#
#
par(new=F)#
plot(test[test$TreeID=="MMA003", "BA.inc"]~ test[test$TreeID=="MMA003","Year"], type="l")#
summary(test)#
# Truncatign at 1935; at 1935 the sample depth for the oak openings is only 1#
test <- test[test$Year >= 1935 & test$Year <= 2012,]#
#
tree.rw <- test#
summary(tree.rw)#
#
summary(test)
sites.rw <- list()
tree.rw$Year <- as.factor(tree.rw$Year)
for(s in unique(tree.rw$Site)){#
	sites.rw[[s]] <- recast(tree.rw[tree.rw$Site==s,c("Year", "TreeID", "RW")], Year ~ TreeID)	#
}#
summary(sites.rw)
summary(sites.rw[[4]])#
sites.rw#
# Making Indices of all the different sites using a 30 yr cubic smoothing spline#
sites.i <- list()
for(s in names(sites.rw)){#
	sites.i[[s]] <- detrend(sites.rw[[s]][,2:ncol(sites.rw[[s]])], method="Spline", nyr=30)#
}#
summary(sites.i[[1]])
# making chronologies for each site#
#
site.chron <- list()#
#
for(s in names(sites.i)){#
	site.chron[[s]] <- chron(sites.i[[s]][,2:ncol(sites.i[[s]])], prefix = substr(s, 1, 3), prewhiten = T) #
	site.chron[[s]][,"Year"]<- c(1935:2012) #
}
library(mgcv)#
library(ggplot2)#
library(car)#
library(reshape)#
library(dplR)#
library(DescTools)#
# Christy's GAMM code#
#
# gam1 <- gamm(Y ~  s(Biomass, bs="cr", k=3, by=PFT) + s(tair, k=k, by=PFT) + s(precipf, k=k, by=PFT) + s(CO2, k=k, by=PFT), random=list(PlotID=~1), data=data) #
#
# Loading in my data#
#
data.use <- read.csv("processed_data/AllSites_tree_plus_climate_and_BA.csv", header=T)#
#
data.use$group <- data.use$Species#
data.use$group <- recode(data.use$group, "'CAOV' = 'CARYA'; 'CACO' = 'CARYA'; #
  							'CATE' = 'CARYA'; 'ACSAC' = 'ACSA'; 'BEAL' = 'BETULA'; 'BELE' = 'BETULA'; 'QUMU' = 'QUAL'")#
#
data.use$group.plot <- as.factor(paste(data.use$group, data.use$PlotID, sep="."))#
#
data.use$Canopy.Class <- recode(data.use$Canopy.Class, "'C' = 'D'")#
summary(data.use)#
# reducing the amount of data for the test runs#
sites.use <- c("Harvard", "Howland", "Morgan Monroe State Park", "Oak Openings Toledo", "Missouri Ozark")#
#
test <- data.use[data.use$Site %in% sites.use & !is.na(data.use$RW) & !is.na(data.use$BA.inc),]#
summary(test)#
#
test$group.cc <- as.factor(paste(test$group, test$Canopy.Class, sep="."))#
summary(test)#
# Get a list of what predictors & responses I'm using#
predictors.all <- c("tmean", "precip", "Species", "dbh.recon", "Canopy.Class", "spp.plot", "group", "group.plot", "group.cc")#
#
# Getting rid of observations that have NAs in the important variables#
test <- test[complete.cases(test[,predictors.all]),]#
test <- test[test$Live.Dead=="LIVE" & !test$Canopy.Class=="F",]#
#
# Subsetting to a set of species that we have enough data to feel good about#
#species.use <- c("TSCA", "QURU", "ACRU", "BEAL", "ACSA", "LITU", "QUAL", "CAOV", "CACO", "CATE", "JUVI", "QUVE", "PCRU", "THOC", "PIST")#
group.use <- c("ACRU", "ACSA", "BETULA", "CARYA", "FAGR", "FRAX", "PIST", "QUAL", "QURU", "QUVE", "SAAL", "TSCA", "ULRU")#
#
test <- test[test$group %in% group.use,]#
#
summary(test)#
#
# Right now just looking at the dominant trees.  Not sure how to show this yet#
test <- test[test$Canopy.Class=="S",]#
#
par(new=F)#
plot(test[test$TreeID=="MMA003", "BA.inc"]~ test[test$TreeID=="MMA003","Year"], type="l")#
summary(test)#
# Truncatign at 1950; at 1950 the sample depth for the oak openings is only 1#
test <- test[test$Year >= 1950 & test$Year <= 2012,]#
#
tree.rw <- test#
summary(tree.rw)#
#
summary(test)#
save(test, file="processed_data/test_tree_data_1950_2012.Rdata")#
#
sites.rw <- list()#
#
tree.rw$Year <- as.factor(tree.rw$Year)#
#
for(s in unique(tree.rw$Site)){#
	sites.rw[[s]] <- recast(tree.rw[tree.rw$Site==s,c("Year", "TreeID", "RW")], Year ~ TreeID)	#
}#
summary(sites.rw)#
#
save(sites.rw, file="processed_data/sites_rw.Rdata")#
summary(sites.rw[[4]])#
sites.rw#
# Making Indices of all the different sites using a 30 yr cubic smoothing spline#
sites.i <- list()#
#
for(s in names(sites.rw)){#
	sites.i[[s]] <- detrend(sites.rw[[s]][,2:ncol(sites.rw[[s]])], method="Spline", nyr=30)#
}#
summary(sites.i[[1]])#
#
# making chronologies for each site#
#
site.chron <- list()#
#
for(s in names(sites.i)){#
	site.chron[[s]] <- chron(sites.i[[s]][,2:ncol(sites.i[[s]])], prefix = substr(s, 1, 3), prewhiten = T) #
	site.chron[[s]][,"Year"]<- c(1950:2012) #
}#
#
summary(site.chron[[5]])#
# Making each site it's own dataframe#
harvard.crn <- as.data.frame(site.chron[[1]])#
#
howland.crn <- as.data.frame(site.chron[[2]])#
#
misso.crn <- as.data.frame(site.chron[[3]])#
#
mmf.crn <- as.data.frame(site.chron[[4]])#
#
oakop.crn <- as.data.frame(site.chron[[5]])#
# Plotting thigns for presentation#
par(cex=2 )#
plot(mmf.crn$Morres ~ mmf.crn$Year, type="l", lwd=5, axes=F, cex=6, col="white")#
abline(h=1,lty="dashed", col="white")#
axis(side =1,tck= 0.05) #
axis(side=2,tck=0.05)#
#
#Plotting out mmfsites#
summary(test)#
#
mmf <- test[test$Site %in% "Morgan Monroe State Park",]#
#
summary(mmf)#
#
for(i in unique(mmf$Year)){#
  mmf[mmf$Year==i,"Mean"] <- mean(mmf[mmf$Year==i,"RW"])#
  mmf[mmf$Year==i,"UB"] <- quantile(mmf[mmf$Year==i,"RW"], 0.975)#
  mmf[mmf$Year==i,"LB"] <- quantile(mmf[mmf$Year==i,"RW"], 0.025)#
}#
#
summary(mmf)#
#
ggplot(data=mmf)+#
  # geom_line(aes(x=Year, y=RW))#
  geom_ribbon(aes(x=Year, ymin=LB, ymax=UB), alpha=0.5, fill="white")+#
  geom_line(aes(x=Year, y=Mean), size=2, color="white")+#
  poster.theme2#
# Merging the residual chronologies back together#
sites.crn <- data.frame(Harvard = harvard.crn[, "Harres"], #
						Howland = howland.crn[,"Howres"], #
						Missouri = misso.crn[,"Misres"],#
						Morgan_Monroe = mmf.crn[,"Morres"], #
						Oak_openings = oakop.crn[,"Oakres"]#
						)#
#
summary(sites.crn)#
# Load in climate data#
#
climate.use <- read.csv("processed_data/climate_growing_season.csv")#
#
summary(climate.use)#
#
climate.use <- climate.use[climate.use$Site %in% sites.use,]#
climate.use <- climate.use[climate.use$Year>=1950 & climate.use$Year <=2012,]#
#
climate.site <- list()#
#
for(s in unique(climate.use$Site)){#
	climate.site[[s]] <- climate.use[climate.use$Site==s,]#
}#
#
summary(climate.site)#
save(climate.site, file="processed_data/sites_use_climate.Rdata")#
class(climate.site[[1]][,"Year"])#
#
head(climate.site[[1]])#
#
summary(climate.site[[1]])#
#
harv.clim <- climate.site[["Harvard"]][,c("tmean", "precip")]#
#
how.clim <- climate.site[["Howland"]][,c("tmean", "precip")]#
#
miss.clim <- climate.site[["Missouri Ozark"]][,c("tmean", "precip")]#
#
mmf.clim <- climate.site[["Morgan Monroe State Park"]][,c("tmean", "precip")]#
#
oak.clim <- climate.site[["Oak Openings Toledo"]][,c("tmean", "precip")]#
dim(harv.clim)#
dim(harvard.crn)#
#
# harvard#
harv.cor<- cor(harvard.crn, harv.clim[,c("tmean", "precip")], method="pearson")#
harvard <- data.frame(cor = c(harv.cor[1:2,"tmean"],  harv.cor[1:2,"precip"]),#
					  var = c("tmean", "tmean", "precip", "precip"))#
harvard$type <- c("std", "res")#
harvard$site <- "Harvard" #
# Howland#
how.cor <- cor(howland.crn, how.clim[,c("tmean", "precip")], method="pearson")#
how.cor#
#
howland <- data.frame(cor = c(how.cor[1:2,"tmean"],  how.cor[1:2,"precip"]),#
					  var = c("tmean", "tmean", "precip", "precip"))#
howland$type <- c("std", "res")#
howland$site <- "Howland" #
# Missouri#
mo.cor <- cor(misso.crn, miss.clim[,c("tmean", "precip")], method="pearson")#
mo.cor#
#
missouri <- data.frame(cor = c(mo.cor[1:2,"tmean"],  mo.cor[1:2,"precip"]),#
					  var = c("tmean", "tmean", "precip", "precip"))#
missouri$type <- c("std", "res")#
missouri$site <- "Missouri" #
#
# Morgan Monroe#
mmf.cor <- cor(mmf.crn, mmf.clim[,c("tmean", "precip")], method="pearson")#
mmf.cor#
#
morgan <- data.frame(cor = c(mmf.cor[1:2,"tmean"],  mmf.cor[1:2,"precip"]),#
					  var = c("tmean", "tmean", "precip", "precip"))#
morgan$type <- c("std", "res")#
morgan$site <- "Morgan-Monroe" #
#
# Oak openings#
oakop.cor <- cor(oakop.crn, oak.clim[,c("tmean", "precip")], method="pearson")#
oakop.cor#
#
oakop <- data.frame(cor = c(oakop.cor[1:2,"tmean"],  oakop.cor[1:2,"precip"]),#
					  var = c("tmean", "tmean", "precip", "precip"))#
oakop$type <- c("std", "res")#
oakop$site <- "Oak-Openings" #
#
# Merging standard chronologies into one file#
#
clim.cor <- merge(harvard, howland, all.x=T, all.y=T)#
clim.cor2 <- merge(clim.cor, missouri,all.x=T, all.y=T)#
clim.cor3 <- merge(clim.cor2, morgan,all.x=T, all.y=T)#
clim.cor4 <- merge(clim.cor3, oakop,all.x=T, all.y=T)#
#
summary(clim.cor4)#
clim.cor4$site <- as.factor(clim.cor4$site)#
clim.cor4$type <- as.factor(clim.cor4$type)#
clim.cor4$cor <- as.numeric(clim.cor4$cor)#
#
# Sig value for 81 df = 0.209#
clim.cor4$sig <- ifelse(clim.cor4$cor < -0.2245 | clim.cor4$cor > 0.2245, "Y", "N")#
clim.cor4$sig <- factor(clim.cor4$sig, levels = c("Y", "N"))#
#
clim.cor4$site <- factor(clim.cor4$site, levels = c("Missouri", "Morgan-Monroe", "Oak-Openings", "Harvard", "Howland"))#
#
clim.cor4$Site <- clim.cor4$site#
clim.cor4$Site <- recode(clim.cor4$Site, "'Missouri' = 'MO'; 'Morgan-Monroe' = 'IN'; 'Oak-Openings' = 'OH'; 'Harvard' = 'MA'; 'Howland' = 'ME'")#
clim.cor4$Site <- factor(clim.cor4$Site, levels = c("MO", "IN", "OH", "MA", "ME"))#
pdf("figures/site_correlations.pdf", width= 13, height = 8.5)#
ggplot(data=clim.cor4[clim.cor4$type=="std",]) + facet_grid(var~. , scales="free_x") +#
	geom_bar(aes(x=Site, y=cor, fill=sig), stat="identity", position="dodge", colour="black") +#
	geom_hline(yintercept=0.2245, linetype="dashed") + #
	geom_hline(yintercept=-0.2245, linetype="dashed") + 	#
	geom_hline(yintercept=0, linetype="solid") +#
	scale_fill_manual(values= c("green", "grey50")) + #
	poster.theme2#
dev.off()#
#
#######################################################################
# Gettign correlations for all for all of the available climate data data#
#######################################################################
# Loading in climate data#
t.mean <- read.csv("processed_data/ch2_tmean.csv", header=T)#
t.min <- read.csv("processed_data/ch2_tmin.csv", header=T)#
t.max <- read.csv("processed_data/ch2_tmax.csv", header=T)#
precip <- read.csv("processed_data/ch2_precip.csv", header=T)#
summary(t.mean)#
#
# Limiting time frame--1950-2012#
t.mean <- t.mean[t.mean$Year >= 1951 & t.mean$Year <= 2012,]#
t.min <- t.min[t.min$Year >= 1951 & t.min$Year <= 2012,]#
t.max <- t.max[t.max$Year >= 1951 & t.max$Year <= 2012,]#
precip <- precip[precip$Year >= 1951 & precip$Year <= 2012,]#
summary(t.mean)#
summary(t.min)#
summary(t.max)#
summary(precip)#
#
head(t.mean)#
unique(t.mean$Site.Name)#
#
t.mean$Site.Name <- recode(t.mean$Site.Name, "'Missouri Ozark' = 'Missouri'; 'Morgan Monroe State Park'='Morgan_Monroe'; 'Oak Openings Toledo' = 'Oak_openings'")#
#
t.min$Site.Name <- recode(t.min$Site.Name, "'Missouri Ozark' = 'Missouri'; 'Morgan Monroe State Park'='Morgan_Monroe'; 'Oak Openings Toledo' = 'Oak_openings'")#
t.max$Site.Name <- recode(t.max$Site.Name, "'Missouri Ozark' = 'Missouri'; 'Morgan Monroe State Park'='Morgan_Monroe'; 'Oak Openings Toledo' = 'Oak_openings'")#
precip$Site.Name <- recode(precip$Site.Name, "'Missouri Ozark' = 'Missouri'; 'Morgan Monroe State Park'='Morgan_Monroe'; 'Oak Openings Toledo' = 'Oak_openings'")#
# getting the ring widths in a data frame#
summary(sites.crn)#
sites.crn$Year <- site.chron[[1]][,"Year"]#
head(sites.crn)#
sites.crn <- sites.crn[sites.crn$Year > 1950,]#
#--------------------------------------------#
# Tmean correlation#
#--------------------------------------------#
#
sites <- c("Harvard", "Howland", "Missouri", "Morgan_Monroe", "Oak_openings")#
#
tmean.corr<-list()#
#
for(i in sites){#
	tmean.corr[[i]] <- cor(sites.crn[,i], t.mean[t.mean$Site.Name %in% i,!names(t.mean) %in% c("Site.Name", "Year")], method="pearson")#
}#
summary(tmean.corr)#
#
# Making each site it's own dataframe#
harvard.tmean <- as.data.frame(tmean.corr[[1]])#
#
harvard.tmean.stack <- stack(harvard.tmean)#
names(harvard.tmean.stack)<- c("cor", "month")#
harvard.tmean.stack$Site <- as.factor("Harvard")#
harvard.tmean.stack$type <- as.factor("tmean")#
#
howland.tmean <- as.data.frame(tmean.corr[[2]])#
#
howland.tmean.stack <- stack(howland.tmean)#
names(howland.tmean.stack)<- c("cor", "month")#
howland.tmean.stack$Site <- as.factor("Howland")#
howland.tmean.stack$type <- as.factor("tmean")#
#
mo.tmean <- as.data.frame(tmean.corr[[3]])#
#
mo.tmean.stack <- stack(mo.tmean)#
names(mo.tmean.stack)<- c("cor", "month")#
mo.tmean.stack$Site <- as.factor("Missouri")#
mo.tmean.stack$type <- as.factor("tmean")#
#
mmf.tmean <- as.data.frame(tmean.corr[[4]])#
#
mmf.tmean.stack <- stack(mmf.tmean)#
names(mmf.tmean.stack)<- c("cor", "month")#
mmf.tmean.stack$Site <- as.factor("MMF")#
mmf.tmean.stack$type <- as.factor("tmean")#
#
oakop.tmean <- as.data.frame(tmean.corr[[5]])#
#
oakop.tmean.stack <- stack(oakop.tmean)#
names(oakop.tmean.stack)<- c("cor", "month")#
oakop.tmean.stack$Site <- as.factor("Oak_openings")#
oakop.tmean.stack$type <- as.factor("tmean")#
#
all.sites.tmean <- rbind(harvard.tmean.stack, howland.tmean.stack, mo.tmean.stack, mmf.tmean.stack, oakop.tmean.stack)#
#
summary(all.sites.tmean)#
#
#--------------------------------------------#
# Tmin correlation#
#--------------------------------------------#
#
sites <- c("Harvard", "Howland", "Missouri", "Morgan_Monroe", "Oak_openings")#
#
tmin.corr<-list()#
#
for(i in sites){#
	tmin.corr[[i]] <- cor(sites.crn[,i], t.min[t.min$Site.Name %in% i,!names(t.min) %in% c("Site.Name", "Year")], method="pearson")#
}#
summary(tmin.corr)#
#
# Making each site it's own dataframe#
harvard.tmin <- as.data.frame(tmin.corr[[1]])#
#
harvard.tmin.stack <- stack(harvard.tmin)#
names(harvard.tmin.stack)<- c("cor", "month")#
harvard.tmin.stack$Site <- as.factor("Harvard")#
harvard.tmin.stack$type <- as.factor("tmin")#
#
howland.tmin <- as.data.frame(tmin.corr[[2]])#
#
howland.tmin.stack <- stack(howland.tmin)#
names(howland.tmin.stack)<- c("cor", "month")#
howland.tmin.stack$Site <- as.factor("Howland")#
howland.tmin.stack$type <- as.factor("tmin")#
#
mo.tmin <- as.data.frame(tmin.corr[[3]])#
#
mo.tmin.stack <- stack(mo.tmin)#
names(mo.tmin.stack)<- c("cor", "month")#
mo.tmin.stack$Site <- as.factor("Missouri")#
mo.tmin.stack$type <- as.factor("tmin")#
#
mmf.tmin <- as.data.frame(tmin.corr[[4]])#
#
mmf.tmin.stack <- stack(mmf.tmin)#
names(mmf.tmin.stack)<- c("cor", "month")#
mmf.tmin.stack$Site <- as.factor("MMF")#
mmf.tmin.stack$type <- as.factor("tmin")#
#
oakop.tmin <- as.data.frame(tmin.corr[[5]])#
#
oakop.tmin.stack <- stack(oakop.tmin)#
names(oakop.tmin.stack)<- c("cor", "month")#
oakop.tmin.stack$Site <- as.factor("Oak_openings")#
oakop.tmin.stack$type <- as.factor("tmin")#
#
all.sites.tmin <- rbind(harvard.tmin.stack, howland.tmin.stack, mo.tmin.stack, mmf.tmin.stack, oakop.tmin.stack)#
#
summary(all.sites.tmin)#
#--------------------------------------------#
# Tmax correlation#
#--------------------------------------------#
#
sites <- c("Harvard", "Howland", "Missouri", "Morgan_Monroe", "Oak_openings")#
#
tmax.corr<-list()#
#
for(i in sites){#
	tmax.corr[[i]] <- cor(sites.crn[,i], t.max[t.max$Site.Name %in% i,!names(t.max) %in% c("Site.Name", "Year")], method="pearson")#
}#
summary(tmax.corr)#
#
# Making each site it's own dataframe#
harvard.tmax <- as.data.frame(tmax.corr[[1]])#
#
harvard.tmax.stack <- stack(harvard.tmax)#
names(harvard.tmax.stack)<- c("cor", "month")#
harvard.tmax.stack$Site <- as.factor("Harvard")#
harvard.tmax.stack$type <- as.factor("tmax")#
#
howland.tmax <- as.data.frame(tmax.corr[[2]])#
#
howland.tmax.stack <- stack(howland.tmax)#
names(howland.tmax.stack)<- c("cor", "month")#
howland.tmax.stack$Site <- as.factor("Howland")#
howland.tmax.stack$type <- as.factor("tmax")#
#
mo.tmax <- as.data.frame(tmax.corr[[3]])#
#
mo.tmax.stack <- stack(mo.tmax)#
names(mo.tmax.stack)<- c("cor", "month")#
mo.tmax.stack$Site <- as.factor("Missouri")#
mo.tmax.stack$type <- as.factor("tmax")#
#
mmf.tmax <- as.data.frame(tmax.corr[[4]])#
#
mmf.tmax.stack <- stack(mmf.tmax)#
names(mmf.tmax.stack)<- c("cor", "month")#
mmf.tmax.stack$Site <- as.factor("MMF")#
mmf.tmax.stack$type <- as.factor("tmax")#
#
oakop.tmax <- as.data.frame(tmax.corr[[5]])#
#
oakop.tmax.stack <- stack(oakop.tmax)#
names(oakop.tmax.stack)<- c("cor", "month")#
oakop.tmax.stack$Site <- as.factor("Oak_openings")#
oakop.tmax.stack$type <- as.factor("tmax")#
#
all.sites.tmax <- rbind(harvard.tmax.stack, howland.tmax.stack, mo.tmax.stack, mmf.tmax.stack, oakop.tmax.stack)#
#
summary(all.sites.tmax)#
#--------------------------------------------#
# Precip correlation#
#--------------------------------------------#
sites <- c("Harvard", "Howland", "Missouri", "Morgan_Monroe", "Oak_openings")#
#
precip.corr<-list()#
#
for(i in sites){#
	precip.corr[[i]] <- cor(sites.crn[,i], precip[precip$Site.Name %in% i,!names(precip) %in% c("Site.Name", "Year")], method="pearson")#
}#
summary(precip.corr)#
#
# Making each site it's own dataframe#
harvard.precip <- as.data.frame(precip.corr[[1]])#
#
harvard.precip.stack <- stack(harvard.precip)#
names(harvard.precip.stack)<- c("cor", "month")#
harvard.precip.stack$Site <- as.factor("Harvard")#
harvard.precip.stack$type <- as.factor("precip")#
#
howland.precip <- as.data.frame(precip.corr[[2]])#
#
howland.precip.stack <- stack(howland.precip)#
names(howland.precip.stack)<- c("cor", "month")#
howland.precip.stack$Site <- as.factor("Howland")#
howland.precip.stack$type <- as.factor("precip")#
#
mo.precip <- as.data.frame(precip.corr[[3]])#
#
mo.precip.stack <- stack(mo.precip)#
names(mo.precip.stack)<- c("cor", "month")#
mo.precip.stack$Site <- as.factor("Missouri")#
mo.precip.stack$type <- as.factor("precip")#
#
mmf.precip <- as.data.frame(precip.corr[[4]])#
#
mmf.precip.stack <- stack(mmf.precip)#
names(mmf.precip.stack)<- c("cor", "month")#
mmf.precip.stack$Site <- as.factor("MMF")#
mmf.precip.stack$type <- as.factor("precip")#
#
oakop.precip <- as.data.frame(precip.corr[[5]])#
#
oakop.precip.stack <- stack(oakop.precip)#
names(oakop.precip.stack)<- c("cor", "month")#
oakop.precip.stack$Site <- as.factor("Oak_openings")#
oakop.precip.stack$type <- as.factor("precip")#
#
all.sites.precip <- rbind(harvard.precip.stack, howland.precip.stack, mo.precip.stack, mmf.precip.stack, oakop.precip.stack)#
#
summary(all.sites.precip)#
#
# Merging all stacked dataframes together to make plotting easier#
#
all.sites.climate <- rbind(all.sites.precip, all.sites.tmax, all.sites.tmin, all.sites.tmean)#
summary(all.sites.climate)#
#
# Sig value for 75 df = 0.2245#
all.sites.climate$sig <- ifelse(all.sites.climate$cor < -0.2245 | all.sites.climate$cor > 0.2245, "Y", "N")#
all.sites.climate$sig <- factor(all.sites.climate$sig, levels = c("Y", "N"))#
all.sites.climate$month <- factor(all.sites.climate$month, levels = c("pJan", "pFeb", "pMar", "pApr", "pMay", "pJun", "pJul", "pAug", "pSep", "pOct", "pNov", "pDec", "Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec", "pfall", "winter", "spring", "summer", "grow.seas"))#
#
all.sites.climate$Site <- factor(all.sites.climate$Site, levels = c("Missouri", "MMF", "Oak_openings", "Harvard", "Howland"))#
#
pdf("figures/site_correlations_allmonths_short.pdf", width= 13, height = 8.5)#
ggplot(data=all.sites.climate[all.sites.climate$month %in% c("pOct", "pNov", "pDec", "Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec", "spring", "summer", "pfall", "winter", "grow.seas"),]) + facet_grid(Site ~ type ) +#
	geom_bar(aes(x=month, y=cor, fill=sig), stat="identity", position="dodge", colour="black") +#
	geom_hline(yintercept=0.2245, linetype="dashed") + #
	geom_hline(yintercept=-0.2245, linetype="dashed") + 	#
	geom_hline(yintercept=0, linetype="solid") +#
	scale_fill_manual(values= c("green", "grey50"))+#
	theme(axis.text.x = element_text(angle = 45, hjust = 1))#
dev.off()#
#
summary(all.sites.climate$month)#
#
all.sites.gs <- all.sites.climate[all.sites.climate$month=="grow.seas",]#
summary(all.sites.gs)#
#
cbbPalette <- c("#009E73", "#e79f00", "#9ad0f3", "#0072B2", "#D55E00")#
#
all.sites.climate$type <- factor(all.sites.climate$type, levels=c("tmean", "precip", "tmin", "tmax"))#
pdf("figures/site_correlations_growing season.pdf", width= 13, height = 8.5)#
ggplot(data=all.sites.climate[all.sites.climate$month %in% "grow.seas" & all.sites.climate$type %in% c("tmean", "precip"),]) + facet_grid(~type) +#
  geom_bar(aes(x=month, y=cor, color=Site), stat="identity", position="dodge", fill=NA) + ylim(-0.6,0.6)+#
  geom_bar(aes(x=month, y=cor, color=Site), stat="identity", position="dodge", fill=NA) +ylim(-0.6,0.6)+#
  geom_bar(aes(x=month, y=cor, fill=Site, alpha=sig), stat="identity", position="dodge") +ylim(-0.6,0.6)+#
  geom_hline(yintercept=0.2245, linetype="dashed") + #
  geom_hline(yintercept=-0.2245, linetype="dashed") + 	#
  geom_hline(yintercept=0, linetype="solid") +#
 # scale_fill_manual(values= cbbPalette)+#
  scale_color_manual(values=cbbPalette) +#
  scale_fill_manual(values=cbbPalette) +#
  scale_alpha_manual(values = c(1, 0.2))+#
  poster.theme2 +#
  theme(axis.text.x = element_text(angle = 45, hjust = 1),panel.grid.major=element_blank(), panel.grid.minor= element_blank(), panel.border= element_blank(), panel.background= element_blank()) +#
  labs(title= "TR Site Climate Correlations", x="Seasons", y=expression(bold(paste("Correlation Value (r)"))))#
#
dev.off()#
#
#################################################################################
# Running correlations on the individual indices to get the full spread of the #
#################################################################################
#
all.sites.gs <- all.sites.climate[all.sites.climate$month=="grow.seas",]#
summary(all.sites.gs)#
#
all.sites.gs$State <- recode(all.sites.gs$Site, "'Missouri'='MO';'MMF'='IN';'Oak_openings'='OH';'Harvard'='MA';'Howland'='ME'")#
all.sites.gs$series <- as.factor("chron")#
summary(all.sites.gs)#
#
summary(climate.site$Howland[,])#
head(sites.i$Howland)#
#
summary(sites.i)#
index.cor.temp <- sites.i#
index.cor.precip <- sites.i#
#
test <- sites.i#
meow <- test#
#
# Running correlations fro Tmean and Precip on individual indices#
for(s in names(sites.i)){#
	for(i in names(sites.i[[s]])){#
		index.cor.temp[[s]][,i] <- cor(sites.i[[s]][,i], climate.site[[s]][,"tmean"], method="pearson")#
	}#
}	#
#
test <- cor(sites.i[["Harvard"]][,c(1:10)], climate.site[["Harvard"]][,"tmean"], method="pearson")#
for(s in names(sites.i)){#
	for(i in names(sites.i[[s]])){#
		index.cor.precip[[s]][,i] <- cor(sites.i[[s]][,i], climate.site[[s]][,"precip"], method="pearson") #
	}#
}	#
summary(index.cor.precip)#
#
# Now need to merge everything into one stacked file to be used with ggplot 2#
#
test <- data.frame()#
#
# Need to break it down by site#
#
# Harvard#
har.precip.stack <- stack(index.cor.precip[["Harvard"]])#
names(har.precip.stack)<- c("cor", "TreeID")#
har.precip.stack$State <- as.factor("MA")#
har.precip.stack$type <- as.factor("precip")#
summary(har.precip.stack)#
#
har.temp.stack <- stack(index.cor.temp[["Harvard"]])#
names(har.temp.stack)<- c("cor", "TreeID")#
har.temp.stack$State <- as.factor("MA")#
har.temp.stack$type <- as.factor("tmean")#
summary(har.temp.stack)#
#
har.stack <- merge(har.temp.stack, har.precip.stack, all.x=T, all.y=T)#
summary(har.stack)#
#
# Howland#
#
how.precip.stack <- stack(index.cor.precip[["Howland"]])#
names(how.precip.stack)<- c("cor", "TreeID")#
how.precip.stack$State <- as.factor("ME")#
how.precip.stack$type <- as.factor("precip")#
summary(how.precip.stack)#
#
how.temp.stack <- stack(index.cor.temp[["Howland"]])#
names(how.temp.stack)<- c("cor", "TreeID")#
how.temp.stack$State <- as.factor("ME")#
how.temp.stack$type <- as.factor("tmean")#
summary(how.temp.stack)#
#
how.stack <- merge(how.temp.stack, how.precip.stack, all.x=T, all.y=T)#
summary(how.stack)#
#
# Missouri#
#
mo.precip.stack <- stack(index.cor.precip[["Missouri Ozark"]])#
names(mo.precip.stack)<- c("cor", "TreeID")#
mo.precip.stack$State <- as.factor("MO")#
mo.precip.stack$type <- as.factor("precip")#
summary(mo.precip.stack)#
#
mo.temp.stack <- stack(index.cor.temp[["Missouri Ozark"]])#
names(mo.temp.stack)<- c("cor", "TreeID")#
mo.temp.stack$State <- as.factor("MO")#
mo.temp.stack$type <- as.factor("tmean")#
summary(mo.temp.stack)#
#
mo.stack <- merge(mo.temp.stack, mo.precip.stack, all.x=T, all.y=T)#
summary(mo.stack)#
# MMF#
#
mmf.precip.stack <- stack(index.cor.precip[["Morgan Monroe State Park"]])#
names(mmf.precip.stack)<- c("cor", "TreeID")#
mmf.precip.stack$State <- as.factor("IN")#
mmf.precip.stack$type <- as.factor("precip")#
summary(mmf.precip.stack)#
#
mmf.temp.stack <- stack(index.cor.temp[["Morgan Monroe State Park"]])#
names(mmf.temp.stack)<- c("cor", "TreeID")#
mmf.temp.stack$State <- as.factor("IN")#
mmf.temp.stack$type <- as.factor("tmean")#
summary(mmf.temp.stack)#
#
mmf.stack <- merge(mmf.temp.stack, mmf.precip.stack, all.x=T, all.y=T)#
summary(mmf.stack)#
# Oak Openings#
#
oak.precip.stack <- stack(index.cor.precip[["Oak Openings Toledo"]])#
names(oak.precip.stack)<- c("cor", "TreeID")#
oak.precip.stack$State <- as.factor("OH")#
oak.precip.stack$type <- as.factor("precip")#
summary(oak.precip.stack)#
#
oak.temp.stack <- stack(index.cor.temp[["Oak Openings Toledo"]])#
names(oak.temp.stack)<- c("cor", "TreeID")#
oak.temp.stack$State <- as.factor("OH")#
oak.temp.stack$type <- as.factor("tmean")#
summary(oak.temp.stack)#
#
oak.stack <- merge(oak.temp.stack, oak.precip.stack, all.x=T, all.y=T)#
summary(oak.stack)#
#
cor.all.stack <- rbind(har.stack, how.stack, mmf.stack, oak.stack, mo.stack)#
summary(cor.all.stack)#
#
# Calculating Tukey Biweight Robust mean#
#
for(s in unique(cor.all.stack$State)){#
	for(t in unique(cor.all.stack$type)){#
	cor.all.stack[cor.all.stack$State==s & cor.all.stack$type==t,"biweight.mean"] <- TukeyBiweight(cor.all.stack[cor.all.stack$State==s & cor.all.stack$type==t,"cor"], na.rm=T)#
	}#
}#
summary(cor.all.stack)#
#
# creating a significance column#
cor.all.stack$sig <- ifelse(cor.all.stack$cor < -0.2245 | cor.all.stack$cor > 0.2245, "Y", "N")#
cor.all.stack$sig <- factor(cor.all.stack$sig, levels = c("Y", "N"))#
#
cor.all.stack$State <- factor(cor.all.stack$State, levels=c("MO", "IN", "OH", "MA", "ME"))#
summary(cor.all.stack)#
#
cor.all.stack$type <- factor(cor.all.stack$type, levels = c("precip", "tmean"))#
cor.all.stack$series <- as.factor("index")#
#
summary(all.sites.gs)#
summary(cor.all.stack)#
#
summary(cor.all.stack[is.na(cor.all.stack$cor),])#
#
pdf("figures/violin_climate_cor.pdf", height=8, width=13)#
ggplot(data=cor.all.stack) + facet_grid(~type)+#
#
	geom_violin(aes(x=State, y=cor, fill=State), adjust = 2, trim=T) + ylim(-0.6,0.6)+#
	geom_point(data=all.sites.gs[all.sites.gs$type %in% c("precip", "tmean"),],aes(x=State, y=cor), shape=126, size=25)+ ylim(-0.6,0.6)+#
	geom_point(aes(x=State, y=biweight.mean), shape=95, size=25)+ ylim(-0.6,0.6)+#
	geom_hline(yintercept=0.2245, linetype="dashed") + #
  	geom_hline(yintercept=-0.2245, linetype="dashed") + 	#
  	geom_hline(yintercept=0, linetype="solid") +#
#
	scale_color_manual(values=cbbPalette) +#
  	scale_fill_manual(values=cbbPalette) +#
  	poster.theme2 +#
  	theme(axis.text.x = element_text(angle = 45, hjust = 1),panel.grid.major=element_blank(), panel.grid.minor= 	element_blank(), panel.border= element_blank(), panel.background= element_blank()) +#
  	labs(title= "TR Index Climate Correlations", x="State", y=expression(bold(paste("Correlation Value (r)"))))#
dev.off()
library(mgcv)#
library(ggplot2)#
library(car)#
library(reshape)#
library(dplR)#
library(DescTools)#
# Christy's GAMM code#
#
# gam1 <- gamm(Y ~  s(Biomass, bs="cr", k=3, by=PFT) + s(tair, k=k, by=PFT) + s(precipf, k=k, by=PFT) + s(CO2, k=k, by=PFT), random=list(PlotID=~1), data=data) #
#
# Loading in my data#
#
data.use <- read.csv("processed_data/AllSites_tree_plus_climate_and_BA.csv", header=T)#
#
data.use$group <- data.use$Species#
data.use$group <- recode(data.use$group, "'CAOV' = 'CARYA'; 'CACO' = 'CARYA'; #
  							'CATE' = 'CARYA'; 'ACSAC' = 'ACSA'; 'BEAL' = 'BETULA'; 'BELE' = 'BETULA'; 'QUMU' = 'QUAL'")#
#
data.use$group.plot <- as.factor(paste(data.use$group, data.use$PlotID, sep="."))#
#
data.use$Canopy.Class <- recode(data.use$Canopy.Class, "'C' = 'D'")#
summary(data.use)#
# reducing the amount of data for the test runs#
sites.use <- c("Harvard", "Howland", "Morgan Monroe State Park", "Oak Openings Toledo", "Missouri Ozark")#
#
test <- data.use[data.use$Site %in% sites.use & !is.na(data.use$RW) & !is.na(data.use$BA.inc),]#
summary(test)#
#
test$group.cc <- as.factor(paste(test$group, test$Canopy.Class, sep="."))#
summary(test)#
# Get a list of what predictors & responses I'm using#
predictors.all <- c("tmean", "precip", "Species", "dbh.recon", "Canopy.Class", "spp.plot", "group", "group.plot", "group.cc")#
#
# Getting rid of observations that have NAs in the important variables#
test <- test[complete.cases(test[,predictors.all]),]#
test <- test[test$Live.Dead=="LIVE" & !test$Canopy.Class=="F",]#
#
# Subsetting to a set of species that we have enough data to feel good about#
#species.use <- c("TSCA", "QURU", "ACRU", "BEAL", "ACSA", "LITU", "QUAL", "CAOV", "CACO", "CATE", "JUVI", "QUVE", "PCRU", "THOC", "PIST")#
group.use <- c("ACRU", "ACSA", "BETULA", "CARYA", "FAGR", "FRAX", "PIST", "QUAL", "QURU", "QUVE", "SAAL", "TSCA", "ULRU")#
#
test <- test[test$group %in% group.use,]#
#
summary(test)#
#
# Right now just looking at the dominant trees.  Not sure how to show this yet#
test <- test[test$Canopy.Class=="I",]#
#
par(new=F)#
plot(test[test$TreeID=="MMA003", "BA.inc"]~ test[test$TreeID=="MMA003","Year"], type="l")#
summary(test)#
# Truncatign at 1950; at 1950 the sample depth for the oak openings is only 1#
test <- test[test$Year >= 1950 & test$Year <= 2012,]#
#
tree.rw <- test#
summary(tree.rw)#
#
summary(test)#
save(test, file="processed_data/test_tree_data_1950_2012.Rdata")#
#
sites.rw <- list()#
#
tree.rw$Year <- as.factor(tree.rw$Year)#
#
for(s in unique(tree.rw$Site)){#
	sites.rw[[s]] <- recast(tree.rw[tree.rw$Site==s,c("Year", "TreeID", "RW")], Year ~ TreeID)	#
}#
summary(sites.rw)#
#
save(sites.rw, file="processed_data/sites_rw.Rdata")#
summary(sites.rw[[4]])#
sites.rw#
# Making Indices of all the different sites using a 30 yr cubic smoothing spline#
sites.i <- list()#
#
for(s in names(sites.rw)){#
	sites.i[[s]] <- detrend(sites.rw[[s]][,2:ncol(sites.rw[[s]])], method="Spline", nyr=30)#
}#
summary(sites.i[[1]])#
#
# making chronologies for each site#
#
site.chron <- list()#
#
for(s in names(sites.i)){#
	site.chron[[s]] <- chron(sites.i[[s]][,2:ncol(sites.i[[s]])], prefix = substr(s, 1, 3), prewhiten = T) #
	site.chron[[s]][,"Year"]<- c(1950:2012) #
}#
#
summary(site.chron[[5]])#
# Making each site it's own dataframe#
harvard.crn <- as.data.frame(site.chron[[1]])#
#
howland.crn <- as.data.frame(site.chron[[2]])#
#
misso.crn <- as.data.frame(site.chron[[3]])#
#
mmf.crn <- as.data.frame(site.chron[[4]])#
#
oakop.crn <- as.data.frame(site.chron[[5]])#
# Plotting thigns for presentation#
par(cex=2 )#
plot(mmf.crn$Morres ~ mmf.crn$Year, type="l", lwd=5, axes=F, cex=6, col="white")#
abline(h=1,lty="dashed", col="white")#
axis(side =1,tck= 0.05) #
axis(side=2,tck=0.05)#
#
#Plotting out mmfsites#
summary(test)#
#
mmf <- test[test$Site %in% "Morgan Monroe State Park",]#
#
summary(mmf)#
#
for(i in unique(mmf$Year)){#
  mmf[mmf$Year==i,"Mean"] <- mean(mmf[mmf$Year==i,"RW"])#
  mmf[mmf$Year==i,"UB"] <- quantile(mmf[mmf$Year==i,"RW"], 0.975)#
  mmf[mmf$Year==i,"LB"] <- quantile(mmf[mmf$Year==i,"RW"], 0.025)#
}#
#
summary(mmf)#
#
ggplot(data=mmf)+#
  # geom_line(aes(x=Year, y=RW))#
  geom_ribbon(aes(x=Year, ymin=LB, ymax=UB), alpha=0.5, fill="white")+#
  geom_line(aes(x=Year, y=Mean), size=2, color="white")+#
  poster.theme2#
# Merging the residual chronologies back together#
sites.crn <- data.frame(Harvard = harvard.crn[, "Harres"], #
						Howland = howland.crn[,"Howres"], #
						Missouri = misso.crn[,"Misres"],#
						Morgan_Monroe = mmf.crn[,"Morres"], #
						Oak_openings = oakop.crn[,"Oakres"]#
						)#
#
summary(sites.crn)#
# Load in climate data#
#
climate.use <- read.csv("processed_data/climate_growing_season.csv")#
#
summary(climate.use)#
#
climate.use <- climate.use[climate.use$Site %in% sites.use,]#
climate.use <- climate.use[climate.use$Year>=1950 & climate.use$Year <=2012,]#
#
climate.site <- list()#
#
for(s in unique(climate.use$Site)){#
	climate.site[[s]] <- climate.use[climate.use$Site==s,]#
}#
#
summary(climate.site)#
save(climate.site, file="processed_data/sites_use_climate.Rdata")#
class(climate.site[[1]][,"Year"])#
#
head(climate.site[[1]])#
#
summary(climate.site[[1]])#
#
harv.clim <- climate.site[["Harvard"]][,c("tmean", "precip")]#
#
how.clim <- climate.site[["Howland"]][,c("tmean", "precip")]#
#
miss.clim <- climate.site[["Missouri Ozark"]][,c("tmean", "precip")]#
#
mmf.clim <- climate.site[["Morgan Monroe State Park"]][,c("tmean", "precip")]#
#
oak.clim <- climate.site[["Oak Openings Toledo"]][,c("tmean", "precip")]#
dim(harv.clim)#
dim(harvard.crn)#
#
# harvard#
harv.cor<- cor(harvard.crn, harv.clim[,c("tmean", "precip")], method="pearson")#
harvard <- data.frame(cor = c(harv.cor[1:2,"tmean"],  harv.cor[1:2,"precip"]),#
					  var = c("tmean", "tmean", "precip", "precip"))#
harvard$type <- c("std", "res")#
harvard$site <- "Harvard" #
# Howland#
how.cor <- cor(howland.crn, how.clim[,c("tmean", "precip")], method="pearson")#
how.cor#
#
howland <- data.frame(cor = c(how.cor[1:2,"tmean"],  how.cor[1:2,"precip"]),#
					  var = c("tmean", "tmean", "precip", "precip"))#
howland$type <- c("std", "res")#
howland$site <- "Howland" #
# Missouri#
mo.cor <- cor(misso.crn, miss.clim[,c("tmean", "precip")], method="pearson")#
mo.cor#
#
missouri <- data.frame(cor = c(mo.cor[1:2,"tmean"],  mo.cor[1:2,"precip"]),#
					  var = c("tmean", "tmean", "precip", "precip"))#
missouri$type <- c("std", "res")#
missouri$site <- "Missouri" #
#
# Morgan Monroe#
mmf.cor <- cor(mmf.crn, mmf.clim[,c("tmean", "precip")], method="pearson")#
mmf.cor#
#
morgan <- data.frame(cor = c(mmf.cor[1:2,"tmean"],  mmf.cor[1:2,"precip"]),#
					  var = c("tmean", "tmean", "precip", "precip"))#
morgan$type <- c("std", "res")#
morgan$site <- "Morgan-Monroe" #
#
# Oak openings#
oakop.cor <- cor(oakop.crn, oak.clim[,c("tmean", "precip")], method="pearson")#
oakop.cor#
#
oakop <- data.frame(cor = c(oakop.cor[1:2,"tmean"],  oakop.cor[1:2,"precip"]),#
					  var = c("tmean", "tmean", "precip", "precip"))#
oakop$type <- c("std", "res")#
oakop$site <- "Oak-Openings" #
#
# Merging standard chronologies into one file#
#
clim.cor <- merge(harvard, howland, all.x=T, all.y=T)#
clim.cor2 <- merge(clim.cor, missouri,all.x=T, all.y=T)#
clim.cor3 <- merge(clim.cor2, morgan,all.x=T, all.y=T)#
clim.cor4 <- merge(clim.cor3, oakop,all.x=T, all.y=T)#
#
summary(clim.cor4)#
clim.cor4$site <- as.factor(clim.cor4$site)#
clim.cor4$type <- as.factor(clim.cor4$type)#
clim.cor4$cor <- as.numeric(clim.cor4$cor)#
#
# Sig value for 81 df = 0.209#
clim.cor4$sig <- ifelse(clim.cor4$cor < -0.2245 | clim.cor4$cor > 0.2245, "Y", "N")#
clim.cor4$sig <- factor(clim.cor4$sig, levels = c("Y", "N"))#
#
clim.cor4$site <- factor(clim.cor4$site, levels = c("Missouri", "Morgan-Monroe", "Oak-Openings", "Harvard", "Howland"))#
#
clim.cor4$Site <- clim.cor4$site#
clim.cor4$Site <- recode(clim.cor4$Site, "'Missouri' = 'MO'; 'Morgan-Monroe' = 'IN'; 'Oak-Openings' = 'OH'; 'Harvard' = 'MA'; 'Howland' = 'ME'")#
clim.cor4$Site <- factor(clim.cor4$Site, levels = c("MO", "IN", "OH", "MA", "ME"))#
pdf("figures/site_correlations.pdf", width= 13, height = 8.5)#
ggplot(data=clim.cor4[clim.cor4$type=="std",]) + facet_grid(var~. , scales="free_x") +#
	geom_bar(aes(x=Site, y=cor, fill=sig), stat="identity", position="dodge", colour="black") +#
	geom_hline(yintercept=0.2245, linetype="dashed") + #
	geom_hline(yintercept=-0.2245, linetype="dashed") + 	#
	geom_hline(yintercept=0, linetype="solid") +#
	scale_fill_manual(values= c("green", "grey50")) + #
	poster.theme2#
dev.off()#
#
#######################################################################
# Gettign correlations for all for all of the available climate data data#
#######################################################################
# Loading in climate data#
t.mean <- read.csv("processed_data/ch2_tmean.csv", header=T)#
t.min <- read.csv("processed_data/ch2_tmin.csv", header=T)#
t.max <- read.csv("processed_data/ch2_tmax.csv", header=T)#
precip <- read.csv("processed_data/ch2_precip.csv", header=T)#
summary(t.mean)#
#
# Limiting time frame--1950-2012#
t.mean <- t.mean[t.mean$Year >= 1951 & t.mean$Year <= 2012,]#
t.min <- t.min[t.min$Year >= 1951 & t.min$Year <= 2012,]#
t.max <- t.max[t.max$Year >= 1951 & t.max$Year <= 2012,]#
precip <- precip[precip$Year >= 1951 & precip$Year <= 2012,]#
summary(t.mean)#
summary(t.min)#
summary(t.max)#
summary(precip)#
#
head(t.mean)#
unique(t.mean$Site.Name)#
#
t.mean$Site.Name <- recode(t.mean$Site.Name, "'Missouri Ozark' = 'Missouri'; 'Morgan Monroe State Park'='Morgan_Monroe'; 'Oak Openings Toledo' = 'Oak_openings'")#
#
t.min$Site.Name <- recode(t.min$Site.Name, "'Missouri Ozark' = 'Missouri'; 'Morgan Monroe State Park'='Morgan_Monroe'; 'Oak Openings Toledo' = 'Oak_openings'")#
t.max$Site.Name <- recode(t.max$Site.Name, "'Missouri Ozark' = 'Missouri'; 'Morgan Monroe State Park'='Morgan_Monroe'; 'Oak Openings Toledo' = 'Oak_openings'")#
precip$Site.Name <- recode(precip$Site.Name, "'Missouri Ozark' = 'Missouri'; 'Morgan Monroe State Park'='Morgan_Monroe'; 'Oak Openings Toledo' = 'Oak_openings'")#
# getting the ring widths in a data frame#
summary(sites.crn)#
sites.crn$Year <- site.chron[[1]][,"Year"]#
head(sites.crn)#
sites.crn <- sites.crn[sites.crn$Year > 1950,]#
#--------------------------------------------#
# Tmean correlation#
#--------------------------------------------#
#
sites <- c("Harvard", "Howland", "Missouri", "Morgan_Monroe", "Oak_openings")#
#
tmean.corr<-list()#
#
for(i in sites){#
	tmean.corr[[i]] <- cor(sites.crn[,i], t.mean[t.mean$Site.Name %in% i,!names(t.mean) %in% c("Site.Name", "Year")], method="pearson")#
}#
summary(tmean.corr)#
#
# Making each site it's own dataframe#
harvard.tmean <- as.data.frame(tmean.corr[[1]])#
#
harvard.tmean.stack <- stack(harvard.tmean)#
names(harvard.tmean.stack)<- c("cor", "month")#
harvard.tmean.stack$Site <- as.factor("Harvard")#
harvard.tmean.stack$type <- as.factor("tmean")#
#
howland.tmean <- as.data.frame(tmean.corr[[2]])#
#
howland.tmean.stack <- stack(howland.tmean)#
names(howland.tmean.stack)<- c("cor", "month")#
howland.tmean.stack$Site <- as.factor("Howland")#
howland.tmean.stack$type <- as.factor("tmean")#
#
mo.tmean <- as.data.frame(tmean.corr[[3]])#
#
mo.tmean.stack <- stack(mo.tmean)#
names(mo.tmean.stack)<- c("cor", "month")#
mo.tmean.stack$Site <- as.factor("Missouri")#
mo.tmean.stack$type <- as.factor("tmean")#
#
mmf.tmean <- as.data.frame(tmean.corr[[4]])#
#
mmf.tmean.stack <- stack(mmf.tmean)#
names(mmf.tmean.stack)<- c("cor", "month")#
mmf.tmean.stack$Site <- as.factor("MMF")#
mmf.tmean.stack$type <- as.factor("tmean")#
#
oakop.tmean <- as.data.frame(tmean.corr[[5]])#
#
oakop.tmean.stack <- stack(oakop.tmean)#
names(oakop.tmean.stack)<- c("cor", "month")#
oakop.tmean.stack$Site <- as.factor("Oak_openings")#
oakop.tmean.stack$type <- as.factor("tmean")#
#
all.sites.tmean <- rbind(harvard.tmean.stack, howland.tmean.stack, mo.tmean.stack, mmf.tmean.stack, oakop.tmean.stack)#
#
summary(all.sites.tmean)#
#
#--------------------------------------------#
# Tmin correlation#
#--------------------------------------------#
#
sites <- c("Harvard", "Howland", "Missouri", "Morgan_Monroe", "Oak_openings")#
#
tmin.corr<-list()#
#
for(i in sites){#
	tmin.corr[[i]] <- cor(sites.crn[,i], t.min[t.min$Site.Name %in% i,!names(t.min) %in% c("Site.Name", "Year")], method="pearson")#
}#
summary(tmin.corr)#
#
# Making each site it's own dataframe#
harvard.tmin <- as.data.frame(tmin.corr[[1]])#
#
harvard.tmin.stack <- stack(harvard.tmin)#
names(harvard.tmin.stack)<- c("cor", "month")#
harvard.tmin.stack$Site <- as.factor("Harvard")#
harvard.tmin.stack$type <- as.factor("tmin")#
#
howland.tmin <- as.data.frame(tmin.corr[[2]])#
#
howland.tmin.stack <- stack(howland.tmin)#
names(howland.tmin.stack)<- c("cor", "month")#
howland.tmin.stack$Site <- as.factor("Howland")#
howland.tmin.stack$type <- as.factor("tmin")#
#
mo.tmin <- as.data.frame(tmin.corr[[3]])#
#
mo.tmin.stack <- stack(mo.tmin)#
names(mo.tmin.stack)<- c("cor", "month")#
mo.tmin.stack$Site <- as.factor("Missouri")#
mo.tmin.stack$type <- as.factor("tmin")#
#
mmf.tmin <- as.data.frame(tmin.corr[[4]])#
#
mmf.tmin.stack <- stack(mmf.tmin)#
names(mmf.tmin.stack)<- c("cor", "month")#
mmf.tmin.stack$Site <- as.factor("MMF")#
mmf.tmin.stack$type <- as.factor("tmin")#
#
oakop.tmin <- as.data.frame(tmin.corr[[5]])#
#
oakop.tmin.stack <- stack(oakop.tmin)#
names(oakop.tmin.stack)<- c("cor", "month")#
oakop.tmin.stack$Site <- as.factor("Oak_openings")#
oakop.tmin.stack$type <- as.factor("tmin")#
#
all.sites.tmin <- rbind(harvard.tmin.stack, howland.tmin.stack, mo.tmin.stack, mmf.tmin.stack, oakop.tmin.stack)#
#
summary(all.sites.tmin)#
#--------------------------------------------#
# Tmax correlation#
#--------------------------------------------#
#
sites <- c("Harvard", "Howland", "Missouri", "Morgan_Monroe", "Oak_openings")#
#
tmax.corr<-list()#
#
for(i in sites){#
	tmax.corr[[i]] <- cor(sites.crn[,i], t.max[t.max$Site.Name %in% i,!names(t.max) %in% c("Site.Name", "Year")], method="pearson")#
}#
summary(tmax.corr)#
#
# Making each site it's own dataframe#
harvard.tmax <- as.data.frame(tmax.corr[[1]])#
#
harvard.tmax.stack <- stack(harvard.tmax)#
names(harvard.tmax.stack)<- c("cor", "month")#
harvard.tmax.stack$Site <- as.factor("Harvard")#
harvard.tmax.stack$type <- as.factor("tmax")#
#
howland.tmax <- as.data.frame(tmax.corr[[2]])#
#
howland.tmax.stack <- stack(howland.tmax)#
names(howland.tmax.stack)<- c("cor", "month")#
howland.tmax.stack$Site <- as.factor("Howland")#
howland.tmax.stack$type <- as.factor("tmax")#
#
mo.tmax <- as.data.frame(tmax.corr[[3]])#
#
mo.tmax.stack <- stack(mo.tmax)#
names(mo.tmax.stack)<- c("cor", "month")#
mo.tmax.stack$Site <- as.factor("Missouri")#
mo.tmax.stack$type <- as.factor("tmax")#
#
mmf.tmax <- as.data.frame(tmax.corr[[4]])#
#
mmf.tmax.stack <- stack(mmf.tmax)#
names(mmf.tmax.stack)<- c("cor", "month")#
mmf.tmax.stack$Site <- as.factor("MMF")#
mmf.tmax.stack$type <- as.factor("tmax")#
#
oakop.tmax <- as.data.frame(tmax.corr[[5]])#
#
oakop.tmax.stack <- stack(oakop.tmax)#
names(oakop.tmax.stack)<- c("cor", "month")#
oakop.tmax.stack$Site <- as.factor("Oak_openings")#
oakop.tmax.stack$type <- as.factor("tmax")#
#
all.sites.tmax <- rbind(harvard.tmax.stack, howland.tmax.stack, mo.tmax.stack, mmf.tmax.stack, oakop.tmax.stack)#
#
summary(all.sites.tmax)#
#--------------------------------------------#
# Precip correlation#
#--------------------------------------------#
sites <- c("Harvard", "Howland", "Missouri", "Morgan_Monroe", "Oak_openings")#
#
precip.corr<-list()#
#
for(i in sites){#
	precip.corr[[i]] <- cor(sites.crn[,i], precip[precip$Site.Name %in% i,!names(precip) %in% c("Site.Name", "Year")], method="pearson")#
}#
summary(precip.corr)#
#
# Making each site it's own dataframe#
harvard.precip <- as.data.frame(precip.corr[[1]])#
#
harvard.precip.stack <- stack(harvard.precip)#
names(harvard.precip.stack)<- c("cor", "month")#
harvard.precip.stack$Site <- as.factor("Harvard")#
harvard.precip.stack$type <- as.factor("precip")#
#
howland.precip <- as.data.frame(precip.corr[[2]])#
#
howland.precip.stack <- stack(howland.precip)#
names(howland.precip.stack)<- c("cor", "month")#
howland.precip.stack$Site <- as.factor("Howland")#
howland.precip.stack$type <- as.factor("precip")#
#
mo.precip <- as.data.frame(precip.corr[[3]])#
#
mo.precip.stack <- stack(mo.precip)#
names(mo.precip.stack)<- c("cor", "month")#
mo.precip.stack$Site <- as.factor("Missouri")#
mo.precip.stack$type <- as.factor("precip")#
#
mmf.precip <- as.data.frame(precip.corr[[4]])#
#
mmf.precip.stack <- stack(mmf.precip)#
names(mmf.precip.stack)<- c("cor", "month")#
mmf.precip.stack$Site <- as.factor("MMF")#
mmf.precip.stack$type <- as.factor("precip")#
#
oakop.precip <- as.data.frame(precip.corr[[5]])#
#
oakop.precip.stack <- stack(oakop.precip)#
names(oakop.precip.stack)<- c("cor", "month")#
oakop.precip.stack$Site <- as.factor("Oak_openings")#
oakop.precip.stack$type <- as.factor("precip")#
#
all.sites.precip <- rbind(harvard.precip.stack, howland.precip.stack, mo.precip.stack, mmf.precip.stack, oakop.precip.stack)#
#
summary(all.sites.precip)#
#
# Merging all stacked dataframes together to make plotting easier#
#
all.sites.climate <- rbind(all.sites.precip, all.sites.tmax, all.sites.tmin, all.sites.tmean)#
summary(all.sites.climate)#
#
# Sig value for 75 df = 0.2245#
all.sites.climate$sig <- ifelse(all.sites.climate$cor < -0.2245 | all.sites.climate$cor > 0.2245, "Y", "N")#
all.sites.climate$sig <- factor(all.sites.climate$sig, levels = c("Y", "N"))#
all.sites.climate$month <- factor(all.sites.climate$month, levels = c("pJan", "pFeb", "pMar", "pApr", "pMay", "pJun", "pJul", "pAug", "pSep", "pOct", "pNov", "pDec", "Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec", "pfall", "winter", "spring", "summer", "grow.seas"))#
#
all.sites.climate$Site <- factor(all.sites.climate$Site, levels = c("Missouri", "MMF", "Oak_openings", "Harvard", "Howland"))#
#
pdf("figures/site_correlations_allmonths_short.pdf", width= 13, height = 8.5)#
ggplot(data=all.sites.climate[all.sites.climate$month %in% c("pOct", "pNov", "pDec", "Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec", "spring", "summer", "pfall", "winter", "grow.seas"),]) + facet_grid(Site ~ type ) +#
	geom_bar(aes(x=month, y=cor, fill=sig), stat="identity", position="dodge", colour="black") +#
	geom_hline(yintercept=0.2245, linetype="dashed") + #
	geom_hline(yintercept=-0.2245, linetype="dashed") + 	#
	geom_hline(yintercept=0, linetype="solid") +#
	scale_fill_manual(values= c("green", "grey50"))+#
	theme(axis.text.x = element_text(angle = 45, hjust = 1))#
dev.off()#
#
summary(all.sites.climate$month)#
#
all.sites.gs <- all.sites.climate[all.sites.climate$month=="grow.seas",]#
summary(all.sites.gs)#
#
cbbPalette <- c("#009E73", "#e79f00", "#9ad0f3", "#0072B2", "#D55E00")#
#
all.sites.climate$type <- factor(all.sites.climate$type, levels=c("tmean", "precip", "tmin", "tmax"))#
pdf("figures/site_correlations_growing season.pdf", width= 13, height = 8.5)#
ggplot(data=all.sites.climate[all.sites.climate$month %in% "grow.seas" & all.sites.climate$type %in% c("tmean", "precip"),]) + facet_grid(~type) +#
  geom_bar(aes(x=month, y=cor, color=Site), stat="identity", position="dodge", fill=NA) + ylim(-0.6,0.6)+#
  geom_bar(aes(x=month, y=cor, color=Site), stat="identity", position="dodge", fill=NA) +ylim(-0.6,0.6)+#
  geom_bar(aes(x=month, y=cor, fill=Site, alpha=sig), stat="identity", position="dodge") +ylim(-0.6,0.6)+#
  geom_hline(yintercept=0.2245, linetype="dashed") + #
  geom_hline(yintercept=-0.2245, linetype="dashed") + 	#
  geom_hline(yintercept=0, linetype="solid") +#
 # scale_fill_manual(values= cbbPalette)+#
  scale_color_manual(values=cbbPalette) +#
  scale_fill_manual(values=cbbPalette) +#
  scale_alpha_manual(values = c(1, 0.2))+#
  poster.theme2 +#
  theme(axis.text.x = element_text(angle = 45, hjust = 1),panel.grid.major=element_blank(), panel.grid.minor= element_blank(), panel.border= element_blank(), panel.background= element_blank()) +#
  labs(title= "TR Site Climate Correlations", x="Seasons", y=expression(bold(paste("Correlation Value (r)"))))#
#
dev.off()#
#
#################################################################################
# Running correlations on the individual indices to get the full spread of the #
#################################################################################
#
all.sites.gs <- all.sites.climate[all.sites.climate$month=="grow.seas",]#
summary(all.sites.gs)#
#
all.sites.gs$State <- recode(all.sites.gs$Site, "'Missouri'='MO';'MMF'='IN';'Oak_openings'='OH';'Harvard'='MA';'Howland'='ME'")#
all.sites.gs$series <- as.factor("chron")#
summary(all.sites.gs)#
#
summary(climate.site$Howland[,])#
head(sites.i$Howland)#
#
summary(sites.i)#
index.cor.temp <- sites.i#
index.cor.precip <- sites.i#
#
test <- sites.i#
meow <- test#
#
# Running correlations fro Tmean and Precip on individual indices#
for(s in names(sites.i)){#
	for(i in names(sites.i[[s]])){#
		index.cor.temp[[s]][,i] <- cor(sites.i[[s]][,i], climate.site[[s]][,"tmean"], method="pearson")#
	}#
}	#
#
test <- cor(sites.i[["Harvard"]][,c(1:10)], climate.site[["Harvard"]][,"tmean"], method="pearson")#
for(s in names(sites.i)){#
	for(i in names(sites.i[[s]])){#
		index.cor.precip[[s]][,i] <- cor(sites.i[[s]][,i], climate.site[[s]][,"precip"], method="pearson") #
	}#
}	#
summary(index.cor.precip)#
#
# Now need to merge everything into one stacked file to be used with ggplot 2#
#
test <- data.frame()#
#
# Need to break it down by site#
#
# Harvard#
har.precip.stack <- stack(index.cor.precip[["Harvard"]])#
names(har.precip.stack)<- c("cor", "TreeID")#
har.precip.stack$State <- as.factor("MA")#
har.precip.stack$type <- as.factor("precip")#
summary(har.precip.stack)#
#
har.temp.stack <- stack(index.cor.temp[["Harvard"]])#
names(har.temp.stack)<- c("cor", "TreeID")#
har.temp.stack$State <- as.factor("MA")#
har.temp.stack$type <- as.factor("tmean")#
summary(har.temp.stack)#
#
har.stack <- merge(har.temp.stack, har.precip.stack, all.x=T, all.y=T)#
summary(har.stack)#
#
# Howland#
#
how.precip.stack <- stack(index.cor.precip[["Howland"]])#
names(how.precip.stack)<- c("cor", "TreeID")#
how.precip.stack$State <- as.factor("ME")#
how.precip.stack$type <- as.factor("precip")#
summary(how.precip.stack)#
#
how.temp.stack <- stack(index.cor.temp[["Howland"]])#
names(how.temp.stack)<- c("cor", "TreeID")#
how.temp.stack$State <- as.factor("ME")#
how.temp.stack$type <- as.factor("tmean")#
summary(how.temp.stack)#
#
how.stack <- merge(how.temp.stack, how.precip.stack, all.x=T, all.y=T)#
summary(how.stack)#
#
# Missouri#
#
mo.precip.stack <- stack(index.cor.precip[["Missouri Ozark"]])#
names(mo.precip.stack)<- c("cor", "TreeID")#
mo.precip.stack$State <- as.factor("MO")#
mo.precip.stack$type <- as.factor("precip")#
summary(mo.precip.stack)#
#
mo.temp.stack <- stack(index.cor.temp[["Missouri Ozark"]])#
names(mo.temp.stack)<- c("cor", "TreeID")#
mo.temp.stack$State <- as.factor("MO")#
mo.temp.stack$type <- as.factor("tmean")#
summary(mo.temp.stack)#
#
mo.stack <- merge(mo.temp.stack, mo.precip.stack, all.x=T, all.y=T)#
summary(mo.stack)#
# MMF#
#
mmf.precip.stack <- stack(index.cor.precip[["Morgan Monroe State Park"]])#
names(mmf.precip.stack)<- c("cor", "TreeID")#
mmf.precip.stack$State <- as.factor("IN")#
mmf.precip.stack$type <- as.factor("precip")#
summary(mmf.precip.stack)#
#
mmf.temp.stack <- stack(index.cor.temp[["Morgan Monroe State Park"]])#
names(mmf.temp.stack)<- c("cor", "TreeID")#
mmf.temp.stack$State <- as.factor("IN")#
mmf.temp.stack$type <- as.factor("tmean")#
summary(mmf.temp.stack)#
#
mmf.stack <- merge(mmf.temp.stack, mmf.precip.stack, all.x=T, all.y=T)#
summary(mmf.stack)#
# Oak Openings#
#
oak.precip.stack <- stack(index.cor.precip[["Oak Openings Toledo"]])#
names(oak.precip.stack)<- c("cor", "TreeID")#
oak.precip.stack$State <- as.factor("OH")#
oak.precip.stack$type <- as.factor("precip")#
summary(oak.precip.stack)#
#
oak.temp.stack <- stack(index.cor.temp[["Oak Openings Toledo"]])#
names(oak.temp.stack)<- c("cor", "TreeID")#
oak.temp.stack$State <- as.factor("OH")#
oak.temp.stack$type <- as.factor("tmean")#
summary(oak.temp.stack)#
#
oak.stack <- merge(oak.temp.stack, oak.precip.stack, all.x=T, all.y=T)#
summary(oak.stack)#
#
cor.all.stack <- rbind(har.stack, how.stack, mmf.stack, oak.stack, mo.stack)#
summary(cor.all.stack)#
#
# Calculating Tukey Biweight Robust mean#
#
for(s in unique(cor.all.stack$State)){#
	for(t in unique(cor.all.stack$type)){#
	cor.all.stack[cor.all.stack$State==s & cor.all.stack$type==t,"biweight.mean"] <- TukeyBiweight(cor.all.stack[cor.all.stack$State==s & cor.all.stack$type==t,"cor"], na.rm=T)#
	}#
}#
summary(cor.all.stack)#
#
# creating a significance column#
cor.all.stack$sig <- ifelse(cor.all.stack$cor < -0.2245 | cor.all.stack$cor > 0.2245, "Y", "N")#
cor.all.stack$sig <- factor(cor.all.stack$sig, levels = c("Y", "N"))#
#
cor.all.stack$State <- factor(cor.all.stack$State, levels=c("MO", "IN", "OH", "MA", "ME"))#
summary(cor.all.stack)#
#
cor.all.stack$type <- factor(cor.all.stack$type, levels = c("precip", "tmean"))#
cor.all.stack$series <- as.factor("index")#
#
summary(all.sites.gs)#
summary(cor.all.stack)#
#
summary(cor.all.stack[is.na(cor.all.stack$cor),])#
#
pdf("figures/violin_climate_cor.pdf", height=8, width=13)#
ggplot(data=cor.all.stack) + facet_grid(~type)+#
#
	geom_violin(aes(x=State, y=cor, fill=State), adjust = 2, trim=T) + ylim(-0.6,0.6)+#
	geom_point(data=all.sites.gs[all.sites.gs$type %in% c("precip", "tmean"),],aes(x=State, y=cor), shape=126, size=25)+ ylim(-0.6,0.6)+#
	geom_point(aes(x=State, y=biweight.mean), shape=95, size=25)+ ylim(-0.6,0.6)+#
	geom_hline(yintercept=0.2245, linetype="dashed") + #
  	geom_hline(yintercept=-0.2245, linetype="dashed") + 	#
  	geom_hline(yintercept=0, linetype="solid") +#
#
	scale_color_manual(values=cbbPalette) +#
  	scale_fill_manual(values=cbbPalette) +#
  	poster.theme2 +#
  	theme(axis.text.x = element_text(angle = 45, hjust = 1),panel.grid.major=element_blank(), panel.grid.minor= 	element_blank(), panel.border= element_blank(), panel.background= element_blank()) +#
  	labs(title= "TR Index Climate Correlations", x="State", y=expression(bold(paste("Correlation Value (r)"))))#
dev.off()
library(mgcv)#
library(ggplot2)#
library(car)#
library(reshape)#
library(dplR)#
library(DescTools)#
# Christy's GAMM code#
#
# gam1 <- gamm(Y ~  s(Biomass, bs="cr", k=3, by=PFT) + s(tair, k=k, by=PFT) + s(precipf, k=k, by=PFT) + s(CO2, k=k, by=PFT), random=list(PlotID=~1), data=data) #
#
# Loading in my data#
#
data.use <- read.csv("processed_data/AllSites_tree_plus_climate_and_BA.csv", header=T)#
#
data.use$group <- data.use$Species#
data.use$group <- recode(data.use$group, "'CAOV' = 'CARYA'; 'CACO' = 'CARYA'; #
  							'CATE' = 'CARYA'; 'ACSAC' = 'ACSA'; 'BEAL' = 'BETULA'; 'BELE' = 'BETULA'; 'QUMU' = 'QUAL'")#
#
data.use$group.plot <- as.factor(paste(data.use$group, data.use$PlotID, sep="."))#
#
data.use$Canopy.Class <- recode(data.use$Canopy.Class, "'C' = 'D'")#
summary(data.use)#
# reducing the amount of data for the test runs#
sites.use <- c("Harvard", "Howland", "Morgan Monroe State Park", "Oak Openings Toledo", "Missouri Ozark")#
#
test <- data.use[data.use$Site %in% sites.use & !is.na(data.use$RW) & !is.na(data.use$BA.inc),]#
summary(test)#
#
test$group.cc <- as.factor(paste(test$group, test$Canopy.Class, sep="."))#
summary(test)#
# Get a list of what predictors & responses I'm using#
predictors.all <- c("tmean", "precip", "Species", "dbh.recon", "Canopy.Class", "spp.plot", "group", "group.plot", "group.cc")#
#
# Getting rid of observations that have NAs in the important variables#
test <- test[complete.cases(test[,predictors.all]),]#
test <- test[test$Live.Dead=="LIVE" & !test$Canopy.Class=="F",]#
#
# Subsetting to a set of species that we have enough data to feel good about#
#species.use <- c("TSCA", "QURU", "ACRU", "BEAL", "ACSA", "LITU", "QUAL", "CAOV", "CACO", "CATE", "JUVI", "QUVE", "PCRU", "THOC", "PIST")#
group.use <- c("ACRU", "ACSA", "BETULA", "CARYA", "FAGR", "FRAX", "PIST", "QUAL", "QURU", "QUVE", "SAAL", "TSCA", "ULRU")#
#
test <- test[test$group %in% group.use,]#
#
summary(test)#
#
# Right now just looking at the dominant trees.  Not sure how to show this yet#
test <- test[test$Canopy.Class=="D",]#
#
par(new=F)#
plot(test[test$TreeID=="MMA003", "BA.inc"]~ test[test$TreeID=="MMA003","Year"], type="l")#
summary(test)#
# Truncatign at 1950; at 1950 the sample depth for the oak openings is only 1#
test <- test[test$Year >= 1950 & test$Year <= 2012,]#
#
tree.rw <- test#
summary(tree.rw)#
#
summary(test)#
save(test, file="processed_data/test_tree_data_1950_2012.Rdata")#
#
sites.rw <- list()#
#
tree.rw$Year <- as.factor(tree.rw$Year)#
#
for(s in unique(tree.rw$Site)){#
	sites.rw[[s]] <- recast(tree.rw[tree.rw$Site==s,c("Year", "TreeID", "RW")], Year ~ TreeID)	#
}#
summary(sites.rw)#
#
save(sites.rw, file="processed_data/sites_rw.Rdata")#
summary(sites.rw[[4]])#
sites.rw#
# Making Indices of all the different sites using a 30 yr cubic smoothing spline#
sites.i <- list()#
#
for(s in names(sites.rw)){#
	sites.i[[s]] <- detrend(sites.rw[[s]][,2:ncol(sites.rw[[s]])], method="Spline", nyr=30)#
}#
summary(sites.i[[1]])#
#
# making chronologies for each site#
#
site.chron <- list()#
#
for(s in names(sites.i)){#
	site.chron[[s]] <- chron(sites.i[[s]][,2:ncol(sites.i[[s]])], prefix = substr(s, 1, 3), prewhiten = T) #
	site.chron[[s]][,"Year"]<- c(1950:2012) #
}#
#
summary(site.chron[[5]])#
# Making each site it's own dataframe#
harvard.crn <- as.data.frame(site.chron[[1]])#
#
howland.crn <- as.data.frame(site.chron[[2]])#
#
misso.crn <- as.data.frame(site.chron[[3]])#
#
mmf.crn <- as.data.frame(site.chron[[4]])#
#
oakop.crn <- as.data.frame(site.chron[[5]])#
# Plotting thigns for presentation#
par(cex=2 )#
plot(mmf.crn$Morres ~ mmf.crn$Year, type="l", lwd=5, axes=F, cex=6, col="white")#
abline(h=1,lty="dashed", col="white")#
axis(side =1,tck= 0.05) #
axis(side=2,tck=0.05)#
#
#Plotting out mmfsites#
summary(test)#
#
mmf <- test[test$Site %in% "Morgan Monroe State Park",]#
#
summary(mmf)#
#
for(i in unique(mmf$Year)){#
  mmf[mmf$Year==i,"Mean"] <- mean(mmf[mmf$Year==i,"RW"])#
  mmf[mmf$Year==i,"UB"] <- quantile(mmf[mmf$Year==i,"RW"], 0.975)#
  mmf[mmf$Year==i,"LB"] <- quantile(mmf[mmf$Year==i,"RW"], 0.025)#
}#
#
summary(mmf)#
#
ggplot(data=mmf)+#
  # geom_line(aes(x=Year, y=RW))#
  geom_ribbon(aes(x=Year, ymin=LB, ymax=UB), alpha=0.5, fill="white")+#
  geom_line(aes(x=Year, y=Mean), size=2, color="white")+#
  poster.theme2#
# Merging the residual chronologies back together#
sites.crn <- data.frame(Harvard = harvard.crn[, "Harres"], #
						Howland = howland.crn[,"Howres"], #
						Missouri = misso.crn[,"Misres"],#
						Morgan_Monroe = mmf.crn[,"Morres"], #
						Oak_openings = oakop.crn[,"Oakres"]#
						)#
#
summary(sites.crn)#
# Load in climate data#
#
climate.use <- read.csv("processed_data/climate_growing_season.csv")#
#
summary(climate.use)#
#
climate.use <- climate.use[climate.use$Site %in% sites.use,]#
climate.use <- climate.use[climate.use$Year>=1950 & climate.use$Year <=2012,]#
#
climate.site <- list()#
#
for(s in unique(climate.use$Site)){#
	climate.site[[s]] <- climate.use[climate.use$Site==s,]#
}#
#
summary(climate.site)#
save(climate.site, file="processed_data/sites_use_climate.Rdata")#
class(climate.site[[1]][,"Year"])#
#
head(climate.site[[1]])#
#
summary(climate.site[[1]])#
#
harv.clim <- climate.site[["Harvard"]][,c("tmean", "precip")]#
#
how.clim <- climate.site[["Howland"]][,c("tmean", "precip")]#
#
miss.clim <- climate.site[["Missouri Ozark"]][,c("tmean", "precip")]#
#
mmf.clim <- climate.site[["Morgan Monroe State Park"]][,c("tmean", "precip")]#
#
oak.clim <- climate.site[["Oak Openings Toledo"]][,c("tmean", "precip")]#
dim(harv.clim)#
dim(harvard.crn)#
#
# harvard#
harv.cor<- cor(harvard.crn, harv.clim[,c("tmean", "precip")], method="pearson")#
harvard <- data.frame(cor = c(harv.cor[1:2,"tmean"],  harv.cor[1:2,"precip"]),#
					  var = c("tmean", "tmean", "precip", "precip"))#
harvard$type <- c("std", "res")#
harvard$site <- "Harvard" #
# Howland#
how.cor <- cor(howland.crn, how.clim[,c("tmean", "precip")], method="pearson")#
how.cor#
#
howland <- data.frame(cor = c(how.cor[1:2,"tmean"],  how.cor[1:2,"precip"]),#
					  var = c("tmean", "tmean", "precip", "precip"))#
howland$type <- c("std", "res")#
howland$site <- "Howland" #
# Missouri#
mo.cor <- cor(misso.crn, miss.clim[,c("tmean", "precip")], method="pearson")#
mo.cor#
#
missouri <- data.frame(cor = c(mo.cor[1:2,"tmean"],  mo.cor[1:2,"precip"]),#
					  var = c("tmean", "tmean", "precip", "precip"))#
missouri$type <- c("std", "res")#
missouri$site <- "Missouri" #
#
# Morgan Monroe#
mmf.cor <- cor(mmf.crn, mmf.clim[,c("tmean", "precip")], method="pearson")#
mmf.cor#
#
morgan <- data.frame(cor = c(mmf.cor[1:2,"tmean"],  mmf.cor[1:2,"precip"]),#
					  var = c("tmean", "tmean", "precip", "precip"))#
morgan$type <- c("std", "res")#
morgan$site <- "Morgan-Monroe" #
#
# Oak openings#
oakop.cor <- cor(oakop.crn, oak.clim[,c("tmean", "precip")], method="pearson")#
oakop.cor#
#
oakop <- data.frame(cor = c(oakop.cor[1:2,"tmean"],  oakop.cor[1:2,"precip"]),#
					  var = c("tmean", "tmean", "precip", "precip"))#
oakop$type <- c("std", "res")#
oakop$site <- "Oak-Openings" #
#
# Merging standard chronologies into one file#
#
clim.cor <- merge(harvard, howland, all.x=T, all.y=T)#
clim.cor2 <- merge(clim.cor, missouri,all.x=T, all.y=T)#
clim.cor3 <- merge(clim.cor2, morgan,all.x=T, all.y=T)#
clim.cor4 <- merge(clim.cor3, oakop,all.x=T, all.y=T)#
#
summary(clim.cor4)#
clim.cor4$site <- as.factor(clim.cor4$site)#
clim.cor4$type <- as.factor(clim.cor4$type)#
clim.cor4$cor <- as.numeric(clim.cor4$cor)#
#
# Sig value for 81 df = 0.209#
clim.cor4$sig <- ifelse(clim.cor4$cor < -0.2245 | clim.cor4$cor > 0.2245, "Y", "N")#
clim.cor4$sig <- factor(clim.cor4$sig, levels = c("Y", "N"))#
#
clim.cor4$site <- factor(clim.cor4$site, levels = c("Missouri", "Morgan-Monroe", "Oak-Openings", "Harvard", "Howland"))#
#
clim.cor4$Site <- clim.cor4$site#
clim.cor4$Site <- recode(clim.cor4$Site, "'Missouri' = 'MO'; 'Morgan-Monroe' = 'IN'; 'Oak-Openings' = 'OH'; 'Harvard' = 'MA'; 'Howland' = 'ME'")#
clim.cor4$Site <- factor(clim.cor4$Site, levels = c("MO", "IN", "OH", "MA", "ME"))#
pdf("figures/site_correlations.pdf", width= 13, height = 8.5)#
ggplot(data=clim.cor4[clim.cor4$type=="std",]) + facet_grid(var~. , scales="free_x") +#
	geom_bar(aes(x=Site, y=cor, fill=sig), stat="identity", position="dodge", colour="black") +#
	geom_hline(yintercept=0.2245, linetype="dashed") + #
	geom_hline(yintercept=-0.2245, linetype="dashed") + 	#
	geom_hline(yintercept=0, linetype="solid") +#
	scale_fill_manual(values= c("green", "grey50")) + #
	poster.theme2#
dev.off()#
#
#######################################################################
# Gettign correlations for all for all of the available climate data data#
#######################################################################
# Loading in climate data#
t.mean <- read.csv("processed_data/ch2_tmean.csv", header=T)#
t.min <- read.csv("processed_data/ch2_tmin.csv", header=T)#
t.max <- read.csv("processed_data/ch2_tmax.csv", header=T)#
precip <- read.csv("processed_data/ch2_precip.csv", header=T)#
summary(t.mean)#
#
# Limiting time frame--1950-2012#
t.mean <- t.mean[t.mean$Year >= 1951 & t.mean$Year <= 2012,]#
t.min <- t.min[t.min$Year >= 1951 & t.min$Year <= 2012,]#
t.max <- t.max[t.max$Year >= 1951 & t.max$Year <= 2012,]#
precip <- precip[precip$Year >= 1951 & precip$Year <= 2012,]#
summary(t.mean)#
summary(t.min)#
summary(t.max)#
summary(precip)#
#
head(t.mean)#
unique(t.mean$Site.Name)#
#
t.mean$Site.Name <- recode(t.mean$Site.Name, "'Missouri Ozark' = 'Missouri'; 'Morgan Monroe State Park'='Morgan_Monroe'; 'Oak Openings Toledo' = 'Oak_openings'")#
#
t.min$Site.Name <- recode(t.min$Site.Name, "'Missouri Ozark' = 'Missouri'; 'Morgan Monroe State Park'='Morgan_Monroe'; 'Oak Openings Toledo' = 'Oak_openings'")#
t.max$Site.Name <- recode(t.max$Site.Name, "'Missouri Ozark' = 'Missouri'; 'Morgan Monroe State Park'='Morgan_Monroe'; 'Oak Openings Toledo' = 'Oak_openings'")#
precip$Site.Name <- recode(precip$Site.Name, "'Missouri Ozark' = 'Missouri'; 'Morgan Monroe State Park'='Morgan_Monroe'; 'Oak Openings Toledo' = 'Oak_openings'")#
# getting the ring widths in a data frame#
summary(sites.crn)#
sites.crn$Year <- site.chron[[1]][,"Year"]#
head(sites.crn)#
sites.crn <- sites.crn[sites.crn$Year > 1950,]#
#--------------------------------------------#
# Tmean correlation#
#--------------------------------------------#
#
sites <- c("Harvard", "Howland", "Missouri", "Morgan_Monroe", "Oak_openings")#
#
tmean.corr<-list()#
#
for(i in sites){#
	tmean.corr[[i]] <- cor(sites.crn[,i], t.mean[t.mean$Site.Name %in% i,!names(t.mean) %in% c("Site.Name", "Year")], method="pearson")#
}#
summary(tmean.corr)#
#
# Making each site it's own dataframe#
harvard.tmean <- as.data.frame(tmean.corr[[1]])#
#
harvard.tmean.stack <- stack(harvard.tmean)#
names(harvard.tmean.stack)<- c("cor", "month")#
harvard.tmean.stack$Site <- as.factor("Harvard")#
harvard.tmean.stack$type <- as.factor("tmean")#
#
howland.tmean <- as.data.frame(tmean.corr[[2]])#
#
howland.tmean.stack <- stack(howland.tmean)#
names(howland.tmean.stack)<- c("cor", "month")#
howland.tmean.stack$Site <- as.factor("Howland")#
howland.tmean.stack$type <- as.factor("tmean")#
#
mo.tmean <- as.data.frame(tmean.corr[[3]])#
#
mo.tmean.stack <- stack(mo.tmean)#
names(mo.tmean.stack)<- c("cor", "month")#
mo.tmean.stack$Site <- as.factor("Missouri")#
mo.tmean.stack$type <- as.factor("tmean")#
#
mmf.tmean <- as.data.frame(tmean.corr[[4]])#
#
mmf.tmean.stack <- stack(mmf.tmean)#
names(mmf.tmean.stack)<- c("cor", "month")#
mmf.tmean.stack$Site <- as.factor("MMF")#
mmf.tmean.stack$type <- as.factor("tmean")#
#
oakop.tmean <- as.data.frame(tmean.corr[[5]])#
#
oakop.tmean.stack <- stack(oakop.tmean)#
names(oakop.tmean.stack)<- c("cor", "month")#
oakop.tmean.stack$Site <- as.factor("Oak_openings")#
oakop.tmean.stack$type <- as.factor("tmean")#
#
all.sites.tmean <- rbind(harvard.tmean.stack, howland.tmean.stack, mo.tmean.stack, mmf.tmean.stack, oakop.tmean.stack)#
#
summary(all.sites.tmean)#
#
#--------------------------------------------#
# Tmin correlation#
#--------------------------------------------#
#
sites <- c("Harvard", "Howland", "Missouri", "Morgan_Monroe", "Oak_openings")#
#
tmin.corr<-list()#
#
for(i in sites){#
	tmin.corr[[i]] <- cor(sites.crn[,i], t.min[t.min$Site.Name %in% i,!names(t.min) %in% c("Site.Name", "Year")], method="pearson")#
}#
summary(tmin.corr)#
#
# Making each site it's own dataframe#
harvard.tmin <- as.data.frame(tmin.corr[[1]])#
#
harvard.tmin.stack <- stack(harvard.tmin)#
names(harvard.tmin.stack)<- c("cor", "month")#
harvard.tmin.stack$Site <- as.factor("Harvard")#
harvard.tmin.stack$type <- as.factor("tmin")#
#
howland.tmin <- as.data.frame(tmin.corr[[2]])#
#
howland.tmin.stack <- stack(howland.tmin)#
names(howland.tmin.stack)<- c("cor", "month")#
howland.tmin.stack$Site <- as.factor("Howland")#
howland.tmin.stack$type <- as.factor("tmin")#
#
mo.tmin <- as.data.frame(tmin.corr[[3]])#
#
mo.tmin.stack <- stack(mo.tmin)#
names(mo.tmin.stack)<- c("cor", "month")#
mo.tmin.stack$Site <- as.factor("Missouri")#
mo.tmin.stack$type <- as.factor("tmin")#
#
mmf.tmin <- as.data.frame(tmin.corr[[4]])#
#
mmf.tmin.stack <- stack(mmf.tmin)#
names(mmf.tmin.stack)<- c("cor", "month")#
mmf.tmin.stack$Site <- as.factor("MMF")#
mmf.tmin.stack$type <- as.factor("tmin")#
#
oakop.tmin <- as.data.frame(tmin.corr[[5]])#
#
oakop.tmin.stack <- stack(oakop.tmin)#
names(oakop.tmin.stack)<- c("cor", "month")#
oakop.tmin.stack$Site <- as.factor("Oak_openings")#
oakop.tmin.stack$type <- as.factor("tmin")#
#
all.sites.tmin <- rbind(harvard.tmin.stack, howland.tmin.stack, mo.tmin.stack, mmf.tmin.stack, oakop.tmin.stack)#
#
summary(all.sites.tmin)#
#--------------------------------------------#
# Tmax correlation#
#--------------------------------------------#
#
sites <- c("Harvard", "Howland", "Missouri", "Morgan_Monroe", "Oak_openings")#
#
tmax.corr<-list()#
#
for(i in sites){#
	tmax.corr[[i]] <- cor(sites.crn[,i], t.max[t.max$Site.Name %in% i,!names(t.max) %in% c("Site.Name", "Year")], method="pearson")#
}#
summary(tmax.corr)#
#
# Making each site it's own dataframe#
harvard.tmax <- as.data.frame(tmax.corr[[1]])#
#
harvard.tmax.stack <- stack(harvard.tmax)#
names(harvard.tmax.stack)<- c("cor", "month")#
harvard.tmax.stack$Site <- as.factor("Harvard")#
harvard.tmax.stack$type <- as.factor("tmax")#
#
howland.tmax <- as.data.frame(tmax.corr[[2]])#
#
howland.tmax.stack <- stack(howland.tmax)#
names(howland.tmax.stack)<- c("cor", "month")#
howland.tmax.stack$Site <- as.factor("Howland")#
howland.tmax.stack$type <- as.factor("tmax")#
#
mo.tmax <- as.data.frame(tmax.corr[[3]])#
#
mo.tmax.stack <- stack(mo.tmax)#
names(mo.tmax.stack)<- c("cor", "month")#
mo.tmax.stack$Site <- as.factor("Missouri")#
mo.tmax.stack$type <- as.factor("tmax")#
#
mmf.tmax <- as.data.frame(tmax.corr[[4]])#
#
mmf.tmax.stack <- stack(mmf.tmax)#
names(mmf.tmax.stack)<- c("cor", "month")#
mmf.tmax.stack$Site <- as.factor("MMF")#
mmf.tmax.stack$type <- as.factor("tmax")#
#
oakop.tmax <- as.data.frame(tmax.corr[[5]])#
#
oakop.tmax.stack <- stack(oakop.tmax)#
names(oakop.tmax.stack)<- c("cor", "month")#
oakop.tmax.stack$Site <- as.factor("Oak_openings")#
oakop.tmax.stack$type <- as.factor("tmax")#
#
all.sites.tmax <- rbind(harvard.tmax.stack, howland.tmax.stack, mo.tmax.stack, mmf.tmax.stack, oakop.tmax.stack)#
#
summary(all.sites.tmax)#
#--------------------------------------------#
# Precip correlation#
#--------------------------------------------#
sites <- c("Harvard", "Howland", "Missouri", "Morgan_Monroe", "Oak_openings")#
#
precip.corr<-list()#
#
for(i in sites){#
	precip.corr[[i]] <- cor(sites.crn[,i], precip[precip$Site.Name %in% i,!names(precip) %in% c("Site.Name", "Year")], method="pearson")#
}#
summary(precip.corr)#
#
# Making each site it's own dataframe#
harvard.precip <- as.data.frame(precip.corr[[1]])#
#
harvard.precip.stack <- stack(harvard.precip)#
names(harvard.precip.stack)<- c("cor", "month")#
harvard.precip.stack$Site <- as.factor("Harvard")#
harvard.precip.stack$type <- as.factor("precip")#
#
howland.precip <- as.data.frame(precip.corr[[2]])#
#
howland.precip.stack <- stack(howland.precip)#
names(howland.precip.stack)<- c("cor", "month")#
howland.precip.stack$Site <- as.factor("Howland")#
howland.precip.stack$type <- as.factor("precip")#
#
mo.precip <- as.data.frame(precip.corr[[3]])#
#
mo.precip.stack <- stack(mo.precip)#
names(mo.precip.stack)<- c("cor", "month")#
mo.precip.stack$Site <- as.factor("Missouri")#
mo.precip.stack$type <- as.factor("precip")#
#
mmf.precip <- as.data.frame(precip.corr[[4]])#
#
mmf.precip.stack <- stack(mmf.precip)#
names(mmf.precip.stack)<- c("cor", "month")#
mmf.precip.stack$Site <- as.factor("MMF")#
mmf.precip.stack$type <- as.factor("precip")#
#
oakop.precip <- as.data.frame(precip.corr[[5]])#
#
oakop.precip.stack <- stack(oakop.precip)#
names(oakop.precip.stack)<- c("cor", "month")#
oakop.precip.stack$Site <- as.factor("Oak_openings")#
oakop.precip.stack$type <- as.factor("precip")#
#
all.sites.precip <- rbind(harvard.precip.stack, howland.precip.stack, mo.precip.stack, mmf.precip.stack, oakop.precip.stack)#
#
summary(all.sites.precip)#
#
# Merging all stacked dataframes together to make plotting easier#
#
all.sites.climate <- rbind(all.sites.precip, all.sites.tmax, all.sites.tmin, all.sites.tmean)#
summary(all.sites.climate)#
#
# Sig value for 75 df = 0.2245#
all.sites.climate$sig <- ifelse(all.sites.climate$cor < -0.2245 | all.sites.climate$cor > 0.2245, "Y", "N")#
all.sites.climate$sig <- factor(all.sites.climate$sig, levels = c("Y", "N"))#
all.sites.climate$month <- factor(all.sites.climate$month, levels = c("pJan", "pFeb", "pMar", "pApr", "pMay", "pJun", "pJul", "pAug", "pSep", "pOct", "pNov", "pDec", "Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec", "pfall", "winter", "spring", "summer", "grow.seas"))#
#
all.sites.climate$Site <- factor(all.sites.climate$Site, levels = c("Missouri", "MMF", "Oak_openings", "Harvard", "Howland"))#
#
pdf("figures/site_correlations_allmonths_short.pdf", width= 13, height = 8.5)#
ggplot(data=all.sites.climate[all.sites.climate$month %in% c("pOct", "pNov", "pDec", "Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec", "spring", "summer", "pfall", "winter", "grow.seas"),]) + facet_grid(Site ~ type ) +#
	geom_bar(aes(x=month, y=cor, fill=sig), stat="identity", position="dodge", colour="black") +#
	geom_hline(yintercept=0.2245, linetype="dashed") + #
	geom_hline(yintercept=-0.2245, linetype="dashed") + 	#
	geom_hline(yintercept=0, linetype="solid") +#
	scale_fill_manual(values= c("green", "grey50"))+#
	theme(axis.text.x = element_text(angle = 45, hjust = 1))#
dev.off()#
#
summary(all.sites.climate$month)#
#
all.sites.gs <- all.sites.climate[all.sites.climate$month=="grow.seas",]#
summary(all.sites.gs)#
#
cbbPalette <- c("#009E73", "#e79f00", "#9ad0f3", "#0072B2", "#D55E00")#
#
all.sites.climate$type <- factor(all.sites.climate$type, levels=c("tmean", "precip", "tmin", "tmax"))#
pdf("figures/site_correlations_growing season.pdf", width= 13, height = 8.5)#
ggplot(data=all.sites.climate[all.sites.climate$month %in% "grow.seas" & all.sites.climate$type %in% c("tmean", "precip"),]) + facet_grid(~type) +#
  geom_bar(aes(x=month, y=cor, color=Site), stat="identity", position="dodge", fill=NA) + ylim(-0.6,0.6)+#
  geom_bar(aes(x=month, y=cor, color=Site), stat="identity", position="dodge", fill=NA) +ylim(-0.6,0.6)+#
  geom_bar(aes(x=month, y=cor, fill=Site, alpha=sig), stat="identity", position="dodge") +ylim(-0.6,0.6)+#
  geom_hline(yintercept=0.2245, linetype="dashed") + #
  geom_hline(yintercept=-0.2245, linetype="dashed") + 	#
  geom_hline(yintercept=0, linetype="solid") +#
 # scale_fill_manual(values= cbbPalette)+#
  scale_color_manual(values=cbbPalette) +#
  scale_fill_manual(values=cbbPalette) +#
  scale_alpha_manual(values = c(1, 0.2))+#
  poster.theme2 +#
  theme(axis.text.x = element_text(angle = 45, hjust = 1),panel.grid.major=element_blank(), panel.grid.minor= element_blank(), panel.border= element_blank(), panel.background= element_blank()) +#
  labs(title= "TR Site Climate Correlations", x="Seasons", y=expression(bold(paste("Correlation Value (r)"))))#
#
dev.off()#
#
#################################################################################
# Running correlations on the individual indices to get the full spread of the #
#################################################################################
#
all.sites.gs <- all.sites.climate[all.sites.climate$month=="grow.seas",]#
summary(all.sites.gs)#
#
all.sites.gs$State <- recode(all.sites.gs$Site, "'Missouri'='MO';'MMF'='IN';'Oak_openings'='OH';'Harvard'='MA';'Howland'='ME'")#
all.sites.gs$series <- as.factor("chron")#
summary(all.sites.gs)#
#
summary(climate.site$Howland[,])#
head(sites.i$Howland)#
#
summary(sites.i)#
index.cor.temp <- sites.i#
index.cor.precip <- sites.i#
#
test <- sites.i#
meow <- test#
#
# Running correlations fro Tmean and Precip on individual indices#
for(s in names(sites.i)){#
	for(i in names(sites.i[[s]])){#
		index.cor.temp[[s]][,i] <- cor(sites.i[[s]][,i], climate.site[[s]][,"tmean"], method="pearson")#
	}#
}	#
#
test <- cor(sites.i[["Harvard"]][,c(1:10)], climate.site[["Harvard"]][,"tmean"], method="pearson")#
for(s in names(sites.i)){#
	for(i in names(sites.i[[s]])){#
		index.cor.precip[[s]][,i] <- cor(sites.i[[s]][,i], climate.site[[s]][,"precip"], method="pearson") #
	}#
}	#
summary(index.cor.precip)#
#
# Now need to merge everything into one stacked file to be used with ggplot 2#
#
test <- data.frame()#
#
# Need to break it down by site#
#
# Harvard#
har.precip.stack <- stack(index.cor.precip[["Harvard"]])#
names(har.precip.stack)<- c("cor", "TreeID")#
har.precip.stack$State <- as.factor("MA")#
har.precip.stack$type <- as.factor("precip")#
summary(har.precip.stack)#
#
har.temp.stack <- stack(index.cor.temp[["Harvard"]])#
names(har.temp.stack)<- c("cor", "TreeID")#
har.temp.stack$State <- as.factor("MA")#
har.temp.stack$type <- as.factor("tmean")#
summary(har.temp.stack)#
#
har.stack <- merge(har.temp.stack, har.precip.stack, all.x=T, all.y=T)#
summary(har.stack)#
#
# Howland#
#
how.precip.stack <- stack(index.cor.precip[["Howland"]])#
names(how.precip.stack)<- c("cor", "TreeID")#
how.precip.stack$State <- as.factor("ME")#
how.precip.stack$type <- as.factor("precip")#
summary(how.precip.stack)#
#
how.temp.stack <- stack(index.cor.temp[["Howland"]])#
names(how.temp.stack)<- c("cor", "TreeID")#
how.temp.stack$State <- as.factor("ME")#
how.temp.stack$type <- as.factor("tmean")#
summary(how.temp.stack)#
#
how.stack <- merge(how.temp.stack, how.precip.stack, all.x=T, all.y=T)#
summary(how.stack)#
#
# Missouri#
#
mo.precip.stack <- stack(index.cor.precip[["Missouri Ozark"]])#
names(mo.precip.stack)<- c("cor", "TreeID")#
mo.precip.stack$State <- as.factor("MO")#
mo.precip.stack$type <- as.factor("precip")#
summary(mo.precip.stack)#
#
mo.temp.stack <- stack(index.cor.temp[["Missouri Ozark"]])#
names(mo.temp.stack)<- c("cor", "TreeID")#
mo.temp.stack$State <- as.factor("MO")#
mo.temp.stack$type <- as.factor("tmean")#
summary(mo.temp.stack)#
#
mo.stack <- merge(mo.temp.stack, mo.precip.stack, all.x=T, all.y=T)#
summary(mo.stack)#
# MMF#
#
mmf.precip.stack <- stack(index.cor.precip[["Morgan Monroe State Park"]])#
names(mmf.precip.stack)<- c("cor", "TreeID")#
mmf.precip.stack$State <- as.factor("IN")#
mmf.precip.stack$type <- as.factor("precip")#
summary(mmf.precip.stack)#
#
mmf.temp.stack <- stack(index.cor.temp[["Morgan Monroe State Park"]])#
names(mmf.temp.stack)<- c("cor", "TreeID")#
mmf.temp.stack$State <- as.factor("IN")#
mmf.temp.stack$type <- as.factor("tmean")#
summary(mmf.temp.stack)#
#
mmf.stack <- merge(mmf.temp.stack, mmf.precip.stack, all.x=T, all.y=T)#
summary(mmf.stack)#
# Oak Openings#
#
oak.precip.stack <- stack(index.cor.precip[["Oak Openings Toledo"]])#
names(oak.precip.stack)<- c("cor", "TreeID")#
oak.precip.stack$State <- as.factor("OH")#
oak.precip.stack$type <- as.factor("precip")#
summary(oak.precip.stack)#
#
oak.temp.stack <- stack(index.cor.temp[["Oak Openings Toledo"]])#
names(oak.temp.stack)<- c("cor", "TreeID")#
oak.temp.stack$State <- as.factor("OH")#
oak.temp.stack$type <- as.factor("tmean")#
summary(oak.temp.stack)#
#
oak.stack <- merge(oak.temp.stack, oak.precip.stack, all.x=T, all.y=T)#
summary(oak.stack)#
#
cor.all.stack <- rbind(har.stack, how.stack, mmf.stack, oak.stack, mo.stack)#
summary(cor.all.stack)#
#
# Calculating Tukey Biweight Robust mean#
#
for(s in unique(cor.all.stack$State)){#
	for(t in unique(cor.all.stack$type)){#
	cor.all.stack[cor.all.stack$State==s & cor.all.stack$type==t,"biweight.mean"] <- TukeyBiweight(cor.all.stack[cor.all.stack$State==s & cor.all.stack$type==t,"cor"], na.rm=T)#
	}#
}#
summary(cor.all.stack)#
#
# creating a significance column#
cor.all.stack$sig <- ifelse(cor.all.stack$cor < -0.2245 | cor.all.stack$cor > 0.2245, "Y", "N")#
cor.all.stack$sig <- factor(cor.all.stack$sig, levels = c("Y", "N"))#
#
cor.all.stack$State <- factor(cor.all.stack$State, levels=c("MO", "IN", "OH", "MA", "ME"))#
summary(cor.all.stack)#
#
cor.all.stack$type <- factor(cor.all.stack$type, levels = c("precip", "tmean"))#
cor.all.stack$series <- as.factor("index")#
#
summary(all.sites.gs)#
summary(cor.all.stack)#
#
summary(cor.all.stack[is.na(cor.all.stack$cor),])#
#
pdf("figures/violin_climate_cor.pdf", height=8, width=13)#
ggplot(data=cor.all.stack) + facet_grid(~type)+#
#
	geom_violin(aes(x=State, y=cor, fill=State), adjust = 2, trim=T) + ylim(-0.6,0.6)+#
	geom_point(data=all.sites.gs[all.sites.gs$type %in% c("precip", "tmean"),],aes(x=State, y=cor), shape=126, size=25)+ ylim(-0.6,0.6)+#
	geom_point(aes(x=State, y=biweight.mean), shape=95, size=25)+ ylim(-0.6,0.6)+#
	geom_hline(yintercept=0.2245, linetype="dashed") + #
  	geom_hline(yintercept=-0.2245, linetype="dashed") + 	#
  	geom_hline(yintercept=0, linetype="solid") +#
#
	scale_color_manual(values=cbbPalette) +#
  	scale_fill_manual(values=cbbPalette) +#
  	poster.theme2 +#
  	theme(axis.text.x = element_text(angle = 45, hjust = 1),panel.grid.major=element_blank(), panel.grid.minor= 	element_blank(), panel.border= element_blank(), panel.background= element_blank()) +#
  	labs(title= "TR Index Climate Correlations", x="State", y=expression(bold(paste("Correlation Value (r)"))))#
dev.off()
library(mgcv)#
library(ggplot2)#
library(car)#
library(reshape)#
library(dplR)#
library(DescTools)#
# Christy's GAMM code#
#
# gam1 <- gamm(Y ~  s(Biomass, bs="cr", k=3, by=PFT) + s(tair, k=k, by=PFT) + s(precipf, k=k, by=PFT) + s(CO2, k=k, by=PFT), random=list(PlotID=~1), data=data) #
#
# Loading in my data#
#
data.use <- read.csv("processed_data/AllSites_tree_plus_climate_and_BA.csv", header=T)#
#
data.use$group <- data.use$Species#
data.use$group <- recode(data.use$group, "'CAOV' = 'CARYA'; 'CACO' = 'CARYA'; #
  							'CATE' = 'CARYA'; 'ACSAC' = 'ACSA'; 'BEAL' = 'BETULA'; 'BELE' = 'BETULA'; 'QUMU' = 'QUAL'")#
#
data.use$group.plot <- as.factor(paste(data.use$group, data.use$PlotID, sep="."))#
#
data.use$Canopy.Class <- recode(data.use$Canopy.Class, "'C' = 'D'")#
summary(data.use)#
# reducing the amount of data for the test runs#
sites.use <- c("Harvard", "Howland", "Morgan Monroe State Park", "Oak Openings Toledo", "Missouri Ozark")#
#
test <- data.use[data.use$Site %in% sites.use & !is.na(data.use$RW) & !is.na(data.use$BA.inc),]#
summary(test)#
#
test$group.cc <- as.factor(paste(test$group, test$Canopy.Class, sep="."))#
summary(test)#
# Get a list of what predictors & responses I'm using#
predictors.all <- c("tmean", "precip", "Species", "dbh.recon", "Canopy.Class", "spp.plot", "group", "group.plot", "group.cc")#
#
# Getting rid of observations that have NAs in the important variables#
test <- test[complete.cases(test[,predictors.all]),]#
test <- test[test$Live.Dead=="LIVE" & !test$Canopy.Class=="F",]#
#
# Subsetting to a set of species that we have enough data to feel good about#
#species.use <- c("TSCA", "QURU", "ACRU", "BEAL", "ACSA", "LITU", "QUAL", "CAOV", "CACO", "CATE", "JUVI", "QUVE", "PCRU", "THOC", "PIST")#
group.use <- c("ACRU", "ACSA", "BETULA", "CARYA", "FAGR", "FRAX", "PIST", "QUAL", "QURU", "QUVE", "SAAL", "TSCA", "ULRU")#
#
test <- test[test$group %in% group.use,]#
#
summary(test)#
#
# Right now just looking at the dominant trees.  Not sure how to show this yet#
# test <- test[test$Canopy.Class=="D",]#
#
par(new=F)#
plot(test[test$TreeID=="MMA003", "BA.inc"]~ test[test$TreeID=="MMA003","Year"], type="l")#
summary(test)#
# Truncatign at 1950; at 1950 the sample depth for the oak openings is only 1#
test <- test[test$Year >= 1950 & test$Year <= 2012,]#
#
tree.rw <- test#
summary(tree.rw)#
#
summary(test)#
save(test, file="processed_data/test_tree_data_1950_2012.Rdata")#
#
sites.rw <- list()#
#
tree.rw$Year <- as.factor(tree.rw$Year)#
#
for(s in unique(tree.rw$Site)){#
	sites.rw[[s]] <- recast(tree.rw[tree.rw$Site==s,c("Year", "TreeID", "RW")], Year ~ TreeID)	#
}#
summary(sites.rw)#
#
save(sites.rw, file="processed_data/sites_rw.Rdata")#
summary(sites.rw[[4]])#
sites.rw#
# Making Indices of all the different sites using a 30 yr cubic smoothing spline#
sites.i <- list()#
#
for(s in names(sites.rw)){#
	sites.i[[s]] <- detrend(sites.rw[[s]][,2:ncol(sites.rw[[s]])], method="Spline", nyr=30)#
}#
summary(sites.i[[1]])#
#
# making chronologies for each site#
#
site.chron <- list()#
#
for(s in names(sites.i)){#
	site.chron[[s]] <- chron(sites.i[[s]][,2:ncol(sites.i[[s]])], prefix = substr(s, 1, 3), prewhiten = T) #
	site.chron[[s]][,"Year"]<- c(1950:2012) #
}#
#
summary(site.chron[[5]])#
# Making each site it's own dataframe#
harvard.crn <- as.data.frame(site.chron[[1]])#
#
howland.crn <- as.data.frame(site.chron[[2]])#
#
misso.crn <- as.data.frame(site.chron[[3]])#
#
mmf.crn <- as.data.frame(site.chron[[4]])#
#
oakop.crn <- as.data.frame(site.chron[[5]])#
# Plotting thigns for presentation#
par(cex=2 )#
plot(mmf.crn$Morres ~ mmf.crn$Year, type="l", lwd=5, axes=F, cex=6, col="white")#
abline(h=1,lty="dashed", col="white")#
axis(side =1,tck= 0.05) #
axis(side=2,tck=0.05)#
#
#Plotting out mmfsites#
summary(test)#
#
mmf <- test[test$Site %in% "Morgan Monroe State Park",]#
#
summary(mmf)#
#
for(i in unique(mmf$Year)){#
  mmf[mmf$Year==i,"Mean"] <- mean(mmf[mmf$Year==i,"RW"])#
  mmf[mmf$Year==i,"UB"] <- quantile(mmf[mmf$Year==i,"RW"], 0.975)#
  mmf[mmf$Year==i,"LB"] <- quantile(mmf[mmf$Year==i,"RW"], 0.025)#
}#
#
summary(mmf)#
#
ggplot(data=mmf)+#
  # geom_line(aes(x=Year, y=RW))#
  geom_ribbon(aes(x=Year, ymin=LB, ymax=UB), alpha=0.5, fill="white")+#
  geom_line(aes(x=Year, y=Mean), size=2, color="white")+#
  poster.theme2#
# Merging the residual chronologies back together#
sites.crn <- data.frame(Harvard = harvard.crn[, "Harres"], #
						Howland = howland.crn[,"Howres"], #
						Missouri = misso.crn[,"Misres"],#
						Morgan_Monroe = mmf.crn[,"Morres"], #
						Oak_openings = oakop.crn[,"Oakres"]#
						)#
#
summary(sites.crn)#
# Load in climate data#
#
climate.use <- read.csv("processed_data/climate_growing_season.csv")#
#
summary(climate.use)#
#
climate.use <- climate.use[climate.use$Site %in% sites.use,]#
climate.use <- climate.use[climate.use$Year>=1950 & climate.use$Year <=2012,]#
#
climate.site <- list()#
#
for(s in unique(climate.use$Site)){#
	climate.site[[s]] <- climate.use[climate.use$Site==s,]#
}#
#
summary(climate.site)#
save(climate.site, file="processed_data/sites_use_climate.Rdata")#
class(climate.site[[1]][,"Year"])#
#
head(climate.site[[1]])#
#
summary(climate.site[[1]])#
#
harv.clim <- climate.site[["Harvard"]][,c("tmean", "precip")]#
#
how.clim <- climate.site[["Howland"]][,c("tmean", "precip")]#
#
miss.clim <- climate.site[["Missouri Ozark"]][,c("tmean", "precip")]#
#
mmf.clim <- climate.site[["Morgan Monroe State Park"]][,c("tmean", "precip")]#
#
oak.clim <- climate.site[["Oak Openings Toledo"]][,c("tmean", "precip")]#
dim(harv.clim)#
dim(harvard.crn)#
#
# harvard#
harv.cor<- cor(harvard.crn, harv.clim[,c("tmean", "precip")], method="pearson")#
harvard <- data.frame(cor = c(harv.cor[1:2,"tmean"],  harv.cor[1:2,"precip"]),#
					  var = c("tmean", "tmean", "precip", "precip"))#
harvard$type <- c("std", "res")#
harvard$site <- "Harvard" #
# Howland#
how.cor <- cor(howland.crn, how.clim[,c("tmean", "precip")], method="pearson")#
how.cor#
#
howland <- data.frame(cor = c(how.cor[1:2,"tmean"],  how.cor[1:2,"precip"]),#
					  var = c("tmean", "tmean", "precip", "precip"))#
howland$type <- c("std", "res")#
howland$site <- "Howland" #
# Missouri#
mo.cor <- cor(misso.crn, miss.clim[,c("tmean", "precip")], method="pearson")#
mo.cor#
#
missouri <- data.frame(cor = c(mo.cor[1:2,"tmean"],  mo.cor[1:2,"precip"]),#
					  var = c("tmean", "tmean", "precip", "precip"))#
missouri$type <- c("std", "res")#
missouri$site <- "Missouri" #
#
# Morgan Monroe#
mmf.cor <- cor(mmf.crn, mmf.clim[,c("tmean", "precip")], method="pearson")#
mmf.cor#
#
morgan <- data.frame(cor = c(mmf.cor[1:2,"tmean"],  mmf.cor[1:2,"precip"]),#
					  var = c("tmean", "tmean", "precip", "precip"))#
morgan$type <- c("std", "res")#
morgan$site <- "Morgan-Monroe" #
#
# Oak openings#
oakop.cor <- cor(oakop.crn, oak.clim[,c("tmean", "precip")], method="pearson")#
oakop.cor#
#
oakop <- data.frame(cor = c(oakop.cor[1:2,"tmean"],  oakop.cor[1:2,"precip"]),#
					  var = c("tmean", "tmean", "precip", "precip"))#
oakop$type <- c("std", "res")#
oakop$site <- "Oak-Openings" #
#
# Merging standard chronologies into one file#
#
clim.cor <- merge(harvard, howland, all.x=T, all.y=T)#
clim.cor2 <- merge(clim.cor, missouri,all.x=T, all.y=T)#
clim.cor3 <- merge(clim.cor2, morgan,all.x=T, all.y=T)#
clim.cor4 <- merge(clim.cor3, oakop,all.x=T, all.y=T)#
#
summary(clim.cor4)#
clim.cor4$site <- as.factor(clim.cor4$site)#
clim.cor4$type <- as.factor(clim.cor4$type)#
clim.cor4$cor <- as.numeric(clim.cor4$cor)#
#
# Sig value for 81 df = 0.209#
clim.cor4$sig <- ifelse(clim.cor4$cor < -0.2245 | clim.cor4$cor > 0.2245, "Y", "N")#
clim.cor4$sig <- factor(clim.cor4$sig, levels = c("Y", "N"))#
#
clim.cor4$site <- factor(clim.cor4$site, levels = c("Missouri", "Morgan-Monroe", "Oak-Openings", "Harvard", "Howland"))#
#
clim.cor4$Site <- clim.cor4$site#
clim.cor4$Site <- recode(clim.cor4$Site, "'Missouri' = 'MO'; 'Morgan-Monroe' = 'IN'; 'Oak-Openings' = 'OH'; 'Harvard' = 'MA'; 'Howland' = 'ME'")#
clim.cor4$Site <- factor(clim.cor4$Site, levels = c("MO", "IN", "OH", "MA", "ME"))#
pdf("figures/site_correlations.pdf", width= 13, height = 8.5)#
ggplot(data=clim.cor4[clim.cor4$type=="std",]) + facet_grid(var~. , scales="free_x") +#
	geom_bar(aes(x=Site, y=cor, fill=sig), stat="identity", position="dodge", colour="black") +#
	geom_hline(yintercept=0.2245, linetype="dashed") + #
	geom_hline(yintercept=-0.2245, linetype="dashed") + 	#
	geom_hline(yintercept=0, linetype="solid") +#
	scale_fill_manual(values= c("green", "grey50")) + #
	poster.theme2#
dev.off()#
#
#######################################################################
# Gettign correlations for all for all of the available climate data data#
#######################################################################
# Loading in climate data#
t.mean <- read.csv("processed_data/ch2_tmean.csv", header=T)#
t.min <- read.csv("processed_data/ch2_tmin.csv", header=T)#
t.max <- read.csv("processed_data/ch2_tmax.csv", header=T)#
precip <- read.csv("processed_data/ch2_precip.csv", header=T)#
summary(t.mean)#
#
# Limiting time frame--1950-2012#
t.mean <- t.mean[t.mean$Year >= 1951 & t.mean$Year <= 2012,]#
t.min <- t.min[t.min$Year >= 1951 & t.min$Year <= 2012,]#
t.max <- t.max[t.max$Year >= 1951 & t.max$Year <= 2012,]#
precip <- precip[precip$Year >= 1951 & precip$Year <= 2012,]#
summary(t.mean)#
summary(t.min)#
summary(t.max)#
summary(precip)#
#
head(t.mean)#
unique(t.mean$Site.Name)#
#
t.mean$Site.Name <- recode(t.mean$Site.Name, "'Missouri Ozark' = 'Missouri'; 'Morgan Monroe State Park'='Morgan_Monroe'; 'Oak Openings Toledo' = 'Oak_openings'")#
#
t.min$Site.Name <- recode(t.min$Site.Name, "'Missouri Ozark' = 'Missouri'; 'Morgan Monroe State Park'='Morgan_Monroe'; 'Oak Openings Toledo' = 'Oak_openings'")#
t.max$Site.Name <- recode(t.max$Site.Name, "'Missouri Ozark' = 'Missouri'; 'Morgan Monroe State Park'='Morgan_Monroe'; 'Oak Openings Toledo' = 'Oak_openings'")#
precip$Site.Name <- recode(precip$Site.Name, "'Missouri Ozark' = 'Missouri'; 'Morgan Monroe State Park'='Morgan_Monroe'; 'Oak Openings Toledo' = 'Oak_openings'")#
# getting the ring widths in a data frame#
summary(sites.crn)#
sites.crn$Year <- site.chron[[1]][,"Year"]#
head(sites.crn)#
sites.crn <- sites.crn[sites.crn$Year > 1950,]#
#--------------------------------------------#
# Tmean correlation#
#--------------------------------------------#
#
sites <- c("Harvard", "Howland", "Missouri", "Morgan_Monroe", "Oak_openings")#
#
tmean.corr<-list()#
#
for(i in sites){#
	tmean.corr[[i]] <- cor(sites.crn[,i], t.mean[t.mean$Site.Name %in% i,!names(t.mean) %in% c("Site.Name", "Year")], method="pearson")#
}#
summary(tmean.corr)#
#
# Making each site it's own dataframe#
harvard.tmean <- as.data.frame(tmean.corr[[1]])#
#
harvard.tmean.stack <- stack(harvard.tmean)#
names(harvard.tmean.stack)<- c("cor", "month")#
harvard.tmean.stack$Site <- as.factor("Harvard")#
harvard.tmean.stack$type <- as.factor("tmean")#
#
howland.tmean <- as.data.frame(tmean.corr[[2]])#
#
howland.tmean.stack <- stack(howland.tmean)#
names(howland.tmean.stack)<- c("cor", "month")#
howland.tmean.stack$Site <- as.factor("Howland")#
howland.tmean.stack$type <- as.factor("tmean")#
#
mo.tmean <- as.data.frame(tmean.corr[[3]])#
#
mo.tmean.stack <- stack(mo.tmean)#
names(mo.tmean.stack)<- c("cor", "month")#
mo.tmean.stack$Site <- as.factor("Missouri")#
mo.tmean.stack$type <- as.factor("tmean")#
#
mmf.tmean <- as.data.frame(tmean.corr[[4]])#
#
mmf.tmean.stack <- stack(mmf.tmean)#
names(mmf.tmean.stack)<- c("cor", "month")#
mmf.tmean.stack$Site <- as.factor("MMF")#
mmf.tmean.stack$type <- as.factor("tmean")#
#
oakop.tmean <- as.data.frame(tmean.corr[[5]])#
#
oakop.tmean.stack <- stack(oakop.tmean)#
names(oakop.tmean.stack)<- c("cor", "month")#
oakop.tmean.stack$Site <- as.factor("Oak_openings")#
oakop.tmean.stack$type <- as.factor("tmean")#
#
all.sites.tmean <- rbind(harvard.tmean.stack, howland.tmean.stack, mo.tmean.stack, mmf.tmean.stack, oakop.tmean.stack)#
#
summary(all.sites.tmean)#
#
#--------------------------------------------#
# Tmin correlation#
#--------------------------------------------#
#
sites <- c("Harvard", "Howland", "Missouri", "Morgan_Monroe", "Oak_openings")#
#
tmin.corr<-list()#
#
for(i in sites){#
	tmin.corr[[i]] <- cor(sites.crn[,i], t.min[t.min$Site.Name %in% i,!names(t.min) %in% c("Site.Name", "Year")], method="pearson")#
}#
summary(tmin.corr)#
#
# Making each site it's own dataframe#
harvard.tmin <- as.data.frame(tmin.corr[[1]])#
#
harvard.tmin.stack <- stack(harvard.tmin)#
names(harvard.tmin.stack)<- c("cor", "month")#
harvard.tmin.stack$Site <- as.factor("Harvard")#
harvard.tmin.stack$type <- as.factor("tmin")#
#
howland.tmin <- as.data.frame(tmin.corr[[2]])#
#
howland.tmin.stack <- stack(howland.tmin)#
names(howland.tmin.stack)<- c("cor", "month")#
howland.tmin.stack$Site <- as.factor("Howland")#
howland.tmin.stack$type <- as.factor("tmin")#
#
mo.tmin <- as.data.frame(tmin.corr[[3]])#
#
mo.tmin.stack <- stack(mo.tmin)#
names(mo.tmin.stack)<- c("cor", "month")#
mo.tmin.stack$Site <- as.factor("Missouri")#
mo.tmin.stack$type <- as.factor("tmin")#
#
mmf.tmin <- as.data.frame(tmin.corr[[4]])#
#
mmf.tmin.stack <- stack(mmf.tmin)#
names(mmf.tmin.stack)<- c("cor", "month")#
mmf.tmin.stack$Site <- as.factor("MMF")#
mmf.tmin.stack$type <- as.factor("tmin")#
#
oakop.tmin <- as.data.frame(tmin.corr[[5]])#
#
oakop.tmin.stack <- stack(oakop.tmin)#
names(oakop.tmin.stack)<- c("cor", "month")#
oakop.tmin.stack$Site <- as.factor("Oak_openings")#
oakop.tmin.stack$type <- as.factor("tmin")#
#
all.sites.tmin <- rbind(harvard.tmin.stack, howland.tmin.stack, mo.tmin.stack, mmf.tmin.stack, oakop.tmin.stack)#
#
summary(all.sites.tmin)#
#--------------------------------------------#
# Tmax correlation#
#--------------------------------------------#
#
sites <- c("Harvard", "Howland", "Missouri", "Morgan_Monroe", "Oak_openings")#
#
tmax.corr<-list()#
#
for(i in sites){#
	tmax.corr[[i]] <- cor(sites.crn[,i], t.max[t.max$Site.Name %in% i,!names(t.max) %in% c("Site.Name", "Year")], method="pearson")#
}#
summary(tmax.corr)#
#
# Making each site it's own dataframe#
harvard.tmax <- as.data.frame(tmax.corr[[1]])#
#
harvard.tmax.stack <- stack(harvard.tmax)#
names(harvard.tmax.stack)<- c("cor", "month")#
harvard.tmax.stack$Site <- as.factor("Harvard")#
harvard.tmax.stack$type <- as.factor("tmax")#
#
howland.tmax <- as.data.frame(tmax.corr[[2]])#
#
howland.tmax.stack <- stack(howland.tmax)#
names(howland.tmax.stack)<- c("cor", "month")#
howland.tmax.stack$Site <- as.factor("Howland")#
howland.tmax.stack$type <- as.factor("tmax")#
#
mo.tmax <- as.data.frame(tmax.corr[[3]])#
#
mo.tmax.stack <- stack(mo.tmax)#
names(mo.tmax.stack)<- c("cor", "month")#
mo.tmax.stack$Site <- as.factor("Missouri")#
mo.tmax.stack$type <- as.factor("tmax")#
#
mmf.tmax <- as.data.frame(tmax.corr[[4]])#
#
mmf.tmax.stack <- stack(mmf.tmax)#
names(mmf.tmax.stack)<- c("cor", "month")#
mmf.tmax.stack$Site <- as.factor("MMF")#
mmf.tmax.stack$type <- as.factor("tmax")#
#
oakop.tmax <- as.data.frame(tmax.corr[[5]])#
#
oakop.tmax.stack <- stack(oakop.tmax)#
names(oakop.tmax.stack)<- c("cor", "month")#
oakop.tmax.stack$Site <- as.factor("Oak_openings")#
oakop.tmax.stack$type <- as.factor("tmax")#
#
all.sites.tmax <- rbind(harvard.tmax.stack, howland.tmax.stack, mo.tmax.stack, mmf.tmax.stack, oakop.tmax.stack)#
#
summary(all.sites.tmax)#
#--------------------------------------------#
# Precip correlation#
#--------------------------------------------#
sites <- c("Harvard", "Howland", "Missouri", "Morgan_Monroe", "Oak_openings")#
#
precip.corr<-list()#
#
for(i in sites){#
	precip.corr[[i]] <- cor(sites.crn[,i], precip[precip$Site.Name %in% i,!names(precip) %in% c("Site.Name", "Year")], method="pearson")#
}#
summary(precip.corr)#
#
# Making each site it's own dataframe#
harvard.precip <- as.data.frame(precip.corr[[1]])#
#
harvard.precip.stack <- stack(harvard.precip)#
names(harvard.precip.stack)<- c("cor", "month")#
harvard.precip.stack$Site <- as.factor("Harvard")#
harvard.precip.stack$type <- as.factor("precip")#
#
howland.precip <- as.data.frame(precip.corr[[2]])#
#
howland.precip.stack <- stack(howland.precip)#
names(howland.precip.stack)<- c("cor", "month")#
howland.precip.stack$Site <- as.factor("Howland")#
howland.precip.stack$type <- as.factor("precip")#
#
mo.precip <- as.data.frame(precip.corr[[3]])#
#
mo.precip.stack <- stack(mo.precip)#
names(mo.precip.stack)<- c("cor", "month")#
mo.precip.stack$Site <- as.factor("Missouri")#
mo.precip.stack$type <- as.factor("precip")#
#
mmf.precip <- as.data.frame(precip.corr[[4]])#
#
mmf.precip.stack <- stack(mmf.precip)#
names(mmf.precip.stack)<- c("cor", "month")#
mmf.precip.stack$Site <- as.factor("MMF")#
mmf.precip.stack$type <- as.factor("precip")#
#
oakop.precip <- as.data.frame(precip.corr[[5]])#
#
oakop.precip.stack <- stack(oakop.precip)#
names(oakop.precip.stack)<- c("cor", "month")#
oakop.precip.stack$Site <- as.factor("Oak_openings")#
oakop.precip.stack$type <- as.factor("precip")#
#
all.sites.precip <- rbind(harvard.precip.stack, howland.precip.stack, mo.precip.stack, mmf.precip.stack, oakop.precip.stack)#
#
summary(all.sites.precip)#
#
# Merging all stacked dataframes together to make plotting easier#
#
all.sites.climate <- rbind(all.sites.precip, all.sites.tmax, all.sites.tmin, all.sites.tmean)#
summary(all.sites.climate)#
#
# Sig value for 75 df = 0.2245#
all.sites.climate$sig <- ifelse(all.sites.climate$cor < -0.2245 | all.sites.climate$cor > 0.2245, "Y", "N")#
all.sites.climate$sig <- factor(all.sites.climate$sig, levels = c("Y", "N"))#
all.sites.climate$month <- factor(all.sites.climate$month, levels = c("pJan", "pFeb", "pMar", "pApr", "pMay", "pJun", "pJul", "pAug", "pSep", "pOct", "pNov", "pDec", "Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec", "pfall", "winter", "spring", "summer", "grow.seas"))#
#
all.sites.climate$Site <- factor(all.sites.climate$Site, levels = c("Missouri", "MMF", "Oak_openings", "Harvard", "Howland"))#
#
pdf("figures/site_correlations_allmonths_short.pdf", width= 13, height = 8.5)#
ggplot(data=all.sites.climate[all.sites.climate$month %in% c("pOct", "pNov", "pDec", "Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec", "spring", "summer", "pfall", "winter", "grow.seas"),]) + facet_grid(Site ~ type ) +#
	geom_bar(aes(x=month, y=cor, fill=sig), stat="identity", position="dodge", colour="black") +#
	geom_hline(yintercept=0.2245, linetype="dashed") + #
	geom_hline(yintercept=-0.2245, linetype="dashed") + 	#
	geom_hline(yintercept=0, linetype="solid") +#
	scale_fill_manual(values= c("green", "grey50"))+#
	theme(axis.text.x = element_text(angle = 45, hjust = 1))#
dev.off()#
#
summary(all.sites.climate$month)#
#
all.sites.gs <- all.sites.climate[all.sites.climate$month=="grow.seas",]#
summary(all.sites.gs)#
#
cbbPalette <- c("#009E73", "#e79f00", "#9ad0f3", "#0072B2", "#D55E00")#
#
all.sites.climate$type <- factor(all.sites.climate$type, levels=c("tmean", "precip", "tmin", "tmax"))#
pdf("figures/site_correlations_growing season.pdf", width= 13, height = 8.5)#
ggplot(data=all.sites.climate[all.sites.climate$month %in% "grow.seas" & all.sites.climate$type %in% c("tmean", "precip"),]) + facet_grid(~type) +#
  geom_bar(aes(x=month, y=cor, color=Site), stat="identity", position="dodge", fill=NA) + ylim(-0.6,0.6)+#
  geom_bar(aes(x=month, y=cor, color=Site), stat="identity", position="dodge", fill=NA) +ylim(-0.6,0.6)+#
  geom_bar(aes(x=month, y=cor, fill=Site, alpha=sig), stat="identity", position="dodge") +ylim(-0.6,0.6)+#
  geom_hline(yintercept=0.2245, linetype="dashed") + #
  geom_hline(yintercept=-0.2245, linetype="dashed") + 	#
  geom_hline(yintercept=0, linetype="solid") +#
 # scale_fill_manual(values= cbbPalette)+#
  scale_color_manual(values=cbbPalette) +#
  scale_fill_manual(values=cbbPalette) +#
  scale_alpha_manual(values = c(1, 0.2))+#
  poster.theme2 +#
  theme(axis.text.x = element_text(angle = 45, hjust = 1),panel.grid.major=element_blank(), panel.grid.minor= element_blank(), panel.border= element_blank(), panel.background= element_blank()) +#
  labs(title= "TR Site Climate Correlations", x="Seasons", y=expression(bold(paste("Correlation Value (r)"))))#
#
dev.off()#
#
#################################################################################
# Running correlations on the individual indices to get the full spread of the #
#################################################################################
#
all.sites.gs <- all.sites.climate[all.sites.climate$month=="grow.seas",]#
summary(all.sites.gs)#
#
all.sites.gs$State <- recode(all.sites.gs$Site, "'Missouri'='MO';'MMF'='IN';'Oak_openings'='OH';'Harvard'='MA';'Howland'='ME'")#
all.sites.gs$series <- as.factor("chron")#
summary(all.sites.gs)#
#
summary(climate.site$Howland[,])#
head(sites.i$Howland)#
#
summary(sites.i)#
index.cor.temp <- sites.i#
index.cor.precip <- sites.i#
#
test <- sites.i#
meow <- test#
#
# Running correlations fro Tmean and Precip on individual indices#
for(s in names(sites.i)){#
	for(i in names(sites.i[[s]])){#
		index.cor.temp[[s]][,i] <- cor(sites.i[[s]][,i], climate.site[[s]][,"tmean"], method="pearson")#
	}#
}	#
#
test <- cor(sites.i[["Harvard"]][,c(1:10)], climate.site[["Harvard"]][,"tmean"], method="pearson")#
for(s in names(sites.i)){#
	for(i in names(sites.i[[s]])){#
		index.cor.precip[[s]][,i] <- cor(sites.i[[s]][,i], climate.site[[s]][,"precip"], method="pearson") #
	}#
}	#
summary(index.cor.precip)#
#
# Now need to merge everything into one stacked file to be used with ggplot 2#
#
test <- data.frame()#
#
# Need to break it down by site#
#
# Harvard#
har.precip.stack <- stack(index.cor.precip[["Harvard"]])#
names(har.precip.stack)<- c("cor", "TreeID")#
har.precip.stack$State <- as.factor("MA")#
har.precip.stack$type <- as.factor("precip")#
summary(har.precip.stack)#
#
har.temp.stack <- stack(index.cor.temp[["Harvard"]])#
names(har.temp.stack)<- c("cor", "TreeID")#
har.temp.stack$State <- as.factor("MA")#
har.temp.stack$type <- as.factor("tmean")#
summary(har.temp.stack)#
#
har.stack <- merge(har.temp.stack, har.precip.stack, all.x=T, all.y=T)#
summary(har.stack)#
#
# Howland#
#
how.precip.stack <- stack(index.cor.precip[["Howland"]])#
names(how.precip.stack)<- c("cor", "TreeID")#
how.precip.stack$State <- as.factor("ME")#
how.precip.stack$type <- as.factor("precip")#
summary(how.precip.stack)#
#
how.temp.stack <- stack(index.cor.temp[["Howland"]])#
names(how.temp.stack)<- c("cor", "TreeID")#
how.temp.stack$State <- as.factor("ME")#
how.temp.stack$type <- as.factor("tmean")#
summary(how.temp.stack)#
#
how.stack <- merge(how.temp.stack, how.precip.stack, all.x=T, all.y=T)#
summary(how.stack)#
#
# Missouri#
#
mo.precip.stack <- stack(index.cor.precip[["Missouri Ozark"]])#
names(mo.precip.stack)<- c("cor", "TreeID")#
mo.precip.stack$State <- as.factor("MO")#
mo.precip.stack$type <- as.factor("precip")#
summary(mo.precip.stack)#
#
mo.temp.stack <- stack(index.cor.temp[["Missouri Ozark"]])#
names(mo.temp.stack)<- c("cor", "TreeID")#
mo.temp.stack$State <- as.factor("MO")#
mo.temp.stack$type <- as.factor("tmean")#
summary(mo.temp.stack)#
#
mo.stack <- merge(mo.temp.stack, mo.precip.stack, all.x=T, all.y=T)#
summary(mo.stack)#
# MMF#
#
mmf.precip.stack <- stack(index.cor.precip[["Morgan Monroe State Park"]])#
names(mmf.precip.stack)<- c("cor", "TreeID")#
mmf.precip.stack$State <- as.factor("IN")#
mmf.precip.stack$type <- as.factor("precip")#
summary(mmf.precip.stack)#
#
mmf.temp.stack <- stack(index.cor.temp[["Morgan Monroe State Park"]])#
names(mmf.temp.stack)<- c("cor", "TreeID")#
mmf.temp.stack$State <- as.factor("IN")#
mmf.temp.stack$type <- as.factor("tmean")#
summary(mmf.temp.stack)#
#
mmf.stack <- merge(mmf.temp.stack, mmf.precip.stack, all.x=T, all.y=T)#
summary(mmf.stack)#
# Oak Openings#
#
oak.precip.stack <- stack(index.cor.precip[["Oak Openings Toledo"]])#
names(oak.precip.stack)<- c("cor", "TreeID")#
oak.precip.stack$State <- as.factor("OH")#
oak.precip.stack$type <- as.factor("precip")#
summary(oak.precip.stack)#
#
oak.temp.stack <- stack(index.cor.temp[["Oak Openings Toledo"]])#
names(oak.temp.stack)<- c("cor", "TreeID")#
oak.temp.stack$State <- as.factor("OH")#
oak.temp.stack$type <- as.factor("tmean")#
summary(oak.temp.stack)#
#
oak.stack <- merge(oak.temp.stack, oak.precip.stack, all.x=T, all.y=T)#
summary(oak.stack)#
#
cor.all.stack <- rbind(har.stack, how.stack, mmf.stack, oak.stack, mo.stack)#
summary(cor.all.stack)#
#
# Calculating Tukey Biweight Robust mean#
#
for(s in unique(cor.all.stack$State)){#
	for(t in unique(cor.all.stack$type)){#
	cor.all.stack[cor.all.stack$State==s & cor.all.stack$type==t,"biweight.mean"] <- TukeyBiweight(cor.all.stack[cor.all.stack$State==s & cor.all.stack$type==t,"cor"], na.rm=T)#
	}#
}#
summary(cor.all.stack)#
#
# creating a significance column#
cor.all.stack$sig <- ifelse(cor.all.stack$cor < -0.2245 | cor.all.stack$cor > 0.2245, "Y", "N")#
cor.all.stack$sig <- factor(cor.all.stack$sig, levels = c("Y", "N"))#
#
cor.all.stack$State <- factor(cor.all.stack$State, levels=c("MO", "IN", "OH", "MA", "ME"))#
summary(cor.all.stack)#
#
cor.all.stack$type <- factor(cor.all.stack$type, levels = c("precip", "tmean"))#
cor.all.stack$series <- as.factor("index")#
#
summary(all.sites.gs)#
summary(cor.all.stack)#
#
summary(cor.all.stack[is.na(cor.all.stack$cor),])#
#
pdf("figures/violin_climate_cor.pdf", height=8, width=13)#
ggplot(data=cor.all.stack) + facet_grid(~type)+#
#
	geom_violin(aes(x=State, y=cor, fill=State), adjust = 2, trim=T) + ylim(-0.6,0.6)+#
	geom_point(data=all.sites.gs[all.sites.gs$type %in% c("precip", "tmean"),],aes(x=State, y=cor), shape=126, size=25)+ ylim(-0.6,0.6)+#
	geom_point(aes(x=State, y=biweight.mean), shape=95, size=25)+ ylim(-0.6,0.6)+#
	geom_hline(yintercept=0.2245, linetype="dashed") + #
  	geom_hline(yintercept=-0.2245, linetype="dashed") + 	#
  	geom_hline(yintercept=0, linetype="solid") +#
#
	scale_color_manual(values=cbbPalette) +#
  	scale_fill_manual(values=cbbPalette) +#
  	poster.theme2 +#
  	theme(axis.text.x = element_text(angle = 45, hjust = 1),panel.grid.major=element_blank(), panel.grid.minor= 	element_blank(), panel.border= element_blank(), panel.background= element_blank()) +#
  	labs(title= "TR Index Climate Correlations", x="State", y=expression(bold(paste("Correlation Value (r)"))))#
dev.off()
# Loading in all index-level correlations#
#
load("processed_data/All_climate_corrs.Rdata")#
load("processed_data/Dominant_climate_corrs.Rdata")#
load("processed_data/Intermediate_climate_corrs.Rdata")#
load("processed_data/Suppressed_climate_corrs.Rdata")#
#
# combinings all data.frames into one object#
index.cor <- rbind(all.cor.stack, dom.cor.stack, int.cor.stack, sup.cor.stack)#
summary(index.chron)#
#
load("processed_data/All_gs_chron_corrs.Rdata")#
load("processed_data/Dominant_gs_chron_corrs.Rdata")#
load("processed_data/Intermediate_gs_chron_corrs.Rdata")#
load("processed_data/Suppressed_gs_chron_corrs.Rdata")
summary(index.cor)
load("processed_data/All_gs_chron_corrs.Rdata")#
load("processed_data/Dominant_gs_chron_corrs.Rdata")#
load("processed_data/Intermediate_gs_chron_corrs.Rdata")#
load("processed_data/Suppressed_gs_chron_corrs.Rdata")
ls()
chron.cor <- rbind(all.sites.cor, dom.sites.cor, int.sites.cor, sup.sites.cor)
chron.cor <- rbind(all.sites.gs, dom.sites.gs, int.sites.gs, sup.sites.gs)
summary(chron.cor)
ggplot(data=index.cor) + facet_grid(~type)+#
#
	geom_violin(aes(x=Canopy.Class, y=cor, fill=State), adjust = 2, trim=T) + ylim(-0.6,0.6)+#
	# geom_point(data=all.sites.gs[all.sites.gs$type %in% c("precip", "tmean"),],aes(x=State, y=cor), shape=126, size=25)+ ylim(-0.6,0.6)+#
	geom_point(aes(x=State, y=biweight.mean), shape=95, size=25)+ ylim(-0.6,0.6)+#
	geom_hline(yintercept=0.2245, linetype="dashed") + #
  	geom_hline(yintercept=-0.2245, linetype="dashed") + 	#
  	geom_hline(yintercept=0, linetype="solid") +#
#
	scale_color_manual(values=cbbPalette) +#
  	scale_fill_manual(values=cbbPalette) +#
  	poster.theme2 +#
  	theme(axis.text.x = element_text(angle = 45, hjust = 1),panel.grid.major=element_blank(), panel.grid.minor= 	element_blank(), panel.border= element_blank(), panel.background= element_blank()) +#
  	labs(title= "TR Index Climate Correlations", x="State", y=expression(bold(paste("Correlation Value (r)"))))#
# dev.off()
library(ggplot2)
source(poster_theme.R)
# poster_theme.R
source("poster_theme.R")
ggplot(data=index.cor) + facet_grid(~type)+#
#
	geom_violin(aes(x=Canopy.Class, y=cor, fill=State), adjust = 2, trim=T) + ylim(-0.6,0.6)+#
	# geom_point(data=all.sites.gs[all.sites.gs$type %in% c("precip", "tmean"),],aes(x=State, y=cor), shape=126, size=25)+ ylim(-0.6,0.6)+#
	geom_point(aes(x=State, y=biweight.mean), shape=95, size=25)+ ylim(-0.6,0.6)+#
	geom_hline(yintercept=0.2245, linetype="dashed") + #
  	geom_hline(yintercept=-0.2245, linetype="dashed") + 	#
  	geom_hline(yintercept=0, linetype="solid") +#
#
	scale_color_manual(values=cbbPalette) +#
  	scale_fill_manual(values=cbbPalette) +#
  	poster.theme2 +#
  	theme(axis.text.x = element_text(angle = 45, hjust = 1),panel.grid.major=element_blank(), panel.grid.minor= 	element_blank(), panel.border= element_blank(), panel.background= element_blank()) +#
  	labs(title= "TR Index Climate Correlations", x="State", y=expression(bold(paste("Correlation Value (r)"))))#
# dev.off()
cbbPalette <- c("#009E73", "#e79f00", "#9ad0f3", "#0072B2", "#D55E00")
ggplot(data=index.cor) + facet_grid(~type)+#
#
	geom_violin(aes(x=Canopy.Class, y=cor, fill=State), adjust = 2, trim=T) + ylim(-0.6,0.6)+#
	# geom_point(data=all.sites.gs[all.sites.gs$type %in% c("precip", "tmean"),],aes(x=State, y=cor), shape=126, size=25)+ ylim(-0.6,0.6)+#
	geom_point(aes(x=State, y=biweight.mean), shape=95, size=25)+ ylim(-0.6,0.6)+#
	geom_hline(yintercept=0.2245, linetype="dashed") + #
  	geom_hline(yintercept=-0.2245, linetype="dashed") + 	#
  	geom_hline(yintercept=0, linetype="solid") +#
#
	scale_color_manual(values=cbbPalette) +#
  	scale_fill_manual(values=cbbPalette) +#
  	poster.theme2 +#
  	theme(axis.text.x = element_text(angle = 45, hjust = 1),panel.grid.major=element_blank(), panel.grid.minor= 	element_blank(), panel.border= element_blank(), panel.background= element_blank()) +#
  	labs(title= "TR Index Climate Correlations", x="State", y=expression(bold(paste("Correlation Value (r)"))))#
# dev.off()
ggplot(data=index.cor) + facet_grid(type~.)+#
#
	geom_violin(aes(x=Canopy.Class, y=cor, fill=State), adjust = 2, trim=T) + ylim(-0.6,0.6)+#
	# geom_point(data=all.sites.gs[all.sites.gs$type %in% c("precip", "tmean"),],aes(x=State, y=cor), shape=126, size=25)+ ylim(-0.6,0.6)+#
	geom_point(aes(x=State, y=biweight.mean), shape=95, size=25)+ ylim(-0.6,0.6)+#
	geom_hline(yintercept=0.2245, linetype="dashed") + #
  	geom_hline(yintercept=-0.2245, linetype="dashed") + 	#
  	geom_hline(yintercept=0, linetype="solid") +#
#
	scale_color_manual(values=cbbPalette) +#
  	scale_fill_manual(values=cbbPalette) +#
  	poster.theme2 +#
  	theme(axis.text.x = element_text(angle = 45, hjust = 1),panel.grid.major=element_blank(), panel.grid.minor= 	element_blank(), panel.border= element_blank(), panel.background= element_blank()) +#
  	labs(title= "TR Index Climate Correlations", x="State", y=expression(bold(paste("Correlation Value (r)"))))#
# dev.off()
ggplot(data=index.cor) + facet_grid(type~.)+#
#
	geom_violin(aes(x=Canopy.Class, y=cor, fill=State), adjust = 2, trim=T) + ylim(-0.6,0.6)+#
	# geom_point(data=all.sites.gs[all.sites.gs$type %in% c("precip", "tmean"),],aes(x=State, y=cor), shape=126, size=25)+ ylim(-0.6,0.6)+#
	geom_point(aes(x=Canopy.Class, y=biweight.mean), shape=95, size=25)+ ylim(-0.6,0.6)+#
	geom_hline(yintercept=0.2245, linetype="dashed") + #
  	geom_hline(yintercept=-0.2245, linetype="dashed") + 	#
  	geom_hline(yintercept=0, linetype="solid") +#
#
	scale_color_manual(values=cbbPalette) +#
  	scale_fill_manual(values=cbbPalette) +#
  	poster.theme2 +#
  	theme(axis.text.x = element_text(angle = 45, hjust = 1),panel.grid.major=element_blank(), panel.grid.minor= 	element_blank(), panel.border= element_blank(), panel.background= element_blank()) +#
  	labs(title= "TR Index Climate Correlations", x="State", y=expression(bold(paste("Correlation Value (r)"))))
ggplot(data=index.cor) + facet_grid(type~.)+
geom_point(aes(x=Canopy.Class*State , y=biweight.mean), shape=95, size=25)+ ylim(-0.6,0.6)+#
	geom_hline(yintercept=0.2245, linetype="dashed") + #
  	geom_hline(yintercept=-0.2245, linetype="dashed") + 	#
  	geom_hline(yintercept=0, linetype="solid") +#
#
	scale_color_manual(values=cbbPalette) +#
  	scale_fill_manual(values=cbbPalette) +#
  	poster.theme2 +#
  	theme(axis.text.x = element_text(angle = 45, hjust = 1),panel.grid.major=element_blank(), panel.grid.minor= 	element_blank(), panel.border= element_blank(), panel.background= element_blank()) +#
  	labs(title= "TR Index Climate Correlations", x="State", y=expression(bold(paste("Correlation Value (r)"))))#
# dev.off()
ggplot(data=index.cor) + facet_grid(type~State)+#
#
	geom_violin(aes(x=Canopy.Class, y=cor, fill=State), adjust = 2, trim=T) + ylim(-0.6,0.6)+#
	# geom_point(data=all.sites.gs[all.sites.gs$type %in% c("precip", "tmean"),],aes(x=State, y=cor), shape=126, size=25)+ ylim(-0.6,0.6)+#
	geom_point(aes(x=Canopy.ClassState , y=biweight.mean), shape=95, size=25)+ ylim(-0.6,0.6)+#
	geom_hline(yintercept=0.2245, linetype="dashed") + #
  	geom_hline(yintercept=-0.2245, linetype="dashed") + 	#
  	geom_hline(yintercept=0, linetype="solid") +#
#
	scale_color_manual(values=cbbPalette) +#
  	scale_fill_manual(values=cbbPalette) +#
  	poster.theme2 +#
  	theme(axis.text.x = element_text(angle = 45, hjust = 1),panel.grid.major=element_blank(), panel.grid.minor= 	element_blank(), panel.border= element_blank(), panel.background= element_blank()) +#
  	labs(title= "TR Index Climate Correlations", x="State", y=expression(bold(paste("Correlation Value (r)"))))#
# dev.off()
ggplot(data=index.cor) + facet_grid(type~State)+#
#
	geom_violin(aes(x=Canopy.Class, y=cor, fill=State), adjust = 2, trim=T) + ylim(-0.6,0.6)+#
	# geom_point(data=all.sites.gs[all.sites.gs$type %in% c("precip", "tmean"),],aes(x=State, y=cor), shape=126, size=25)+ ylim(-0.6,0.6)+#
	geom_point(aes(x=Canopy.Class , y=biweight.mean), shape=95, size=25)+ ylim(-0.6,0.6)+#
	geom_hline(yintercept=0.2245, linetype="dashed") + #
  	geom_hline(yintercept=-0.2245, linetype="dashed") + 	#
  	geom_hline(yintercept=0, linetype="solid") +#
#
	scale_color_manual(values=cbbPalette) +#
  	scale_fill_manual(values=cbbPalette) +#
  	poster.theme2 +#
  	theme(axis.text.x = element_text(angle = 45, hjust = 1),panel.grid.major=element_blank(), panel.grid.minor= 	element_blank(), panel.border= element_blank(), panel.background= element_blank()) +#
  	labs(title= "TR Index Climate Correlations", x="State", y=expression(bold(paste("Correlation Value (r)"))))#
# dev.off()
ggplot(data=index.cor) + facet_grid(type~State)+#
#
	geom_violin(aes(x=Canopy.Class, y=cor, fill=State), adjust = 2, trim=T) + ylim(-0.6,0.6)+#
	# geom_point(data=all.sites.gs[all.sites.gs$type %in% c("precip", "tmean"),],aes(x=State, y=cor), shape=126, size=25)+ ylim(-0.6,0.6)+#
	geom_point(aes(x=Canopy.Class , y=biweight.mean), shape=95, size=15)+ ylim(-0.6,0.6)+#
	geom_hline(yintercept=0.2245, linetype="dashed") + #
  	geom_hline(yintercept=-0.2245, linetype="dashed") + 	#
  	geom_hline(yintercept=0, linetype="solid") +#
#
	scale_color_manual(values=cbbPalette) +#
  	scale_fill_manual(values=cbbPalette) +#
  	poster.theme2 +#
  	theme(axis.text.x = element_text(angle = 45, hjust = 1),panel.grid.major=element_blank(), panel.grid.minor= 	element_blank(), panel.border= element_blank(), panel.background= element_blank()) +#
  	labs(title= "TR Index Climate Correlations", x="State", y=expression(bold(paste("Correlation Value (r)"))))
ggplot(data=index.cor) + facet_grid(type~State)+#
#
	geom_violin(aes(x=Canopy.Class, y=cor, fill=State), adjust = 2, trim=T) + ylim(-0.6,0.6)+#
	# geom_point(data=chron.cor[chron.cor$type %in% c("precip", "tmean"),],aes(x=Canopy.Class, y=cor), shape=126, size=25)+ ylim(-0.6,0.6)+#
	geom_point(aes(x=Canopy.Class , y=biweight.mean), shape=95, size=15)+ ylim(-0.6,0.6)+#
	geom_hline(yintercept=0.246, linetype="dashed") + #
  	geom_hline(yintercept=-0.246, linetype="dashed") + 	#
  	geom_hline(yintercept=0, linetype="solid") +#
#
	scale_color_manual(values=cbbPalette) +#
  	scale_fill_manual(values=cbbPalette) +#
  	poster.theme2 +#
  	theme(axis.text.x = element_text(angle = 45, hjust = 1),panel.grid.major=element_blank(), panel.grid.minor= 	element_blank(), panel.border= element_blank(), panel.background= element_blank()) +#
  	labs(title= "TR Index Climate Correlations", x="State", y=expression(bold(paste("Correlation Value (r)"))))
ggplot(data=index.cor) + facet_grid(type~State)+#
#
	geom_violin(aes(x=Canopy.Class, y=cor, fill=State), adjust = 2, trim=T) + ylim(-0.6,0.6)+#
	geom_point(data=chron.cor[chron.cor$type %in% c("precip", "tmean"),],aes(x=Canopy.Class, y=cor), shape=42, size=25)+ ylim(-0.6,0.6)+#
	geom_point(aes(x=Canopy.Class , y=biweight.mean), shape=95, size=15)+ ylim(-0.6,0.6)+#
	geom_hline(yintercept=0.246, linetype="dashed") + #
  	geom_hline(yintercept=-0.246, linetype="dashed") + 	#
  	geom_hline(yintercept=0, linetype="solid") +#
#
	scale_color_manual(values=cbbPalette) +#
  	scale_fill_manual(values=cbbPalette) +#
  	poster.theme2 +#
  	theme(axis.text.x = element_text(angle = 45, hjust = 1),panel.grid.major=element_blank(), panel.grid.minor= 	element_blank(), panel.border= element_blank(), panel.background= element_blank()) +#
  	labs(title= "TR Index Climate Correlations", x="State", y=expression(bold(paste("Correlation Value (r)"))))
ggplot(data=index.cor) + facet_grid(type~State)+
geom_bar(data=chron.cor[chron.cor$type %in% c("precip", "tmean"),],aes(x=Canopy.Class, y=cor))+ ylim(-0.6,0.6)+
geom_hline(yintercept=0.246, linetype="dashed") + #
  	geom_hline(yintercept=-0.246, linetype="dashed") + 	#
  	geom_hline(yintercept=0, linetype="solid") +#
#
	scale_color_manual(values=cbbPalette) +#
  	scale_fill_manual(values=cbbPalette) +#
  	poster.theme2 +#
  	theme(axis.text.x = element_text(angle = 45, hjust = 1),panel.grid.major=element_blank(), panel.grid.minor= 	element_blank(), panel.border= element_blank(), panel.background= element_blank()) +#
  	labs(title= "TR Index Climate Correlations", x="State", y=expression(bold(paste("Correlation Value (r)"))))
ggplot(data=index.cor) + facet_grid(type~State)+#
#
	geom_violin(aes(x=Canopy.Class, y=cor, fill=State), adjust = 2, trim=T) + ylim(-0.6,0.6)+#
	geom_bar(data=chron.cor[chron.cor$type %in% c("precip", "tmean"),],aes(x=Canopy.Class, y=cor))+ ylim(-0.6,0.6)+#
	geom_point(aes(x=Canopy.Class , y=biweight.mean), shape=95, size=15)+ ylim(-0.6,0.6)+#
	geom_hline(yintercept=0.246, linetype="dashed") + #
  	geom_hline(yintercept=-0.246, linetype="dashed") + 	#
  	geom_hline(yintercept=0, linetype="solid") +#
#
	scale_color_manual(values=cbbPalette) +#
  	scale_fill_manual(values=cbbPalette) +#
  	poster.theme2 +#
  	theme(axis.text.x = element_text(angle = 45, hjust = 1),panel.grid.major=element_blank(), panel.grid.minor= 	element_blank(), panel.border= element_blank(), panel.background= element_blank()) +#
  	labs(title= "TR Index Climate Correlations", x="State", y=expression(bold(paste("Correlation Value (r)"))))
ggplot(data=index.cor) + facet_grid(type~State)+
geom_bar(data=chron.cor[chron.cor$type %in% c("precip", "tmean"),],aes(x=Canopy.Class, y=cor), stat="identity", position="dodge", color=State)+ ylim(-0.6,0.6)+
geom_hline(yintercept=0.246, linetype="dashed") + #
  	geom_hline(yintercept=-0.246, linetype="dashed") + 	#
  	geom_hline(yintercept=0, linetype="solid") +#
#
	scale_color_manual(values=cbbPalette) +#
  	scale_fill_manual(values=cbbPalette) +#
  	poster.theme2 +#
  	theme(axis.text.x = element_text(angle = 45, hjust = 1),panel.grid.major=element_blank(), panel.grid.minor= 	element_blank(), panel.border= element_blank(), panel.background= element_blank()) +#
  	labs(title= "TR Index Climate Correlations", x="State", y=expression(bold(paste("Correlation Value (r)"))))
summary(chron.cor)
ggplot(data=index.cor) + facet_grid(type~State)+#
#
	geom_violin(aes(x=Canopy.Class, y=cor, fill=State), adjust = 2, trim=T) + ylim(-0.6,0.6)+#
	geom_bar(data=chron.cor[chron.cor$type %in% c("precip", "tmean"),],aes(x=Canopy.Class, y=cor), stat="identity", position="dodge", color=State)+ ylim(-0.6,0.6)+#
	geom_point(aes(x=Canopy.Class , y=biweight.mean), shape=95, size=15)+ ylim(-0.6,0.6)+#
	geom_hline(yintercept=0.246, linetype="dashed") + #
  	geom_hline(yintercept=-0.246, linetype="dashed") + 	#
  	geom_hline(yintercept=0, linetype="solid") +#
#
	scale_color_manual(values=cbbPalette) +#
  	scale_fill_manual(values=cbbPalette) +#
  	poster.theme2 +#
  	theme(axis.text.x = element_text(angle = 45, hjust = 1),panel.grid.major=element_blank(), panel.grid.minor= 	element_blank(), panel.border= element_blank(), panel.background= element_blank()) +#
  	labs(title= "TR Index Climate Correlations", x="State", y=expression(bold(paste("Correlation Value (r)"))))
ggplot(data=index.cor) + facet_grid(type~State)+#
#
	geom_violin(aes(x=Canopy.Class, y=cor, fill=State), adjust = 2, trim=T) + ylim(-0.6,0.6)+#
	geom_bar(data=chron.cor[chron.cor$type %in% c("precip", "tmean"),],aes(x=Canopy.Class, y=cor), stat="identity", position="dodge", color=chron.cor$State)+ ylim(-0.6,0.6)+#
	geom_point(aes(x=Canopy.Class , y=biweight.mean), shape=95, size=15)+ ylim(-0.6,0.6)+#
	geom_hline(yintercept=0.246, linetype="dashed") + #
  	geom_hline(yintercept=-0.246, linetype="dashed") + 	#
  	geom_hline(yintercept=0, linetype="solid") +#
#
	scale_color_manual(values=cbbPalette) +#
  	scale_fill_manual(values=cbbPalette) +#
  	poster.theme2 +#
  	theme(axis.text.x = element_text(angle = 45, hjust = 1),panel.grid.major=element_blank(), panel.grid.minor= 	element_blank(), panel.border= element_blank(), panel.background= element_blank()) +#
  	labs(title= "TR Index Climate Correlations", x="State", y=expression(bold(paste("Correlation Value (r)"))))
ggplot(data=index.cor) + facet_grid(type~State)+#
#
	geom_violin(aes(x=Canopy.Class, y=cor, fill=State), adjust = 2, trim=T) + ylim(-0.6,0.6)+#
	geom_bar(data=chron.cor[chron.cor$type %in% c("precip", "tmean"),],aes(x=Canopy.Class, y=cor), stat="identity", position="dodge")+ ylim(-0.6,0.6)+#
	geom_point(aes(x=Canopy.Class , y=biweight.mean), shape=95, size=15)+ ylim(-0.6,0.6)+#
	geom_hline(yintercept=0.246, linetype="dashed") + #
  	geom_hline(yintercept=-0.246, linetype="dashed") + 	#
  	geom_hline(yintercept=0, linetype="solid") +#
#
	scale_color_manual(values=cbbPalette) +#
  	scale_fill_manual(values=cbbPalette) +#
  	poster.theme2 +#
  	theme(axis.text.x = element_text(angle = 45, hjust = 1),panel.grid.major=element_blank(), panel.grid.minor= 	element_blank(), panel.border= element_blank(), panel.background= element_blank()) +#
  	labs(title= "TR Index Climate Correlations", x="State", y=expression(bold(paste("Correlation Value (r)"))))
ggplot(data=index.cor) + facet_grid(type~State)+#
#
	geom_violin(aes(x=Canopy.Class, y=cor, fill=State), adjust = 2, trim=T) + ylim(-0.6,0.6)+#
	geom_bar(data=chron.cor[chron.cor$type %in% c("precip", "tmean"),],aes(x=Canopy.Class, y=cor), stat="identity", position="dodge", fill=NA, color=State)+ ylim(-0.6,0.6)+#
	geom_point(aes(x=Canopy.Class , y=biweight.mean), shape=95, size=15)+ ylim(-0.6,0.6)+#
	geom_hline(yintercept=0.246, linetype="dashed") + #
  	geom_hline(yintercept=-0.246, linetype="dashed") + 	#
  	geom_hline(yintercept=0, linetype="solid") +#
#
	scale_color_manual(values=cbbPalette) +#
  	scale_fill_manual(values=cbbPalette) +#
  	poster.theme2 +#
  	theme(axis.text.x = element_text(angle = 45, hjust = 1),panel.grid.major=element_blank(), panel.grid.minor= 	element_blank(), panel.border= element_blank(), panel.background= element_blank()) +#
  	labs(title= "TR Index Climate Correlations", x="State", y=expression(bold(paste("Correlation Value (r)"))))
chron.cor <- rbind(all.sites.gs, dom.sites.gs, int.sites.gs, sup.sites.gs)
summary(chron.cor)
library(ggplot2)#
source("poster_theme.R")#
# Loading in all index-level correlations#
#
load("processed_data/All_climate_corrs.Rdata")#
load("processed_data/Dominant_climate_corrs.Rdata")#
load("processed_data/Intermediate_climate_corrs.Rdata")#
load("processed_data/Suppressed_climate_corrs.Rdata")#
#
# combinings all data.frames into one object#
index.cor <- rbind(all.cor.stack, dom.cor.stack, int.cor.stack, sup.cor.stack)#
summary(index.cor)#
#
load("processed_data/All_gs_chron_corrs.Rdata")#
load("processed_data/Dominant_gs_chron_corrs.Rdata")#
load("processed_data/Intermediate_gs_chron_corrs.Rdata")#
load("processed_data/Suppressed_gs_chron_corrs.Rdata")#
#
chron.cor <- rbind(all.sites.gs, dom.sites.gs, int.sites.gs, sup.sites.gs)#
summary(chron.cor)
cbbPalette <- c("#009E73", "#e79f00", "#9ad0f3", "#0072B2", "#D55E00")
ggplot(data=index.cor) + facet_grid(type~State)+#
#
	geom_violin(aes(x=Canopy.Class, y=cor, fill=State), adjust = 2, trim=T) + ylim(-0.6,0.6)+#
	geom_bar(data=chron.cor[chron.cor$type %in% c("precip", "tmean"),],aes(x=Canopy.Class, y=cor), stat="identity", position="dodge", fill=NA, color=State)+ ylim(-0.6,0.6)+#
	geom_point(aes(x=Canopy.Class , y=biweight.mean), shape=95, size=15)+ ylim(-0.6,0.6)+#
	geom_hline(yintercept=0.246, linetype="dashed") + #
  	geom_hline(yintercept=-0.246, linetype="dashed") + 	#
  	geom_hline(yintercept=0, linetype="solid") +#
#
	scale_color_manual(values=cbbPalette) +#
  	scale_fill_manual(values=cbbPalette) +#
  	poster.theme2 +#
  	theme(axis.text.x = element_text(angle = 45, hjust = 1),panel.grid.major=element_blank(), panel.grid.minor= 	element_blank(), panel.border= element_blank(), panel.background= element_blank()) +#
  	labs(title= "TR Index Climate Correlations", x="State", y=expression(bold(paste("Correlation Value (r)"))))
summary(chron.cor[chron.cor$type %in% c("precip", "tmean"),])
ggplot(data=index.cor) + facet_grid(type~State)+#
#
	geom_violin(aes(x=Canopy.Class, y=cor, fill=State), adjust = 2, trim=T) + ylim(-0.6,0.6)+#
	geom_bar(data=chron.cor[chron.cor$type %in% c("precip", "tmean"),],aes(x=Canopy.Class, y=cor), stat="identity", position="dodge", fill=NA, color=Canopy.Class+ ylim(-0.6,0.6)+#
	geom_point(aes(x=Canopy.Class , y=biweight.mean), shape=95, size=15)+ ylim(-0.6,0.6)+#
	geom_hline(yintercept=0.246, linetype="dashed") + #
  	geom_hline(yintercept=-0.246, linetype="dashed") + 	#
  	geom_hline(yintercept=0, linetype="solid") +#
#
	scale_color_manual(values=cbbPalette) +#
  	scale_fill_manual(values=cbbPalette) +#
  	poster.theme2 +#
  	theme(axis.text.x = element_text(angle = 45, hjust = 1),panel.grid.major=element_blank(), panel.grid.minor= 	element_blank(), panel.border= element_blank(), panel.background= element_blank()) +#
  	labs(title= "TR Index Climate Correlations", x="State", y=expression(bold(paste("Correlation Value (r)"))))
ggplot(data=index.cor) + facet_grid(type~State)+#
#
	geom_violin(aes(x=Canopy.Class, y=cor, fill=State), adjust = 2, trim=T) + ylim(-0.6,0.6)+#
	geom_bar(data=chron.cor[chron.cor$type %in% c("precip", "tmean"),],aes(x=Canopy.Class, y=cor), stat="identity", position="dodge", fill=NA, color=Canopy.Class)+ ylim(-0.6,0.6)+#
	geom_point(aes(x=Canopy.Class , y=biweight.mean), shape=95, size=15)+ ylim(-0.6,0.6)+#
	geom_hline(yintercept=0.246, linetype="dashed") + #
  	geom_hline(yintercept=-0.246, linetype="dashed") + 	#
  	geom_hline(yintercept=0, linetype="solid") +#
#
	scale_color_manual(values=cbbPalette) +#
  	scale_fill_manual(values=cbbPalette) +#
  	poster.theme2 +#
  	theme(axis.text.x = element_text(angle = 45, hjust = 1),panel.grid.major=element_blank(), panel.grid.minor= 	element_blank(), panel.border= element_blank(), panel.background= element_blank()) +#
  	labs(title= "TR Index Climate Correlations", x="State", y=expression(bold(paste("Correlation Value (r)"))))
ggplot(data=index.cor) + facet_grid(type~State)+#
#
	geom_violin(aes(x=Canopy.Class, y=cor, fill=State), adjust = 2, trim=T) + ylim(-0.6,0.6)+#
	geom_bar(data=chron.cor[chron.cor$type %in% c("precip", "tmean"),],aes(x=Canopy.Class, y=cor, fill=NA, color="State"), stat="identity", position="dodge")+ ylim(-0.6,0.6)+#
	geom_point(aes(x=Canopy.Class , y=biweight.mean), shape=95, size=15)+ ylim(-0.6,0.6)+#
	geom_hline(yintercept=0.246, linetype="dashed") + #
  	geom_hline(yintercept=-0.246, linetype="dashed") + 	#
  	geom_hline(yintercept=0, linetype="solid") +#
#
	scale_color_manual(values=cbbPalette) +#
  	scale_fill_manual(values=cbbPalette) +#
  	poster.theme2 +#
  	theme(axis.text.x = element_text(angle = 45, hjust = 1),panel.grid.major=element_blank(), panel.grid.minor= 	element_blank(), panel.border= element_blank(), panel.background= element_blank()) +#
  	labs(title= "TR Index Climate Correlations", x="State", y=expression(bold(paste("Correlation Value (r)"))))
ggplot(data=index.cor) + facet_grid(type~State)+#
#
	geom_violin(aes(x=Canopy.Class, y=cor, fill=State), adjust = 2, trim=T) + ylim(-0.6,0.6)+#
	geom_bar(data=chron.cor[chron.cor$type %in% c("precip", "tmean"),],aes(x=Canopy.Class, y=cor, fill=NA, color="State"), stat="identity", position="dodge")+ ylim(-0.6,0.6)+#
	geom_point(aes(x=Canopy.Class , y=biweight.mean), shape=95, size=15)+ ylim(-0.6,0.6)+#
	geom_hline(yintercept=0.246, linetype="dashed") + #
  	geom_hline(yintercept=-0.246, linetype="dashed") + 	#
  	geom_hline(yintercept=0, linetype="solid") +#
#
	scale_color_manual(values=c("#009E73", "#e79f00", "#9ad0f3", "#0072B2", "#D55E00")) +#
  	scale_fill_manual(values=cbbPalette) +#
  	poster.theme2 +#
  	theme(axis.text.x = element_text(angle = 45, hjust = 1),panel.grid.major=element_blank(), panel.grid.minor= 	element_blank(), panel.border= element_blank(), panel.background= element_blank()) +#
  	labs(title= "TR Index Climate Correlations", x="State", y=expression(bold(paste("Correlation Value (r)"))))
ggplot(data=index.cor) + facet_grid(type~State)+
geom_bar(data=chron.cor[chron.cor$type %in% c("precip", "tmean"),],aes(x=Canopy.Class, y=cor, fill=NA, color="State"), stat="identity", position="dodge")+ ylim(-0.6,0.6)+
geom_hline(yintercept=0.246, linetype="dashed") + #
  	geom_hline(yintercept=-0.246, linetype="dashed") + 	#
  	geom_hline(yintercept=0, linetype="solid") +#
#
	scale_color_manual(values=c("#009E73", "#e79f00", "#9ad0f3", "#0072B2", "#D55E00")) +#
  	scale_fill_manual(values=cbbPalette) +#
  	poster.theme2 +#
  	theme(axis.text.x = element_text(angle = 45, hjust = 1),panel.grid.major=element_blank(), panel.grid.minor= 	element_blank(), panel.border= element_blank(), panel.background= element_blank()) +#
  	labs(title= "TR Index Climate Correlations", x="State", y=expression(bold(paste("Correlation Value (r)"))))
ggplot(data=index.cor) + facet_grid(type~State)+
geom_bar(data=chron.cor[chron.cor$type %in% c("precip", "tmean"),],aes(x=Canopy.Class, y=cor, fill=NA, color="State"), stat="identity", position="dodge")+ ylim(-0.6,0.6)+#
	scale_color_manual(values=c("#009E73", "#e79f00", "#9ad0f3", "#0072B2", "#D55E00")) +
geom_hline(yintercept=0.246, linetype="dashed") + #
  	geom_hline(yintercept=-0.246, linetype="dashed") + 	#
  	geom_hline(yintercept=0, linetype="solid") +#
#
	scale_color_manual(values=c("#009E73", "#e79f00", "#9ad0f3", "#0072B2", "#D55E00")) +#
  	scale_fill_manual(values=cbbPalette) +#
  	poster.theme2 +#
  	theme(axis.text.x = element_text(angle = 45, hjust = 1),panel.grid.major=element_blank(), panel.grid.minor= 	element_blank(), panel.border= element_blank(), panel.background= element_blank()) +#
  	labs(title= "TR Index Climate Correlations", x="State", y=expression(bold(paste("Correlation Value (r)"))))
ggplot(data=index.cor) + facet_grid(type~State)+
geom_bar(data=chron.cor[chron.cor$type %in% c("precip", "tmean"),],aes(x=Canopy.Class, y=cor, fill=State, color="State"), stat="identity", position="dodge")+ ylim(-0.6,0.6)+
geom_point(aes(x=Canopy.Class , y=biweight.mean), shape=95, size=15)+ ylim(-0.6,0.6)+#
	geom_hline(yintercept=0.246, linetype="dashed") + #
  	geom_hline(yintercept=-0.246, linetype="dashed") + 	#
  	geom_hline(yintercept=0, linetype="solid") +#
#
	scale_color_manual(values=c("#009E73", "#e79f00", "#9ad0f3", "#0072B2", "#D55E00")) +#
  	scale_fill_manual(values=cbbPalette) +#
  	poster.theme2 +#
  	theme(axis.text.x = element_text(angle = 45, hjust = 1),panel.grid.major=element_blank(), panel.grid.minor= 	element_blank(), panel.border= element_blank(), panel.background= element_blank()) +#
  	labs(title= "TR Index Climate Correlations", x="State", y=expression(bold(paste("Correlation Value (r)"))))
ggplot(data=index.cor) + facet_grid(type~State)+#
#
	geom_violin(aes(x=Canopy.Class, y=cor, fill=State), adjust = 2, trim=T) + ylim(-0.6,0.6)+#
	geom_bar(data=chron.cor[chron.cor$type %in% c("precip", "tmean"),],aes(x=Canopy.Class, y=cor, fill=NA, color=State), stat="identity", position="dodge")+ ylim(-0.6,0.6)+#
#
	geom_point(aes(x=Canopy.Class , y=biweight.mean), shape=95, size=15)+ ylim(-0.6,0.6)+#
	geom_hline(yintercept=0.246, linetype="dashed") + #
  	geom_hline(yintercept=-0.246, linetype="dashed") + 	#
  	geom_hline(yintercept=0, linetype="solid") +#
#
	scale_color_manual(values=c("#009E73", "#e79f00", "#9ad0f3", "#0072B2", "#D55E00")) +#
  	scale_fill_manual(values=cbbPalette) +#
  	poster.theme2 +#
  	theme(axis.text.x = element_text(angle = 45, hjust = 1),panel.grid.major=element_blank(), panel.grid.minor= 	element_blank(), panel.border= element_blank(), panel.background= element_blank()) +#
  	labs(title= "TR Index Climate Correlations", x="State", y=expression(bold(paste("Correlation Value (r)"))))
ggplot(data=index.cor) + facet_grid(type~State)+#
#
	geom_violin(aes(x=Canopy.Class, y=cor, fill=State), adjust = 2, trim=T) + ylim(-0.6,0.6)+#
	geom_bar(data=chron.cor[chron.cor$type %in% c("precip", "tmean"),],aes(x=Canopy.Class, y=cor, fill=NA, color=State), stat="identity", position="dodge")+ ylim(-0.6,0.6)+#
#
	geom_point(aes(x=Canopy.Class , y=biweight.mean), shape=95, size=15)+ ylim(-0.6,0.6)+#
	geom_hline(yintercept=0.246, linetype="dashed") + #
  	geom_hline(yintercept=-0.246, linetype="dashed") + 	#
  	geom_hline(yintercept=0, linetype="solid") +#
#
	scale_color_manual(values=cbbPalette) +#
  	scale_fill_manual(values=cbbPalette) +#
  	poster.theme2 +#
  	theme(axis.text.x = element_text(angle = 45, hjust = 1),panel.grid.major=element_blank(), panel.grid.minor= 	element_blank(), panel.border= element_blank(), panel.background= element_blank()) +#
  	labs(title= "TR Index Climate Correlations", x="State", y=expression(bold(paste("Correlation Value (r)"))))
chron.cor$State <- factor(chron.cor$State, levels =c("MO", "IN", "OH", "MA", "ME"))
ggplot(data=index.cor) + facet_grid(type~State)+#
#
	geom_violin(aes(x=Canopy.Class, y=cor, fill=State), adjust = 2, trim=T) + ylim(-0.6,0.6)+#
	geom_bar(data=chron.cor[chron.cor$type %in% c("precip", "tmean"),],aes(x=Canopy.Class, y=cor, fill=NA, color=State), stat="identity", position="dodge")+ ylim(-0.6,0.6)+#
#
	geom_point(aes(x=Canopy.Class , y=biweight.mean), shape=95, size=15)+ ylim(-0.6,0.6)+#
	geom_hline(yintercept=0.246, linetype="dashed") + #
  	geom_hline(yintercept=-0.246, linetype="dashed") + 	#
  	geom_hline(yintercept=0, linetype="solid") +#
#
	scale_color_manual(values=cbbPalette) +#
  	scale_fill_manual(values=cbbPalette) +#
  	poster.theme2 +#
  	theme(axis.text.x = element_text(angle = 45, hjust = 1),panel.grid.major=element_blank(), panel.grid.minor= 	element_blank(), panel.border= element_blank(), panel.background= element_blank()) +#
  	labs(title= "TR Index Climate Correlations", x="State", y=expression(bold(paste("Correlation Value (r)"))))
pdf("figures/violin_climate_cor_megaplot.pdf", height=8, width=13)#
ggplot(data=index.cor) + facet_grid(type~State)+#
#
	geom_violin(aes(x=Canopy.Class, y=cor, fill=State), adjust = 2, trim=T) + ylim(-0.6,0.6)+#
	geom_bar(data=chron.cor[chron.cor$type %in% c("precip", "tmean"),],aes(x=Canopy.Class, y=cor, fill=NA, color=State), stat="identity", position="dodge")+ ylim(-0.6,0.6)+#
#
	geom_point(aes(x=Canopy.Class , y=biweight.mean), shape=95, size=15)+ ylim(-0.6,0.6)+#
	geom_hline(yintercept=0.246, linetype="dashed") + #
  	geom_hline(yintercept=-0.246, linetype="dashed") + 	#
  	geom_hline(yintercept=0, linetype="solid") +#
#
	scale_color_manual(values=cbbPalette) +#
  	scale_fill_manual(values=cbbPalette) +#
  	poster.theme2 +#
  	theme(axis.text.x = element_text(angle = 45, hjust = 1),panel.grid.major=element_blank(), panel.grid.minor= 	element_blank(), panel.border= element_blank(), panel.background= element_blank()) +#
  	labs(title= "TR Index Climate Correlations", x="State", y=expression(bold(paste("Correlation Value (r)"))))#
dev.off()
ggplot(data=index.cor) + facet_grid(type~State)+#
#
	geom_boxplot(aes(x=Canopy.Class, y=cor, fill=State)) + ylim(-0.6,0.6)+#
	geom_bar(data=chron.cor[chron.cor$type %in% c("precip", "tmean"),],aes(x=Canopy.Class, y=cor, fill=NA, color=State), stat="identity", position="dodge")+ ylim(-0.6,0.6)+#
#
	geom_point(aes(x=Canopy.Class , y=biweight.mean), shape=95, size=15)+ ylim(-0.6,0.6)+#
	geom_hline(yintercept=0.246, linetype="dashed") + #
  	geom_hline(yintercept=-0.246, linetype="dashed") + 	#
  	geom_hline(yintercept=0, linetype="solid") +#
#
	scale_color_manual(values=cbbPalette) +#
  	scale_fill_manual(values=cbbPalette) +#
  	poster.theme2 +#
  	theme(axis.text.x = element_text(angle = 45, hjust = 1),panel.grid.major=element_blank(), panel.grid.minor= 	element_blank(), panel.border= element_blank(), panel.background= element_blank()) +#
  	labs(title= "TR Index Climate Correlations", x="State", y=expression(bold(paste("Correlation Value (r)"))))
pdf("figures/violin_climate_cor_megaplot.pdf", height=8, width=13)#
ggplot(data=index.cor) + facet_grid(type~State)+#
#
	geom_boxplot(aes(x=Canopy.Class, y=cor, fill=State)) + ylim(-0.6,0.6)+#
	geom_bar(data=chron.cor[chron.cor$type %in% c("precip", "tmean"),],aes(x=Canopy.Class, y=cor, fill=NA, color=State), stat="identity", position="dodge")+ ylim(-0.6,0.6)+#
#
	geom_point(aes(x=Canopy.Class , y=biweight.mean), shape=95, size=15)+ ylim(-0.6,0.6)+#
	geom_hline(yintercept=0.246, linetype="dashed") + #
  	geom_hline(yintercept=-0.246, linetype="dashed") + 	#
  	geom_hline(yintercept=0, linetype="solid") +#
#
	scale_color_manual(values=cbbPalette) +#
  	scale_fill_manual(values=cbbPalette) +#
  	poster.theme2 +#
  	theme(axis.text.x = element_text(angle = 45, hjust = 1),panel.grid.major=element_blank(), panel.grid.minor= 	element_blank(), panel.border= element_blank(), panel.background= element_blank()) +#
  	labs(title= "TR Index Climate Correlations", x="State", y=expression(bold(paste("Correlation Value (r)"))))#
dev.off()
ggplot(data=index.cor) + facet_grid(type~State)+#
#
	geom_violin(aes(x=Canopy.Class, y=cor, fill=State), adjust = 2, trim=T) + ylim(-0.6,0.6)+#
	geom_bar(data=chron.cor[chron.cor$type %in% c("precip", "tmean"),],aes(x=Canopy.Class, y=cor, fill=NA, color=State), stat="identity", position="dodge")+ ylim(-0.6,0.6)+#
#
	geom_point(aes(x=Canopy.Class , y=biweight.mean), shape=95, size=15)+ ylim(-0.6,0.6)+#
	geom_hline(yintercept=0.246, linetype="dashed") + #
  	geom_hline(yintercept=-0.246, linetype="dashed") + 	#
  	geom_hline(yintercept=0, linetype="solid") +#
#
	scale_color_manual(values=cbbPalette) +#
  	scale_fill_manual(values=cbbPalette) +#
  	poster.theme2 +#
  	theme(axis.text.x = element_text(angle = 45, hjust = 1),panel.grid.major=element_blank(), panel.grid.minor= 	element_blank(), panel.border= element_blank(), panel.background= element_blank()) +#
  	labs(title= "TR Index Climate Correlations", x="State", y=expression(bold(paste("Correlation Value (r)"))))
library(ggplot2)#
source("poster_theme.R")#
# Loading in all index-level correlations#
#
load("processed_data/All_climate_corrs.Rdata")#
load("processed_data/Dominant_climate_corrs.Rdata")#
load("processed_data/Intermediate_climate_corrs.Rdata")#
load("processed_data/Suppressed_climate_corrs.Rdata")#
#
# combinings all data.frames into one object#
index.cor <- rbind(all.cor.stack, dom.cor.stack, int.cor.stack, sup.cor.stack)#
summary(index.cor)#
#
load("processed_data/All_gs_chron_corrs.Rdata")#
load("processed_data/Dominant_gs_chron_corrs.Rdata")#
load("processed_data/Intermediate_gs_chron_corrs.Rdata")#
load("processed_data/Suppressed_gs_chron_corrs.Rdata")#
#
chron.cor <- rbind(all.sites.gs, dom.sites.gs, int.sites.gs, sup.sites.gs)#
summary(chron.cor)#
#
chron.cor$State <- factor(chron.cor$State, levels =c("MO", "IN", "OH", "MA", "ME"))#
#
cbbPalette <- c("#009E73", "#e79f00", "#9ad0f3", "#0072B2", "#D55E00")#
#
pdf("figures/violin_climate_cor_megaplot.pdf", height=8, width=13)#
ggplot(data=index.cor) + facet_grid(type~State)+#
#
	geom_violin(aes(x=Canopy.Class, y=cor, fill=State), adjust = 2, trim=T) + ylim(-0.6,0.6)+#
	geom_bar(data=chron.cor[chron.cor$type %in% c("precip", "tmean"),],aes(x=Canopy.Class, y=cor, fill=NA, color=State), stat="identity", position="dodge")+ ylim(-0.6,0.6)+#
#
	geom_point(aes(x=Canopy.Class , y=biweight.mean), shape=95, size=15)+ ylim(-0.6,0.6)+#
	geom_hline(yintercept=0.246, linetype="dashed") + #
  	geom_hline(yintercept=-0.246, linetype="dashed") + 	#
  	geom_hline(yintercept=0, linetype="solid") +#
#
	scale_color_manual(values=cbbPalette) +#
  	scale_fill_manual(values=cbbPalette) +#
  	poster.theme2 +#
  	theme(axis.text.x = element_text(angle = 45, hjust = 1),panel.grid.major=element_blank(), panel.grid.minor= 	element_blank(), panel.border= element_blank(), panel.background= element_blank()) +#
  	labs(title= "TR Index Climate Correlations", x="State", y=expression(bold(paste("Correlation Value (r)"))))#
dev.off()
load("processed_data/gam_results/gam1_climate_by_species.Rdata")
library(mgcv)#
library(ggplot2)#
library(car)#
# Christy's GAMM code#
#
# gam1 <- gamm(Y ~  s(Biomass, bs="cr", k=3, by=PFT) + s(tair, k=k, by=PFT) + s(precipf, k=k, by=PFT) + s(CO2, k=k, by=PFT), random=list(PlotID=~1), data=data) #
#
# Loading in my data#
#
data.use <- read.csv("processed_data/AllSites_tree_plus_climate_and_BA.csv", header=T)#
#
data.use$group <- data.use$Species#
data.use$group <- recode(data.use$group, "'CAOV' = 'CARYA'; 'CACO' = 'CARYA'; #
  							'CATE' = 'CARYA'; 'ACSAC' = 'ACSA'; 'BEAL' = 'BETULA'; 'BELE' = 'BETULA'; 'QUMU' = 'QUAL'")#
#
data.use$group.plot <- as.factor(paste(data.use$group, data.use$PlotID, sep="."))#
#
data.use$Canopy.Class <- recode(data.use$Canopy.Class, "'C' = 'D'")#
summary(data.use)#
# reducing the amount of data for the test runs#
sites.use <- c("Harvard", "Howland", "Morgan Monroe State Park", "Oak Openings Toledo", "Missouri Ozark")#
#
test <- data.use[data.use$Site %in% sites.use & !is.na(data.use$RW) & !is.na(data.use$BA.inc),]#
summary(test)#
#
test$group.cc <- as.factor(paste(test$group, test$Canopy.Class, sep="."))#
summary(test)#
# Get a list of what predictors & responses I'm using#
predictors.all <- c("tmean", "precip", "Species", "dbh.recon", "Canopy.Class", "spp.plot", "group", "group.plot", "group.cc") #
#
# Getting rid of observations that have NAs in the important variables#
test <- test[complete.cases(test[,predictors.all]),]#
test <- test[test$Live.Dead=="LIVE" & !test$Canopy.Class=="F",]#
#
# Subsetting to a set of species that we have enough data to feel good about#
#species.use <- c("TSCA", "QURU", "ACRU", "BEAL", "ACSA", "LITU", "QUAL", "CAOV", "CACO", "CATE", "JUVI", "QUVE", "PCRU", "THOC", "PIST")#
group.use <- c("ACRU", "ACSA", "BETULA", "CARYA", "FAGR", "FRAX", "PIST", "QUAL", "QURU", "QUVE", "SAAL", "TSCA", "ULRU")#
#
test <- test[test$group %in% group.use,]#
#
summary(test)#
#
par(new=F)#
plot(test[test$TreeID=="MMA003", "BA.inc"]~ test[test$TreeID=="MMA003","Year"], type="l")#
test$log.dbh <- log(test$dbh.recon)#
summary(test)#
#
summary(test)#
summary(test$Live.Dead)#
summary(test$Canopy.Class)#
# RW <- test$RW#
# temp <- test$tmean#
# precip <- test$precip#
# canopy <- test$Canopy.Class#
# size <- test$DBH..cm.#
# species <- unique(test$Species)#
# library(ggplot2)#
# ggplot(data=test) +#
   # facet_wrap(~PlotID) +#
   # geom_histogram(aes(x=dbh.recon))#
# ggplot(data=test) +#
   # facet_wrap(~Species) +#
   # geom_histogram(aes(x=dbh.recon))#
# hist(test$dbh.recon)#
# test2 <- test[test$group %in% c("QURU", "ACRU") & test$Year>=1980,]#
# test2 <- test[test$group %in% c("QURU", "ACRU"),]#
test2 <- test[test$Site %in% "Morgan Monroe State Park",]#
# test2$log.dbh <- log(test2$dbh.recon)#
# summary(test2)#
summary(test)#
test[test$BA.inc==0, "BA.inc"] <- 1e-6#
# test.gam3 <- test#
# test.gam3$Canopy.Class <- recode(test.gam3$Canopy.Class, "'C' = 'D'")#
# summary(test.gam3)
load("processed_data/gam_results/gam2_climate_by_canopyclass.Rdata")
load("processed_data/gam_results/gam3_climate_by_canopyclass_interactions.Rdata")
par(mfrow=c(4,2)); plot(gam1$gam, ylim=c(-0.025, 0.025))#
 par(mfrow=c(4,2)); plot(gam2$gam, ylim=c(-0.025, 0.025))#
# MAKE gam2 by= canopy class#
# make sure to when adding multiple site to list Site in teh random list.#
# Random effects are hierarchical #
#----------------------------------------------#
# Gam1 graphs#
n <- 100#
data <- test#
		n.out = n#
#
		new.dat <- data.frame(Model="species_response",#
							  Extent=as.factor(paste(min(data$Year), max(data$Year), sep="-")))#
		# Figure out which vars are numeric vs. factor#
		vars.num <- vector()#
		for(v in predictors.all){#
			if(class(data[,v]) %in% c("numeric", "integer")) vars.num <- c(vars.num, v)#
		}#
		# Getting the unique values of our factor variables and adding them to the data frame#
		# need to skip group & group.cc so we aren't trying to match Carya & Quercus etc#
		predictors.all <- predictors.all[!predictors.all %in% c("Species", "spp.plot")]#
		for(v in predictors.all[!predictors.all %in% vars.num & !(predictors.all %in% c("group", "group.cc"))]){#
			# if v is a factor, merge all unique values into the dataframe#
			var.temp <- data.frame(x=unique(data[,v])) #
			names(var.temp) <- v#
			new.dat <- merge(new.dat, var.temp, all.x=T, all.y=T)#
		}#
		# getting species from species.plot#
		new.dat$group <- as.factor(substr(new.dat$group.plot, 1, 4))#
		# Adding in the group.canopy class then getting rid of combinations we don't actually have in our data#
		new.dat$group.cc <- as.factor(paste(new.dat$group, new.dat$Canopy.Class, sep="."))#
		new.dat <- new.dat[new.dat$group.cc %in% unique(test$group.cc),]#
		summary(new.dat)#
		# Putting the numerical variables into an array and adding it in #
		var.temp <- data.frame(array(dim=c(n.out, length(vars.num))))#
		names(var.temp) <- vars.num#
		for(v in vars.num){#
			var.temp[,v] <- seq(min(data[,v], na.rm=T), max(data[,v], na.rm=T), length.out=n.out)#
		}								#
		new.dat <- merge(new.dat, var.temp, all.x=T, all.y=T)#
		summary(new.dat)#
write.csv(new.dat, file="processed_data/sensitivity_extaction_dataframe.csv", row.names=F)								#
# Change which gamm you look at here!#
n <- 100						#
		# SOurce & run the function#
		source("0_Calculate_GAMM_Posteriors.R")#
		g1.ci.terms.pred <- post.distns(model.gam=gam1, model.name="species_response", n=n, newdata=new.dat, vars=predictors.all, terms=T)#
		g1.ci.out <- g1.ci.terms.pred$ci # separting out the confidence interval #
		g1.ci.out[,predictors.all[!predictors.all %in% vars.num]] <- new.dat[,predictors.all[!predictors.all %in% vars.num]] # copying over our factor labels#
		g1.ci.out$x <- as.numeric(g1.ci.out$x) # making x numeric; will make factors NA#
		summary(g1.ci.out)#
spp.colors <- read.csv("spp.Colors.csv", header=T)	#
summary(spp.colors)	#
#
group.fig <- unique(g1.ci.out$group)#
group.fig <- group.fig[order(group.fig)]#
colors.use <- as.vector(c(paste(spp.colors[spp.colors$Species %in% group.fig, "color"])))#
#
ci.terms.graph <- g1.ci.out#
ci.terms.graph[ci.terms.graph$mean<(-15),"mean"] <- NA #
ci.terms.graph[ci.terms.graph$lwr<(-15),"lwr"] <- -15#
ci.terms.graph[ci.terms.graph$upr<(-15),"upr"] <- -15 #
ci.terms.graph[which(ci.terms.graph$mean>10),"mean"] <- NA #
ci.terms.graph[ci.terms.graph$lwr>(10),"lwr"] <- 10 #
ci.terms.graph[ci.terms.graph$upr>(10),"upr"] <- 10
par(mfrow=c(4,2)); plot(gam1$gam, ylim=c(-0.025, 0.025))
pdf("figures/gam1_sensitivities.pdf", width= 13, height = 8.5)		#
		ggplot(data=ci.terms.graph[ci.terms.graph$Effect %in% c("tmean", "precip", "dbh.recon"), ]) + #
			facet_grid(~Effect, scales="free_x") +#
			geom_line(aes(x=x, y=0), linetype="dashed")+#
			geom_ribbon(aes(x=x, ymin=lwr, ymax=upr, fill=group), alpha=0.5) +#
			geom_line(aes(x=x, y=mean, color=group)) +#
			scale_color_manual(values=colors.use) +#
			scale_fill_manual(values=colors.use)+#
			poster.theme2+#
			labs(x = "Climate Variable", y = expression(bold(paste("Effect on BAI (mm"^"2", 							"y"^"-1",")"))))#
dev.off()#
#
pdf("figures/gam1_sensitivities_Size.pdf", width= 13, height = 8.5)		#
		ggplot(data=ci.terms.graph[ (ci.terms.graph$Effect=="dbh.recon" & ci.terms.graph$x<=50),]) + #
			facet_wrap(~group, scales="free_x") +#
			geom_line(aes(x=x, y=0), linetype="dashed")+#
			geom_ribbon(aes(x=x, ymin=lwr, ymax=upr, fill=group), alpha=0.5) +#
			geom_line(aes(x=x, y=mean, color=group)) +#
			scale_color_manual(values=colors.use) +#
			scale_fill_manual(values=colors.use)+#
			poster.theme2+#
			labs(x = "Climate Variable", y = expression(bold(paste("Effect on BAI (mm"^"2", 							"y"^"-1",")"))))#
dev.off()#
pdf("figures/gam1_sensitivities_ACRU.pdf", width= 13, height = 8.5)					#
	ggplot(data=ci.terms.graph[ci.terms.graph$group %in% "ACRU" & (ci.terms.graph$Effect %in% c("tmean", "precip") | (ci.terms.graph$Effect=="dbh.recon" & ci.terms.graph$x<=50)),]) + #
			facet_grid(~Effect, scales="free_x") +#
			geom_line(aes(x=x, y=0), linetype="dashed")+#
			geom_ribbon(aes(x=x, ymin=lwr, ymax=upr, fill=Effect), alpha=0.4) +#
			geom_line(aes(x=x, y=mean, color=Effect)) +#
			scale_color_manual(values= c("red", "blue", "green")) +#
			scale_fill_manual(values=c("red", "blue", "green"))+#
			poster.theme2+#
			labs(x = "Climate Variable", y = expression(bold(paste("Effect on BAI (mm"^"2", 							"y"^"-1",")"))))#
dev.off()#
ggplot(data=ci.terms.graph[ci.terms.graph$Effect %in% "tmean", ]) + #
			facet_grid(~Effect, scales="free_x") +#
			geom_line(aes(x=x, y=0), linetype="dashed")+#
			geom_ribbon(aes(x=x, ymin=lwr, ymax=upr, fill=group), alpha=0.5) +#
			geom_line(aes(x=x, y=mean, color=group)) +#
			scale_color_manual(values=colors.use) +#
			scale_fill_manual(values=colors.use)#
			ggplot(data=ci.terms.graph[ci.terms.graph$Effect %in% "precip", ]) + #
			facet_grid(Canopy.Class~Effect, scales="free_x") +#
			geom_line(aes(x=x, y=0), linetype="dashed")+#
			geom_ribbon(aes(x=x, ymin=lwr, ymax=upr, fill=group), alpha=0.5) +#
			geom_line(aes(x=x, y=mean, color=group)) +#
			scale_color_manual(values=colors.use) +#
			scale_fill_manual(values=colors.use)#
		g1.ci.out$PlotID <- as.factor(substr(g1.ci.out$group.plot, 6, nchar(paste(g1.ci.out$group.plot)))) # adding a plotID factor#
		summary(g1.ci.out)#
		ggplot(data=g1.ci.out[g1.ci.out$Effect == "dbh.recon", ]) + #
			facet_wrap(~PlotID) +#
			geom_ribbon(aes(x=x, ymin=lwr, ymax=upr, fill=group), alpha=0.5) +#
			geom_line(aes(x=x, y=mean, color=group)) +#
			scale_color_manual(values=colors.use) +#
			scale_fill_manual(values=colors.use)#
#
#----------------------------------------------#
# GAM 2								#
		# SOurce & run the function#
		source("0_Calculate_GAMM_Posteriors.R")#
		g2.ci.terms.pred2 <- post.distns(model.gam=gam2, model.name="harv_mmf_cc.test", n=n, newdata=new.dat, vars=predictors.all, terms=T)#
		g2.ci.out2 <- g2.ci.terms.pred2$ci # separting out the confidence interval #
		g2.ci.out2[,predictors.all[!predictors.all %in% vars.num]] <- new.dat[,predictors.all[!predictors.all %in% vars.num]] # copying over our factor labels#
		g2.ci.out2$x <- as.numeric(g2.ci.out2$x) # making x numeric; will make factors NA#
		summary(g2.ci.out2)#
#
pdf("figures/gam2_sensitivities.pdf", width= 13, height = 8.5)		#
		ggplot(data=g2.ci.out2[g2.ci.out2$Effect %in% c("tmean", "precip"), ]) + #
			facet_wrap(~Effect, scales="free_x") +#
			geom_ribbon(aes(x=x, ymin=lwr, ymax=upr, fill=Canopy.Class), alpha=0.5) +#
			geom_line(aes(x=x, y=mean, color=Canopy.Class))+#
			scale_color_manual(values=c("#0072B2", "#009E73", "#E69F00")) +#
			scale_fill_manual(values=c("#0072B2", "#009E73",  "#E69F00")) +#
			poster.theme2+#
			labs(x = "Climate Variable", y = expression(bold(paste("Effect on BAI (mm"^"2", 							"y"^"-1",")"))))#
dev.off()		#
		g2.ci.out2$PlotID <- as.factor(substr(g2.ci.out2$group.plot, 6, nchar(paste(g2.ci.out2$group.plot)))) # adding a plotID factor#
		summary(g2.ci.out2)#
pdf("figures/gam2_sensitivities_size.pdf", width = 13, height= 8.5)		#
		ggplot(data=g2.ci.out2[g2.ci.out2$Effect == "dbh.recon" & g2.ci.out2$x<=50, ]) + #
			facet_wrap(~group) +#
			geom_ribbon(aes(x=x, ymin=lwr, ymax=upr, fill=group), alpha=0.5) +#
			geom_line(aes(x=x, y=mean, color=group)) +#
			scale_color_manual(values=colors.use) +#
			scale_fill_manual(values=colors.use)+#
			poster.theme2#
dev.off()#
#
 #----------------------------------------------#
# GAM 3								#
		# SOurce & run the function#
"processed_data/gam_results/gam3_climate_by_canopyclass_interactions.Rdata"#
load("processed_data/gam_results/gam3_climate_by_canopyclass_interactions.Rdata")		#
		source("0_Calculate_GAMM_Posteriors.R")#
		g3.ci.terms.pred <- post.distns(model.gam=gam3, model.name="harv_mmf_cc.test", n=n, newdata=new.dat, vars=predictors.all, terms=T)#
		g3.ci.out <- g3.ci.terms.pred$ci # separting out the confidence interval #
		g3.ci.out[,predictors.all[!predictors.all %in% vars.num]] <- new.dat[,predictors.all[!predictors.all %in% vars.num]] # copying over our factor labels#
		g3.ci.out$x <- as.numeric(g3.ci.out$x) # making x numeric; will make factors NA#
		summary(g3.ci.out)#
ci.terms.graph <- g3.ci.out#
ci.terms.graph[ci.terms.graph$mean<(-2.5),"mean"] <- NA #
ci.terms.graph[ci.terms.graph$lwr<(-2.5),"lwr"] <- -2.5#
ci.terms.graph[ci.terms.graph$upr<(-2.5),"upr"] <- -2.5 #
ci.terms.graph[which(ci.terms.graph$mean>2.5),"mean"] <- NA #
ci.terms.graph[ci.terms.graph$lwr>(2.5),"lwr"] <- 2.5 #
ci.terms.graph[ci.terms.graph$upr>(2.5),"upr"] <- 2.5 #
#
pdf("figures/gam3_sensitivities.pdf", width= 13, height = 8.5)#
		ggplot(data=ci.terms.graph[ci.terms.graph$Effect %in% c("tmean", "precip"), ]) + #
			facet_grid(Canopy.Class~Effect, scales="free_x") +#
			geom_ribbon(aes(x=x, ymin=lwr, ymax=upr, fill=group), alpha=0.5) +#
			geom_line(aes(x=x, y=mean, color=group))+#
			poster.theme2+#
			labs(x = "Climate Variable", y = expression(bold(paste("Effect on BAI (mm"^"2", 							"y"^"-1",")"))))#
dev.off()#
#
pdf("figures/gam3_sensitivities_size.pdf", width= 13, height = 8.5)#
		ggplot(data=ci.terms.graph[ci.terms.graph$Effect %in% "dbh.recon" & ci.terms.graph$x<=50, ]) + #
			facet_wrap(~group.cc, scales="free_x") +#
			geom_ribbon(aes(x=x, ymin=lwr, ymax=upr, fill=group), alpha=0.5) +#
			geom_line(aes(x=x, y=mean, color=group))+#
			#poster.theme2+#
			scale_color_manual(values=colors.use) +#
			scale_fill_manual(values=colors.use)+#
			labs(x = "Climate Variable", y = expression(bold(paste("Effect on BAI (mm"^"2", 							"y"^"-1",")"))))#
dev.off()#
ci.terms.graph <- g3.ci.out#
ci.terms.graph[ci.terms.graph$mean<(-13),"mean"] <- NA #
ci.terms.graph[ci.terms.graph$lwr<(-13),"lwr"] <- -13#
ci.terms.graph[ci.terms.graph$upr<(-13),"upr"] <- -13 #
ci.terms.graph[which(ci.terms.graph$mean>8),"mean"] <- NA #
ci.terms.graph[ci.terms.graph$lwr>(8),"lwr"] <- 8 #
ci.terms.graph[ci.terms.graph$upr>(8),"upr"] <- 8 #
# Oaks only#
pdf("figures/oak_climate_effects.pdf", width= 13, height = 8.5)		#
		ggplot(data=ci.terms.graph[ci.terms.graph$Effect %in% c("tmean", "precip") & substr(ci.terms.graph$group.cc, 1,2)=="QU", ]) + #
			facet_grid(Canopy.Class~Effect, scales="free_x") +#
			geom_ribbon(aes(x=x, ymin=lwr, ymax=upr, fill=group), alpha=0.5) +#
			geom_line(aes(x=x, y=mean, color=group))+#
			scale_color_manual(values=c("#E69F00", "#0072B2", "#009E73")) +#
			scale_fill_manual(values=c("#E69F00", "#0072B2", "#009E73")) +#
			poster.theme2+#
			labs(x = "Climate Variable", y = expression(bold(paste("Effect on BAI (mm"^"2", "y"^"-1",")"))))#
dev.off()			#
		g3.ci.out$PlotID <- as.factor(substr(g3.ci.out$group.plot, 6, nchar(paste(g3.ci.out$group.plot)))) # adding a plotID factor#
		summary(g3.ci.out)#
		ggplot(data=g3.ci.out[g3.ci.out$Effect == "dbh.recon", ]) + #
			facet_wrap(~PlotID) +#
			geom_ribbon(aes(x=x, ymin=lwr, ymax=upr, fill=group), alpha=0.5) +#
			geom_line(aes(x=x, y=mean, color=group))#
#
pdf("figures/oak_size_effects.pdf", width= 13, height = 8.5)		#
	ggplot(data=g3.ci.out[g3.ci.out$Effect == "dbh.recon" & substr(g3.ci.out$group.cc, 1,2)=="QU", ]) + #
			facet_grid(~Canopy.Class) +#
			geom_ribbon(aes(x=x, ymin=lwr, ymax=upr, fill=group), alpha=0.5) +#
			geom_line(aes(x=x, y=mean, color=group)) +#
			scale_color_manual(values=c("#E69F00", "#0072B2", "#009E73")) +#
			scale_fill_manual(values=c("#E69F00", "#0072B2", "#009E73")) +#
			poster.theme2+#
			labs(x = "DBH (cm)", y = expression(bold(paste("Effect on BAI (mm"^"2", "y"^"-1",")"))))#
 dev.off()
################################################### #
# Copied over from 0_process_gamm.R#
# This will give us the sensitivities of RW in a pretty format.#
#
# Set up a dummy dataset for the script to run correctly#
# number of simulations to run#
#
load("processed_data/gam_results/gam1_climate_by_species.Rdata")#
source("0_Calculate_GAMM_Posteriors.R")#
# Fitting our model to the data to see if we're doing a pasable job of capturing the variance#
# If things don't match, we shoudl take our sensitiivty curves with a grain of salt#
#
n <- 100#
model.pred <- post.distns(model.gam=gam1, model.name="species_response", newdata=test, vars=predictors.all, n=n, terms=F)#
summary(model.pred$ci)#
#
# Need help dealing with the list that is set up here.  Need help with the aggregation#
model.pred2 <- model.pred$ci#
summary(model.pred2)#
dim(model.pred2)#
# Aggregating to the group level in teh same way we do below with the ring widths#
# We can then compare our modeled RW to our measured RW and see how things look#
# Sanity Check #1#
#
mean.model <- aggregate(model.pred2$mean, by = model.pred2[, c("group", "Site", "Year")], FUN=mean, na.rm=T)#
names(mean.model)[names(mean.model)=="x"] <- c("BAI.mean") #
mean.model[,"BAI.lwr"] <- aggregate(model.pred2$mean, by=model.pred2[,c("group", "Site", "Year")], FUN=quantile, probs=0.025, na.rm=T)[,"x"]#
mean.model[,"BAI.upr"] <- aggregate(model.pred2$mean, by=model.pred2[,c("group", "Site", "Year")], FUN=quantile, probs=0.975, na.rm=T)[,"x"]#
head(mean.model)#
# aggregating the raw data for graphing#
mean.rw <- aggregate(test$BA.inc, by=test[, c("group", "Site", "Year")], FUN=mean, na.rm=T)#
names(mean.rw)[names(mean.rw)=="x"]<- c("BAI.mean")                  #
# mean.rw[,"rw.lwr"] <- aggregate(test$RW, by=test[,c("group", "Site", "Year")], FUN=quantile, probs=0.025, na.rm=T)[,"x"]#
# mean.rw[,"rw.upr"] <- aggregate(test$RW, by=test[,c("group", "Site", "Year")], FUN=quantile, probs=0.975, na.rm=T)[,"x"]#
# mean.rw[,"BAI.mean"] <- aggregate(test$BA.inc, by=test[,c("group", "Site", "Year")], FUN=mean, na.rm=T)[,"x"]#
mean.rw[,"BAI.lwr"] <- aggregate(test$BA.inc, by=test[,c("group", "Site", "Year")], FUN=quantile, probs=0.025, na.rm=T)[,"x"]#
mean.rw[,"BAI.upr"] <- aggregate(test$BA.inc, by=test[,c("group", "Site", "Year")], FUN=quantile, probs=0.975, na.rm=T)[,"x"]#
head(mean.rw)#
#
mean.rw <- mean.rw[mean.rw$Site %in% sites.use,]#
#
#mean.rw$Species <- mean.rw$group#
#
# Setting up lm between the modeled values and the observed	#
dim(mean.rw)#
dim(mean.model)#
#
# mean.rw <- mean.rw[mean.rw$group %in% mean.model$group,]#
# mean.rw <- mean.rw[mean.rw$Year %in% mean.model$Year,]#
#
summary(mean.rw); #
summary(mean.model)#
#
mean.model2 <- mean.model#
names(mean.model2)[4:6] <- c("mod.mean", "mod.lwr", "mod.up")#
#
mean.model2$exp.mod.mean <- exp(mean.model2$mod.mean)#
#
sanity.gam1.df <- merge(mean.model2, mean.rw, all.x=T, all.y=T)#
summary(sanity.gam1.df)#
#
sanity.gam1.df$log.BAI <- log(sanity.gam1.df$BAI.mean)#
#
summary(sanity.gam1.df[is.na(sanity.gam1.df$mod.mean),])#
head(sanity.gam1.df[is.na(sanity.gam1.df$mod.mean),])#
#
# LM on aggregated BAI#
sanity.lm1 <- lm(mod.mean ~ log.BAI, data=sanity.gam1.df)#
gam1.resid <- resid(sanity.lm1)#
#
summary(sanity.lm1)#
#
# Checking residuals#
plot(sanity.gam1.df$log.BAI ~ gam1.resid, ylab="Residuals", xlab="log.BAI", ylim=c(-4,4), main="GAM1 Residuals")#
abline(0,0)#
#
summary(mean.rw)#
#
# Sanity Check #1 graph#
pdf("figures/gam1_sanitycheck1.pdf", width= 13, height = 8.5)#
ggplot(data=mean.rw) + facet_wrap(group ~ Site, scales="fixed") + theme_bw() +#
	# plot the data#
	geom_ribbon(aes(x=Year, ymin=BAI.lwr, ymax=BAI.upr), alpha=0.5) +#
	geom_line(aes(x=Year, y=BAI.mean), size=1) +#
	# Plot our model#
	geom_ribbon(data=mean.model, aes(x=Year, ymin=exp(BAI.lwr), ymax=exp(BAI.upr)), fill="red3", alpha=0.3) +#
	geom_line(data=mean.model, aes(x=Year, y=exp(BAI.mean)), color="red3", alpha=0.8, size=1) +#
	labs(title="Gamm Model vs. Data", x="Year", y="BAI")#
dev.off()#
# Sanity Check #2#
# Pulling random trees from both the data.use and the model.pred2 to see how they compare#
#
n <- 10#
data.use2 <- data.use[data.use$Site %in% sites.use,]#
data.use2 <- data.use2[data.use2$group %in% group.use,]#
#
sanity2.trees <- sample(test$TreeID, size=n, replace=F) #
summary(sanity2.trees)#
#
summary(mean.rw)#
summary(data.use)#
summary(model.pred2)#
#
# Sanity Check #2 graph#
pdf("figures/gam1_sanitycheck2.pdf", width= 13, height = 8.5)#
ggplot(data=test[test$TreeID %in% sanity2.trees,]) + facet_wrap(TreeID~ Site, scales="fixed") + theme_bw() +#
	# plot the data#
	#geom_ribbon(aes(x=Year, ymin=rw.lwr, ymax=rw.upr), alpha=0.5) +#
	geom_line(aes(x=Year, y=BA.inc), size=1) +#
	# Plot our model#
	#geom_ribbon(data=model.pred2[model.pred2$TreeID %in% sanity2.trees,], aes(x=Year, ymin=rw.lwr, ymax=rw.upr), fill="red3", alpha=0.3) +#
	geom_line(data=model.pred2[model.pred2$TreeID %in% sanity2.trees,], aes(x=Year, y=exp(mean)), color="red3", alpha=0.8, size=1) +#
	labs(title="Gamm Model vs. Data Indiv. Trees", x="Year", y="RW")#
dev.off()#
# lm2 for sanity check 2#
summary(model.pred2)#
summary(data.use)#
summary(test)#
#
model.pred2$RW <- test$RW#
model.pred2$BAI <- test$BA.inc#
#
# LM for indiv. trees#
sanity.lm2 <- lm(BAI ~ mean, data=model.pred2)#
summary(sanity.lm2)#
#
# sanity.lm2.quru <- lm(RW ~ mean, data=model.pred2[model.pred2$group=="quru",])#
# summary(sanity.lm2)#
# running scripts to get the weights#
source("0_Calculate_GAMM_Weights.R")#
# test2 <- test[test$group %in% c("QURU", "ACRU") & test$Year>=1980,]#
# test2 <- test[test$group %in% c("QURU") & test$Year>=1980,]#
# summary(test2)#
# gam1.test <- gamm(RW ~ s(tmean, k=3, by=group) + # tmean*Species #
#                   s(precip, k=3, by=group) +#
#                   s(log.dbh, k=3, by=group.plot) +#
#                   Canopy.Class, #
#                   random=list(Site=~1, PlotID=~1),#
#                   data=test2)#
#
predictors.all#
vars <- c("tmean", "precip", "dbh.recon", "Canopy.Class", "group.plot", "group", "group.cc")#
gam1.weights <- factor.weights(model.gam = gam1, model.name = "species_response", newdata = test, extent = "", vars = vars, limiting=T)#
#
summary(gam1.weights)#
summary(test)#
gam1.weights[,c("BA.inc", "group")] <- test[,c("BA.inc", "group")] # Adding in factors we forgot#
# Just the weights of tmean and Precip, ignoring size#
vars2 <- c("fit.tmean", "fit.precip")#
fit.spline2 <- rowSums(abs(gam1.weights[,vars2]), na.rm=T)#
for(v in vars2){#
	gam1.weights[,paste("weight", v, "2", sep=".")] <- gam1.weights[,v]/fit.spline2#
}#
summary(gam1.weights)#
#
cols.weights <- c("weight.fit.tmean.2", "weight.fit.precip.2")#
for(i in 1:nrow(gam1.weights)){#
	fweight <- abs(gam1.weights[i,cols.weights])#
	gam1.weights[i,"max2"] <- max(fweight, na.rm=T)#
	gam1.weights[i,"factor.max2"] <- c("tmean", "precip")[which(fweight==max(fweight))]#
}#
gam1.weights$factor.max2 <- as.factor(gam1.weights$factor.max2)#
summary(gam1.weights)#
#
save(gam1.weights, file="processed_data/gamm_weights/gam1_weights.Rdata")
################################################### #
# Copied over from 0_process_gamm.R#
# This will give us the sensitivities of RW in a pretty format.#
#
# Set up a dummy dataset for the script to run correctly#
# number of simulations to run#
#
load("processed_data/gam_results/gam2_climate_by_canopyclass.Rdata")#
source("0_Calculate_GAMM_Posteriors.R")#
# Fitting our model to the data to see if we're doing a pasable job of capturing the variance#
# If things don't match, we shoudl take our sensitiivty curves with a grain of salt#
#
n <- 100#
model.pred <- post.distns(model.gam=gam2, model.name="canopy_response", newdata=test, vars=predictors.all, n=n, terms=F)#
summary(model.pred$ci)#
#
# Need help dealing with the list that is set up here.  Need help with the aggregation#
model.pred2 <- model.pred$ci#
summary(model.pred2)#
dim(model.pred2)#
# Aggregating to the group level in teh same way we do below with the ring widths#
# We can then compare our modeled RW to our measured RW and see how things look#
# Sanity Check #1#
#
mean.model <- aggregate(model.pred2$mean, by = model.pred2[, c("Canopy.Class", "Site", "Year")], FUN=mean, na.rm=T)#
names(mean.model)[names(mean.model)=="x"] <- c("BAI.mean") #
mean.model[,"BAI.lwr"] <- aggregate(model.pred2$mean, by=model.pred2[,c("Canopy.Class", "Site", "Year")], FUN=quantile, probs=0.025, na.rm=T)[,"x"]#
mean.model[,"BAI.upr"] <- aggregate(model.pred2$mean, by=model.pred2[,c("Canopy.Class", "Site", "Year")], FUN=quantile, probs=0.975, na.rm=T)[,"x"]#
head(mean.model)#
#
# creating a group.cc variable for test#
test$group.cc <- as.factor(paste(test$group, test$Canopy.Class, sep="."))#
#
# aggregating the raw data for graphing#
mean.rw <- aggregate(test$BA.inc, by=test[, c("Canopy.Class", "Site", "Year")], FUN=mean, na.rm=T)#
names(mean.rw)[names(mean.rw)=="x"]<- c("BAI.mean")                  #
# mean.rw[,"rw.lwr"] <- aggregate(test$RW, by=test[,c("group", "Site", "Year")], FUN=quantile, probs=0.025, na.rm=T)[,"x"]#
# mean.rw[,"rw.upr"] <- aggregate(test$RW, by=test[,c("group", "Site", "Year")], FUN=quantile, probs=0.975, na.rm=T)[,"x"]#
# mean.rw[,"BAI.mean"] <- aggregate(test$BA.inc, by=test[,c("group", "Site", "Year")], FUN=mean, na.rm=T)[,"x"]#
mean.rw[,"BAI.lwr"] <- aggregate(test$BA.inc, by=test[,c("Canopy.Class", "Site", "Year")], FUN=quantile, probs=0.025, na.rm=T)[,"x"]#
mean.rw[,"BAI.upr"] <- aggregate(test$BA.inc, by=test[,c("Canopy.Class", "Site", "Year")], FUN=quantile, probs=0.975, na.rm=T)[,"x"]#
head(mean.rw)#
#
mean.rw <- mean.rw[mean.rw$Site %in% sites.use,]#
#
#mean.rw$Species <- mean.rw$group#
#
# Setting up lm between the modeled values and the observed	#
dim(mean.rw)#
dim(mean.model)#
#
# mean.rw <- mean.rw[mean.rw$group %in% mean.model$group,]#
# mean.rw <- mean.rw[mean.rw$Year %in% mean.model$Year,]#
#
summary(mean.rw); #
summary(mean.model)#
#
mean.model2 <- mean.model#
names(mean.model2)[4:6] <- c("mod.mean", "mod.lwr", "mod.up")#
#
summary(mean.model2)#
#
sanity.gam2.df <- merge(mean.model2, mean.rw, all.x=T, all.y=T)#
summary(sanity.gam2.df)#
#
sanity.gam2.df$log.BAI <- log(sanity.gam2.df$BAI.mean)#
summary(sanity.gam2.df[is.na(sanity.gam1.df$mod.mean),])#
head(sanity.gam2.df[is.na(sanity.gam1.df$mod.mean),])#
#
# LM on aggregated BAI#
sanity.lm2 <- lm(mod.mean ~ log.BAI, data=sanity.gam2.df)#
gam2.resid <- resid(sanity.lm2)#
summary(sanity.lm2)#
#
plot(sanity.gam2.df$log.BAI ~ gam2.resid, xlab="Log BAI", ylab="Residuals", main="Gam2 Residuals", ylim=c(-4,4))#
abline(0,0)#
# Sanity Check #1 graph#
pdf("figures/gam_sanity_check/gam2_sanitycheck1.pdf", width= 13, height = 8.5)#
ggplot(data=mean.rw) + facet_wrap(Canopy.Class ~ Site, scales="fixed") + theme_bw() +#
	# plot the data#
	geom_ribbon(aes(x=Year, ymin=BAI.lwr, ymax=BAI.upr), alpha=0.5) +#
	geom_line(aes(x=Year, y=BAI.mean), size=1) +#
	# Plot our model#
	geom_ribbon(data=mean.model, aes(x=Year, ymin=exp(BAI.lwr), ymax=exp(BAI.upr)), fill="red3", alpha=0.3) +#
	geom_line(data=mean.model, aes(x=Year, y=exp(BAI.mean)), color="red3", alpha=0.8, size=1) +#
	labs(title="Gamm Model vs. Data", x="Year", y="BAI")#
dev.off()#
# Sanity Check #2#
# Pulling random trees from both the data.use and the model.pred2 to see how they compare#
#
n <- 20#
data.use2 <- data.use[data.use$Site %in% sites.use,]#
data.use2 <- data.use2[data.use2$group %in% group.use,]#
#
sanity2.trees <- sample(st$TreeID, size=n, replace=F) #
summary(sanity2.trees)#
#
summary(mean.rw)#
summary(data.use)#
summary(model.pred2)#
#
# Sanity Check #2 graph#
pdf("figures/gam_sanity_check/gam2_sanitycheck2.pdf", width= 13, height = 8.5)#
ggplot(data=test[test$TreeID %in% sanity2.trees,]) + facet_wrap(TreeID~ Site, scales="fixed") + theme_bw() +#
	# plot the data#
	#geom_ribbon(aes(x=Year, ymin=rw.lwr, ymax=rw.upr), alpha=0.5) +#
	geom_line(aes(x=Year, y=BA.inc), size=1) +#
	# Plot our model#
	#geom_ribbon(data=model.pred2[model.pred2$TreeID %in% sanity2.trees,], aes(x=Year, ymin=rw.lwr, ymax=rw.upr), fill="red3", alpha=0.3) +#
	geom_line(data=model.pred2[model.pred2$TreeID %in% sanity2.trees,], aes(x=Year, y=exp(mean)), color="red3", alpha=0.8, size=1) +#
	geom_hline(yintercept=0, linetype="dashed")+#
	labs(title="Gamm Model vs. Data Indiv. Trees", x="Year", y="BAI")#
dev.off()#
# lm2 for sanity check 2#
summary(model.pred2)#
summary(data.use)#
summary(test)#
#
model.pred2$RW <- test$RW#
model.pred2$BAI <- test$BA.inc#
#
# LM for indiv. trees#
sanity.lm2 <- lm(BAI ~ mean, data=model.pred2)#
summary(sanity.lm2)#
#
# sanity.lm2.quru <- lm(RW ~ mean, data=model.pred2[model.pred2$group=="quru",])#
# summary(sanity.lm2)#
# running scripts to get the weights#
source("0_Calculate_GAMM_Weights.R")#
# test2 <- test[test$group %in% c("QURU", "ACRU") & test$Year>=1980,]#
# test2 <- test[test$group %in% c("QURU") & test$Year>=1980,]#
# summary(test2)#
# gam1.test <- gamm(RW ~ s(tmean, k=3, by=group) + # tmean*Species #
#                   s(precip, k=3, by=group) +#
#                   s(dbh.recon, k=3, by=group.plot) +#
#                   Canopy.Class, #
#                   random=list(Site=~1, PlotID=~1),#
#                   data=test2)#
#
predictors.all#
vars <- c("tmean", "precip", "dbh.recon", "Canopy.Class", "group.plot", "group", "group.cc")#
gam2.weights <- factor.weights(model.gam = gam2, model.name = "species_response", newdata = test, extent = "", vars = vars, limiting=T)#
#
summary(gam2.weights)#
summary(test)#
gam2.weights[,c("BA.inc", "group", "Canopy.Class")] <- test[,c("BA.inc", "group", "Canopy.Class")] # Adding in factors we forgot#
# Just the weights of tmean and Precip, ignoring size#
vars2 <- c("fit.tmean", "fit.precip")#
fit.spline2 <- rowSums(abs(gam2.weights[,vars2]), na.rm=T)#
for(v in vars2){#
	gam2.weights[,paste("weight", v, "2", sep=".")] <- gam2.weights[,v]/fit.spline2#
}#
summary(gam2.weights)#
#
cols.weights <- c("weight.fit.tmean.2", "weight.fit.precip.2")#
for(i in 1:nrow(gam2.weights)){#
	fweight <- abs(gam2.weights[i,cols.weights])#
	gam2.weights[i,"max2"] <- max(fweight, na.rm=T)#
	gam2.weights[i,"factor.max2"] <- c("tmean", "precip")[which(fweight==max(fweight))]#
}#
gam2.weights$factor.max2 <- as.factor(gam2.weights$factor.max2)#
summary(gam2.weights)#
#
save(gam2.weights, file="processed_data/gamm_weights/gam2_weights.Rdata")
################################################### #
# Copied over from 0_process_gamm.R#
# This will give us the sensitivities of RW in a pretty format.#
#
# Set up a dummy dataset for the script to run correctly#
# number of simulations to run#
#
load("processed_data/gam_results/gam3_climate_by_canopyclass_interactions.Rdata")#
source("0_Calculate_GAMM_Posteriors.R")#
# Fitting our model to the data to see if we're doing a pasable job of capturing the variance#
# If things don't match, we shoudl take our sensitiivty curves with a grain of salt#
#
n <- 100#
model.pred <- post.distns(model.gam=gam3, model.name="species_response", newdata=test, vars=predictors.all, n=n, terms=F)#
summary(model.pred$ci)#
#
# Need help dealing with the list that is set up here.  Need help with the aggregation#
model.pred2 <- model.pred$ci#
summary(model.pred2)#
dim(model.pred2)#
# Aggregating to the group level in teh same way we do below with the ring widths#
# We can then compare our modeled RW to our measured RW and see how things look#
# Sanity Check #1#
#
mean.model <- aggregate(model.pred2$mean, by = model.pred2[, c("group.cc", "Site", "Year")], FUN=mean, na.rm=T)#
names(mean.model)[names(mean.model)=="x"] <- c("BAI.mean") #
mean.model[,"BAI.lwr"] <- aggregate(model.pred2$mean, by=model.pred2[,c("group.cc", "Site", "Year")], FUN=quantile, probs=0.025, na.rm=T)[,"x"]#
mean.model[,"BAI.upr"] <- aggregate(model.pred2$mean, by=model.pred2[,c("group.cc", "Site", "Year")], FUN=quantile, probs=0.975, na.rm=T)[,"x"]#
head(mean.model)#
# aggregating the raw data for graphing#
mean.rw <- aggregate(test$BA.inc, by=test[, c("group.cc", "Site", "Year")], FUN=mean, na.rm=T)#
names(mean.rw)[names(mean.rw)=="x"]<- c("BAI.mean")                  #
# mean.rw[,"rw.lwr"] <- aggregate(test$RW, by=test[,c("group", "Site", "Year")], FUN=quantile, probs=0.025, na.rm=T)[,"x"]#
# mean.rw[,"rw.upr"] <- aggregate(test$RW, by=test[,c("group", "Site", "Year")], FUN=quantile, probs=0.975, na.rm=T)[,"x"]#
# mean.rw[,"BAI.mean"] <- aggregate(test$BA.inc, by=test[,c("group", "Site", "Year")], FUN=mean, na.rm=T)[,"x"]#
mean.rw[,"BAI.lwr"] <- aggregate(test$BA.inc, by=test[,c("group.cc", "Site", "Year")], FUN=quantile, probs=0.025, na.rm=T)[,"x"]#
mean.rw[,"BAI.upr"] <- aggregate(test$BA.inc, by=test[,c("group.cc", "Site", "Year")], FUN=quantile, probs=0.975, na.rm=T)[,"x"]#
head(mean.rw)#
#
mean.rw <- mean.rw[mean.rw$Site %in% sites.use,]#
#
#mean.rw$Species <- mean.rw$group#
#
# Setting up lm between the modeled values and the observed	#
dim(mean.rw)#
dim(mean.model)#
#
# mean.rw <- mean.rw[mean.rw$group %in% mean.model$group,]#
# mean.rw <- mean.rw[mean.rw$Year %in% mean.model$Year,]#
#
summary(mean.rw); #
summary(mean.model)#
#
mean.model2 <- mean.model#
names(mean.model2)[4:6] <- c("mod.mean", "mod.lwr", "mod.up")#
#
sanity.gam3.df <- merge(mean.model2, mean.rw, all.x=T, all.y=T)#
summary(sanity.gam3.df)#
summary(sanity.gam3.df[is.na(sanity.gam3.df$mod.mean),])#
head(sanity.gam3.df[is.na(sanity.gam3.df$mod.mean),])#
#
sanity.gam3.df$log.BAI <- log(sanity.gam3.df$BAI.mean)#
#
# LM on aggregated BAI#
sanity.lm3 <- lm(mod.mean ~ log.BAI, data=sanity.gam3.df)#
lm3.resid <- resid(sanity.lm3)#
#
summary(sanity.lm3)#
#
# Graphing residuals#
#
plot(sanity.gam3.df$log.BAI ~ lm3.resid, xlab="Log.BAI", ylab="Residuals", main="GAM3 residuals", ylim=c(-4,4))#
abline(0,0)#
#
# Sanity Check #1 graph#
pdf("figures/gam_sanity_check/gam3_sanitycheck1.pdf", width= 13, height = 8.5)#
ggplot(data=mean.rw) + facet_wrap(group.cc ~ Site, scales="fixed") + theme_bw() +#
	# plot the data#
	geom_ribbon(aes(x=Year, ymin=BAI.lwr, ymax=BAI.upr), alpha=0.5) +#
	geom_line(aes(x=Year, y=BAI.mean), size=1) +#
	# Plot our model#
	geom_ribbon(data=mean.model, aes(x=Year, ymin=exp(BAI.lwr), ymax=exp(BAI.upr)), fill="red3", alpha=0.3) +#
	geom_line(data=mean.model, aes(x=Year, y=exp(BAI.mean)), color="red3", alpha=0.8, size=1) +#
	labs(title="Gamm Model vs. Data", x="Year", y="BAI")#
dev.off()#
# Sanity Check #2#
# Pulling random trees from both the data.use and the model.pred2 to see how they compare#
#
n <- 10#
data.use2 <- data.use[data.use$Site %in% sites.use,]#
data.use2 <- data.use2[data.use2$group %in% group.use,]#
#
sanity2.trees <- sample(test2$TreeID, size=n, replace=F) #
summary(sanity2.trees)#
#
summary(mean.rw)#
summary(data.use)#
summary(model.pred2)#
#
# Sanity Check #2 graph#
pdf("figures/gam_sanity_check/gam3_sanitycheck2.pdf", width= 13, height = 8.5)#
ggplot(data=test[test$TreeID %in% sanity2.trees,]) + facet_wrap(TreeID~ Site, scales="fixed") + theme_bw() +#
	# plot the data#
	#geom_ribbon(aes(x=Year, ymin=rw.lwr, ymax=rw.upr), alpha=0.5) +#
	geom_line(aes(x=Year, y=BA.inc), size=1) +#
	# Plot our model#
	#geom_ribbon(data=model.pred2[model.pred2$TreeID %in% sanity2.trees,], aes(x=Year, ymin=rw.lwr, ymax=rw.upr), fill="red3", alpha=0.3) +#
	geom_line(data=model.pred2[model.pred2$TreeID %in% sanity2.trees,], aes(x=Year, y= exp(mean)), color="red3", alpha=0.8, size=1) +#
	labs(title="Gamm Model vs. Data Indiv. Trees", x="Year", y="RW")#
dev.off()#
# lm2 for sanity check 2#
summary(model.pred2)#
summary(data.use)#
summary(test)#
#
model.pred2$RW <- test$RW#
model.pred2$BAI <- test$BA.inc#
#
# LM for indiv. trees#
sanity.lm2 <- lm(BAI ~ mean, data=model.pred2)#
summary(sanity.lm2)#
#
# sanity.lm2.quru <- lm(RW ~ mean, data=model.pred2[model.pred2$group=="quru",])#
# summary(sanity.lm2)#
# running scripts to get the weights#
source("0_Calculate_GAMM_Weights.R")#
# test2 <- test[test$group %in% c("QURU", "ACRU") & test$Year>=1980,]#
# test2 <- test[test$group %in% c("QURU") & test$Year>=1980,]#
# summary(test2)#
# gam1.test <- gamm(RW ~ s(tmean, k=3, by=group) + # tmean*Species #
#                   s(precip, k=3, by=group) +#
#                   s(dbh.recon, k=3, by=group.plot) +#
#                   Canopy.Class, #
#                   random=list(Site=~1, PlotID=~1),#
#                   data=test2)#
#
predictors.all#
vars <- c("tmean", "precip", "dbh.recon", "Canopy.Class", "group.plot", "group", "group.cc")#
gam3.weights <- factor.weights(model.gam = gam3, model.name = "species_response", newdata = test, extent = "", vars = vars, limiting=T)#
#
summary(gam3.weights)#
summary(test2)#
gam3.weights[,c("BA.inc", "group", "group.cc")] <- test[,c("BA.inc", "group", "group.cc")] # Adding in factors we forgot#
# Just the weights of tmean and Precip, ignoring size#
vars2 <- c("fit.tmean", "fit.precip")#
fit.spline2 <- rowSums(abs(gam3.weights[,vars2]), na.rm=T)#
for(v in vars2){#
	gam3.weights[,paste("weight", v, "2", sep=".")] <- gam3.weights[,v]/fit.spline2#
}#
summary(gam3.weights)#
#
cols.weights <- c("weight.fit.tmean.2", "weight.fit.precip.2")#
for(i in 1:nrow(gam3.weights)){#
	fweight <- abs(gam3.weights[i,cols.weights])#
	gam3.weights[i,"max2"] <- max(fweight, na.rm=T)#
	gam3.weights[i,"factor.max2"] <- c("tmean", "precip")[which(fweight==max(fweight))]#
}#
gam3.weights$factor.max2 <- as.factor(gam3.weights$factor.max2)#
summary(gam3.weights)#
#
save(gam3.weights, file="processed_data/gamm_weights/gam3_weights.Rdata")
library(ggplot2)#
library(car)#
load(file="processed_data/gamm_weights/gam1_weights.Rdata")#
#
summary(gam1.weights)#
factors.fits <- c("fit.tmean", "fit.precip", "fit.dbh.recon", "fit.full", "BA.inc")#
factors.weights <- c("weight.tmean", "weight.dbh.recon", "weight.precip")#
#
# Transforming things back to BA.inc rather than log#
gam1.weights[,which(substr(names(gam1.weights),1,3)=="fit")] <- exp(gam1.weights[,which(substr(names(gam1.weights),1,3)=="fit")] )#
#
othervars <- c("Year", "Site", "group", "Model")#
#
data.graph1 <- aggregate(gam1.weights[,factors.fits], by = gam1.weights[,othervars], FUN= mean, na.rm=T)#
#
data.graph1[,paste(factors.fits, "upr", sep=".")] <- aggregate(gam1.weights[,factors.fits], by = gam1.weights[,othervars], FUN= quantile, prob= 0.975, na.rm=T)[,factors.fits]#
#
data.graph1[,paste(factors.fits, "lwr", sep=".")] <- aggregate(gam1.weights[,factors.fits], by = gam1.weights[,othervars], FUN= quantile, prob= 0.025, na.rm=T)[,factors.fits]#
#
summary(data.graph1)#
#
data.graph2 <- aggregate(abs(gam1.weights[,factors.weights]), by = gam1.weights[,othervars], FUN= mean, na.rm=T)#
#
data.graph2[,paste(factors.weights, "upr", sep=".")] <- aggregate(abs(gam1.weights[,factors.weights]), by = gam1.weights[,othervars], FUN= quantile, prob= 0.975, na.rm=T)[,factors.weights]#
#
data.graph2[,paste(factors.weights, "lwr", sep=".")] <- aggregate(abs(gam1.weights[,factors.weights]), by = gam1.weights[,othervars], FUN= quantile, prob= 0.025, na.rm=T)[,factors.weights]#
#
summary(data.graph2)#
#
data.graph <- merge(data.graph1, data.graph2, all.x=T, all.y=T)#
#
# data.graph <- gam1.weights[gam1.weights$TreeID== "MMA014",]#
summary(data.graph)#
gam1.weights$wts.check <- rowSums(abs(gam1.weights[,c("weight.tmean", "weight.precip", "weight.dbh.recon")]))#
data.graph$wts.check <- rowSums(abs(data.graph[,c("weight.tmean", "weight.precip", "weight.dbh.recon")]))#
#
summary(gam1.weights)#
summary(data.graph)#
#
# Ordering the data for graphing#
#
data.graph<- data.graph[order(data.graph$Year, data.graph$group, data.graph$Site, decreasing=F),]#
summary(data.graph)#
#
plot.rgb <- function(STATE, SPP, SIZE){	geom_line(data=data.graph[data.graph$State==STATE & data.graph$group==SPP,],aes(x=Year, y=fit.full), size=SIZE,#
  		        color=rgb(abs(data.graph[data.graph$State==STATE & data.graph$group==SPP,"weight.tmean"     ]), # red#
                        abs(data.graph[data.graph$State==STATE & data.graph$group==SPP,"weight.dbh.recon"     ]), # green#
                        abs(data.graph[data.graph$State==STATE & data.graph$group==SPP,"weight.precip"   ]))) }   # blue#
#
# Plotting the Obs and modeled with influence coloring#
data.graph$State <- recode(data.graph$Site, "'Howland' = 'ME';'Harvard' = 'MA';'Morgan Monroe State Park' = 'IN';'Missouri Ozark' = 'MO';'Oak Openings Toledo' = 'OH'")#
data.graph$State <- factor(data.graph$State, levels=c("MO", "IN", "OH", "MA", "ME"))#
#
summary(data.graph[!data.graph$group %in% c("BETULA", "CARYA", "FAGR", "FRAX", "SAAL"),])#
#
pdf("figures/gam1_Species_BAI_limiting_factor.pdf", width= 13, height = 8.5)#
ggplot(data.graph[!data.graph$group %in% c("BETULA", "CARYA", "FAGR", "FRAX", "SAAL"),]) + facet_grid(group~State) +#
	scale_x_continuous(expand=c(0,0)) +#
	scale_y_continuous(expand=c(0,0)) +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_line(aes(x=Year, y=BA.inc), size=2, alpha=0.5) +#
	geom_ribbon(aes(x=Year, ymin=BA.inc.lwr, ymax=BA.inc.upr), alpha=0.3) +#
	geom_line(aes(x=Year, y = 0), linetype="dashed") +#
	plot.rgb("MA", "ACRU", 3) +#
	plot.rgb("MA", "PIST", 3) +#
	plot.rgb("MA", "TSCA", 3) +#
	plot.rgb("MA", "QURU", 3) +#
	plot.rgb("MA", "QUVE", 3) +#
	#plot.rgb("MA", "FRAX", 3) +#
	#plot.rgb("MA", "BETULA", 3) +#
	plot.rgb("MA", "ACSA", 3) +#
	plot.rgb("MA", "QUAL", 3) +#
	#plot.rgb("MA", "FAGR", 3) +#
	plot.rgb("MA", "ULRU", 3) +#
	#plot.rgb("MA", "CARYA", 3) +#
	#plot.rgb("MA", "SAAL", 3) +#
	plot.rgb("ME", "ACRU", 3) +#
	plot.rgb("ME", "PIST", 3) +#
	plot.rgb("ME", "TSCA", 3) +#
	plot.rgb("ME", "QURU", 3) +#
	plot.rgb("ME", "QUVE", 3) +#
	#plot.rgb("ME", "FRAX", 3) +#
	#plot.rgb("ME", "BETULA", 3) +#
	plot.rgb("ME", "ACSA", 3) +#
	plot.rgb("ME", "QUAL", 3) +#
	#plot.rgb("ME", "FAGR", 3) +#
	plot.rgb("ME", "ULRU", 3) +#
	#plot.rgb("ME", "CARYA", 3) +#
	#plot.rgb("ME", "SAAL", 3) +#
	plot.rgb("MO", "ACRU", 3) +#
	plot.rgb("MO", "PIST", 3) +#
	plot.rgb("MO", "TSCA", 3) +#
	plot.rgb("MO", "QURU", 3) +#
	plot.rgb("MO", "QUVE", 3) +#
	#plot.rgb("MO", "FRAX", 3) +#
	#plot.rgb("MO", "BETULA", 3) +#
	plot.rgb("MO", "ACSA", 3) +#
	plot.rgb("MO", "QUAL", 3) +#
	#plot.rgb("MO", "FAGR", 3) +#
	plot.rgb("MO", "ULRU", 3) +#
	#plot.rgb("MO", "CARYA", 3) +#
	#plot.rgb("MO", "SAAL", 3) +#
#
	plot.rgb("IN", "ACRU", 3) +#
	plot.rgb("IN", "PIST", 3) +#
	plot.rgb("IN", "TSCA", 3) +#
	plot.rgb("IN", "QURU", 3) +#
	plot.rgb("IN", "QUVE", 3) +#
	#plot.rgb("IN", "FRAX", 3) +#
	#plot.rgb("IN", "BETULA", 3) +#
	plot.rgb("IN", "ACSA", 3) +#
	plot.rgb("IN", "QUAL", 3) +#
	#plot.rgb("IN", "FAGR", 3) +#
	plot.rgb("IN", "ULRU", 3) +#
	#plot.rgb("IN", "CARYA", 3) +#
	#plot.rgb("IN", "SAAL", 3) +#
	plot.rgb("OH", "ACRU", 3) +#
	plot.rgb("OH", "PIST", 3) +#
	plot.rgb("OH", "TSCA", 3) +#
	plot.rgb("OH", "QURU", 3) +#
	plot.rgb("OH", "QUVE", 3) +#
	#plot.rgb("OH", "FRAX", 3) +#
	#plot.rgb("OH", "BETULA", 3) +#
	plot.rgb("OH", "ACSA", 3) +#
	plot.rgb("OH", "QUAL", 3) +#
	plot.rgb("OH", "FAGR", 3) +#
	plot.rgb("OH", "ULRU", 3) +#
	#plot.rgb("OH", "CARYA", 3) +#
	#plot.rgb("OH", "SAAL", 3)+#
	labs(title= "Species", x="Year", y = expression(bold(paste("BAI (mm"^"2", "y"^"-1",")")))) +#
	poster.theme2#
dev.off()#
# Just plotting the BAI fits#
summary(data.graph)#
ggplot(data.graph) + facet_wrap(group~Site) +#
  scale_x_continuous(expand=c(0,0), name="Year") +#
  scale_y_continuous(expand=c(0,0), name="BAI") +#
  # facet_wrap(~TreeID, scales="free_y", space="free") +#
  # geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
  geom_line(aes(x=Year, y=fit.full), size=2, alpha=0.5) +#
  geom_ribbon(aes(x=Year, ymin=fit.full.lwr, ymax=fit.full.upr), alpha=0.3)#
#
# Plotting the Effects#
pdf("figures/gam1_influence_in_time.pdf", width= 13, height = 8.5)#
#
ggplot(data.graph[!data.graph$group %in% c("BETULA", "CARYA", "FAGR", "FRAX", "SAAL"),]) + facet_grid(group~Site) +#
	scale_x_continuous(expand=c(0,0), name="Year") +#
	scale_y_continuous(expand=c(0,0), name="Effect on RW (in mm)") +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_line(aes(x=Year, y=fit.tmean), size=2, color="red") +#
	geom_line(aes(x=Year, y=fit.precip), size=2, color="blue") +#
	geom_line(aes(x=Year, y=fit.dbh.recon), size=2, color="green")#
dev.off()#
#
#------------------------------------#
# Just MMF and Harvard#
summary(data.graph)#
sites.use2 <- c("Harvard", "Morgan Monroe State Park")#
#
pdf("figures/gam1_Species_BAI_limiting_factor_ameridendro.pdf", width= 13, height = 8.5)#
ggplot(data.graph[data.graph$Site %in% sites.use2,]) + facet_grid(group~Site) +#
	scale_x_continuous(expand=c(0,0), name="Year") +#
	scale_y_continuous(expand=c(0,0), name="BAI") +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_line(aes(x=Year, y=BA.inc), size=2, alpha=0.5) +#
	geom_ribbon(aes(x=Year, ymin=BA.inc.lwr, ymax=BA.inc.upr), alpha=0.3) +#
	geom_line(aes(x=Year, y = 0), linetype="dashed") +#
	plot.rgb("Harvard", "ACRU", 3) +#
	plot.rgb("Harvard", "PIST", 3) +#
	plot.rgb("Harvard", "TSCA", 3) +#
	plot.rgb("Harvard", "QURU", 3) +#
	plot.rgb("Harvard", "QUVE", 3) +#
	plot.rgb("Harvard", "FRAX", 3) +#
	plot.rgb("Harvard", "BETULA", 3) +#
	plot.rgb("Harvard", "ACSA", 3) +#
	plot.rgb("Harvard", "QUAL", 3) +#
	plot.rgb("Harvard", "FAGR", 3) +#
	plot.rgb("Harvard", "ULRU", 3) +#
	plot.rgb("Harvard", "CARYA", 3) +#
	plot.rgb("Harvard", "SAAL", 3) +#
	plot.rgb("Morgan Monroe State Park", "ACRU", 3) +#
	plot.rgb("Morgan Monroe State Park", "PIST", 3) +#
	plot.rgb("Morgan Monroe State Park", "TSCA", 3) +#
	plot.rgb("Morgan Monroe State Park", "QURU", 3) +#
	plot.rgb("Morgan Monroe State Park", "QUVE", 3) +#
	plot.rgb("Morgan Monroe State Park", "FRAX", 3) +#
	plot.rgb("Morgan Monroe State Park", "BETULA", 3) +#
	plot.rgb("Morgan Monroe State Park", "ACSA", 3) +#
	plot.rgb("Morgan Monroe State Park", "QUAL", 3) +#
	plot.rgb("Morgan Monroe State Park", "FAGR", 3) +#
	plot.rgb("Morgan Monroe State Park", "ULRU", 3) +#
	plot.rgb("Morgan Monroe State Park", "CARYA", 3) +#
	plot.rgb("Morgan Monroe State Park", "SAAL", 3) +#
	poster.theme2#
dev.off()#
# Just plotting the BAI fits#
summary(data.graph)#
ggplot(data.graph[data.graph$Site %in% sites.use2,]) + facet_wrap(group~Site) +#
  scale_x_continuous(expand=c(0,0), name="Year") +#
  scale_y_continuous(expand=c(0,0), name="BAI") +#
  # facet_wrap(~TreeID, scales="free_y", space="free") +#
  # geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
  geom_line(aes(x=Year, y=fit.full), size=2, alpha=0.5) +#
  geom_ribbon(aes(x=Year, ymin=fit.full.lwr, ymax=fit.full.upr), alpha=0.3)#
#
# Plotting the Effects#
pdf("figures/gam1_influence_in_time_ameridendro.pdf", width= 13, height = 8.5)#
#
ggplot(data.graph[data.graph$Site %in% sites.use2,]) + facet_grid(group~Site) +#
	scale_x_continuous(expand=c(0,0), name="Year") +#
	scale_y_continuous(expand=c(0,0), name="Effect on RW (in mm)") +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_line(aes(x=Year, y=fit.tmean), size=2, color="red") +#
	geom_line(aes(x=Year, y=fit.precip), size=2, color="blue") +#
	geom_line(aes(x=Year, y=fit.dbh.recon), size=2, color="green")+ #
	poster.theme2#
dev.off()
library(ggplot2)#
#
load(file="processed_data/gamm_weights/gam2_weights.Rdata")#
#
summary(gam2.weights)#
factors.fits <- c("fit.tmean", "fit.precip", "fit.dbh.recon", "fit.full", "BA.inc")#
factors.weights <- c("weight.tmean", "weight.dbh.recon", "weight.precip")#
#
# Transforming things back to BA.inc rather than log#
gam2.weights[,which(substr(names(gam2.weights),1,3)=="fit")] <- exp(gam2.weights[,which(substr(names(gam2.weights),1,3)=="fit")] )#
othervars <- c("Year", "Site", "Canopy.Class", "Model")#
#
data.graph1 <- aggregate(gam2.weights[,factors.fits], by = gam2.weights[,othervars], FUN= mean, na.rm=T)#
#
data.graph1[,paste(factors.fits, "upr", sep=".")] <- aggregate(gam2.weights[,factors.fits], by = gam2.weights[,othervars], FUN= quantile, prob= 0.975, na.rm=T)[,factors.fits]#
#
data.graph1[,paste(factors.fits, "lwr", sep=".")] <- aggregate(gam2.weights[,factors.fits], by = gam2.weights[,othervars], FUN= quantile, prob= 0.025, na.rm=T)[,factors.fits]#
#
summary(data.graph1)#
#
data.graph2 <- aggregate(abs(gam2.weights[,factors.weights]), by = gam2.weights[,othervars], FUN= mean, na.rm=T)#
#
data.graph2[,paste(factors.weights, "upr", sep=".")] <- aggregate(abs(gam2.weights[,factors.weights]), by = gam2.weights[,othervars], FUN= quantile, prob= 0.975, na.rm=T)[,factors.weights]#
#
data.graph2[,paste(factors.weights, "lwr", sep=".")] <- aggregate(abs(gam2.weights[,factors.weights]), by = gam2.weights[,othervars], FUN= quantile, prob= 0.025, na.rm=T)[,factors.weights]#
#
summary(data.graph2)#
#
data.graph <- merge(data.graph1, data.graph2, all.x=T, all.y=T)#
#
# data.graph <- gam2.weights[gam2.weights$TreeID== "MMA014",]#
summary(data.graph)#
gam2.weights$wts.check <- rowSums(abs(gam2.weights[,c("weight.tmean", "weight.precip", "weight.dbh.recon")]))#
data.graph$wts.check <- rowSums(abs(data.graph[,c("weight.tmean", "weight.precip", "weight.dbh.recon")]))#
#
summary(gam2.weights)#
summary(data.graph)#
#
# Ordering the data for graphing#
#
data.graph<- data.graph[order(data.graph$Year, data.graph$Canopy.Class, data.graph$Site, decreasing=F),]#
plot.rgb <- function(STATE, CC, SIZE){	geom_line(data=data.graph[data.graph$State==STATE & data.graph$Canopy.Class==CC,],aes(x=Year, y=fit.full), size=SIZE,#
  		        color=rgb(abs(data.graph[data.graph$State==STATE & data.graph$Canopy.Class==CC,"weight.tmean"     ]), # red#
                        abs(data.graph[data.graph$State==STATE & data.graph$Canopy.Class==CC,"weight.dbh.recon"     ]), # green#
                        abs(data.graph[data.graph$State==STATE & data.graph$Canopy.Class==CC,"weight.precip"   ]))) }   # blue#
# Plotting the Obs and modeled with influence coloring#
data.graph$State <- recode(data.graph$Site, "'Howland' = 'ME';'Harvard' = 'MA';'Morgan Monroe State Park' = 'IN';'Missouri Ozark' = 'MO';'Oak Openings Toledo' = 'OH'")#
data.graph$State <- factor(data.graph$State, levels=c("MO", "IN", "OH", "MA", "ME"))#
#
# Plotting the Obs and modeled with influence coloring#
pdf("figures/gam2_canopyclass_BAI_limiting_factors.pdf", width= 13, height = 8.5)#
ggplot(data.graph) + facet_grid(Canopy.Class~State) +#
	scale_x_continuous(expand=c(0,0)) +#
	scale_y_continuous(expand=c(0,0)) +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_line(aes(x=Year, y=BA.inc), size=2, alpha=0.5) +#
	geom_ribbon(aes(x=Year, ymin=BA.inc.lwr, ymax=BA.inc.upr), alpha=0.3) +#
	geom_line(aes(x=Year, y = 0), linetype="dashed") +#
	plot.rgb("MA", "C", 3) +#
	plot.rgb("MA", "D", 3) +#
	plot.rgb("MA", "I", 3) +#
	plot.rgb("MA", "S", 3) +#
	plot.rgb("ME", "C", 3) +#
	plot.rgb("ME", "D", 3) +#
	plot.rgb("ME", "I", 3) +#
	plot.rgb("ME", "S", 3) +#
	plot.rgb("MO", "C", 3) +#
	plot.rgb("MO", "D", 3) +#
	plot.rgb("MO", "I", 3) +#
	plot.rgb("MO", "S", 3) +#
	plot.rgb("IN", "C", 3) +#
	plot.rgb("IN", "D", 3) +#
	plot.rgb("IN", "I", 3) +#
	plot.rgb("IN", "S", 3) +#
	plot.rgb("OH", "C", 3) +#
	plot.rgb("OH", "D", 3) +#
	plot.rgb("OH", "I", 3) +#
	plot.rgb("OH", "S", 3)+#
	labs(title= "Canopy Class", x="Year", y = expression(bold(paste("BAI (mm"^"2", "y"^"-1",")")))) +#
	poster.theme2#
dev.off()		#
# Just plotting the BAI fits#
summary(data.graph)#
#
ggplot(data.graph) + facet_wrap(group~Site) +#
  scale_x_continuous(expand=c(0,0), name="Year") +#
  scale_y_continuous(expand=c(0,0), name="BAI") +#
  # facet_wrap(~TreeID, scales="free_y", space="free") +#
  # geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
  geom_line(aes(x=Year, y=fit.full), size=2, alpha=0.5) +#
  geom_ribbon(aes(x=Year, ymin=fit.full.lwr, ymax=fit.full.upr), alpha=0.3)#
#
# Plotting the Effects#
#
pdf("figures/gam2_influence_in_time.pdf", width= 13, height = 8.5)#
ggplot(data.graph) + facet_grid(Canopy.Class~Site) +#
	scale_x_continuous(expand=c(0,0), name="Year") +#
	scale_y_continuous(expand=c(0,0), name="Effect on RW (in mm)") +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_line(aes(x=Year, y=fit.tmean), size=2, color="red") +#
	geom_line(aes(x=Year, y=fit.precip), size=2, color="blue") +#
	geom_line(aes(x=Year, y=fit.dbh.recon), size=2, color="green")#
dev.off()	#
#---------------------------------------------------#
# Plotting just MMF and Harvard for Ameridendro#
#
sites.use2 <- c("Harvard", "Morgan Monroe State Park")#
#
# Plotting the Obs and modeled with influence coloring#
pdf("figures/gam2_canopyclass_BAI_limiting_factors_ameridendro.pdf", width= 13, height = 8.5)#
ggplot(data.graph[data.graph$Site %in% sites.use2,]) + facet_grid(Canopy.Class~Site) +#
	scale_x_continuous(expand=c(0,0), name="Year") +#
	scale_y_continuous(expand=c(0,0), name="BAI") +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_line(aes(x=Year, y=BA.inc), size=2, alpha=0.5) +#
	geom_ribbon(aes(x=Year, ymin=BA.inc.lwr, ymax=BA.inc.upr), alpha=0.3) +#
	geom_line(aes(x=Year, y = 0), linetype="dashed") +#
	plot.rgb("Harvard", "C", 3) +#
	plot.rgb("Harvard", "D", 3) +#
	plot.rgb("Harvard", "I", 3) +#
	plot.rgb("Harvard", "S", 3) +#
	plot.rgb("Morgan Monroe State Park", "C", 3) +#
	plot.rgb("Morgan Monroe State Park", "D", 3) +#
	plot.rgb("Morgan Monroe State Park", "I", 3) +#
	plot.rgb("Morgan Monroe State Park", "S", 3) +#
	poster.theme2#
dev.off()		#
# Just plotting the BAI fits#
summary(data.graph)#
#
ggplot(data.graph) + facet_wrap(group~Site) +#
  scale_x_continuous(expand=c(0,0), name="Year") +#
  scale_y_continuous(expand=c(0,0), name="BAI") +#
  # facet_wrap(~TreeID, scales="free_y", space="free") +#
  # geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
  geom_line(aes(x=Year, y=fit.full), size=2, alpha=0.5) +#
  geom_ribbon(aes(x=Year, ymin=fit.full.lwr, ymax=fit.full.upr), alpha=0.3)#
#
# Plotting the Effects#
#
pdf("figures/gam2_influence_in_time_ameridendro.pdf", width= 13, height = 8.5)#
ggplot(data.graph[data.graph$Site %in% sites.use2,]) + facet_grid(Canopy.Class~Site) +#
	scale_x_continuous(expand=c(0,0), name="Year") +#
	scale_y_continuous(expand=c(0,0), name="Effect on RW (in mm)") +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_line(aes(x=Year, y=fit.tmean), size=2, color="red") +#
	geom_line(aes(x=Year, y=fit.precip), size=2, color="blue") +#
	geom_line(aes(x=Year, y=fit.dbh.recon), size=2, color="green") +#
	poster.theme2#
dev.off()
library(ggplot2)#
library(stringr)#
load(file="processed_data/gamm_weights/gam3_weights.Rdata")#
#
summary(gam3.weights)#
factors.fits <- c("fit.tmean", "fit.precip", "fit.dbh.recon", "fit.full", "BA.inc")#
factors.weights <- c("weight.tmean", "weight.dbh.recon", "weight.precip")#
#
# Transforming things back to BA.inc rather than log#
gam3.weights[,which(substr(names(gam3.weights),1,3)=="fit")] <- exp(gam3.weights[,which(substr(names(gam3.weights),1,3)=="fit")] )#
othervars <- c("Year", "Site", "group.cc", "Model")#
#
data.graph1 <- aggregate(gam3.weights[,factors.fits], by = gam3.weights[,othervars], FUN= mean, na.rm=T)#
#
data.graph1[,paste(factors.fits, "upr", sep=".")] <- aggregate(gam3.weights[,factors.fits], by = gam3.weights[,othervars], FUN= quantile, prob= 0.975, na.rm=T)[,factors.fits]#
#
data.graph1[,paste(factors.fits, "lwr", sep=".")] <- aggregate(gam3.weights[,factors.fits], by = gam3.weights[,othervars], FUN= quantile, prob= 0.025, na.rm=T)[,factors.fits]#
#
summary(data.graph1)#
#
data.graph2 <- aggregate(abs(gam3.weights[,factors.weights]), by = gam3.weights[,othervars], FUN= mean, na.rm=T)#
#
data.graph2[,paste(factors.weights, "upr", sep=".")] <- aggregate(abs(gam3.weights[,factors.weights]), by = gam3.weights[,othervars], FUN= quantile, prob= 0.975, na.rm=T)[,factors.weights]#
#
data.graph2[,paste(factors.weights, "lwr", sep=".")] <- aggregate(abs(gam3.weights[,factors.weights]), by = gam3.weights[,othervars], FUN= quantile, prob= 0.025, na.rm=T)[,factors.weights]#
#
summary(data.graph2)#
#
data.graph <- merge(data.graph1, data.graph2, all.x=T, all.y=T)#
#
# data.graph <- gam3.weights[gam3.weights$TreeID== "MMA014",]#
summary(data.graph)#
gam3.weights$wts.check <- rowSums(abs(gam3.weights[,c("weight.tmean", "weight.precip", "weight.dbh.recon")]))#
data.graph$wts.check <- rowSums(abs(data.graph[,c("weight.tmean", "weight.precip", "weight.dbh.recon")]))#
#
summary(gam3.weights)#
summary(data.graph)#
#
# Ordering the data for graphing#
#
data.graph<- data.graph[order(data.graph$Year, data.graph$group.cc, data.graph$Site, decreasing=F),]#
plot.rgb <- function(STATE, GC, SIZE){	geom_line(data=data.graph[data.graph$State==STATE & data.graph$group.cc==GC,],aes(x=Year, y=fit.full), size=SIZE,#
  		        color=rgb(abs(data.graph[data.graph$State==STATE & data.graph$group.cc==GC,"weight.tmean"     ]), # red#
                        abs(data.graph[data.graph$State==STATE & data.graph$group.cc==GC,"weight.dbh.recon"     ]), # green#
                        abs(data.graph[data.graph$State==STATE & data.graph$group.cc==GC,"weight.precip"   ]))) }   # blue#
# Plotting the Obs and modeled with influence coloring#
data.graph$State <- recode(data.graph$Site, "'Howland' = 'ME';'Harvard' = 'MA';'Morgan Monroe State Park' = 'IN';'Missouri Ozark' = 'MO';'Oak Openings Toledo' = 'OH'")#
data.graph$State <- factor(data.graph$State, levels=c("MO", "IN", "OH", "MA", "ME"))#
#
for(i in unique(data.graph$group.cc)){#
	data.graph[data.graph$group.cc==i,"Canopy.Class"] <- str_sub(data.graph[data.graph$group.cc==i,"group.cc"], -1)#
	data.graph[data.graph$group.cc==i,"group"] <- substr(data.graph[data.graph$group.cc==i,"group.cc"], 1,4)#
}#
data.graph$Canopy.Class <- as.factor(data.graph$Canopy.Class)#
data.graph$group <- as.factor(data.graph$group)#
summary(data.graph)#
# Plotting the Obs and modeled with influence coloring#
pdf("figures/gam3/gam3_SPP_CC_BAI_limiting_factors_All.pdf", width= 13, height = 8.5)#
ggplot(data = data.graph[!data.graph$group.cc %in% c("BETULA.D", "CARYA.D", "FAGR.D", "FRAX.D", "SAAL.D",#
	"BETULA.I", "CARYA.I", "FAGR.I", "FRAX.I", "SAAL.I",#
	"BETULA.S", "CARYA.S", "FAGR.S", "FRAX.S", "SAAL.S"),]) + #
	facet_grid(group.cc ~ State) +#
	scale_x_continuous(expand=c(0,0), name="Year") +#
	scale_y_continuous(expand=c(0,0), name="BAI") +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_line(aes(x=Year, y=BA.inc), size=2, alpha=0.5) +#
	geom_ribbon(aes(x=Year, ymin=BA.inc.lwr, ymax=BA.inc.upr), alpha=0.3) +#
	geom_line(aes(x=Year, y = 0), linetype="dashed") +#
	# Harvard#
	plot.rgb("MA", "ACRU.C", 3) +#
	plot.rgb("MA", "ACRU.D", 3) +#
	plot.rgb("MA", "ACRU.I", 3) +#
	plot.rgb("MA", "ACRU.S", 3) +#
	plot.rgb("MA", "PIST.C", 3) +#
	plot.rgb("MA", "PIST.D", 3) +#
	plot.rgb("MA", "PIST.I", 3) +#
	plot.rgb("MA", "PIST.S", 3) +#
#
	plot.rgb("MA", "TSCA.C", 3) +#
	plot.rgb("MA", "TSCA.D", 3) +#
	plot.rgb("MA", "TSCA.I", 3) +#
	plot.rgb("MA", "TSCA.S", 3) +#
	plot.rgb("MA", "QURU.C", 3) +#
	plot.rgb("MA", "QURU.D", 3) +#
	plot.rgb("MA", "QURU.I", 3) +#
	plot.rgb("MA", "QURU.S", 3) +#
	plot.rgb("MA", "QUVE.C", 3) +#
	plot.rgb("MA", "QUVE.D", 3) +#
	plot.rgb("MA", "QUVE.I", 3) +#
	plot.rgb("MA", "QUVE.S", 3) +#
	# plot.rgb("MA", "FRAX.C", 3) +#
	# plot.rgb("MA", "FRAX.D", 3) +#
	# plot.rgb("MA", "FRAX.I", 3) +#
	# plot.rgb("MA", "FRAX.S", 3) +#
#
	# plot.rgb("MA", "BETULA.C", 3) +#
	# plot.rgb("MA", "BETULA.D", 3) +#
	# plot.rgb("MA", "BETULA.I", 3) +#
	# plot.rgb("MA", "BETULA.S", 3) +#
	plot.rgb("MA", "ACSA.C", 3) +#
	plot.rgb("MA", "ACSA.D", 3) +#
	plot.rgb("MA", "ACSA.I", 3) +#
	plot.rgb("MA", "ACSA.S", 3) +#
	plot.rgb("MA", "QUAL.C", 3) +#
	plot.rgb("MA", "QUAL.D", 3) +#
	plot.rgb("MA", "QUAL.I", 3) +#
	plot.rgb("MA", "QUAL.S", 3) +#
	# plot.rgb("MA", "FAGR.C", 3) +#
	# plot.rgb("MA", "FAGR.D", 3) +#
	# plot.rgb("MA", "FAGR.I", 3) +#
	# plot.rgb("MA", "FAGR.S", 3) +#
	plot.rgb("MA", "ULRU.C", 3) +#
	plot.rgb("MA", "ULRU.D", 3) +#
	plot.rgb("MA", "ULRU.I", 3) +#
	plot.rgb("MA", "ULRU.S", 3) +#
	# plot.rgb("MA", "CARYA.C", 3) +#
	# plot.rgb("MA", "CARYA.D", 3) +#
	# plot.rgb("MA", "CARYA.I", 3) +#
	# plot.rgb("MA", "CARYA.S", 3) +#
#
	# plot.rgb("MA", "SAAL.C", 3) +#
	# plot.rgb("MA", "SAAL.D", 3) +#
	# plot.rgb("MA", "SAAL.I", 3) +#
	# plot.rgb("MA", "SAAL.S", 3) +#
#
	# Howland#
		plot.rgb("ME", "ACRU.C", 3) +#
	plot.rgb("ME", "ACRU.D", 3) +#
	plot.rgb("ME", "ACRU.I", 3) +#
	plot.rgb("ME", "ACRU.S", 3) +#
	plot.rgb("ME", "PIST.C", 3) +#
	plot.rgb("ME", "PIST.D", 3) +#
	plot.rgb("ME", "PIST.I", 3) +#
	plot.rgb("ME", "PIST.S", 3) +#
#
	plot.rgb("ME", "TSCA.C", 3) +#
	plot.rgb("ME", "TSCA.D", 3) +#
	plot.rgb("ME", "TSCA.I", 3) +#
	plot.rgb("ME", "TSCA.S", 3) +#
	plot.rgb("ME", "QURU.C", 3) +#
	plot.rgb("ME", "QURU.D", 3) +#
	plot.rgb("ME", "QURU.I", 3) +#
	plot.rgb("ME", "QURU.S", 3) +#
	plot.rgb("ME", "QUVE.C", 3) +#
	plot.rgb("ME", "QUVE.D", 3) +#
	plot.rgb("ME", "QUVE.I", 3) +#
	plot.rgb("ME", "QUVE.S", 3) +#
	# plot.rgb("ME", "FRAX.C", 3) +#
	# plot.rgb("ME", "FRAX.D", 3) +#
	# plot.rgb("ME", "FRAX.I", 3) +#
	# plot.rgb("ME", "FRAX.S", 3) +#
#
	# plot.rgb("ME", "BETULA.C", 3) +#
	# plot.rgb("ME", "BETULA.D", 3) +#
	# plot.rgb("ME", "BETULA.I", 3) +#
	# plot.rgb("ME", "BETULA.S", 3) +#
	plot.rgb("ME", "ACSA.C", 3) +#
	plot.rgb("ME", "ACSA.D", 3) +#
	plot.rgb("ME", "ACSA.I", 3) +#
	plot.rgb("ME", "ACSA.S", 3) +#
	plot.rgb("ME", "QUAL.C", 3) +#
	plot.rgb("ME", "QUAL.D", 3) +#
	plot.rgb("ME", "QUAL.I", 3) +#
	plot.rgb("ME", "QUAL.S", 3) +#
	# plot.rgb("ME", "FAGR.C", 3) +#
	# plot.rgb("ME", "FAGR.D", 3) +#
	# plot.rgb("ME", "FAGR.I", 3) +#
	# plot.rgb("ME", "FAGR.S", 3) +#
	plot.rgb("ME", "ULRU.C", 3) +#
	plot.rgb("ME", "ULRU.D", 3) +#
	plot.rgb("ME", "ULRU.I", 3) +#
	plot.rgb("ME", "ULRU.S", 3) +#
	# plot.rgb("ME", "CARYA.C", 3) +#
	# plot.rgb("ME", "CARYA.D", 3) +#
	# plot.rgb("ME", "CARYA.I", 3) +#
	# plot.rgb("ME", "CARYA.S", 3) +#
#
	# plot.rgb("ME", "SAAL.C", 3) +#
	# plot.rgb("ME", "SAAL.D", 3) +#
	# plot.rgb("ME", "SAAL.I", 3) +#
	# plot.rgb("ME", "SAAL.S", 3) +#
	# Morgan Monroe#
	plot.rgb("IN", "ACRU.C", 3) +#
	plot.rgb("IN", "ACRU.D", 3) +#
	plot.rgb("IN", "ACRU.I", 3) +#
	plot.rgb("IN", "ACRU.S", 3) +#
	plot.rgb("IN", "PIST.C", 3) +#
	plot.rgb("IN", "PIST.D", 3) +#
	plot.rgb("IN", "PIST.I", 3) +#
	plot.rgb("IN", "PIST.S", 3) +#
#
	plot.rgb("IN", "TSCA.C", 3) +#
	plot.rgb("IN", "TSCA.D", 3) +#
	plot.rgb("IN", "TSCA.I", 3) +#
	plot.rgb("IN", "TSCA.S", 3) +#
	plot.rgb("IN", "QURU.C", 3) +#
	plot.rgb("IN", "QURU.D", 3) +#
	plot.rgb("IN", "QURU.I", 3) +#
	plot.rgb("IN", "QURU.S", 3) +#
	plot.rgb("IN", "QUVE.C", 3) +#
	plot.rgb("IN", "QUVE.D", 3) +#
	plot.rgb("IN", "QUVE.I", 3) +#
	plot.rgb("IN", "QUVE.S", 3) +#
	# plot.rgb("IN", "FRAX.C", 3) +#
	# plot.rgb("IN", "FRAX.D", 3) +#
	# plot.rgb("IN", "FRAX.I", 3) +#
	# plot.rgb("IN", "FRAX.S", 3) +#
#
	# plot.rgb("IN", "BETULA.C", 3) +#
	# plot.rgb("IN", "BETULA.D", 3) +#
	# plot.rgb("IN", "BETULA.I", 3) +#
	# plot.rgb("IN", "BETULA.S", 3) +#
	plot.rgb("IN", "ACSA.C", 3) +#
	plot.rgb("IN", "ACSA.D", 3) +#
	plot.rgb("IN", "ACSA.I", 3) +#
	plot.rgb("IN", "ACSA.S", 3) +#
	plot.rgb("IN", "QUAL.C", 3) +#
	plot.rgb("IN", "QUAL.D", 3) +#
	plot.rgb("IN", "QUAL.I", 3) +#
	plot.rgb("IN", "QUAL.S", 3) +#
	# plot.rgb("IN", "FAGR.C", 3) +#
	# plot.rgb("IN", "FAGR.D", 3) +#
	# plot.rgb("IN", "FAGR.I", 3) +#
	# plot.rgb("IN", "FAGR.S", 3) +#
	plot.rgb("IN", "ULRU.C", 3) +#
	plot.rgb("IN", "ULRU.D", 3) +#
	plot.rgb("IN", "ULRU.I", 3) +#
	plot.rgb("IN", "ULRU.S", 3) +#
	# plot.rgb("IN", "CARYA.C", 3) +#
	# plot.rgb("IN", "CARYA.D", 3) +#
	# plot.rgb("IN", "CARYA.I", 3) +#
	# plot.rgb("IN", "CARYA.S", 3) +#
#
	# plot.rgb("IN", "SAAL.C", 3) +#
	# plot.rgb("IN", "SAAL.D", 3) +#
	# plot.rgb("IN", "SAAL.I", 3) +#
	# plot.rgb("IN", "SAAL.S", 3) +#
	# Missouri Ozark#
		plot.rgb("MO", "ACRU.C", 3) +#
	plot.rgb("MO", "ACRU.D", 3) +#
	plot.rgb("MO", "ACRU.I", 3) +#
	plot.rgb("MO", "ACRU.S", 3) +#
	plot.rgb("MO", "PIST.C", 3) +#
	plot.rgb("MO", "PIST.D", 3) +#
	plot.rgb("MO", "PIST.I", 3) +#
	plot.rgb("MO", "PIST.S", 3) +#
#
	plot.rgb("MO", "TSCA.C", 3) +#
	plot.rgb("MO", "TSCA.D", 3) +#
	plot.rgb("MO", "TSCA.I", 3) +#
	plot.rgb("MO", "TSCA.S", 3) +#
	plot.rgb("MO", "QURU.C", 3) +#
	plot.rgb("MO", "QURU.D", 3) +#
	plot.rgb("MO", "QURU.I", 3) +#
	plot.rgb("MO", "QURU.S", 3) +#
	plot.rgb("MO", "QUVE.C", 3) +#
	plot.rgb("MO", "QUVE.D", 3) +#
	plot.rgb("MO", "QUVE.I", 3) +#
	plot.rgb("MO", "QUVE.S", 3) +#
	# plot.rgb("MO", "FRAX.C", 3) +#
	# plot.rgb("MO", "FRAX.D", 3) +#
	# plot.rgb("MO", "FRAX.I", 3) +#
	# plot.rgb("MO", "FRAX.S", 3) +#
#
	# plot.rgb("MO", "BETULA.C", 3) +#
	# plot.rgb("MO", "BETULA.D", 3) +#
	# plot.rgb("MO", "BETULA.I", 3) +#
	# plot.rgb("MO", "BETULA.S", 3) +#
	plot.rgb("MO", "ACSA.C", 3) +#
	plot.rgb("MO", "ACSA.D", 3) +#
	plot.rgb("MO", "ACSA.I", 3) +#
	plot.rgb("MO", "ACSA.S", 3) +#
	plot.rgb("MO", "QUAL.C", 3) +#
	plot.rgb("MO", "QUAL.D", 3) +#
	plot.rgb("MO", "QUAL.I", 3) +#
	plot.rgb("MO", "QUAL.S", 3) +#
	# plot.rgb("MO", "FAGR.C", 3) +#
	# plot.rgb("MO", "FAGR.D", 3) +#
	# plot.rgb("MO", "FAGR.I", 3) +#
	# plot.rgb("MO", "FAGR.S", 3) +#
	plot.rgb("MO", "ULRU.C", 3) +#
	plot.rgb("MO", "ULRU.D", 3) +#
	plot.rgb("MO", "ULRU.I", 3) +#
	plot.rgb("MO", "ULRU.S", 3) +#
	# plot.rgb("MO", "CARYA.C", 3) +#
	# plot.rgb("MO", "CARYA.D", 3) +#
	# plot.rgb("MO", "CARYA.I", 3) +#
	# plot.rgb("MO", "CARYA.S", 3) +#
#
	# plot.rgb("MO", "SAAL.C", 3) +#
	# plot.rgb("MO", "SAAL.D", 3) +#
	# plot.rgb("MO", "SAAL.I", 3) +#
	# plot.rgb("MO", "SAAL.S", 3) +#
	# Oak Openings#
			plot.rgb("OH", "ACRU.C", 3) +#
	plot.rgb("OH", "ACRU.D", 3) +#
	plot.rgb("OH", "ACRU.I", 3) +#
	plot.rgb("OH", "ACRU.S", 3) +#
	plot.rgb("OH", "PIST.C", 3) +#
	plot.rgb("OH", "PIST.D", 3) +#
	plot.rgb("OH", "PIST.I", 3) +#
	plot.rgb("OH", "PIST.S", 3) +#
#
	plot.rgb("OH", "TSCA.C", 3) +#
	plot.rgb("OH", "TSCA.D", 3) +#
	plot.rgb("OH", "TSCA.I", 3) +#
	plot.rgb("OH", "TSCA.S", 3) +#
	plot.rgb("OH", "QURU.C", 3) +#
	plot.rgb("OH", "QURU.D", 3) +#
	plot.rgb("OH", "QURU.I", 3) +#
	plot.rgb("OH", "QURU.S", 3) +#
	plot.rgb("OH", "QUVE.C", 3) +#
	plot.rgb("OH", "QUVE.D", 3) +#
	plot.rgb("OH", "QUVE.I", 3) +#
	plot.rgb("OH", "QUVE.S", 3) +#
	# plot.rgb("OH", "FRAX.C", 3) +#
	# plot.rgb("OH", "FRAX.D", 3) +#
	# plot.rgb("OH", "FRAX.I", 3) +#
	# plot.rgb("OH", "FRAX.S", 3) +#
#
	# plot.rgb("OH", "BETULA.C", 3) +#
	# plot.rgb("OH", "BETULA.D", 3) +#
	# plot.rgb("OH", "BETULA.I", 3) +#
	# plot.rgb("OH", "BETULA.S", 3) +#
	plot.rgb("OH", "ACSA.C", 3) +#
	plot.rgb("OH", "ACSA.D", 3) +#
	plot.rgb("OH", "ACSA.I", 3) +#
	plot.rgb("OH", "ACSA.S", 3) +#
	plot.rgb("OH", "QUAL.C", 3) +#
	plot.rgb("OH", "QUAL.D", 3) +#
	plot.rgb("OH", "QUAL.I", 3) +#
	plot.rgb("OH", "QUAL.S", 3) +#
	# plot.rgb("OH", "FAGR.C", 3) +#
	# plot.rgb("OH", "FAGR.D", 3) +#
	# plot.rgb("OH", "FAGR.I", 3) +#
	# plot.rgb("OH", "FAGR.S", 3) +#
	plot.rgb("OH", "ULRU.C", 3) +#
	plot.rgb("OH", "ULRU.D", 3) +#
	plot.rgb("OH", "ULRU.I", 3) +#
	plot.rgb("OH", "ULRU.S", 3) #+#
	# plot.rgb("OH", "CARYA.C", 3) +#
	# plot.rgb("OH", "CARYA.D", 3) +#
	# plot.rgb("OH", "CARYA.I", 3) +#
	# plot.rgb("OH", "CARYA.S", 3) +#
#
	# plot.rgb("OH", "SAAL.C", 3) +#
	# plot.rgb("OH", "SAAL.D", 3) +#
	# plot.rgb("OH", "SAAL.I", 3) +#
	# plot.rgb("OH", "SAAL.S", 3)#
dev.off()	#
# Just plotting the BAI fits#
summary(data.graph)#
ggplot(data.graph) + facet_wrap(group.cc~Site) +#
  scale_x_continuous(expand=c(0,0), name="Year") +#
  scale_y_continuous(expand=c(0,0), name="BAI") +#
  # facet_wrap(~TreeID, scales="free_y", space="free") +#
  # geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
  geom_line(aes(x=Year, y=fit.full), size=2, alpha=0.5) +#
  geom_ribbon(aes(x=Year, ymin=fit.full.lwr, ymax=fit.full.upr), alpha=0.3)#
#
# Plotting the Effects#
pdf("figures/gam3/gam3_influence_in_time_all.pdf", width= 13, height = 8.5)#
ggplot(data.graph) + facet_wrap(group.cc~State) +#
	scale_x_continuous(expand=c(0,0), name="Year") +#
	scale_y_continuous(expand=c(0,0), name="Effect on RW (in mm)") +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_line(aes(x=Year, y=fit.tmean), size=2, color="red") +#
	geom_line(aes(x=Year, y=fit.precip), size=2, color="blue") +#
	geom_line(aes(x=Year, y=fit.dbh.recon), size=2, color="green")#
dev.off()#
#########################################################################
#########################################################################
# Oaks only for Ameridendro#
pdf("figures/gam3/gam3_SPP_CC_BAI_limiting_factors_All_oaks.pdf", width= 13, height = 8.5)#
ggplot(data = data.graph[substr(data.graph$group, 1,2)=="QU",]) + facet_grid(group.cc ~ State) +#
	scale_x_continuous(expand=c(0,0), name="Year") +#
	scale_y_continuous(expand=c(0,0), name="BAI") +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_line(aes(x=Year, y=BA.inc), size=2, alpha=0.5) +#
	geom_ribbon(aes(x=Year, ymin=BA.inc.lwr, ymax=BA.inc.upr), alpha=0.3) +#
	geom_line(aes(x=Year, y = 0), linetype="dashed") +#
	# Harvard#
	plot.rgb("MA", "QURU.C", 3) +#
	plot.rgb("MA", "QURU.D", 3) +#
	plot.rgb("MA", "QURU.I", 3) +#
	plot.rgb("MA", "QURU.S", 3) +#
	plot.rgb("MA", "QUVE.C", 3) +#
	plot.rgb("MA", "QUVE.D", 3) +#
	plot.rgb("MA", "QUVE.I", 3) +#
	plot.rgb("MA", "QUVE.S", 3) +#
	plot.rgb("MA", "QUAL.C", 3) +#
	plot.rgb("MA", "QUAL.D", 3) +#
	plot.rgb("MA", "QUAL.I", 3) +#
	plot.rgb("MA", "QUAL.S", 3) +#
	# Howland#
	plot.rgb("ME", "QURU.C", 3) +#
	plot.rgb("ME", "QURU.D", 3) +#
	plot.rgb("ME", "QURU.I", 3) +#
	plot.rgb("ME", "QURU.S", 3) +#
	plot.rgb("ME", "QUVE.C", 3) +#
	plot.rgb("ME", "QUVE.D", 3) +#
	plot.rgb("ME", "QUVE.I", 3) +#
	plot.rgb("ME", "QUVE.S", 3) +#
	plot.rgb("ME", "QUAL.C", 3) +#
	plot.rgb("ME", "QUAL.D", 3) +#
	plot.rgb("ME", "QUAL.I", 3) +#
	plot.rgb("ME", "QUAL.S", 3) +#
	# Morgan Monroe#
	plot.rgb("IN", "QURU.C", 3) +#
	plot.rgb("IN", "QURU.D", 3) +#
	plot.rgb("IN", "QURU.I", 3) +#
	plot.rgb("IN", "QURU.S", 3) +#
	plot.rgb("IN", "QUVE.C", 3) +#
	plot.rgb("IN", "QUVE.D", 3) +#
	plot.rgb("IN", "QUVE.I", 3) +#
	plot.rgb("IN", "QUVE.S", 3) +#
	plot.rgb("IN", "QUAL.C", 3) +#
	plot.rgb("IN", "QUAL.D", 3) +#
	plot.rgb("IN", "QUAL.I", 3) +#
	plot.rgb("IN", "QUAL.S", 3) +#
	# Missouri Ozark#
	plot.rgb("MO", "QURU.C", 3) +#
	plot.rgb("MO", "QURU.D", 3) +#
	plot.rgb("MO", "QURU.I", 3) +#
	plot.rgb("MO", "QURU.S", 3) +#
	plot.rgb("MO", "QUVE.C", 3) +#
	plot.rgb("MO", "QUVE.D", 3) +#
	plot.rgb("MO", "QUVE.I", 3) +#
	plot.rgb("MO", "QUVE.S", 3) +#
	plot.rgb("MO", "QUAL.C", 3) +#
	plot.rgb("MO", "QUAL.D", 3) +#
	plot.rgb("MO", "QUAL.I", 3) +#
	plot.rgb("MO", "QUAL.S", 3) +#
	# Oak Openings#
	plot.rgb("OH", "QURU.C", 3) +#
	plot.rgb("OH", "QURU.D", 3) +#
	plot.rgb("OH", "QURU.I", 3) +#
	plot.rgb("OH", "QURU.S", 3) +#
	plot.rgb("OH", "QUVE.C", 3) +#
	plot.rgb("OH", "QUVE.D", 3) +#
	plot.rgb("OH", "QUVE.I", 3) +#
	plot.rgb("OH", "QUVE.S", 3) +#
	plot.rgb("OH", "QUAL.C", 3) +#
	plot.rgb("OH", "QUAL.D", 3) +#
	plot.rgb("OH", "QUAL.I", 3) +#
	plot.rgb("OH", "QUAL.S", 3) #
dev.off()	#
# Just plotting the BAI fits#
summary(data.graph)#
ggplot(data.graph) + facet_wrap(group.cc~Site) +#
  scale_x_continuous(expand=c(0,0), name="Year") +#
  scale_y_continuous(expand=c(0,0), name="BAI") +#
  # facet_wrap(~TreeID, scales="free_y", space="free") +#
  # geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
  geom_line(aes(x=Year, y=fit.full), size=2, alpha=0.5) +#
  geom_ribbon(aes(x=Year, ymin=fit.full.lwr, ymax=fit.full.upr), alpha=0.3)#
#
# Plotting the Effects#
pdf("figures/gam3/gam3_influence_in_time_all_oaks.pdf", width= 13, height = 8.5)#
ggplot(data.graph[substr(data.graph$group, 1,2)=="QU",]) + facet_grid(group.cc~State) +#
	scale_x_continuous(expand=c(0,0), name="Year") +#
	scale_y_continuous(expand=c(0,0), name="Effect on RW (in mm)") +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_line(aes(x=Year, y=fit.tmean), size=2, color="red") +#
	geom_line(aes(x=Year, y=fit.precip), size=2, color="blue") +#
	geom_line(aes(x=Year, y=fit.dbh.recon), size=2, color="green")#
dev.off()#
# Separating things out By canopy class to see things better#
#########################################################
#########################################################
# Dominant#
#########################################################
#########################################################
pdf("figures/gam3/gam3_SPP_CC_BAI_limiting_factors_D.pdf", width= 13, height = 8.5)#
ggplot(data = data.graph[data.graph$Canopy.Class=="D" & !data.graph$group.cc %in% c("BETULA.D", "CARYA.D", "FAGR.D", "FRAX.D", "SAAL.D", "ULRU.D", "ACSA.D"),]) + facet_grid(group ~ State) +#
	scale_x_continuous(expand=c(0,0)) +#
	scale_y_continuous(expand=c(0,0)) +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_line(aes(x=Year, y=BA.inc), size=2, alpha=0.5) +#
	geom_ribbon(aes(x=Year, ymin=BA.inc.lwr, ymax=BA.inc.upr), alpha=0.3) +#
	geom_line(aes(x=Year, y = 0), linetype="dashed") +#
	# Harvard#
	plot.rgb("MA", "ACRU.D", 3) +#
	plot.rgb("MA", "PIST.D", 3) +#
	plot.rgb("MA", "TSCA.D", 3) +#
	plot.rgb("MA", "QURU.D", 3) +#
	plot.rgb("MA", "QUVE.D", 3) +#
	# plot.rgb("MA", "FRAX.D", 3) +#
	# plot.rgb("MA", "BETULA.D", 3) +#
	#plot.rgb("MA", "ACSA.D", 3) +#
	plot.rgb("MA", "QUAL.D", 3) +#
	# plot.rgb("MA", "FAGR.D", 3) +#
	#plot.rgb("MA", "ULRU.D", 3) +#
	# plot.rgb("MA", "CARYA.D", 3) +#
	# plot.rgb("MA", "SAAL.D", 3) +#
	# Howland#
	plot.rgb("ME", "ACRU.D", 3) +#
	plot.rgb("ME", "PIST.D", 3) +#
	plot.rgb("ME", "TSCA.D", 3) +#
	plot.rgb("ME", "QURU.D", 3) +#
	plot.rgb("ME", "QUVE.D", 3) +#
	# plot.rgb("ME", "FRAX.D", 3) +#
	# plot.rgb("ME", "BETULA.D", 3) +#
	#plot.rgb("ME", "ACSA.D", 3) +#
	plot.rgb("ME", "QUAL.D", 3) +#
	# plot.rgb("ME", "FAGR.D", 3) +#
	#plot.rgb("ME", "ULRU.D", 3) +#
	# plot.rgb("ME", "CARYA.D", 3) +#
	# plot.rgb("ME", "SAAL.D", 3) +#
	# Morgan Monroe#
	plot.rgb("IN", "ACRU.D", 3) +#
	plot.rgb("IN", "PIST.D", 3) +#
	plot.rgb("IN", "TSCA.D", 3) +#
	plot.rgb("IN", "QURU.D", 3) +#
	plot.rgb("IN", "QUVE.D", 3) +#
	# plot.rgb("IN", "FRAX.D", 3) +#
	# plot.rgb("IN", "BETULA.D", 3) +#
	#plot.rgb("IN", "ACSA.D", 3) +#
	plot.rgb("IN", "QUAL.D", 3) +#
	# plot.rgb("IN", "FAGR.D", 3) +#
	#plot.rgb("IN", "ULRU.D", 3) +#
	# plot.rgb("IN", "CARYA.D", 3) +#
	# plot.rgb("IN", "SAAL.D", 3) +#
	# Missouri Ozark#
	plot.rgb("MO", "ACRU.D", 3) +#
	plot.rgb("MO", "PIST.D", 3) +#
	plot.rgb("MO", "TSCA.D", 3) +#
	plot.rgb("MO", "QURU.D", 3) +#
	plot.rgb("MO", "QUVE.D", 3) +#
	# plot.rgb("MO", "FRAX.D", 3) +#
	# plot.rgb("MO", "BETULA.D", 3) +#
	#plot.rgb("MO", "ACSA.D", 3) +#
	plot.rgb("MO", "QUAL.D", 3) +#
	# plot.rgb("MO", "FAGR.D", 3) +#
	#plot.rgb("MO", "ULRU.D", 3) +#
	# plot.rgb("MO", "CARYA.D", 3) +#
	# plot.rgb("MO", "SAAL.D", 3) +#
	# Oak Openings#
	plot.rgb("OH", "ACRU.D", 3) +#
	plot.rgb("OH", "PIST.D", 3) +#
	plot.rgb("OH", "TSCA.D", 3) +#
	plot.rgb("OH", "QURU.D", 3) +#
	plot.rgb("OH", "QUVE.D", 3) +#
	# plot.rgb("OH", "FRAX.D", 3) +#
	# plot.rgb("OH", "BETULA.D", 3) +#
	#plot.rgb("OH", "ACSA.D", 3) +#
	plot.rgb("OH", "QUAL.D", 3) +#
	# plot.rgb("OH", "FAGR.D", 3) +#
	#plot.rgb("OH", "ULRU.D", 3) +#
	# plot.rgb("OH", "CARYA.D", 3) +#
	# plot.rgb("OH", "SAAL.D", 3) +#
	poster.theme2 +#
	labs(title= "Dominant Trees", x="Year", y = expression(bold(paste("BAI (mm"^"2", "y"^"-1",")"))))#
dev.off()	#
# Just plotting the BAI fits#
summary(data.graph)#
ggplot(data.graph) + facet_wrap(group.cc~Site) +#
  scale_x_continuous(expand=c(0,0), name="Year") +#
  scale_y_continuous(expand=c(0,0), name="BAI") +#
  # facet_wrap(~TreeID, scales="free_y", space="free") +#
  # geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
  geom_line(aes(x=Year, y=fit.full), size=2, alpha=0.5) +#
  geom_ribbon(aes(x=Year, ymin=fit.full.lwr, ymax=fit.full.upr), alpha=0.3)#
#
# Plotting the Effects#
pdf("figures/gam3/gam3_influence_in_time_D.pdf", width= 13, height = 8.5)#
ggplot(data.graph[data.graph$Canopy.Class=="D" & !data.graph$group.cc %in% c("BETULA.D", "CARYA.D", "FAGR.D", "FRAX.D", "SAAL.D"),]) + facet_grid(group~State) +#
	scale_x_continuous(expand=c(0,0), name="Year") +#
	scale_y_continuous(expand=c(0,0), name="Effect on RW (in mm)") +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_line(aes(x=Year, y=fit.tmean), size=2, color="red") +#
	geom_line(aes(x=Year, y=fit.precip), size=2, color="blue") +#
	geom_line(aes(x=Year, y=fit.dbh.recon), size=2, color="green")+#
	labs(title= "Dominant Effects (group.cc)")#
dev.off()#
#
#################################################################
#################################################################
# Intermediate Trees#
#################################################################
#################################################################
#
pdf("figures/gam3/gam3_SPP_CC_BAI_limiting_factors_I.pdf", width= 13, height = 8.5)#
ggplot(data = data.graph[data.graph$Canopy.Class=="I" & !data.graph$group.cc %in% c("BETULA.I", "CARYA.I", "FAGR.I", "FRAX.I", "SAAL.I"),]) + facet_grid(group ~ State) +#
	scale_x_continuous(expand=c(0,0)) +#
	scale_y_continuous(expand=c(0,0)) +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_line(aes(x=Year, y=BA.inc), size=2, alpha=0.5) +#
	geom_ribbon(aes(x=Year, ymin=BA.inc.lwr, ymax=BA.inc.upr), alpha=0.3) +#
	geom_line(aes(x=Year, y = 0), linetype="dashed") +#
	# Harvard#
	plot.rgb("MA", "ACRU.I", 3) +#
	plot.rgb("MA", "PIST.I", 3) +#
	plot.rgb("MA", "TSCA.I", 3) +#
	plot.rgb("MA", "QURU.I", 3) +#
	plot.rgb("MA", "QUVE.I", 3) +#
	# plot.rgb("MA", "FRAX.I", 3) +#
	# plot.rgb("MA", "BETULA.I", 3) +#
	plot.rgb("MA", "ACSA.I", 3) +#
	plot.rgb("MA", "QUAL.I", 3) +#
	# plot.rgb("MA", "FAGR.I", 3) +#
	plot.rgb("MA", "ULRU.I", 3) +#
	# plot.rgb("MA", "CARYA.I", 3) +#
	# plot.rgb("MA", "SAAL.I", 3) +#
	# Howland#
	plot.rgb("ME", "ACRU.I", 3) +#
	plot.rgb("ME", "PIST.I", 3) +#
	plot.rgb("ME", "TSCA.I", 3) +#
	plot.rgb("ME", "QURU.I", 3) +#
	plot.rgb("ME", "QUVE.I", 3) +#
	# plot.rgb("ME", "FRAX.I", 3) +#
	# plot.rgb("ME", "BETULA.I", 3) +#
	plot.rgb("ME", "ACSA.I", 3) +#
	plot.rgb("ME", "QUAL.I", 3) +#
	# plot.rgb("ME", "FAGR.I", 3) +#
	plot.rgb("ME", "ULRU.I", 3) +#
	# plot.rgb("ME", "CARYA.I", 3) +#
	# plot.rgb("ME", "SAAL.I", 3) +#
	# Morgan Monroe#
	plot.rgb("IN", "ACRU.I", 3) +#
	plot.rgb("IN", "PIST.I", 3) +#
	plot.rgb("IN", "TSCA.I", 3) +#
	plot.rgb("IN", "QURU.I", 3) +#
	plot.rgb("IN", "QUVE.I", 3) +#
	# plot.rgb("IN", "FRAX.I", 3) +#
	# plot.rgb("IN", "BETULA.I", 3) +#
	plot.rgb("IN", "ACSA.I", 3) +#
	plot.rgb("IN", "QUAL.I", 3) +#
	# plot.rgb("IN", "FAGR.I", 3) +#
	plot.rgb("IN", "ULRU.I", 3) +#
	# plot.rgb("IN", "CARYA.I", 3) +#
	# plot.rgb("IN", "SAAL.I", 3) +#
	# Missouri Ozark#
	plot.rgb("MO", "ACRU.I", 3) +#
	plot.rgb("MO", "PIST.I", 3) +#
	plot.rgb("MO", "TSCA.I", 3) +#
	plot.rgb("MO", "QURU.I", 3) +#
	plot.rgb("MO", "QUVE.I", 3) +#
	# plot.rgb("MO", "FRAX.I", 3) +#
	# plot.rgb("MO", "BETULA.I", 3) +#
	plot.rgb("MO", "ACSA.I", 3) +#
	plot.rgb("MO", "QUAL.I", 3) +#
	# plot.rgb("MO", "FAGR.I", 3) +#
	plot.rgb("MO", "ULRU.I", 3) +#
	# plot.rgb("MO", "CARYA.I", 3) +#
	# plot.rgb("MO", "SAAL.I", 3) +#
	# Oak Openings#
	plot.rgb("OH", "ACRU.I", 3) +#
	plot.rgb("OH", "PIST.I", 3) +#
	plot.rgb("OH", "TSCA.I", 3) +#
	plot.rgb("OH", "QURU.I", 3) +#
	plot.rgb("OH", "QUVE.I", 3) +#
	# plot.rgb("OH", "FRAX.I", 3) +#
	# plot.rgb("OH", "BETULA.I", 3) +#
	plot.rgb("OH", "ACSA.I", 3) +#
	plot.rgb("OH", "QUAL.I", 3) +#
	# plot.rgb("OH", "FAGR.I", 3) +#
	plot.rgb("OH", "ULRU.I", 3) +#
	# plot.rgb("OH", "CARYA.I", 3) +#
	# plot.rgb("OH", "SAAL.I", 3) +#
	poster.theme2 +#
	labs(title= "Intermediate Trees (group.cc)", x="Year", y=expression(bold(paste("BAI (mm2 / year)"))))#
dev.off()	#
# Just plotting the BAI fits#
summary(data.graph)#
ggplot(data.graph) + facet_wrap(group.cc~Site) +#
  scale_x_continuous(expand=c(0,0), name="Year") +#
  scale_y_continuous(expand=c(0,0), name="BAI") +#
  # facet_wrap(~TreeID, scales="free_y", space="free") +#
  # geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
  geom_line(aes(x=Year, y=fit.full), size=2, alpha=0.5) +#
  geom_ribbon(aes(x=Year, ymin=fit.full.lwr, ymax=fit.full.upr), alpha=0.3)#
#
# Plotting the Effects#
pdf("figures/gam3/gam3_influence_in_time_I.pdf", width= 13, height = 8.5)#
ggplot(data.graph[data.graph$Canopy.Class=="I" & !data.graph$group.cc %in% c("BETULA.I", "CARYA.I", "FAGR.I", "FRAX.I", "SAAL.I"),]) + facet_grid(group~State) +#
	scale_x_continuous(expand=c(0,0), name="Year") +#
	scale_y_continuous(expand=c(0,0), name="Effect on RW (in mm)") +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_line(aes(x=Year, y=fit.tmean), size=2, color="red") +#
	geom_line(aes(x=Year, y=fit.precip), size=2, color="blue") +#
	geom_line(aes(x=Year, y=fit.dbh.recon), size=2, color="green")+#
	labs(title= "Intermediate Effects (group.cc)")#
dev.off()#
#################################################################
#################################################################
# Suppressed Trees#
#################################################################
#################################################################
#
pdf("figures/gam3/gam3_SPP_CC_BAI_limiting_factors_S.pdf", width= 13, height = 8.5)#
ggplot(data = data.graph[data.graph$Canopy.Class=="S" & !data.graph$group.cc %in% c("BETULA.S", "CARYA.S", "FAGR.S", "FRAX.S", "SAAL.S"),]) + facet_grid(group ~ State) +#
	scale_x_continuous(expand=c(0,0)) +#
	scale_y_continuous(expand=c(0,0)) +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_line(aes(x=Year, y=BA.inc), size=2, alpha=0.5) +#
	geom_ribbon(aes(x=Year, ymin=BA.inc.lwr, ymax=BA.inc.upr), alpha=0.3) +#
	geom_line(aes(x=Year, y = 0), linetype="dashed") +#
	# Harvard#
	plot.rgb("MA", "ACRU.S", 3) +#
	plot.rgb("MA", "PIST.S", 3) +#
	plot.rgb("MA", "TSCA.S", 3) +#
	plot.rgb("MA", "QURU.S", 3) +#
	plot.rgb("MA", "QUVE.S", 3) +#
	# plot.rgb("MA", "FRAX.S", 3) +#
	# plot.rgb("MA", "BETULA.S", 3) +#
	plot.rgb("MA", "ACSA.S", 3) +#
	plot.rgb("MA", "QUAL.S", 3) +#
	# plot.rgb("MA", "FAGR.S", 3) +#
	plot.rgb("MA", "ULRU.S", 3) +#
	# plot.rgb("MA", "CARYA.S", 3) +#
	# plot.rgb("MA", "SAAL.S", 3) +#
	# Howland#
	plot.rgb("ME", "ACRU.S", 3) +#
	plot.rgb("ME", "PIST.S", 3) +#
	plot.rgb("ME", "TSCA.S", 3) +#
	plot.rgb("ME", "QURU.S", 3) +#
	plot.rgb("ME", "QUVE.S", 3) +#
	# plot.rgb("ME", "FRAX.S", 3) +#
	# plot.rgb("ME", "BETULA.S", 3) +#
	plot.rgb("ME", "ACSA.S", 3) +#
	plot.rgb("ME", "QUAL.S", 3) +#
	# plot.rgb("ME", "FAGR.S", 3) +#
	plot.rgb("ME", "ULRU.S", 3) +#
	# plot.rgb("ME", "CARYA.S", 3) +#
	# plot.rgb("ME", "SAAL.S", 3) +#
	# Morgan Monroe#
	plot.rgb("IN", "ACRU.S", 3) +#
	plot.rgb("IN", "PIST.S", 3) +#
	plot.rgb("IN", "TSCA.S", 3) +#
	plot.rgb("IN", "QURU.S", 3) +#
	plot.rgb("IN", "QUVE.S", 3) +#
	# plot.rgb("IN", "FRAX.S", 3) +#
	# plot.rgb("IN", "BETULA.S", 3) +#
	plot.rgb("IN", "ACSA.S", 3) +#
	plot.rgb("IN", "QUAL.S", 3) +#
	# plot.rgb("IN", "FAGR.S", 3) +#
	plot.rgb("IN", "ULRU.S", 3) +#
	# plot.rgb("IN", "CARYA.S", 3) +#
	# plot.rgb("IN", "SAAL.S", 3) +#
	# Missouri Ozark#
	plot.rgb("MO", "ACRU.S", 3) +#
	plot.rgb("MO", "PIST.S", 3) +#
	plot.rgb("MO", "TSCA.S", 3) +#
	plot.rgb("MO", "QURU.S", 3) +#
	plot.rgb("MO", "QUVE.S", 3) +#
	# plot.rgb("MO", "FRAX.S", 3) +#
	# plot.rgb("MO", "BETULA.S", 3) +#
	plot.rgb("MO", "ACSA.S", 3) +#
	plot.rgb("MO", "QUAL.S", 3) +#
	# plot.rgb("MO", "FAGR.S", 3) +#
	plot.rgb("MO", "ULRU.S", 3) +#
	# plot.rgb("MO", "CARYA.S", 3) +#
	# plot.rgb("MO", "SAAL.S", 3) +#
	# Oak Openings#
	plot.rgb("OH", "ACRU.S", 3) +#
	plot.rgb("OH", "PIST.S", 3) +#
	plot.rgb("OH", "TSCA.S", 3) +#
	plot.rgb("OH", "QURU.S", 3) +#
	plot.rgb("OH", "QUVE.S", 3) +#
	# plot.rgb("OH", "FRAX.S", 3) +#
	# plot.rgb("OH", "BETULA.S", 3) +#
	plot.rgb("OH", "ACSA.S", 3) +#
	plot.rgb("OH", "QUAL.S", 3) +#
	# plot.rgb("OH", "FAGR.S", 3) +#
	plot.rgb("OH", "ULRU.S", 3) +#
	# plot.rgb("OH", "CARYA.S", 3) +#
	# plot.rgb("OH", "SAAL.S", 3) +#
	poster.theme2 +#
	labs(title= "Suppressed Trees (group.cc)", x="Year", y=expression(bold(paste("BAI (mm2 / year)")))) #
dev.off()	#
# Just plotting the BAI fits#
summary(data.graph)#
ggplot(data.graph) + facet_wrap(group.cc~Site) +#
  scale_x_continuous(expand=c(0,0), name="Year") +#
  scale_y_continuous(expand=c(0,0), name="BAI") +#
  # facet_wrap(~TreeID, scales="free_y", space="free") +#
  # geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
  geom_line(aes(x=Year, y=fit.full), size=2, alpha=0.5) +#
  geom_ribbon(aes(x=Year, ymin=fit.full.lwr, ymax=fit.full.upr), alpha=0.3)#
#
# Plotting the Effects#
pdf("figures/gam3/gam3_influence_in_time_S.pdf", width= 13, height = 8.5)#
ggplot(data.graph[data.graph$Canopy.Class=="S" & !data.graph$group.cc %in% c("BETULA.S", "CARYA.S", "FAGR.S", "FRAX.S", "SAAL.S"),]) + facet_grid(group~State) +#
	scale_x_continuous(expand=c(0,0), name="Year") +#
	scale_y_continuous(expand=c(0,0), name="Effect on RW (in mm)") +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_line(aes(x=Year, y=fit.tmean), size=2, color="red") +#
	geom_line(aes(x=Year, y=fit.precip), size=2, color="blue") +#
	geom_line(aes(x=Year, y=fit.dbh.recon), size=2, color="green")+#
	labs(title= "Suppressed Effects (group.cc)")#
dev.off()#
#########################################################
#########################################################
# Plotting out sites individually#
#########################################################
#########################################################
# Missouri#
# Plotting the Obs and modeled with influence coloring#
pdf("figures/gam3/gam3_SPP_CC_BAI_limiting_factors_MO.pdf", width= 13, height = 8.5)#
ggplot(data = data.graph[data.graph$State %in% "MO",]) + facet_grid(Canopy.Class ~ group) +#
	scale_x_continuous(expand=c(0,0), name="Year") +#
	scale_y_continuous(expand=c(0,0), name="BAI") +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_line(aes(x=Year, y=BA.inc), size=2, alpha=0.5) +#
	geom_ribbon(aes(x=Year, ymin=BA.inc.lwr, ymax=BA.inc.upr), alpha=0.3) +#
	geom_line(aes(x=Year, y = 0), linetype="dashed") +#
	# Missouri Ozark#
		plot.rgb("MO", "ACRU.C", 3) +#
	plot.rgb("MO", "ACRU.D", 3) +#
	plot.rgb("MO", "ACRU.I", 3) +#
	plot.rgb("MO", "ACRU.S", 3) +#
	plot.rgb("MO", "PIST.C", 3) +#
	plot.rgb("MO", "PIST.D", 3) +#
	plot.rgb("MO", "PIST.I", 3) +#
	plot.rgb("MO", "PIST.S", 3) +#
#
	plot.rgb("MO", "TSCA.C", 3) +#
	plot.rgb("MO", "TSCA.D", 3) +#
	plot.rgb("MO", "TSCA.I", 3) +#
	plot.rgb("MO", "TSCA.S", 3) +#
	plot.rgb("MO", "QURU.C", 3) +#
	plot.rgb("MO", "QURU.D", 3) +#
	plot.rgb("MO", "QURU.I", 3) +#
	plot.rgb("MO", "QURU.S", 3) +#
	plot.rgb("MO", "QUVE.C", 3) +#
	plot.rgb("MO", "QUVE.D", 3) +#
	plot.rgb("MO", "QUVE.I", 3) +#
	plot.rgb("MO", "QUVE.S", 3) +#
	plot.rgb("MO", "FRAX.C", 3) +#
	plot.rgb("MO", "FRAX.D", 3) +#
	plot.rgb("MO", "FRAX.I", 3) +#
	plot.rgb("MO", "FRAX.S", 3) +#
#
	plot.rgb("MO", "BETULA.C", 3) +#
	plot.rgb("MO", "BETULA.D", 3) +#
	plot.rgb("MO", "BETULA.I", 3) +#
	plot.rgb("MO", "BETULA.S", 3) +#
	plot.rgb("MO", "ACSA.C", 3) +#
	plot.rgb("MO", "ACSA.D", 3) +#
	plot.rgb("MO", "ACSA.I", 3) +#
	plot.rgb("MO", "ACSA.S", 3) +#
	plot.rgb("MO", "QUAL.C", 3) +#
	plot.rgb("MO", "QUAL.D", 3) +#
	plot.rgb("MO", "QUAL.I", 3) +#
	plot.rgb("MO", "QUAL.S", 3) +#
	plot.rgb("MO", "FAGR.C", 3) +#
	plot.rgb("MO", "FAGR.D", 3) +#
	plot.rgb("MO", "FAGR.I", 3) +#
	plot.rgb("MO", "FAGR.S", 3) +#
	plot.rgb("MO", "ULRU.C", 3) +#
	plot.rgb("MO", "ULRU.D", 3) +#
	plot.rgb("MO", "ULRU.I", 3) +#
	plot.rgb("MO", "ULRU.S", 3) +#
	plot.rgb("MO", "CARYA.C", 3) +#
	plot.rgb("MO", "CARYA.D", 3) +#
	plot.rgb("MO", "CARYA.I", 3) +#
	plot.rgb("MO", "CARYA.S", 3) +#
#
	plot.rgb("MO", "SAAL.C", 3) +#
	plot.rgb("MO", "SAAL.D", 3) +#
	plot.rgb("MO", "SAAL.I", 3) +#
	plot.rgb("MO", "SAAL.S", 3) +#
	poster.theme2#
dev.off()	#
#
#----------------------------------------#
# Indiana#
#
# Plotting the Obs and modeled with influence coloring#
pdf("figures/gam3/gam3_SPP_CC_BAI_limiting_factors_IN.pdf", width= 13, height = 8.5)#
ggplot(data = data.graph[data.graph$State %in% "IN" & !,]) + facet_grid(Canopy.Class ~ group) +#
	labs(title= "Dominant Trees", x="Year", y = expression(bold(paste("BAI (mm"^"2", "y"^"-1",")")))) +#
	scale_x_continuous(expand=c(0,0)) +#
	scale_y_continuous(expand=c(0,0)) +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_line(aes(x=Year, y=BA.inc), size=2, alpha=0.5) +#
	geom_ribbon(aes(x=Year, ymin=BA.inc.lwr, ymax=BA.inc.upr), alpha=0.3) +#
	geom_line(aes(x=Year, y = 0), linetype="dashed") +#
	# Morgan Monroe#
	plot.rgb("IN", "ACRU.C", 3) +#
	plot.rgb("IN", "ACRU.D", 3) +#
	plot.rgb("IN", "ACRU.I", 3) +#
	plot.rgb("IN", "ACRU.S", 3) +#
	plot.rgb("IN", "PIST.C", 3) +#
	plot.rgb("IN", "PIST.D", 3) +#
	plot.rgb("IN", "PIST.I", 3) +#
	plot.rgb("IN", "PIST.S", 3) +#
#
	plot.rgb("IN", "TSCA.C", 3) +#
	plot.rgb("IN", "TSCA.D", 3) +#
	plot.rgb("IN", "TSCA.I", 3) +#
	plot.rgb("IN", "TSCA.S", 3) +#
	plot.rgb("IN", "QURU.C", 3) +#
	plot.rgb("IN", "QURU.D", 3) +#
	plot.rgb("IN", "QURU.I", 3) +#
	plot.rgb("IN", "QURU.S", 3) +#
	plot.rgb("IN", "QUVE.C", 3) +#
	plot.rgb("IN", "QUVE.D", 3) +#
	plot.rgb("IN", "QUVE.I", 3) +#
	plot.rgb("IN", "QUVE.S", 3) +#
	plot.rgb("IN", "FRAX.C", 3) +#
	plot.rgb("IN", "FRAX.D", 3) +#
	plot.rgb("IN", "FRAX.I", 3) +#
	plot.rgb("IN", "FRAX.S", 3) +#
#
	plot.rgb("IN", "BETULA.C", 3) +#
	plot.rgb("IN", "BETULA.D", 3) +#
	plot.rgb("IN", "BETULA.I", 3) +#
	plot.rgb("IN", "BETULA.S", 3) +#
	plot.rgb("IN", "ACSA.C", 3) +#
	plot.rgb("IN", "ACSA.D", 3) +#
	plot.rgb("IN", "ACSA.I", 3) +#
	plot.rgb("IN", "ACSA.S", 3) +#
	plot.rgb("IN", "QUAL.C", 3) +#
	plot.rgb("IN", "QUAL.D", 3) +#
	plot.rgb("IN", "QUAL.I", 3) +#
	plot.rgb("IN", "QUAL.S", 3) +#
	plot.rgb("IN", "FAGR.C", 3) +#
	plot.rgb("IN", "FAGR.D", 3) +#
	plot.rgb("IN", "FAGR.I", 3) +#
	plot.rgb("IN", "FAGR.S", 3) +#
	plot.rgb("IN", "ULRU.C", 3) +#
	plot.rgb("IN", "ULRU.D", 3) +#
	plot.rgb("IN", "ULRU.I", 3) +#
	plot.rgb("IN", "ULRU.S", 3) +#
	plot.rgb("IN", "CARYA.C", 3) +#
	plot.rgb("IN", "CARYA.D", 3) +#
	plot.rgb("IN", "CARYA.I", 3) +#
	plot.rgb("IN", "CARYA.S", 3) +#
#
	plot.rgb("IN", "SAAL.C", 3) +#
	plot.rgb("IN", "SAAL.D", 3) +#
	plot.rgb("IN", "SAAL.I", 3) +#
	plot.rgb("IN", "SAAL.S", 3) +#
	poster.theme2#
dev.off()	#
#
# Indiana Dominant#
#
# Plotting the Obs and modeled with influence coloring#
pdf("figures/gam3/gam3_SPP_CC_BAI_limiting_factors_IN_dom.pdf", width= 13, height = 8.5)#
ggplot(data = data.graph[data.graph$State %in% "IN" & data.graph$Canopy.Class=="D" & !data.graph$group.cc %in% c("BETULA.D", "CARYA.D", "FAGR.D", "FRAX.D", "SAAL.D"),]) + facet_grid(group ~.) +#
	labs(title= " IN Dominant Trees", x="Year", y = expression(bold(paste("BAI (mm"^"2", "y"^"-1",")")))) +#
	scale_x_continuous(expand=c(0,0)) +#
	scale_y_continuous(expand=c(0,0)) +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_line(aes(x=Year, y=BA.inc), size=2, alpha=0.5) +#
	geom_ribbon(aes(x=Year, ymin=BA.inc.lwr, ymax=BA.inc.upr), alpha=0.3) +#
	geom_line(aes(x=Year, y = 0), linetype="dashed") +#
	# Morgan Monroe#
	plot.rgb("IN", "ACRU.D", 3) +#
	plot.rgb("IN", "PIST.D", 3) +#
	plot.rgb("IN", "TSCA.D", 3) +#
	plot.rgb("IN", "QURU.D", 3) +#
	plot.rgb("IN", "QUVE.D", 3) +#
	plot.rgb("IN", "ACSA.D", 3) +#
	plot.rgb("IN", "QUAL.D", 3) +#
	plot.rgb("IN", "ULRU.D", 3) +#
	poster.theme2#
dev.off()	#
#-------------------------------------------#
# Ohio#
#
# Plotting the Obs and modeled with influence coloring#
pdf("figures/gam3/gam3_SPP_CC_BAI_limiting_factors_OH.pdf", width= 13, height = 8.5)#
ggplot(data = data.graph[data.graph$State %in% "OH",]) + facet_grid(Canopy.Class ~ group) +#
	scale_x_continuous(expand=c(0,0), name="Year") +#
	scale_y_continuous(expand=c(0,0), name="BAI") +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_line(aes(x=Year, y=BA.inc), size=2, alpha=0.5) +#
	geom_ribbon(aes(x=Year, ymin=BA.inc.lwr, ymax=BA.inc.upr), alpha=0.3) +#
	geom_line(aes(x=Year, y = 0), linetype="dashed") +#
	# Oak Openings#
			plot.rgb("OH", "ACRU.C", 3) +#
	plot.rgb("OH", "ACRU.D", 3) +#
	plot.rgb("OH", "ACRU.I", 3) +#
	plot.rgb("OH", "ACRU.S", 3) +#
	plot.rgb("OH", "PIST.C", 3) +#
	plot.rgb("OH", "PIST.D", 3) +#
	plot.rgb("OH", "PIST.I", 3) +#
	plot.rgb("OH", "PIST.S", 3) +#
#
	plot.rgb("OH", "TSCA.C", 3) +#
	plot.rgb("OH", "TSCA.D", 3) +#
	plot.rgb("OH", "TSCA.I", 3) +#
	plot.rgb("OH", "TSCA.S", 3) +#
	plot.rgb("OH", "QURU.C", 3) +#
	plot.rgb("OH", "QURU.D", 3) +#
	plot.rgb("OH", "QURU.I", 3) +#
	plot.rgb("OH", "QURU.S", 3) +#
	plot.rgb("OH", "QUVE.C", 3) +#
	plot.rgb("OH", "QUVE.D", 3) +#
	plot.rgb("OH", "QUVE.I", 3) +#
	plot.rgb("OH", "QUVE.S", 3) +#
	plot.rgb("OH", "FRAX.C", 3) +#
	plot.rgb("OH", "FRAX.D", 3) +#
	plot.rgb("OH", "FRAX.I", 3) +#
	plot.rgb("OH", "FRAX.S", 3) +#
#
	plot.rgb("OH", "BETULA.C", 3) +#
	plot.rgb("OH", "BETULA.D", 3) +#
	plot.rgb("OH", "BETULA.I", 3) +#
	plot.rgb("OH", "BETULA.S", 3) +#
	plot.rgb("OH", "ACSA.C", 3) +#
	plot.rgb("OH", "ACSA.D", 3) +#
	plot.rgb("OH", "ACSA.I", 3) +#
	plot.rgb("OH", "ACSA.S", 3) +#
	plot.rgb("OH", "QUAL.C", 3) +#
	plot.rgb("OH", "QUAL.D", 3) +#
	plot.rgb("OH", "QUAL.I", 3) +#
	plot.rgb("OH", "QUAL.S", 3) +#
	plot.rgb("OH", "FAGR.C", 3) +#
	plot.rgb("OH", "FAGR.D", 3) +#
	plot.rgb("OH", "FAGR.I", 3) +#
	plot.rgb("OH", "FAGR.S", 3) +#
	plot.rgb("OH", "ULRU.C", 3) +#
	plot.rgb("OH", "ULRU.D", 3) +#
	plot.rgb("OH", "ULRU.I", 3) +#
	plot.rgb("OH", "ULRU.S", 3) +#
	plot.rgb("OH", "CARYA.C", 3) +#
	plot.rgb("OH", "CARYA.D", 3) +#
	plot.rgb("OH", "CARYA.I", 3) +#
	plot.rgb("OH", "CARYA.S", 3) +#
#
	plot.rgb("OH", "SAAL.C", 3) +#
	plot.rgb("OH", "SAAL.D", 3) +#
	plot.rgb("OH", "SAAL.I", 3) +#
	plot.rgb("OH", "SAAL.S", 3)+#
	poster.theme2#
dev.off()	#
#
#-----------------------------------------------#
# Massachusetts#
#
# Plotting the Obs and modeled with influence coloring#
pdf("figures/gam3/gam3_SPP_CC_BAI_limiting_factors_MA.pdf", width= 13, height = 8.5)#
ggplot(data = data.graph[data.graph$State %in% "MA",]) + facet_grid(Canopy.Class~group) +#
	scale_x_continuous(expand=c(0,0), name="Year") +#
	scale_y_continuous(expand=c(0,0), name="BAI") +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_line(aes(x=Year, y=BA.inc), size=2, alpha=0.5) +#
	geom_ribbon(aes(x=Year, ymin=BA.inc.lwr, ymax=BA.inc.upr), alpha=0.3) +#
	geom_line(aes(x=Year, y = 0), linetype="dashed") +#
	# Harvard#
	plot.rgb("MA", "ACRU.C", 3) +#
	plot.rgb("MA", "ACRU.D", 3) +#
	plot.rgb("MA", "ACRU.I", 3) +#
	plot.rgb("MA", "ACRU.S", 3) +#
	plot.rgb("MA", "PIST.C", 3) +#
	plot.rgb("MA", "PIST.D", 3) +#
	plot.rgb("MA", "PIST.I", 3) +#
	plot.rgb("MA", "PIST.S", 3) +#
#
	plot.rgb("MA", "TSCA.C", 3) +#
	plot.rgb("MA", "TSCA.D", 3) +#
	plot.rgb("MA", "TSCA.I", 3) +#
	plot.rgb("MA", "TSCA.S", 3) +#
	plot.rgb("MA", "QURU.C", 3) +#
	plot.rgb("MA", "QURU.D", 3) +#
	plot.rgb("MA", "QURU.I", 3) +#
	plot.rgb("MA", "QURU.S", 3) +#
	plot.rgb("MA", "QUVE.C", 3) +#
	plot.rgb("MA", "QUVE.D", 3) +#
	plot.rgb("MA", "QUVE.I", 3) +#
	plot.rgb("MA", "QUVE.S", 3) +#
	plot.rgb("MA", "FRAX.C", 3) +#
	plot.rgb("MA", "FRAX.D", 3) +#
	plot.rgb("MA", "FRAX.I", 3) +#
	plot.rgb("MA", "FRAX.S", 3) +#
#
	plot.rgb("MA", "BETULA.C", 3) +#
	plot.rgb("MA", "BETULA.D", 3) +#
	plot.rgb("MA", "BETULA.I", 3) +#
	plot.rgb("MA", "BETULA.S", 3) +#
	plot.rgb("MA", "ACSA.C", 3) +#
	plot.rgb("MA", "ACSA.D", 3) +#
	plot.rgb("MA", "ACSA.I", 3) +#
	plot.rgb("MA", "ACSA.S", 3) +#
	plot.rgb("MA", "QUAL.C", 3) +#
	plot.rgb("MA", "QUAL.D", 3) +#
	plot.rgb("MA", "QUAL.I", 3) +#
	plot.rgb("MA", "QUAL.S", 3) +#
	plot.rgb("MA", "FAGR.C", 3) +#
	plot.rgb("MA", "FAGR.D", 3) +#
	plot.rgb("MA", "FAGR.I", 3) +#
	plot.rgb("MA", "FAGR.S", 3) +#
	plot.rgb("MA", "ULRU.C", 3) +#
	plot.rgb("MA", "ULRU.D", 3) +#
	plot.rgb("MA", "ULRU.I", 3) +#
	plot.rgb("MA", "ULRU.S", 3) +#
	plot.rgb("MA", "CARYA.C", 3) +#
	plot.rgb("MA", "CARYA.D", 3) +#
	plot.rgb("MA", "CARYA.I", 3) +#
	plot.rgb("MA", "CARYA.S", 3) +#
#
	plot.rgb("MA", "SAAL.C", 3) +#
	plot.rgb("MA", "SAAL.D", 3) +#
	plot.rgb("MA", "SAAL.I", 3) +#
	plot.rgb("MA", "SAAL.S", 3) +#
	poster.theme2#
dev.off()	#
#-----------------------------------------------------#
# Plotting the Obs and modeled with influence coloring#
pdf("figures/gam3/gam3_SPP_CC_BAI_limiting_factors_ME.pdf", width= 13, height = 8.5)#
ggplot(data = data.graph[data.graph$State %in% "ME",]) + facet_grid(Canopy.Class ~ group) +#
	scale_x_continuous(expand=c(0,0), name="Year") +#
	scale_y_continuous(expand=c(0,0), name="BAI") +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_line(aes(x=Year, y=BA.inc), size=2, alpha=0.5) +#
	geom_ribbon(aes(x=Year, ymin=BA.inc.lwr, ymax=BA.inc.upr), alpha=0.3) +#
	geom_line(aes(x=Year, y = 0), linetype="dashed") +#
	# Howland#
		plot.rgb("ME", "ACRU.C", 3) +#
	plot.rgb("ME", "ACRU.D", 3) +#
	plot.rgb("ME", "ACRU.I", 3) +#
	plot.rgb("ME", "ACRU.S", 3) +#
	plot.rgb("ME", "PIST.C", 3) +#
	plot.rgb("ME", "PIST.D", 3) +#
	plot.rgb("ME", "PIST.I", 3) +#
	plot.rgb("ME", "PIST.S", 3) +#
#
	plot.rgb("ME", "TSCA.C", 3) +#
	plot.rgb("ME", "TSCA.D", 3) +#
	plot.rgb("ME", "TSCA.I", 3) +#
	plot.rgb("ME", "TSCA.S", 3) +#
	plot.rgb("ME", "QURU.C", 3) +#
	plot.rgb("ME", "QURU.D", 3) +#
	plot.rgb("ME", "QURU.I", 3) +#
	plot.rgb("ME", "QURU.S", 3) +#
	plot.rgb("ME", "QUVE.C", 3) +#
	plot.rgb("ME", "QUVE.D", 3) +#
	plot.rgb("ME", "QUVE.I", 3) +#
	plot.rgb("ME", "QUVE.S", 3) +#
	plot.rgb("ME", "FRAX.C", 3) +#
	plot.rgb("ME", "FRAX.D", 3) +#
	plot.rgb("ME", "FRAX.I", 3) +#
	plot.rgb("ME", "FRAX.S", 3) +#
#
	plot.rgb("ME", "BETULA.C", 3) +#
	plot.rgb("ME", "BETULA.D", 3) +#
	plot.rgb("ME", "BETULA.I", 3) +#
	plot.rgb("ME", "BETULA.S", 3) +#
	plot.rgb("ME", "ACSA.C", 3) +#
	plot.rgb("ME", "ACSA.D", 3) +#
	plot.rgb("ME", "ACSA.I", 3) +#
	plot.rgb("ME", "ACSA.S", 3) +#
	plot.rgb("ME", "QUAL.C", 3) +#
	plot.rgb("ME", "QUAL.D", 3) +#
	plot.rgb("ME", "QUAL.I", 3) +#
	plot.rgb("ME", "QUAL.S", 3) +#
	plot.rgb("ME", "FAGR.C", 3) +#
	plot.rgb("ME", "FAGR.D", 3) +#
	plot.rgb("ME", "FAGR.I", 3) +#
	plot.rgb("ME", "FAGR.S", 3) +#
	plot.rgb("ME", "ULRU.C", 3) +#
	plot.rgb("ME", "ULRU.D", 3) +#
	plot.rgb("ME", "ULRU.I", 3) +#
	plot.rgb("ME", "ULRU.S", 3) +#
	plot.rgb("ME", "CARYA.C", 3) +#
	plot.rgb("ME", "CARYA.D", 3) +#
	plot.rgb("ME", "CARYA.I", 3) +#
	plot.rgb("ME", "CARYA.S", 3) +#
#
	plot.rgb("ME", "SAAL.C", 3) +#
	plot.rgb("ME", "SAAL.D", 3) +#
	plot.rgb("ME", "SAAL.I", 3) +#
	plot.rgb("ME", "SAAL.S", 3)+#
	poster.theme2#
dev.off()
library(ggplot2)#
library(stringr)#
load(file="processed_data/gamm_weights/gam3_weights.Rdata")#
#
summary(gam3.weights)#
factors.fits <- c("fit.tmean", "fit.precip", "fit.dbh.recon", "fit.full", "BA.inc")#
factors.weights <- c("weight.tmean", "weight.dbh.recon", "weight.precip")#
#
# Transforming things back to BA.inc rather than log#
gam3.weights[,which(substr(names(gam3.weights),1,3)=="fit")] <- exp(gam3.weights[,which(substr(names(gam3.weights),1,3)=="fit")] )#
othervars <- c("Year", "Site", "group.cc", "Model")#
#
data.graph1 <- aggregate(gam3.weights[,factors.fits], by = gam3.weights[,othervars], FUN= mean, na.rm=T)#
#
data.graph1[,paste(factors.fits, "upr", sep=".")] <- aggregate(gam3.weights[,factors.fits], by = gam3.weights[,othervars], FUN= quantile, prob= 0.975, na.rm=T)[,factors.fits]#
#
data.graph1[,paste(factors.fits, "lwr", sep=".")] <- aggregate(gam3.weights[,factors.fits], by = gam3.weights[,othervars], FUN= quantile, prob= 0.025, na.rm=T)[,factors.fits]#
#
summary(data.graph1)#
#
data.graph2 <- aggregate(abs(gam3.weights[,factors.weights]), by = gam3.weights[,othervars], FUN= mean, na.rm=T)#
#
data.graph2[,paste(factors.weights, "upr", sep=".")] <- aggregate(abs(gam3.weights[,factors.weights]), by = gam3.weights[,othervars], FUN= quantile, prob= 0.975, na.rm=T)[,factors.weights]#
#
data.graph2[,paste(factors.weights, "lwr", sep=".")] <- aggregate(abs(gam3.weights[,factors.weights]), by = gam3.weights[,othervars], FUN= quantile, prob= 0.025, na.rm=T)[,factors.weights]#
#
summary(data.graph2)#
#
data.graph <- merge(data.graph1, data.graph2, all.x=T, all.y=T)#
#
# data.graph <- gam3.weights[gam3.weights$TreeID== "MMA014",]#
summary(data.graph)#
gam3.weights$wts.check <- rowSums(abs(gam3.weights[,c("weight.tmean", "weight.precip", "weight.dbh.recon")]))#
data.graph$wts.check <- rowSums(abs(data.graph[,c("weight.tmean", "weight.precip", "weight.dbh.recon")]))#
#
summary(gam3.weights)#
summary(data.graph)#
#
# Ordering the data for graphing#
#
data.graph<- data.graph[order(data.graph$Year, data.graph$group.cc, data.graph$Site, decreasing=F),]#
plot.rgb <- function(STATE, GC, SIZE){	geom_line(data=data.graph[data.graph$State==STATE & data.graph$group.cc==GC,],aes(x=Year, y=fit.full), size=SIZE,#
  		        color=rgb(abs(data.graph[data.graph$State==STATE & data.graph$group.cc==GC,"weight.tmean"     ]), # red#
                        abs(data.graph[data.graph$State==STATE & data.graph$group.cc==GC,"weight.dbh.recon"     ]), # green#
                        abs(data.graph[data.graph$State==STATE & data.graph$group.cc==GC,"weight.precip"   ]))) }   # blue#
# Plotting the Obs and modeled with influence coloring#
data.graph$State <- recode(data.graph$Site, "'Howland' = 'ME';'Harvard' = 'MA';'Morgan Monroe State Park' = 'IN';'Missouri Ozark' = 'MO';'Oak Openings Toledo' = 'OH'")#
data.graph$State <- factor(data.graph$State, levels=c("MO", "IN", "OH", "MA", "ME"))#
#
for(i in unique(data.graph$group.cc)){#
	data.graph[data.graph$group.cc==i,"Canopy.Class"] <- str_sub(data.graph[data.graph$group.cc==i,"group.cc"], -1)#
	data.graph[data.graph$group.cc==i,"group"] <- substr(data.graph[data.graph$group.cc==i,"group.cc"], 1,4)#
}#
data.graph$Canopy.Class <- as.factor(data.graph$Canopy.Class)#
data.graph$group <- as.factor(data.graph$group)#
summary(data.graph)#
# Plotting the Obs and modeled with influence coloring#
pdf("figures/gam3/gam3_SPP_CC_BAI_limiting_factors_All.pdf", width= 13, height = 8.5)#
ggplot(data = data.graph[!data.graph$group.cc %in% c("BETULA.D", "CARYA.D", "FAGR.D", "FRAX.D", "SAAL.D",#
	"BETULA.I", "CARYA.I", "FAGR.I", "FRAX.I", "SAAL.I",#
	"BETULA.S", "CARYA.S", "FAGR.S", "FRAX.S", "SAAL.S"),]) + #
	facet_grid(group.cc ~ State) +#
	scale_x_continuous(expand=c(0,0), name="Year") +#
	scale_y_continuous(expand=c(0,0), name="BAI") +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_line(aes(x=Year, y=BA.inc), size=2, alpha=0.5) +#
	geom_ribbon(aes(x=Year, ymin=BA.inc.lwr, ymax=BA.inc.upr), alpha=0.3) +#
	geom_line(aes(x=Year, y = 0), linetype="dashed") +#
	# Harvard#
	plot.rgb("MA", "ACRU.C", 3) +#
	plot.rgb("MA", "ACRU.D", 3) +#
	plot.rgb("MA", "ACRU.I", 3) +#
	plot.rgb("MA", "ACRU.S", 3) +#
	plot.rgb("MA", "PIST.C", 3) +#
	plot.rgb("MA", "PIST.D", 3) +#
	plot.rgb("MA", "PIST.I", 3) +#
	plot.rgb("MA", "PIST.S", 3) +#
#
	plot.rgb("MA", "TSCA.C", 3) +#
	plot.rgb("MA", "TSCA.D", 3) +#
	plot.rgb("MA", "TSCA.I", 3) +#
	plot.rgb("MA", "TSCA.S", 3) +#
	plot.rgb("MA", "QURU.C", 3) +#
	plot.rgb("MA", "QURU.D", 3) +#
	plot.rgb("MA", "QURU.I", 3) +#
	plot.rgb("MA", "QURU.S", 3) +#
	plot.rgb("MA", "QUVE.C", 3) +#
	plot.rgb("MA", "QUVE.D", 3) +#
	plot.rgb("MA", "QUVE.I", 3) +#
	plot.rgb("MA", "QUVE.S", 3) +#
	# plot.rgb("MA", "FRAX.C", 3) +#
	# plot.rgb("MA", "FRAX.D", 3) +#
	# plot.rgb("MA", "FRAX.I", 3) +#
	# plot.rgb("MA", "FRAX.S", 3) +#
#
	# plot.rgb("MA", "BETULA.C", 3) +#
	# plot.rgb("MA", "BETULA.D", 3) +#
	# plot.rgb("MA", "BETULA.I", 3) +#
	# plot.rgb("MA", "BETULA.S", 3) +#
	plot.rgb("MA", "ACSA.C", 3) +#
	plot.rgb("MA", "ACSA.D", 3) +#
	plot.rgb("MA", "ACSA.I", 3) +#
	plot.rgb("MA", "ACSA.S", 3) +#
	plot.rgb("MA", "QUAL.C", 3) +#
	plot.rgb("MA", "QUAL.D", 3) +#
	plot.rgb("MA", "QUAL.I", 3) +#
	plot.rgb("MA", "QUAL.S", 3) +#
	# plot.rgb("MA", "FAGR.C", 3) +#
	# plot.rgb("MA", "FAGR.D", 3) +#
	# plot.rgb("MA", "FAGR.I", 3) +#
	# plot.rgb("MA", "FAGR.S", 3) +#
	plot.rgb("MA", "ULRU.C", 3) +#
	plot.rgb("MA", "ULRU.D", 3) +#
	plot.rgb("MA", "ULRU.I", 3) +#
	plot.rgb("MA", "ULRU.S", 3) +#
	# plot.rgb("MA", "CARYA.C", 3) +#
	# plot.rgb("MA", "CARYA.D", 3) +#
	# plot.rgb("MA", "CARYA.I", 3) +#
	# plot.rgb("MA", "CARYA.S", 3) +#
#
	# plot.rgb("MA", "SAAL.C", 3) +#
	# plot.rgb("MA", "SAAL.D", 3) +#
	# plot.rgb("MA", "SAAL.I", 3) +#
	# plot.rgb("MA", "SAAL.S", 3) +#
#
	# Howland#
		plot.rgb("ME", "ACRU.C", 3) +#
	plot.rgb("ME", "ACRU.D", 3) +#
	plot.rgb("ME", "ACRU.I", 3) +#
	plot.rgb("ME", "ACRU.S", 3) +#
	plot.rgb("ME", "PIST.C", 3) +#
	plot.rgb("ME", "PIST.D", 3) +#
	plot.rgb("ME", "PIST.I", 3) +#
	plot.rgb("ME", "PIST.S", 3) +#
#
	plot.rgb("ME", "TSCA.C", 3) +#
	plot.rgb("ME", "TSCA.D", 3) +#
	plot.rgb("ME", "TSCA.I", 3) +#
	plot.rgb("ME", "TSCA.S", 3) +#
	plot.rgb("ME", "QURU.C", 3) +#
	plot.rgb("ME", "QURU.D", 3) +#
	plot.rgb("ME", "QURU.I", 3) +#
	plot.rgb("ME", "QURU.S", 3) +#
	plot.rgb("ME", "QUVE.C", 3) +#
	plot.rgb("ME", "QUVE.D", 3) +#
	plot.rgb("ME", "QUVE.I", 3) +#
	plot.rgb("ME", "QUVE.S", 3) +#
	# plot.rgb("ME", "FRAX.C", 3) +#
	# plot.rgb("ME", "FRAX.D", 3) +#
	# plot.rgb("ME", "FRAX.I", 3) +#
	# plot.rgb("ME", "FRAX.S", 3) +#
#
	# plot.rgb("ME", "BETULA.C", 3) +#
	# plot.rgb("ME", "BETULA.D", 3) +#
	# plot.rgb("ME", "BETULA.I", 3) +#
	# plot.rgb("ME", "BETULA.S", 3) +#
	plot.rgb("ME", "ACSA.C", 3) +#
	plot.rgb("ME", "ACSA.D", 3) +#
	plot.rgb("ME", "ACSA.I", 3) +#
	plot.rgb("ME", "ACSA.S", 3) +#
	plot.rgb("ME", "QUAL.C", 3) +#
	plot.rgb("ME", "QUAL.D", 3) +#
	plot.rgb("ME", "QUAL.I", 3) +#
	plot.rgb("ME", "QUAL.S", 3) +#
	# plot.rgb("ME", "FAGR.C", 3) +#
	# plot.rgb("ME", "FAGR.D", 3) +#
	# plot.rgb("ME", "FAGR.I", 3) +#
	# plot.rgb("ME", "FAGR.S", 3) +#
	plot.rgb("ME", "ULRU.C", 3) +#
	plot.rgb("ME", "ULRU.D", 3) +#
	plot.rgb("ME", "ULRU.I", 3) +#
	plot.rgb("ME", "ULRU.S", 3) +#
	# plot.rgb("ME", "CARYA.C", 3) +#
	# plot.rgb("ME", "CARYA.D", 3) +#
	# plot.rgb("ME", "CARYA.I", 3) +#
	# plot.rgb("ME", "CARYA.S", 3) +#
#
	# plot.rgb("ME", "SAAL.C", 3) +#
	# plot.rgb("ME", "SAAL.D", 3) +#
	# plot.rgb("ME", "SAAL.I", 3) +#
	# plot.rgb("ME", "SAAL.S", 3) +#
	# Morgan Monroe#
	plot.rgb("IN", "ACRU.C", 3) +#
	plot.rgb("IN", "ACRU.D", 3) +#
	plot.rgb("IN", "ACRU.I", 3) +#
	plot.rgb("IN", "ACRU.S", 3) +#
	plot.rgb("IN", "PIST.C", 3) +#
	plot.rgb("IN", "PIST.D", 3) +#
	plot.rgb("IN", "PIST.I", 3) +#
	plot.rgb("IN", "PIST.S", 3) +#
#
	plot.rgb("IN", "TSCA.C", 3) +#
	plot.rgb("IN", "TSCA.D", 3) +#
	plot.rgb("IN", "TSCA.I", 3) +#
	plot.rgb("IN", "TSCA.S", 3) +#
	plot.rgb("IN", "QURU.C", 3) +#
	plot.rgb("IN", "QURU.D", 3) +#
	plot.rgb("IN", "QURU.I", 3) +#
	plot.rgb("IN", "QURU.S", 3) +#
	plot.rgb("IN", "QUVE.C", 3) +#
	plot.rgb("IN", "QUVE.D", 3) +#
	plot.rgb("IN", "QUVE.I", 3) +#
	plot.rgb("IN", "QUVE.S", 3) +#
	# plot.rgb("IN", "FRAX.C", 3) +#
	# plot.rgb("IN", "FRAX.D", 3) +#
	# plot.rgb("IN", "FRAX.I", 3) +#
	# plot.rgb("IN", "FRAX.S", 3) +#
#
	# plot.rgb("IN", "BETULA.C", 3) +#
	# plot.rgb("IN", "BETULA.D", 3) +#
	# plot.rgb("IN", "BETULA.I", 3) +#
	# plot.rgb("IN", "BETULA.S", 3) +#
	plot.rgb("IN", "ACSA.C", 3) +#
	plot.rgb("IN", "ACSA.D", 3) +#
	plot.rgb("IN", "ACSA.I", 3) +#
	plot.rgb("IN", "ACSA.S", 3) +#
	plot.rgb("IN", "QUAL.C", 3) +#
	plot.rgb("IN", "QUAL.D", 3) +#
	plot.rgb("IN", "QUAL.I", 3) +#
	plot.rgb("IN", "QUAL.S", 3) +#
	# plot.rgb("IN", "FAGR.C", 3) +#
	# plot.rgb("IN", "FAGR.D", 3) +#
	# plot.rgb("IN", "FAGR.I", 3) +#
	# plot.rgb("IN", "FAGR.S", 3) +#
	plot.rgb("IN", "ULRU.C", 3) +#
	plot.rgb("IN", "ULRU.D", 3) +#
	plot.rgb("IN", "ULRU.I", 3) +#
	plot.rgb("IN", "ULRU.S", 3) +#
	# plot.rgb("IN", "CARYA.C", 3) +#
	# plot.rgb("IN", "CARYA.D", 3) +#
	# plot.rgb("IN", "CARYA.I", 3) +#
	# plot.rgb("IN", "CARYA.S", 3) +#
#
	# plot.rgb("IN", "SAAL.C", 3) +#
	# plot.rgb("IN", "SAAL.D", 3) +#
	# plot.rgb("IN", "SAAL.I", 3) +#
	# plot.rgb("IN", "SAAL.S", 3) +#
	# Missouri Ozark#
		plot.rgb("MO", "ACRU.C", 3) +#
	plot.rgb("MO", "ACRU.D", 3) +#
	plot.rgb("MO", "ACRU.I", 3) +#
	plot.rgb("MO", "ACRU.S", 3) +#
	plot.rgb("MO", "PIST.C", 3) +#
	plot.rgb("MO", "PIST.D", 3) +#
	plot.rgb("MO", "PIST.I", 3) +#
	plot.rgb("MO", "PIST.S", 3) +#
#
	plot.rgb("MO", "TSCA.C", 3) +#
	plot.rgb("MO", "TSCA.D", 3) +#
	plot.rgb("MO", "TSCA.I", 3) +#
	plot.rgb("MO", "TSCA.S", 3) +#
	plot.rgb("MO", "QURU.C", 3) +#
	plot.rgb("MO", "QURU.D", 3) +#
	plot.rgb("MO", "QURU.I", 3) +#
	plot.rgb("MO", "QURU.S", 3) +#
	plot.rgb("MO", "QUVE.C", 3) +#
	plot.rgb("MO", "QUVE.D", 3) +#
	plot.rgb("MO", "QUVE.I", 3) +#
	plot.rgb("MO", "QUVE.S", 3) +#
	# plot.rgb("MO", "FRAX.C", 3) +#
	# plot.rgb("MO", "FRAX.D", 3) +#
	# plot.rgb("MO", "FRAX.I", 3) +#
	# plot.rgb("MO", "FRAX.S", 3) +#
#
	# plot.rgb("MO", "BETULA.C", 3) +#
	# plot.rgb("MO", "BETULA.D", 3) +#
	# plot.rgb("MO", "BETULA.I", 3) +#
	# plot.rgb("MO", "BETULA.S", 3) +#
	plot.rgb("MO", "ACSA.C", 3) +#
	plot.rgb("MO", "ACSA.D", 3) +#
	plot.rgb("MO", "ACSA.I", 3) +#
	plot.rgb("MO", "ACSA.S", 3) +#
	plot.rgb("MO", "QUAL.C", 3) +#
	plot.rgb("MO", "QUAL.D", 3) +#
	plot.rgb("MO", "QUAL.I", 3) +#
	plot.rgb("MO", "QUAL.S", 3) +#
	# plot.rgb("MO", "FAGR.C", 3) +#
	# plot.rgb("MO", "FAGR.D", 3) +#
	# plot.rgb("MO", "FAGR.I", 3) +#
	# plot.rgb("MO", "FAGR.S", 3) +#
	plot.rgb("MO", "ULRU.C", 3) +#
	plot.rgb("MO", "ULRU.D", 3) +#
	plot.rgb("MO", "ULRU.I", 3) +#
	plot.rgb("MO", "ULRU.S", 3) +#
	# plot.rgb("MO", "CARYA.C", 3) +#
	# plot.rgb("MO", "CARYA.D", 3) +#
	# plot.rgb("MO", "CARYA.I", 3) +#
	# plot.rgb("MO", "CARYA.S", 3) +#
#
	# plot.rgb("MO", "SAAL.C", 3) +#
	# plot.rgb("MO", "SAAL.D", 3) +#
	# plot.rgb("MO", "SAAL.I", 3) +#
	# plot.rgb("MO", "SAAL.S", 3) +#
	# Oak Openings#
			plot.rgb("OH", "ACRU.C", 3) +#
	plot.rgb("OH", "ACRU.D", 3) +#
	plot.rgb("OH", "ACRU.I", 3) +#
	plot.rgb("OH", "ACRU.S", 3) +#
	plot.rgb("OH", "PIST.C", 3) +#
	plot.rgb("OH", "PIST.D", 3) +#
	plot.rgb("OH", "PIST.I", 3) +#
	plot.rgb("OH", "PIST.S", 3) +#
#
	plot.rgb("OH", "TSCA.C", 3) +#
	plot.rgb("OH", "TSCA.D", 3) +#
	plot.rgb("OH", "TSCA.I", 3) +#
	plot.rgb("OH", "TSCA.S", 3) +#
	plot.rgb("OH", "QURU.C", 3) +#
	plot.rgb("OH", "QURU.D", 3) +#
	plot.rgb("OH", "QURU.I", 3) +#
	plot.rgb("OH", "QURU.S", 3) +#
	plot.rgb("OH", "QUVE.C", 3) +#
	plot.rgb("OH", "QUVE.D", 3) +#
	plot.rgb("OH", "QUVE.I", 3) +#
	plot.rgb("OH", "QUVE.S", 3) +#
	# plot.rgb("OH", "FRAX.C", 3) +#
	# plot.rgb("OH", "FRAX.D", 3) +#
	# plot.rgb("OH", "FRAX.I", 3) +#
	# plot.rgb("OH", "FRAX.S", 3) +#
#
	# plot.rgb("OH", "BETULA.C", 3) +#
	# plot.rgb("OH", "BETULA.D", 3) +#
	# plot.rgb("OH", "BETULA.I", 3) +#
	# plot.rgb("OH", "BETULA.S", 3) +#
	plot.rgb("OH", "ACSA.C", 3) +#
	plot.rgb("OH", "ACSA.D", 3) +#
	plot.rgb("OH", "ACSA.I", 3) +#
	plot.rgb("OH", "ACSA.S", 3) +#
	plot.rgb("OH", "QUAL.C", 3) +#
	plot.rgb("OH", "QUAL.D", 3) +#
	plot.rgb("OH", "QUAL.I", 3) +#
	plot.rgb("OH", "QUAL.S", 3) +#
	# plot.rgb("OH", "FAGR.C", 3) +#
	# plot.rgb("OH", "FAGR.D", 3) +#
	# plot.rgb("OH", "FAGR.I", 3) +#
	# plot.rgb("OH", "FAGR.S", 3) +#
	plot.rgb("OH", "ULRU.C", 3) +#
	plot.rgb("OH", "ULRU.D", 3) +#
	plot.rgb("OH", "ULRU.I", 3) +#
	plot.rgb("OH", "ULRU.S", 3) #+#
	# plot.rgb("OH", "CARYA.C", 3) +#
	# plot.rgb("OH", "CARYA.D", 3) +#
	# plot.rgb("OH", "CARYA.I", 3) +#
	# plot.rgb("OH", "CARYA.S", 3) +#
#
	# plot.rgb("OH", "SAAL.C", 3) +#
	# plot.rgb("OH", "SAAL.D", 3) +#
	# plot.rgb("OH", "SAAL.I", 3) +#
	# plot.rgb("OH", "SAAL.S", 3)#
dev.off()	#
# Just plotting the BAI fits#
summary(data.graph)#
ggplot(data.graph) + facet_wrap(group.cc~Site) +#
  scale_x_continuous(expand=c(0,0), name="Year") +#
  scale_y_continuous(expand=c(0,0), name="BAI") +#
  # facet_wrap(~TreeID, scales="free_y", space="free") +#
  # geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
  geom_line(aes(x=Year, y=fit.full), size=2, alpha=0.5) +#
  geom_ribbon(aes(x=Year, ymin=fit.full.lwr, ymax=fit.full.upr), alpha=0.3)
ggplot(data.graph) + facet_wrap(group.cc~State) +#
	scale_x_continuous(expand=c(0,0), name="Year") +#
	scale_y_continuous(expand=c(0,0), name="Effect on RW (in mm)") +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_line(aes(x=Year, y=fit.tmean), size=2, color="red") +#
	geom_line(aes(x=Year, y=fit.precip), size=2, color="blue") +#
	geom_line(aes(x=Year, y=fit.dbh.recon), size=2, color="green")
ggplot(data.graph[data.graph$Canopy.Class=="D" & !data.graph$group.cc %in% c("BETULA.D", "CARYA.D", "FAGR.D", "FRAX.D", "SAAL.D"),]) + facet_grid(group~State) +#
	scale_x_continuous(expand=c(0,0), name="Year") +#
	scale_y_continuous(expand=c(0,0), name="Effect on RW (in mm)") +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_line(aes(x=Year, y=fit.tmean), size=2, color="red") +#
	geom_line(aes(x=Year, y=fit.precip), size=2, color="blue") +#
	geom_line(aes(x=Year, y=fit.dbh.recon), size=2, color="green")+#
	labs(title= "Dominant Effects (group.cc)")
summary(data.graph)
ggplot(data.graph[data.graph$Canopy.Class=="D" & !data.graph$group.cc %in% c("BETULA.D", "CARYA.D", "FAGR.D", "FRAX.D", "SAAL.D"),]) + facet_grid(group~State) +#
	scale_x_continuous(expand=c(0,0), name="Year") +#
	scale_y_continuous(expand=c(0,0), name="Effect on RW (in mm)") +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_ribbon(aes(x=Year, ymin=fit.tmean.lwr, ymax=fit.tmean.upr, alpha=0.5))+
geom_line(aes(x=Year, y=fit.tmean), size=2, color="red") +
labs(title= "Dominant Effects (group.cc)")
ggplot(data.graph[data.graph$Canopy.Class=="D" & !data.graph$group.cc %in% c("BETULA.D", "CARYA.D", "FAGR.D", "FRAX.D", "SAAL.D"),]) + facet_grid(group~State) +#
	scale_x_continuous(expand=c(0,0), name="Year") +#
	scale_y_continuous(expand=c(0,0), name="Effect on RW (in mm)") +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_ribbon(aes(x=Year, ymin=fit.tmean.lwr, ymax=fit.tmean.upr), alpha=0.5)+
labs(title= "Dominant Effects (group.cc)")
ggplot(data.graph[data.graph$Canopy.Class=="D" & !data.graph$group.cc %in% c("BETULA.D", "CARYA.D", "FAGR.D", "FRAX.D", "SAAL.D"),]) + facet_grid(group~State) +#
	scale_x_continuous(expand=c(0,0), name="Year") +#
	scale_y_continuous(expand=c(0,0), name="Effect on RW (in mm)") +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_ribbon(aes(x=Year, ymin=fit.tmean.lwr, ymax=fit.tmean.upr), alpha=0.9)+
labs(title= "Dominant Effects (group.cc)")
ggplot(data.graph[data.graph$Canopy.Class=="D" & !data.graph$group.cc %in% c("BETULA.D", "CARYA.D", "FAGR.D", "FRAX.D", "SAAL.D"),]) + facet_grid(group~State) +#
	scale_x_continuous(expand=c(0,0), name="Year") +#
	scale_y_continuous(expand=c(0,0), name="Effect on RW (in mm)") +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +
geom_line(aes(x=Year, y=fit.tmean.lwr), size=2, color="red") +
dev.off()
ggplot(data.graph[data.graph$Canopy.Class=="D" & !data.graph$group.cc %in% c("BETULA.D", "CARYA.D", "FAGR.D", "FRAX.D", "SAAL.D"),]) + facet_grid(group~State) +#
	scale_x_continuous(expand=c(0,0), name="Year") +#
	scale_y_continuous(expand=c(0,0), name="Effect on RW (in mm)") +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +
geom_line(aes(x=Year, y=fit.tmean.lwr), size=2, color="red") +
labs(title= "Dominant Effects (group.cc)")
ggplot(data.graph[data.graph$Canopy.Class=="D" & !data.graph$group.cc %in% c("BETULA.D", "CARYA.D", "FAGR.D", "FRAX.D", "SAAL.D"),]) + facet_grid(group~State) +#
	scale_x_continuous(expand=c(0,0), name="Year") +#
	scale_y_continuous(expand=c(0,0), name="Effect on RW (in mm)") +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_ribbon(aes(x=Year, ymin=fit.tmean.lwr, ymax=fit.tmean.upr), alpha=0.9)+
labs(title= "Dominant Effects (group.cc)")
ggplot(data.graph[data.graph$Canopy.Class=="D" & !data.graph$group.cc %in% c("BETULA.D", "CARYA.D", "FAGR.D", "FRAX.D", "SAAL.D"),]) + facet_grid(group~State) +#
	scale_x_continuous(expand=c(0,0), name="Year") +#
	scale_y_continuous(expand=c(0,0), name="Effect on RW (in mm)") +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_ribbon(aes(x=Year, ymin=fit.tmean.lwr, ymax=fit.tmean.upr), alpha=0.9, color="red")+
labs(title= "Dominant Effects (group.cc)")
ggplot(data.graph[data.graph$Canopy.Class=="D" & !data.graph$group.cc %in% c("BETULA.D", "CARYA.D", "FAGR.D", "FRAX.D", "SAAL.D") & data.graph$group=="QURU",]) + facet_grid(group~State) +#
	scale_x_continuous(expand=c(0,0), name="Year") +#
	scale_y_continuous(expand=c(0,0), name="Effect on RW (in mm)") +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_ribbon(aes(x=Year, ymin=fit.tmean.lwr, ymax=fit.tmean.upr), alpha=0.9, color="red")+
labs(title= "Dominant Effects (group.cc)")
summary(data.graph)
ggplot(data.graph[data.graph$Canopy.Class=="D" & !data.graph$group.cc %in% c("BETULA.D", "CARYA.D", "FAGR.D", "FRAX.D", "SAAL.D") & data.graph$group=="QURU",]) + facet_grid(group~State) +#
	scale_x_continuous(expand=c(0,0), name="Year") +#
	scale_y_continuous(expand=c(0,0), name="Effect on RW (in mm)") +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_ribbon(aes(x=Year, ymin=fit.dbh.recon.lwr, ymax=fit.dbh.recon.upr), alpha=0.9, color="green")+
labs(title= "Dominant Effects (group.cc)")
ggplot(data.graph[data.graph$Canopy.Class=="D" & !data.graph$group.cc %in% c("BETULA.D", "CARYA.D", "FAGR.D", "FRAX.D", "SAAL.D") & data.graph$group=="QURU",]) + facet_grid(group~State) +#
	scale_x_continuous(expand=c(0,0), name="Year") +#
	scale_y_continuous(expand=c(0,0), name="Effect on RW (in mm)") +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_ribbon(aes(x=Year, ymin=fit.dbh.recon.lwr, ymax=fit.dbh.recon.upr, fill="green"), alpha=0.9, color="green")+
labs(title= "Dominant Effects (group.cc)")
ggplot(data.graph[data.graph$Canopy.Class=="D" & !data.graph$group.cc %in% c("BETULA.D", "CARYA.D", "FAGR.D", "FRAX.D", "SAAL.D") & data.graph$group=="QURU",]) + facet_grid(group~State) +#
	scale_x_continuous(expand=c(0,0), name="Year") +#
	scale_y_continuous(expand=c(0,0), name="Effect on RW (in mm)") +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_ribbon(aes(x=Year, ymin=fit.dbh.recon.lwr, ymax=fit.dbh.recon.upr), alpha=0.9, fill="green")+
labs(title= "Dominant Effects (group.cc)")
ggplot(data.graph[data.graph$Canopy.Class=="D" & !data.graph$group.cc %in% c("BETULA.D", "CARYA.D", "FAGR.D", "FRAX.D", "SAAL.D") & data.graph$group=="QURU",]) + facet_grid(group~State) +#
	scale_x_continuous(expand=c(0,0), name="Year") +#
	scale_y_continuous(expand=c(0,0), name="Effect on RW (in mm)") +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_ribbon(aes(x=Year, ymin=fit.dbh.recon.lwr, ymax=fit.dbh.recon.upr), alpha=0.4, fill="green")+
labs(title= "Dominant Effects (group.cc)")
ggplot(data.graph[data.graph$Canopy.Class=="D" & !data.graph$group.cc %in% c("BETULA.D", "CARYA.D", "FAGR.D", "FRAX.D", "SAAL.D") & data.graph$group=="QURU",]) + facet_grid(group~State) +#
	scale_x_continuous(expand=c(0,0), name="Year") +#
	scale_y_continuous(expand=c(0,0), name="Effect on RW (in mm)") +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_ribbon(aes(x=Year, ymin=fit.dbh.recon.lwr, ymax=fit.dbh.recon.upr), alpha=0.4, fill="green")+#
	geom_line(aes(x=Year, y=fit.tmean), size=2, color="red") +#
	geom_line(aes(x=Year, y=fit.precip), size=2, color="blue") +#
	geom_line(aes(x=Year, y=fit.dbh.recon), size=2, color="green")+#
	labs(title= "Dominant Effects (group.cc)")
ggplot(data.graph[data.graph$Canopy.Class=="D" & !data.graph$group.cc %in% c("BETULA.D", "CARYA.D", "FAGR.D", "FRAX.D", "SAAL.D"),]) + facet_grid(group~State) +#
	scale_x_continuous(expand=c(0,0), name="Year") +#
	scale_y_continuous(expand=c(0,0), name="Effect on RW (in mm)") +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_ribbon(aes(x=Year, ymin=fit.dbh.recon.lwr, ymax=fit.dbh.recon.upr), alpha=0.4, fill="green")+#
	geom_line(aes(x=Year, y=fit.tmean), size=2, color="red") +#
	geom_line(aes(x=Year, y=fit.precip), size=2, color="blue") +#
	geom_line(aes(x=Year, y=fit.dbh.recon), size=2, color="green")+#
	labs(title= "Dominant Effects (group.cc)")
summary(data.graph)
ggplot(data.graph[data.graph$Canopy.Class=="D" & !data.graph$group.cc %in% c("BETULA.D", "CARYA.D", "FAGR.D", "FRAX.D", "SAAL.D"),]) + facet_grid(group~State) +#
	scale_x_continuous(expand=c(0,0), name="Year") +#
	scale_y_continuous(expand=c(0,0), name="Effect on RW (in mm)") +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	#geom_ribbon(aes(x=Year, ymin=fit.dbh.recon.lwr, ymax=fit.dbh.recon.upr), alpha=0.4, fill="green")+#
	geom_line(aes(x=Year, y=weight.tmean), size=2, color="red") +#
	geom_line(aes(x=Year, y=weight.precip), size=2, color="blue") +#
	geom_line(aes(x=Year, y=weight.dbh.recon), size=2, color="green")+#
	labs(title= "Dominant Effects (group.cc)")
ggplot(data.graph[data.graph$Canopy.Class=="D" & !data.graph$group.cc %in% c("BETULA.D", "CARYA.D", "FAGR.D", "FRAX.D", "SAAL.D"),]) + facet_grid(group~State) +#
	scale_x_continuous(expand=c(0,0), name="Year") +#
	scale_y_continuous(expand=c(0,0), name="Effect on RW (in mm)") +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	#geom_ribbon(aes(x=Year, ymin=fit.dbh.recon.lwr, ymax=fit.dbh.recon.upr), alpha=0.4, fill="green")+#
	geom_line(aes(x=Year, y=fit.tmean), size=2, color="red") +#
	geom_line(aes(x=Year, y=fit.precip), size=2, color="blue") +#
	geom_line(aes(x=Year, y=fit.dbh.recon), size=2, color="green")+#
	labs(title= "Dominant Effects (group.cc)")
ggplot(data.graph[data.graph$Canopy.Class=="D" & !data.graph$group.cc %in% c("BETULA.D", "CARYA.D", "FAGR.D", "FRAX.D", "SAAL.D"),]) + facet_grid(group~State) +#
	scale_x_continuous(expand=c(0,0), name="Year") +#
	scale_y_continuous(expand=c(0,0), name="Effect on RW (in mm)") +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	#geom_ribbon(aes(x=Year, ymin=fit.dbh.recon.lwr, ymax=fit.dbh.recon.upr), alpha=0.4, fill="green")+#
	geom_line(aes(x=Year, y=fit.tmean), size=1, color="red") +#
	geom_line(aes(x=Year, y=fit.precip), size=1, color="blue") +#
	geom_line(aes(x=Year, y=fit.dbh.recon), size=1, color="green")+#
	labs(title= "Dominant Effects (group.cc)")
ggplot(data.graph[data.graph$Canopy.Class=="I" & !data.graph$group.cc %in% c("BETULA.I", "CARYA.I", "FAGR.I", "FRAX.I", "SAAL.I"),]) + facet_grid(group~State) +#
	scale_x_continuous(expand=c(0,0), name="Year") +#
	scale_y_continuous(expand=c(0,0), name="Effect on RW (in mm)") +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_line(aes(x=Year, y=fit.tmean), size=1, color="red") +#
	geom_line(aes(x=Year, y=fit.precip), size=1, color="blue") +#
	geom_line(aes(x=Year, y=fit.dbh.recon), size=1, color="green")+#
	labs(title= "Intermediate Effects (group.cc)")
ggplot(data.graph[data.graph$Canopy.Class=="S" & !data.graph$group.cc %in% c("BETULA.S", "CARYA.S", "FAGR.S", "FRAX.S", "SAAL.S"),]) + facet_grid(group~State) +#
	scale_x_continuous(expand=c(0,0), name="Year") +#
	scale_y_continuous(expand=c(0,0), name="Effect on RW (in mm)") +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_line(aes(x=Year, y=fit.tmean), size=2, color="red") +#
	geom_line(aes(x=Year, y=fit.precip), size=2, color="blue") +#
	geom_line(aes(x=Year, y=fit.dbh.recon), size=2, color="green")+#
	labs(title= "Suppressed Effects (group.cc)")
ggplot(data.graph[data.graph$Canopy.Class=="S" & !data.graph$group.cc %in% c("BETULA.S", "CARYA.S", "FAGR.S", "FRAX.S", "SAAL.S"),]) + facet_grid(group~State) +#
	scale_x_continuous(expand=c(0,0), name="Year") +#
	scale_y_continuous(expand=c(0,0), name="Effect on RW (in mm)") +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_line(aes(x=Year, y=fit.tmean), size=1, color="red") +#
	geom_line(aes(x=Year, y=fit.precip), size=1, color="blue") +#
	geom_line(aes(x=Year, y=fit.dbh.recon), size=1, color="green")+#
	labs(title= "Suppressed Effects (group.cc)")
ggplot(data.graph[data.graph$Canopy.Class=="S" & !data.graph$group.cc %in% c("BETULA.S", "CARYA.S", "FAGR.S", "FRAX.S", "SAAL.S"),]) + facet_grid(group~State) +#
	scale_x_continuous(expand=c(0,0), name="Year") +#
	scale_y_continuous(expand=c(0,0), name="Effect on RW (in mm)") +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_line(aes(x=Year, y=fit.tmean), size=1, color="red") +#
	geom_line(aes(x=Year, y=fit.precip), size=1, color="blue") +#
	geom_line(aes(x=Year, y=fit.dbh.recon), size=1, color="green")+ ylim(c(0,4))#
	labs(title= "Suppressed Effects (group.cc)")
ggplot(data.graph[data.graph$Canopy.Class=="D" & !data.graph$group.cc %in% c("BETULA.D", "CARYA.D", "FAGR.D", "FRAX.D", "SAAL.D"),]) + facet_grid(group~State) +#
	scale_x_continuous(expand=c(0,0), name="Year") +#
	scale_y_continuous(expand=c(0,0), name="Effect on RW (in mm)") +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	#geom_ribbon(aes(x=Year, ymin=fit.dbh.recon.lwr, ymax=fit.dbh.recon.upr), alpha=0.4, fill="green")+#
	geom_line(aes(x=Year, y=fit.tmean), size=1, color="red") +#
	geom_line(aes(x=Year, y=fit.precip), size=1, color="blue") +#
	geom_line(aes(x=Year, y=fit.dbh.recon), size=1, color="green")+#
	ylim(c(0,4)) +#
	labs(title= "Dominant Effects (group.cc)")
ggplot(data.graph[data.graph$Canopy.Class=="I" & !data.graph$group.cc %in% c("BETULA.I", "CARYA.I", "FAGR.I", "FRAX.I", "SAAL.I"),]) + facet_grid(group~State) +#
	scale_x_continuous(expand=c(0,0), name="Year") +#
	scale_y_continuous(expand=c(0,0), name="Effect on RW (in mm)") +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_line(aes(x=Year, y=fit.tmean), size=1, color="red") +#
	geom_line(aes(x=Year, y=fit.precip), size=1, color="blue") +#
	geom_line(aes(x=Year, y=fit.dbh.recon), size=1, color="green")+#
	ylim(c(0,4)) +#
	labs(title= "Intermediate Effects (group.cc)")
ggplot(data.graph[data.graph$Canopy.Class=="S" & !data.graph$group.cc %in% c("BETULA.S", "CARYA.S", "FAGR.S", "FRAX.S", "SAAL.S"),]) + facet_grid(group~State) +#
	scale_x_continuous(expand=c(0,0), name="Year") +#
	scale_y_continuous(expand=c(0,0), name="Effect on RW (in mm)") +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_line(aes(x=Year, y=fit.tmean), size=1, color="red") +#
	geom_line(aes(x=Year, y=fit.precip), size=1, color="blue") +#
	geom_line(aes(x=Year, y=fit.dbh.recon), size=1, color="green")+#
	ylim(c(0,4)) +#
	labs(title= "Suppressed Effects (group.cc)")
ggplot(data.graph[data.graph$Canopy.Class=="D" & !data.graph$group.cc %in% c("BETULA.D", "CARYA.D", "FAGR.D", "FRAX.D", "SAAL.D"),]) + facet_grid(group~State) +#
	scale_x_continuous(expand=c(0,0), name="Year") +#
	scale_y_continuous(expand=c(0,0), name="Effect on RW (in mm)") +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	#geom_ribbon(aes(x=Year, ymin=fit.dbh.recon.lwr, ymax=fit.dbh.recon.upr), alpha=0.4, fill="green")+#
	geom_line(aes(x=Year, y=fit.tmean), size=1, color="red") +#
	geom_line(aes(x=Year, y=fit.precip), size=1, color="blue") +#
	geom_line(aes(x=Year, y=fit.dbh.recon), size=1, color="green")+#
	ylim(c(0,3)) +#
	labs(title= "Dominant Effects (group.cc)")
ggplot(data.graph[data.graph$Canopy.Class=="I" & !data.graph$group.cc %in% c("BETULA.I", "CARYA.I", "FAGR.I", "FRAX.I", "SAAL.I"),]) + facet_grid(group~State) +#
	scale_x_continuous(expand=c(0,0), name="Year") +#
	scale_y_continuous(expand=c(0,0), name="Effect on RW (in mm)") +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_line(aes(x=Year, y=fit.tmean), size=1, color="red") +#
	geom_line(aes(x=Year, y=fit.precip), size=1, color="blue") +#
	geom_line(aes(x=Year, y=fit.dbh.recon), size=1, color="green")+#
	ylim(c(0,3)) +#
	labs(title= "Intermediate Effects (group.cc)")
ggplot(data.graph[data.graph$Canopy.Class=="S" & !data.graph$group.cc %in% c("BETULA.S", "CARYA.S", "FAGR.S", "FRAX.S", "SAAL.S"),]) + facet_grid(group~State) +#
	scale_x_continuous(expand=c(0,0), name="Year") +#
	scale_y_continuous(expand=c(0,0), name="Effect on RW (in mm)") +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_line(aes(x=Year, y=fit.tmean), size=1, color="red") +#
	geom_line(aes(x=Year, y=fit.precip), size=1, color="blue") +#
	geom_line(aes(x=Year, y=fit.dbh.recon), size=1, color="green")+#
	ylim(c(0,3)) +#
	labs(title= "Suppressed Effects (group.cc)")
library(ggplot2)#
library(car)#
load(file="processed_data/gamm_weights/gam1_weights.Rdata")#
#
summary(gam1.weights)#
factors.fits <- c("fit.tmean", "fit.precip", "fit.dbh.recon", "fit.full", "BA.inc")#
factors.weights <- c("weight.tmean", "weight.dbh.recon", "weight.precip")#
#
# Transforming things back to BA.inc rather than log#
gam1.weights[,which(substr(names(gam1.weights),1,3)=="fit")] <- exp(gam1.weights[,which(substr(names(gam1.weights),1,3)=="fit")] )#
#
othervars <- c("Year", "Site", "group", "Model")#
#
data.graph1 <- aggregate(gam1.weights[,factors.fits], by = gam1.weights[,othervars], FUN= mean, na.rm=T)#
#
data.graph1[,paste(factors.fits, "upr", sep=".")] <- aggregate(gam1.weights[,factors.fits], by = gam1.weights[,othervars], FUN= quantile, prob= 0.975, na.rm=T)[,factors.fits]#
#
data.graph1[,paste(factors.fits, "lwr", sep=".")] <- aggregate(gam1.weights[,factors.fits], by = gam1.weights[,othervars], FUN= quantile, prob= 0.025, na.rm=T)[,factors.fits]#
#
summary(data.graph1)#
#
data.graph2 <- aggregate(abs(gam1.weights[,factors.weights]), by = gam1.weights[,othervars], FUN= mean, na.rm=T)#
#
data.graph2[,paste(factors.weights, "upr", sep=".")] <- aggregate(abs(gam1.weights[,factors.weights]), by = gam1.weights[,othervars], FUN= quantile, prob= 0.975, na.rm=T)[,factors.weights]#
#
data.graph2[,paste(factors.weights, "lwr", sep=".")] <- aggregate(abs(gam1.weights[,factors.weights]), by = gam1.weights[,othervars], FUN= quantile, prob= 0.025, na.rm=T)[,factors.weights]#
#
summary(data.graph2)#
#
data.graph <- merge(data.graph1, data.graph2, all.x=T, all.y=T)#
#
# data.graph <- gam1.weights[gam1.weights$TreeID== "MMA014",]#
summary(data.graph)#
gam1.weights$wts.check <- rowSums(abs(gam1.weights[,c("weight.tmean", "weight.precip", "weight.dbh.recon")]))#
data.graph$wts.check <- rowSums(abs(data.graph[,c("weight.tmean", "weight.precip", "weight.dbh.recon")]))#
#
summary(gam1.weights)#
summary(data.graph)#
#
# Ordering the data for graphing#
#
data.graph<- data.graph[order(data.graph$Year, data.graph$group, data.graph$Site, decreasing=F),]#
summary(data.graph)#
#
plot.rgb <- function(STATE, SPP, SIZE){	geom_line(data=data.graph[data.graph$State==STATE & data.graph$group==SPP,],aes(x=Year, y=fit.full), size=SIZE,#
  		        color=rgb(abs(data.graph[data.graph$State==STATE & data.graph$group==SPP,"weight.tmean"     ]), # red#
                        abs(data.graph[data.graph$State==STATE & data.graph$group==SPP,"weight.dbh.recon"     ]), # green#
                        abs(data.graph[data.graph$State==STATE & data.graph$group==SPP,"weight.precip"   ]))) }   # blue#
#
# Plotting the Obs and modeled with influence coloring#
data.graph$State <- recode(data.graph$Site, "'Howland' = 'ME';'Harvard' = 'MA';'Morgan Monroe State Park' = 'IN';'Missouri Ozark' = 'MO';'Oak Openings Toledo' = 'OH'")#
data.graph$State <- factor(data.graph$State, levels=c("MO", "IN", "OH", "MA", "ME"))#
#
summary(data.graph[!data.graph$group %in% c("BETULA", "CARYA", "FAGR", "FRAX", "SAAL"),])#
#
pdf("figures/gam1_Species_BAI_limiting_factor.pdf", width= 13, height = 8.5)#
ggplot(data.graph[!data.graph$group %in% c("BETULA", "CARYA", "FAGR", "FRAX", "SAAL"),]) + facet_grid(group~State) +#
	scale_x_continuous(expand=c(0,0)) +#
	scale_y_continuous(expand=c(0,0)) +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_line(aes(x=Year, y=BA.inc), size=2, alpha=0.5) +#
	geom_ribbon(aes(x=Year, ymin=BA.inc.lwr, ymax=BA.inc.upr), alpha=0.3) +#
	geom_line(aes(x=Year, y = 0), linetype="dashed") +#
	plot.rgb("MA", "ACRU", 3) +#
	plot.rgb("MA", "PIST", 3) +#
	plot.rgb("MA", "TSCA", 3) +#
	plot.rgb("MA", "QURU", 3) +#
	plot.rgb("MA", "QUVE", 3) +#
	#plot.rgb("MA", "FRAX", 3) +#
	#plot.rgb("MA", "BETULA", 3) +#
	plot.rgb("MA", "ACSA", 3) +#
	plot.rgb("MA", "QUAL", 3) +#
	#plot.rgb("MA", "FAGR", 3) +#
	plot.rgb("MA", "ULRU", 3) +#
	#plot.rgb("MA", "CARYA", 3) +#
	#plot.rgb("MA", "SAAL", 3) +#
	plot.rgb("ME", "ACRU", 3) +#
	plot.rgb("ME", "PIST", 3) +#
	plot.rgb("ME", "TSCA", 3) +#
	plot.rgb("ME", "QURU", 3) +#
	plot.rgb("ME", "QUVE", 3) +#
	#plot.rgb("ME", "FRAX", 3) +#
	#plot.rgb("ME", "BETULA", 3) +#
	plot.rgb("ME", "ACSA", 3) +#
	plot.rgb("ME", "QUAL", 3) +#
	#plot.rgb("ME", "FAGR", 3) +#
	plot.rgb("ME", "ULRU", 3) +#
	#plot.rgb("ME", "CARYA", 3) +#
	#plot.rgb("ME", "SAAL", 3) +#
	plot.rgb("MO", "ACRU", 3) +#
	plot.rgb("MO", "PIST", 3) +#
	plot.rgb("MO", "TSCA", 3) +#
	plot.rgb("MO", "QURU", 3) +#
	plot.rgb("MO", "QUVE", 3) +#
	#plot.rgb("MO", "FRAX", 3) +#
	#plot.rgb("MO", "BETULA", 3) +#
	plot.rgb("MO", "ACSA", 3) +#
	plot.rgb("MO", "QUAL", 3) +#
	#plot.rgb("MO", "FAGR", 3) +#
	plot.rgb("MO", "ULRU", 3) +#
	#plot.rgb("MO", "CARYA", 3) +#
	#plot.rgb("MO", "SAAL", 3) +#
#
	plot.rgb("IN", "ACRU", 3) +#
	plot.rgb("IN", "PIST", 3) +#
	plot.rgb("IN", "TSCA", 3) +#
	plot.rgb("IN", "QURU", 3) +#
	plot.rgb("IN", "QUVE", 3) +#
	#plot.rgb("IN", "FRAX", 3) +#
	#plot.rgb("IN", "BETULA", 3) +#
	plot.rgb("IN", "ACSA", 3) +#
	plot.rgb("IN", "QUAL", 3) +#
	#plot.rgb("IN", "FAGR", 3) +#
	plot.rgb("IN", "ULRU", 3) +#
	#plot.rgb("IN", "CARYA", 3) +#
	#plot.rgb("IN", "SAAL", 3) +#
	plot.rgb("OH", "ACRU", 3) +#
	plot.rgb("OH", "PIST", 3) +#
	plot.rgb("OH", "TSCA", 3) +#
	plot.rgb("OH", "QURU", 3) +#
	plot.rgb("OH", "QUVE", 3) +#
	#plot.rgb("OH", "FRAX", 3) +#
	#plot.rgb("OH", "BETULA", 3) +#
	plot.rgb("OH", "ACSA", 3) +#
	plot.rgb("OH", "QUAL", 3) +#
	plot.rgb("OH", "FAGR", 3) +#
	plot.rgb("OH", "ULRU", 3) +#
	#plot.rgb("OH", "CARYA", 3) +#
	#plot.rgb("OH", "SAAL", 3)+#
	labs(title= "Species", x="Year", y = expression(bold(paste("BAI (mm"^"2", "y"^"-1",")")))) +#
	poster.theme2#
dev.off()#
# Just plotting the BAI fits#
summary(data.graph)#
ggplot(data.graph) + facet_wrap(group~Site) +#
  scale_x_continuous(expand=c(0,0), name="Year") +#
  scale_y_continuous(expand=c(0,0), name="BAI") +#
  # facet_wrap(~TreeID, scales="free_y", space="free") +#
  # geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
  geom_line(aes(x=Year, y=fit.full), size=2, alpha=0.5) +#
  geom_ribbon(aes(x=Year, ymin=fit.full.lwr, ymax=fit.full.upr), alpha=0.3)#
#
# Plotting the Effects#
pdf("figures/gam1_influence_in_time.pdf", width= 13, height = 8.5)#
#
ggplot(data.graph[!data.graph$group %in% c("BETULA", "CARYA", "FAGR", "FRAX", "SAAL"),]) + facet_grid(group~Site) +#
	scale_x_continuous(expand=c(0,0), name="Year") +#
	scale_y_continuous(expand=c(0,0), name="Effect on RW (in mm)") +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_line(aes(x=Year, y=fit.tmean), size=2, color="red") +#
	geom_line(aes(x=Year, y=fit.precip), size=2, color="blue") +#
	geom_line(aes(x=Year, y=fit.dbh.recon), size=2, color="green")#
dev.off()#
#
#------------------------------------#
# Just MMF and Harvard#
summary(data.graph)#
sites.use2 <- c("Harvard", "Morgan Monroe State Park")#
#
pdf("figures/gam1_Species_BAI_limiting_factor_ameridendro.pdf", width= 13, height = 8.5)#
ggplot(data.graph[data.graph$Site %in% sites.use2,]) + facet_grid(group~Site) +#
	scale_x_continuous(expand=c(0,0), name="Year") +#
	scale_y_continuous(expand=c(0,0), name="BAI") +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_line(aes(x=Year, y=BA.inc), size=2, alpha=0.5) +#
	geom_ribbon(aes(x=Year, ymin=BA.inc.lwr, ymax=BA.inc.upr), alpha=0.3) +#
	geom_line(aes(x=Year, y = 0), linetype="dashed") +#
	plot.rgb("Harvard", "ACRU", 3) +#
	plot.rgb("Harvard", "PIST", 3) +#
	plot.rgb("Harvard", "TSCA", 3) +#
	plot.rgb("Harvard", "QURU", 3) +#
	plot.rgb("Harvard", "QUVE", 3) +#
	plot.rgb("Harvard", "FRAX", 3) +#
	plot.rgb("Harvard", "BETULA", 3) +#
	plot.rgb("Harvard", "ACSA", 3) +#
	plot.rgb("Harvard", "QUAL", 3) +#
	plot.rgb("Harvard", "FAGR", 3) +#
	plot.rgb("Harvard", "ULRU", 3) +#
	plot.rgb("Harvard", "CARYA", 3) +#
	plot.rgb("Harvard", "SAAL", 3) +#
	plot.rgb("Morgan Monroe State Park", "ACRU", 3) +#
	plot.rgb("Morgan Monroe State Park", "PIST", 3) +#
	plot.rgb("Morgan Monroe State Park", "TSCA", 3) +#
	plot.rgb("Morgan Monroe State Park", "QURU", 3) +#
	plot.rgb("Morgan Monroe State Park", "QUVE", 3) +#
	plot.rgb("Morgan Monroe State Park", "FRAX", 3) +#
	plot.rgb("Morgan Monroe State Park", "BETULA", 3) +#
	plot.rgb("Morgan Monroe State Park", "ACSA", 3) +#
	plot.rgb("Morgan Monroe State Park", "QUAL", 3) +#
	plot.rgb("Morgan Monroe State Park", "FAGR", 3) +#
	plot.rgb("Morgan Monroe State Park", "ULRU", 3) +#
	plot.rgb("Morgan Monroe State Park", "CARYA", 3) +#
	plot.rgb("Morgan Monroe State Park", "SAAL", 3) +#
	poster.theme2#
dev.off()#
# Just plotting the BAI fits#
summary(data.graph)#
ggplot(data.graph[data.graph$Site %in% sites.use2,]) + facet_wrap(group~Site) +#
  scale_x_continuous(expand=c(0,0), name="Year") +#
  scale_y_continuous(expand=c(0,0), name="BAI") +#
  # facet_wrap(~TreeID, scales="free_y", space="free") +#
  # geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
  geom_line(aes(x=Year, y=fit.full), size=2, alpha=0.5) +#
  geom_ribbon(aes(x=Year, ymin=fit.full.lwr, ymax=fit.full.upr), alpha=0.3)#
#
# Plotting the Effects#
pdf("figures/gam1_influence_in_time_ameridendro.pdf", width= 13, height = 8.5)#
#
ggplot(data.graph[data.graph$Site %in% sites.use2,]) + facet_grid(group~Site) +#
	scale_x_continuous(expand=c(0,0), name="Year") +#
	scale_y_continuous(expand=c(0,0), name="Effect on RW (in mm)") +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_line(aes(x=Year, y=fit.tmean), size=2, color="red") +#
	geom_line(aes(x=Year, y=fit.precip), size=2, color="blue") +#
	geom_line(aes(x=Year, y=fit.dbh.recon), size=2, color="green")+ #
	poster.theme2#
dev.off()
summary(data.graph)
ggplot(data.graph[data.graph$Site %in% sites.use2,]) + facet_grid(group~Site) +#
	scale_x_continuous(expand=c(0,0), name="Year") +#
	scale_y_continuous(expand=c(0,0), name="Effect on RW (in mm)") +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_line(aes(x=Year, y=fit.tmean), size=1, color="red") +#
	geom_line(aes(x=Year, y=fit.precip), size=1, color="blue") +#
	geom_line(aes(x=Year, y=fit.dbh.recon), size=1, color="green")+ #
	poster.theme2
ggplot(data.graph[!data.graph$group %in% c("BETULA", "CARYA", "FAGR", "FRAX", "SAAL"),]) + facet_grid(group~Site) +#
	scale_x_continuous(expand=c(0,0), name="Year") +#
	scale_y_continuous(expand=c(0,0), name="Effect on RW (in mm)") +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_line(aes(x=Year, y=fit.tmean), size=1, color="red") +#
	geom_line(aes(x=Year, y=fit.precip), size=1, color="blue") +#
	geom_line(aes(x=Year, y=fit.dbh.recon), size=1, color="green")
ggplot(data.graph[!data.graph$group %in% c("BETULA", "CARYA", "FAGR", "FRAX", "SAAL"),]) + facet_grid(group~Site) +#
	scale_x_continuous(expand=c(0,0), name="Year") +#
	scale_y_continuous(expand=c(0,0), name="Effect on RW (in mm)") +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_line(aes(x=Year, y=fit.tmean), size=1, color="red") +#
	geom_line(aes(x=Year, y=fit.precip), size=1, color="blue") +#
	geom_line(aes(x=Year, y=fit.dbh.recon), size=1, color="green")+#
	ylim(c(0,4))
ggplot(data.graph[!data.graph$group %in% c("BETULA", "CARYA", "FAGR", "FRAX", "SAAL"),]) + facet_grid(group~Site) +#
	scale_x_continuous(expand=c(0,0), name="Year") +#
	scale_y_continuous(expand=c(0,0), name="Effect on RW (in mm)") +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_line(aes(x=Year, y=fit.tmean), size=1, color="red") +#
	geom_line(aes(x=Year, y=fit.precip), size=1, color="blue") +#
	geom_line(aes(x=Year, y=fit.dbh.recon), size=1, color="green")+#
	ylim(c(0,3))
summary(data.graph)
data.graph$State <- factor(data.graph$State, levels=c("MO", "IN", "OH", "MA", "ME"))
ggplot(data.graph[!data.graph$group %in% c("BETULA", "CARYA", "FAGR", "FRAX", "SAAL"),]) + facet_grid(group~Site) +#
	scale_x_continuous(expand=c(0,0), name="Year") +#
	scale_y_continuous(expand=c(0,0), name="Effect on RW (in mm)") +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_line(aes(x=Year, y=fit.tmean), size=1, color="red") +#
	geom_line(aes(x=Year, y=fit.precip), size=1, color="blue") +#
	geom_line(aes(x=Year, y=fit.dbh.recon), size=1, color="green")+#
	ylim(c(0,3))
ggplot(data.graph[!data.graph$group %in% c("BETULA", "CARYA", "FAGR", "FRAX", "SAAL"),]) + facet_grid(group~State) +#
	scale_x_continuous(expand=c(0,0), name="Year") +#
	scale_y_continuous(expand=c(0,0), name="Effect on RW (in mm)") +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_line(aes(x=Year, y=fit.tmean), size=1, color="red") +#
	geom_line(aes(x=Year, y=fit.precip), size=1, color="blue") +#
	geom_line(aes(x=Year, y=fit.dbh.recon), size=1, color="green")+#
	ylim(c(0,3))
pdf("figures/gam1_influence_in_time.pdf", width= 13, height = 8.5)#
#
ggplot(data.graph[!data.graph$group %in% c("BETULA", "CARYA", "FAGR", "FRAX", "SAAL"),]) + facet_grid(group~State) +#
	scale_x_continuous(expand=c(0,0), name="Year") +#
	scale_y_continuous(expand=c(0,0), name="Effect on RW (in mm)") +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_line(aes(x=Year, y=fit.tmean), size=1, color="red") +#
	geom_line(aes(x=Year, y=fit.precip), size=1, color="blue") +#
	geom_line(aes(x=Year, y=fit.dbh.recon), size=1, color="green")+#
	ylim(c(0,3))#
dev.off()
library(ggplot2)#
#
load(file="processed_data/gamm_weights/gam2_weights.Rdata")#
#
summary(gam2.weights)#
factors.fits <- c("fit.tmean", "fit.precip", "fit.dbh.recon", "fit.full", "BA.inc")#
factors.weights <- c("weight.tmean", "weight.dbh.recon", "weight.precip")#
#
# Transforming things back to BA.inc rather than log#
gam2.weights[,which(substr(names(gam2.weights),1,3)=="fit")] <- exp(gam2.weights[,which(substr(names(gam2.weights),1,3)=="fit")] )#
othervars <- c("Year", "Site", "Canopy.Class", "Model")#
#
data.graph1 <- aggregate(gam2.weights[,factors.fits], by = gam2.weights[,othervars], FUN= mean, na.rm=T)#
#
data.graph1[,paste(factors.fits, "upr", sep=".")] <- aggregate(gam2.weights[,factors.fits], by = gam2.weights[,othervars], FUN= quantile, prob= 0.975, na.rm=T)[,factors.fits]#
#
data.graph1[,paste(factors.fits, "lwr", sep=".")] <- aggregate(gam2.weights[,factors.fits], by = gam2.weights[,othervars], FUN= quantile, prob= 0.025, na.rm=T)[,factors.fits]#
#
summary(data.graph1)#
#
data.graph2 <- aggregate(abs(gam2.weights[,factors.weights]), by = gam2.weights[,othervars], FUN= mean, na.rm=T)#
#
data.graph2[,paste(factors.weights, "upr", sep=".")] <- aggregate(abs(gam2.weights[,factors.weights]), by = gam2.weights[,othervars], FUN= quantile, prob= 0.975, na.rm=T)[,factors.weights]#
#
data.graph2[,paste(factors.weights, "lwr", sep=".")] <- aggregate(abs(gam2.weights[,factors.weights]), by = gam2.weights[,othervars], FUN= quantile, prob= 0.025, na.rm=T)[,factors.weights]#
#
summary(data.graph2)#
#
data.graph <- merge(data.graph1, data.graph2, all.x=T, all.y=T)#
#
# data.graph <- gam2.weights[gam2.weights$TreeID== "MMA014",]#
summary(data.graph)#
gam2.weights$wts.check <- rowSums(abs(gam2.weights[,c("weight.tmean", "weight.precip", "weight.dbh.recon")]))#
data.graph$wts.check <- rowSums(abs(data.graph[,c("weight.tmean", "weight.precip", "weight.dbh.recon")]))#
#
summary(gam2.weights)#
summary(data.graph)#
#
# Ordering the data for graphing#
#
data.graph<- data.graph[order(data.graph$Year, data.graph$Canopy.Class, data.graph$Site, decreasing=F),]#
plot.rgb <- function(STATE, CC, SIZE){	geom_line(data=data.graph[data.graph$State==STATE & data.graph$Canopy.Class==CC,],aes(x=Year, y=fit.full), size=SIZE,#
  		        color=rgb(abs(data.graph[data.graph$State==STATE & data.graph$Canopy.Class==CC,"weight.tmean"     ]), # red#
                        abs(data.graph[data.graph$State==STATE & data.graph$Canopy.Class==CC,"weight.dbh.recon"     ]), # green#
                        abs(data.graph[data.graph$State==STATE & data.graph$Canopy.Class==CC,"weight.precip"   ]))) }   # blue#
# Plotting the Obs and modeled with influence coloring#
data.graph$State <- recode(data.graph$Site, "'Howland' = 'ME';'Harvard' = 'MA';'Morgan Monroe State Park' = 'IN';'Missouri Ozark' = 'MO';'Oak Openings Toledo' = 'OH'")#
data.graph$State <- factor(data.graph$State, levels=c("MO", "IN", "OH", "MA", "ME"))#
#
# Plotting the Obs and modeled with influence coloring#
pdf("figures/gam2_canopyclass_BAI_limiting_factors.pdf", width= 13, height = 8.5)#
ggplot(data.graph) + facet_grid(Canopy.Class~State) +#
	scale_x_continuous(expand=c(0,0)) +#
	scale_y_continuous(expand=c(0,0)) +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_line(aes(x=Year, y=BA.inc), size=2, alpha=0.5) +#
	geom_ribbon(aes(x=Year, ymin=BA.inc.lwr, ymax=BA.inc.upr), alpha=0.3) +#
	geom_line(aes(x=Year, y = 0), linetype="dashed") +#
	plot.rgb("MA", "C", 3) +#
	plot.rgb("MA", "D", 3) +#
	plot.rgb("MA", "I", 3) +#
	plot.rgb("MA", "S", 3) +#
	plot.rgb("ME", "C", 3) +#
	plot.rgb("ME", "D", 3) +#
	plot.rgb("ME", "I", 3) +#
	plot.rgb("ME", "S", 3) +#
	plot.rgb("MO", "C", 3) +#
	plot.rgb("MO", "D", 3) +#
	plot.rgb("MO", "I", 3) +#
	plot.rgb("MO", "S", 3) +#
	plot.rgb("IN", "C", 3) +#
	plot.rgb("IN", "D", 3) +#
	plot.rgb("IN", "I", 3) +#
	plot.rgb("IN", "S", 3) +#
	plot.rgb("OH", "C", 3) +#
	plot.rgb("OH", "D", 3) +#
	plot.rgb("OH", "I", 3) +#
	plot.rgb("OH", "S", 3)+#
	labs(title= "Canopy Class", x="Year", y = expression(bold(paste("BAI (mm"^"2", "y"^"-1",")")))) +#
	poster.theme2#
dev.off()		#
# Just plotting the BAI fits#
summary(data.graph)#
#
ggplot(data.graph) + facet_wrap(group~Site) +#
  scale_x_continuous(expand=c(0,0), name="Year") +#
  scale_y_continuous(expand=c(0,0), name="BAI") +#
  # facet_wrap(~TreeID, scales="free_y", space="free") +#
  # geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
  geom_line(aes(x=Year, y=fit.full), size=2, alpha=0.5) +#
  geom_ribbon(aes(x=Year, ymin=fit.full.lwr, ymax=fit.full.upr), alpha=0.3)#
#
# Plotting the Effects#
#
pdf("figures/gam2_influence_in_time.pdf", width= 13, height = 8.5)#
ggplot(data.graph) + facet_grid(Canopy.Class~Site) +#
	scale_x_continuous(expand=c(0,0), name="Year") +#
	scale_y_continuous(expand=c(0,0), name="Effect on RW (in mm)") +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_line(aes(x=Year, y=fit.tmean), size=2, color="red") +#
	geom_line(aes(x=Year, y=fit.precip), size=2, color="blue") +#
	geom_line(aes(x=Year, y=fit.dbh.recon), size=2, color="green")#
dev.off()	#
#---------------------------------------------------#
# Plotting just MMF and Harvard for Ameridendro#
#
sites.use2 <- c("Harvard", "Morgan Monroe State Park")#
#
# Plotting the Obs and modeled with influence coloring#
pdf("figures/gam2_canopyclass_BAI_limiting_factors_ameridendro.pdf", width= 13, height = 8.5)#
ggplot(data.graph[data.graph$Site %in% sites.use2,]) + facet_grid(Canopy.Class~Site) +#
	scale_x_continuous(expand=c(0,0), name="Year") +#
	scale_y_continuous(expand=c(0,0), name="BAI") +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_line(aes(x=Year, y=BA.inc), size=2, alpha=0.5) +#
	geom_ribbon(aes(x=Year, ymin=BA.inc.lwr, ymax=BA.inc.upr), alpha=0.3) +#
	geom_line(aes(x=Year, y = 0), linetype="dashed") +#
	plot.rgb("Harvard", "C", 3) +#
	plot.rgb("Harvard", "D", 3) +#
	plot.rgb("Harvard", "I", 3) +#
	plot.rgb("Harvard", "S", 3) +#
	plot.rgb("Morgan Monroe State Park", "C", 3) +#
	plot.rgb("Morgan Monroe State Park", "D", 3) +#
	plot.rgb("Morgan Monroe State Park", "I", 3) +#
	plot.rgb("Morgan Monroe State Park", "S", 3) +#
	poster.theme2#
dev.off()		#
# Just plotting the BAI fits#
summary(data.graph)#
#
ggplot(data.graph) + facet_wrap(group~Site) +#
  scale_x_continuous(expand=c(0,0), name="Year") +#
  scale_y_continuous(expand=c(0,0), name="BAI") +#
  # facet_wrap(~TreeID, scales="free_y", space="free") +#
  # geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
  geom_line(aes(x=Year, y=fit.full), size=2, alpha=0.5) +#
  geom_ribbon(aes(x=Year, ymin=fit.full.lwr, ymax=fit.full.upr), alpha=0.3)#
#
# Plotting the Effects#
#
pdf("figures/gam2_influence_in_time_ameridendro.pdf", width= 13, height = 8.5)#
ggplot(data.graph[data.graph$Site %in% sites.use2,]) + facet_grid(Canopy.Class~Site) +#
	scale_x_continuous(expand=c(0,0), name="Year") +#
	scale_y_continuous(expand=c(0,0), name="Effect on RW (in mm)") +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_line(aes(x=Year, y=fit.tmean), size=2, color="red") +#
	geom_line(aes(x=Year, y=fit.precip), size=2, color="blue") +#
	geom_line(aes(x=Year, y=fit.dbh.recon), size=2, color="green") +#
	poster.theme2#
dev.off()
ggplot(data.graph) + facet_grid(Canopy.Class~Site) +#
	scale_x_continuous(expand=c(0,0), name="Year") +#
	scale_y_continuous(expand=c(0,0), name="Effect on RW (in mm)") +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_line(aes(x=Year, y=fit.tmean), size=2, color="red") +#
	geom_line(aes(x=Year, y=fit.precip), size=2, color="blue") +#
	geom_line(aes(x=Year, y=fit.dbh.recon), size=2, color="green")+#
	ylim(c(0,3))
ggplot(data.graph) + facet_grid(Canopy.Class~Site) +#
	scale_x_continuous(expand=c(0,0), name="Year") +#
	scale_y_continuous(expand=c(0,0), name="Effect on RW (in mm)") +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_line(aes(x=Year, y=fit.tmean), size=1, color="red") +#
	geom_line(aes(x=Year, y=fit.precip), size=1, color="blue") +#
	geom_line(aes(x=Year, y=fit.dbh.recon), size=1, color="green")+#
	ylim(c(0,3))
data.graph$State <- factor(data.graph$State, levels=c("MO", "IN", "OH", "MA", "ME"))
ggplot(data.graph) + facet_grid(Canopy.Class~State) +#
	scale_x_continuous(expand=c(0,0), name="Year") +#
	scale_y_continuous(expand=c(0,0), name="Effect on RW (in mm)") +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_line(aes(x=Year, y=fit.tmean), size=1, color="red") +#
	geom_line(aes(x=Year, y=fit.precip), size=1, color="blue") +#
	geom_line(aes(x=Year, y=fit.dbh.recon), size=1, color="green")+#
	ylim(c(0,3))
pdf("figures/gam2_influence_in_time.pdf", width= 13, height = 8.5)#
ggplot(data.graph) + facet_grid(Canopy.Class~State) +#
	scale_x_continuous(expand=c(0,0), name="Year") +#
	scale_y_continuous(expand=c(0,0), name="Effect on RW (in mm)") +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_line(aes(x=Year, y=fit.tmean), size=1, color="red") +#
	geom_line(aes(x=Year, y=fit.precip), size=1, color="blue") +#
	geom_line(aes(x=Year, y=fit.dbh.recon), size=1, color="green")+#
	ylim(c(0,3))#
dev.off()
ggplot(data.graph[data.graph$Canopy.Class=="D" & !data.graph$group.cc %in% c("BETULA.D", "CARYA.D", "FAGR.D", "FRAX.D", "SAAL.D"),]) + facet_grid(group~State) +#
	scale_x_continuous(expand=c(0,0), name="Year") +#
	scale_y_continuous(expand=c(0,0), name="Effect on RW (in mm)") +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	#geom_ribbon(aes(x=Year, ymin=fit.dbh.recon.lwr, ymax=fit.dbh.recon.upr), alpha=0.4, fill="green")+#
	geom_line(aes(x=Year, y=fit.tmean), size=1, color="red") +#
	geom_line(aes(x=Year, y=fit.precip), size=1, color="blue") +#
	geom_line(aes(x=Year, y=fit.dbh.recon), size=1, color="green")+#
	ylim(c(0,3)) +#
	labs(title= "Dominant Effects (group.cc)")
library(ggplot2)#
library(stringr)#
load(file="processed_data/gamm_weights/gam3_weights.Rdata")#
#
summary(gam3.weights)#
factors.fits <- c("fit.tmean", "fit.precip", "fit.dbh.recon", "fit.full", "BA.inc")#
factors.weights <- c("weight.tmean", "weight.dbh.recon", "weight.precip")#
#
# Transforming things back to BA.inc rather than log#
gam3.weights[,which(substr(names(gam3.weights),1,3)=="fit")] <- exp(gam3.weights[,which(substr(names(gam3.weights),1,3)=="fit")] )#
othervars <- c("Year", "Site", "group.cc", "Model")#
#
data.graph1 <- aggregate(gam3.weights[,factors.fits], by = gam3.weights[,othervars], FUN= mean, na.rm=T)#
#
data.graph1[,paste(factors.fits, "upr", sep=".")] <- aggregate(gam3.weights[,factors.fits], by = gam3.weights[,othervars], FUN= quantile, prob= 0.975, na.rm=T)[,factors.fits]#
#
data.graph1[,paste(factors.fits, "lwr", sep=".")] <- aggregate(gam3.weights[,factors.fits], by = gam3.weights[,othervars], FUN= quantile, prob= 0.025, na.rm=T)[,factors.fits]#
#
summary(data.graph1)#
#
data.graph2 <- aggregate(abs(gam3.weights[,factors.weights]), by = gam3.weights[,othervars], FUN= mean, na.rm=T)#
#
data.graph2[,paste(factors.weights, "upr", sep=".")] <- aggregate(abs(gam3.weights[,factors.weights]), by = gam3.weights[,othervars], FUN= quantile, prob= 0.975, na.rm=T)[,factors.weights]#
#
data.graph2[,paste(factors.weights, "lwr", sep=".")] <- aggregate(abs(gam3.weights[,factors.weights]), by = gam3.weights[,othervars], FUN= quantile, prob= 0.025, na.rm=T)[,factors.weights]#
#
summary(data.graph2)#
#
data.graph <- merge(data.graph1, data.graph2, all.x=T, all.y=T)#
#
# data.graph <- gam3.weights[gam3.weights$TreeID== "MMA014",]#
summary(data.graph)#
gam3.weights$wts.check <- rowSums(abs(gam3.weights[,c("weight.tmean", "weight.precip", "weight.dbh.recon")]))#
data.graph$wts.check <- rowSums(abs(data.graph[,c("weight.tmean", "weight.precip", "weight.dbh.recon")]))#
#
summary(gam3.weights)#
summary(data.graph)#
#
# Ordering the data for graphing#
#
data.graph<- data.graph[order(data.graph$Year, data.graph$group.cc, data.graph$Site, decreasing=F),]#
plot.rgb <- function(STATE, GC, SIZE){	geom_line(data=data.graph[data.graph$State==STATE & data.graph$group.cc==GC,],aes(x=Year, y=fit.full), size=SIZE,#
  		        color=rgb(abs(data.graph[data.graph$State==STATE & data.graph$group.cc==GC,"weight.tmean"     ]), # red#
                        abs(data.graph[data.graph$State==STATE & data.graph$group.cc==GC,"weight.dbh.recon"     ]), # green#
                        abs(data.graph[data.graph$State==STATE & data.graph$group.cc==GC,"weight.precip"   ]))) }   # blue#
# Plotting the Obs and modeled with influence coloring#
data.graph$State <- recode(data.graph$Site, "'Howland' = 'ME';'Harvard' = 'MA';'Morgan Monroe State Park' = 'IN';'Missouri Ozark' = 'MO';'Oak Openings Toledo' = 'OH'")#
data.graph$State <- factor(data.graph$State, levels=c("MO", "IN", "OH", "MA", "ME"))#
#
for(i in unique(data.graph$group.cc)){#
	data.graph[data.graph$group.cc==i,"Canopy.Class"] <- str_sub(data.graph[data.graph$group.cc==i,"group.cc"], -1)#
	data.graph[data.graph$group.cc==i,"group"] <- substr(data.graph[data.graph$group.cc==i,"group.cc"], 1,4)#
}#
data.graph$Canopy.Class <- as.factor(data.graph$Canopy.Class)#
data.graph$group <- as.factor(data.graph$group)#
summary(data.graph)#
# Plotting the Obs and modeled with influence coloring#
pdf("figures/gam3/gam3_SPP_CC_BAI_limiting_factors_All.pdf", width= 13, height = 8.5)#
ggplot(data = data.graph[!data.graph$group.cc %in% c("BETULA.D", "CARYA.D", "FAGR.D", "FRAX.D", "SAAL.D",#
	"BETULA.I", "CARYA.I", "FAGR.I", "FRAX.I", "SAAL.I",#
	"BETULA.S", "CARYA.S", "FAGR.S", "FRAX.S", "SAAL.S"),]) + #
	facet_grid(group.cc ~ State) +#
	scale_x_continuous(expand=c(0,0), name="Year") +#
	scale_y_continuous(expand=c(0,0), name="BAI") +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_line(aes(x=Year, y=BA.inc), size=2, alpha=0.5) +#
	geom_ribbon(aes(x=Year, ymin=BA.inc.lwr, ymax=BA.inc.upr), alpha=0.3) +#
	geom_line(aes(x=Year, y = 0), linetype="dashed") +#
	# Harvard#
	plot.rgb("MA", "ACRU.C", 3) +#
	plot.rgb("MA", "ACRU.D", 3) +#
	plot.rgb("MA", "ACRU.I", 3) +#
	plot.rgb("MA", "ACRU.S", 3) +#
	plot.rgb("MA", "PIST.C", 3) +#
	plot.rgb("MA", "PIST.D", 3) +#
	plot.rgb("MA", "PIST.I", 3) +#
	plot.rgb("MA", "PIST.S", 3) +#
#
	plot.rgb("MA", "TSCA.C", 3) +#
	plot.rgb("MA", "TSCA.D", 3) +#
	plot.rgb("MA", "TSCA.I", 3) +#
	plot.rgb("MA", "TSCA.S", 3) +#
	plot.rgb("MA", "QURU.C", 3) +#
	plot.rgb("MA", "QURU.D", 3) +#
	plot.rgb("MA", "QURU.I", 3) +#
	plot.rgb("MA", "QURU.S", 3) +#
	plot.rgb("MA", "QUVE.C", 3) +#
	plot.rgb("MA", "QUVE.D", 3) +#
	plot.rgb("MA", "QUVE.I", 3) +#
	plot.rgb("MA", "QUVE.S", 3) +#
	# plot.rgb("MA", "FRAX.C", 3) +#
	# plot.rgb("MA", "FRAX.D", 3) +#
	# plot.rgb("MA", "FRAX.I", 3) +#
	# plot.rgb("MA", "FRAX.S", 3) +#
#
	# plot.rgb("MA", "BETULA.C", 3) +#
	# plot.rgb("MA", "BETULA.D", 3) +#
	# plot.rgb("MA", "BETULA.I", 3) +#
	# plot.rgb("MA", "BETULA.S", 3) +#
	plot.rgb("MA", "ACSA.C", 3) +#
	plot.rgb("MA", "ACSA.D", 3) +#
	plot.rgb("MA", "ACSA.I", 3) +#
	plot.rgb("MA", "ACSA.S", 3) +#
	plot.rgb("MA", "QUAL.C", 3) +#
	plot.rgb("MA", "QUAL.D", 3) +#
	plot.rgb("MA", "QUAL.I", 3) +#
	plot.rgb("MA", "QUAL.S", 3) +#
	# plot.rgb("MA", "FAGR.C", 3) +#
	# plot.rgb("MA", "FAGR.D", 3) +#
	# plot.rgb("MA", "FAGR.I", 3) +#
	# plot.rgb("MA", "FAGR.S", 3) +#
	plot.rgb("MA", "ULRU.C", 3) +#
	plot.rgb("MA", "ULRU.D", 3) +#
	plot.rgb("MA", "ULRU.I", 3) +#
	plot.rgb("MA", "ULRU.S", 3) +#
	# plot.rgb("MA", "CARYA.C", 3) +#
	# plot.rgb("MA", "CARYA.D", 3) +#
	# plot.rgb("MA", "CARYA.I", 3) +#
	# plot.rgb("MA", "CARYA.S", 3) +#
#
	# plot.rgb("MA", "SAAL.C", 3) +#
	# plot.rgb("MA", "SAAL.D", 3) +#
	# plot.rgb("MA", "SAAL.I", 3) +#
	# plot.rgb("MA", "SAAL.S", 3) +#
#
	# Howland#
		plot.rgb("ME", "ACRU.C", 3) +#
	plot.rgb("ME", "ACRU.D", 3) +#
	plot.rgb("ME", "ACRU.I", 3) +#
	plot.rgb("ME", "ACRU.S", 3) +#
	plot.rgb("ME", "PIST.C", 3) +#
	plot.rgb("ME", "PIST.D", 3) +#
	plot.rgb("ME", "PIST.I", 3) +#
	plot.rgb("ME", "PIST.S", 3) +#
#
	plot.rgb("ME", "TSCA.C", 3) +#
	plot.rgb("ME", "TSCA.D", 3) +#
	plot.rgb("ME", "TSCA.I", 3) +#
	plot.rgb("ME", "TSCA.S", 3) +#
	plot.rgb("ME", "QURU.C", 3) +#
	plot.rgb("ME", "QURU.D", 3) +#
	plot.rgb("ME", "QURU.I", 3) +#
	plot.rgb("ME", "QURU.S", 3) +#
	plot.rgb("ME", "QUVE.C", 3) +#
	plot.rgb("ME", "QUVE.D", 3) +#
	plot.rgb("ME", "QUVE.I", 3) +#
	plot.rgb("ME", "QUVE.S", 3) +#
	# plot.rgb("ME", "FRAX.C", 3) +#
	# plot.rgb("ME", "FRAX.D", 3) +#
	# plot.rgb("ME", "FRAX.I", 3) +#
	# plot.rgb("ME", "FRAX.S", 3) +#
#
	# plot.rgb("ME", "BETULA.C", 3) +#
	# plot.rgb("ME", "BETULA.D", 3) +#
	# plot.rgb("ME", "BETULA.I", 3) +#
	# plot.rgb("ME", "BETULA.S", 3) +#
	plot.rgb("ME", "ACSA.C", 3) +#
	plot.rgb("ME", "ACSA.D", 3) +#
	plot.rgb("ME", "ACSA.I", 3) +#
	plot.rgb("ME", "ACSA.S", 3) +#
	plot.rgb("ME", "QUAL.C", 3) +#
	plot.rgb("ME", "QUAL.D", 3) +#
	plot.rgb("ME", "QUAL.I", 3) +#
	plot.rgb("ME", "QUAL.S", 3) +#
	# plot.rgb("ME", "FAGR.C", 3) +#
	# plot.rgb("ME", "FAGR.D", 3) +#
	# plot.rgb("ME", "FAGR.I", 3) +#
	# plot.rgb("ME", "FAGR.S", 3) +#
	plot.rgb("ME", "ULRU.C", 3) +#
	plot.rgb("ME", "ULRU.D", 3) +#
	plot.rgb("ME", "ULRU.I", 3) +#
	plot.rgb("ME", "ULRU.S", 3) +#
	# plot.rgb("ME", "CARYA.C", 3) +#
	# plot.rgb("ME", "CARYA.D", 3) +#
	# plot.rgb("ME", "CARYA.I", 3) +#
	# plot.rgb("ME", "CARYA.S", 3) +#
#
	# plot.rgb("ME", "SAAL.C", 3) +#
	# plot.rgb("ME", "SAAL.D", 3) +#
	# plot.rgb("ME", "SAAL.I", 3) +#
	# plot.rgb("ME", "SAAL.S", 3) +#
	# Morgan Monroe#
	plot.rgb("IN", "ACRU.C", 3) +#
	plot.rgb("IN", "ACRU.D", 3) +#
	plot.rgb("IN", "ACRU.I", 3) +#
	plot.rgb("IN", "ACRU.S", 3) +#
	plot.rgb("IN", "PIST.C", 3) +#
	plot.rgb("IN", "PIST.D", 3) +#
	plot.rgb("IN", "PIST.I", 3) +#
	plot.rgb("IN", "PIST.S", 3) +#
#
	plot.rgb("IN", "TSCA.C", 3) +#
	plot.rgb("IN", "TSCA.D", 3) +#
	plot.rgb("IN", "TSCA.I", 3) +#
	plot.rgb("IN", "TSCA.S", 3) +#
	plot.rgb("IN", "QURU.C", 3) +#
	plot.rgb("IN", "QURU.D", 3) +#
	plot.rgb("IN", "QURU.I", 3) +#
	plot.rgb("IN", "QURU.S", 3) +#
	plot.rgb("IN", "QUVE.C", 3) +#
	plot.rgb("IN", "QUVE.D", 3) +#
	plot.rgb("IN", "QUVE.I", 3) +#
	plot.rgb("IN", "QUVE.S", 3) +#
	# plot.rgb("IN", "FRAX.C", 3) +#
	# plot.rgb("IN", "FRAX.D", 3) +#
	# plot.rgb("IN", "FRAX.I", 3) +#
	# plot.rgb("IN", "FRAX.S", 3) +#
#
	# plot.rgb("IN", "BETULA.C", 3) +#
	# plot.rgb("IN", "BETULA.D", 3) +#
	# plot.rgb("IN", "BETULA.I", 3) +#
	# plot.rgb("IN", "BETULA.S", 3) +#
	plot.rgb("IN", "ACSA.C", 3) +#
	plot.rgb("IN", "ACSA.D", 3) +#
	plot.rgb("IN", "ACSA.I", 3) +#
	plot.rgb("IN", "ACSA.S", 3) +#
	plot.rgb("IN", "QUAL.C", 3) +#
	plot.rgb("IN", "QUAL.D", 3) +#
	plot.rgb("IN", "QUAL.I", 3) +#
	plot.rgb("IN", "QUAL.S", 3) +#
	# plot.rgb("IN", "FAGR.C", 3) +#
	# plot.rgb("IN", "FAGR.D", 3) +#
	# plot.rgb("IN", "FAGR.I", 3) +#
	# plot.rgb("IN", "FAGR.S", 3) +#
	plot.rgb("IN", "ULRU.C", 3) +#
	plot.rgb("IN", "ULRU.D", 3) +#
	plot.rgb("IN", "ULRU.I", 3) +#
	plot.rgb("IN", "ULRU.S", 3) +#
	# plot.rgb("IN", "CARYA.C", 3) +#
	# plot.rgb("IN", "CARYA.D", 3) +#
	# plot.rgb("IN", "CARYA.I", 3) +#
	# plot.rgb("IN", "CARYA.S", 3) +#
#
	# plot.rgb("IN", "SAAL.C", 3) +#
	# plot.rgb("IN", "SAAL.D", 3) +#
	# plot.rgb("IN", "SAAL.I", 3) +#
	# plot.rgb("IN", "SAAL.S", 3) +#
	# Missouri Ozark#
		plot.rgb("MO", "ACRU.C", 3) +#
	plot.rgb("MO", "ACRU.D", 3) +#
	plot.rgb("MO", "ACRU.I", 3) +#
	plot.rgb("MO", "ACRU.S", 3) +#
	plot.rgb("MO", "PIST.C", 3) +#
	plot.rgb("MO", "PIST.D", 3) +#
	plot.rgb("MO", "PIST.I", 3) +#
	plot.rgb("MO", "PIST.S", 3) +#
#
	plot.rgb("MO", "TSCA.C", 3) +#
	plot.rgb("MO", "TSCA.D", 3) +#
	plot.rgb("MO", "TSCA.I", 3) +#
	plot.rgb("MO", "TSCA.S", 3) +#
	plot.rgb("MO", "QURU.C", 3) +#
	plot.rgb("MO", "QURU.D", 3) +#
	plot.rgb("MO", "QURU.I", 3) +#
	plot.rgb("MO", "QURU.S", 3) +#
	plot.rgb("MO", "QUVE.C", 3) +#
	plot.rgb("MO", "QUVE.D", 3) +#
	plot.rgb("MO", "QUVE.I", 3) +#
	plot.rgb("MO", "QUVE.S", 3) +#
	# plot.rgb("MO", "FRAX.C", 3) +#
	# plot.rgb("MO", "FRAX.D", 3) +#
	# plot.rgb("MO", "FRAX.I", 3) +#
	# plot.rgb("MO", "FRAX.S", 3) +#
#
	# plot.rgb("MO", "BETULA.C", 3) +#
	# plot.rgb("MO", "BETULA.D", 3) +#
	# plot.rgb("MO", "BETULA.I", 3) +#
	# plot.rgb("MO", "BETULA.S", 3) +#
	plot.rgb("MO", "ACSA.C", 3) +#
	plot.rgb("MO", "ACSA.D", 3) +#
	plot.rgb("MO", "ACSA.I", 3) +#
	plot.rgb("MO", "ACSA.S", 3) +#
	plot.rgb("MO", "QUAL.C", 3) +#
	plot.rgb("MO", "QUAL.D", 3) +#
	plot.rgb("MO", "QUAL.I", 3) +#
	plot.rgb("MO", "QUAL.S", 3) +#
	# plot.rgb("MO", "FAGR.C", 3) +#
	# plot.rgb("MO", "FAGR.D", 3) +#
	# plot.rgb("MO", "FAGR.I", 3) +#
	# plot.rgb("MO", "FAGR.S", 3) +#
	plot.rgb("MO", "ULRU.C", 3) +#
	plot.rgb("MO", "ULRU.D", 3) +#
	plot.rgb("MO", "ULRU.I", 3) +#
	plot.rgb("MO", "ULRU.S", 3) +#
	# plot.rgb("MO", "CARYA.C", 3) +#
	# plot.rgb("MO", "CARYA.D", 3) +#
	# plot.rgb("MO", "CARYA.I", 3) +#
	# plot.rgb("MO", "CARYA.S", 3) +#
#
	# plot.rgb("MO", "SAAL.C", 3) +#
	# plot.rgb("MO", "SAAL.D", 3) +#
	# plot.rgb("MO", "SAAL.I", 3) +#
	# plot.rgb("MO", "SAAL.S", 3) +#
	# Oak Openings#
			plot.rgb("OH", "ACRU.C", 3) +#
	plot.rgb("OH", "ACRU.D", 3) +#
	plot.rgb("OH", "ACRU.I", 3) +#
	plot.rgb("OH", "ACRU.S", 3) +#
	plot.rgb("OH", "PIST.C", 3) +#
	plot.rgb("OH", "PIST.D", 3) +#
	plot.rgb("OH", "PIST.I", 3) +#
	plot.rgb("OH", "PIST.S", 3) +#
#
	plot.rgb("OH", "TSCA.C", 3) +#
	plot.rgb("OH", "TSCA.D", 3) +#
	plot.rgb("OH", "TSCA.I", 3) +#
	plot.rgb("OH", "TSCA.S", 3) +#
	plot.rgb("OH", "QURU.C", 3) +#
	plot.rgb("OH", "QURU.D", 3) +#
	plot.rgb("OH", "QURU.I", 3) +#
	plot.rgb("OH", "QURU.S", 3) +#
	plot.rgb("OH", "QUVE.C", 3) +#
	plot.rgb("OH", "QUVE.D", 3) +#
	plot.rgb("OH", "QUVE.I", 3) +#
	plot.rgb("OH", "QUVE.S", 3) +#
	# plot.rgb("OH", "FRAX.C", 3) +#
	# plot.rgb("OH", "FRAX.D", 3) +#
	# plot.rgb("OH", "FRAX.I", 3) +#
	# plot.rgb("OH", "FRAX.S", 3) +#
#
	# plot.rgb("OH", "BETULA.C", 3) +#
	# plot.rgb("OH", "BETULA.D", 3) +#
	# plot.rgb("OH", "BETULA.I", 3) +#
	# plot.rgb("OH", "BETULA.S", 3) +#
	plot.rgb("OH", "ACSA.C", 3) +#
	plot.rgb("OH", "ACSA.D", 3) +#
	plot.rgb("OH", "ACSA.I", 3) +#
	plot.rgb("OH", "ACSA.S", 3) +#
	plot.rgb("OH", "QUAL.C", 3) +#
	plot.rgb("OH", "QUAL.D", 3) +#
	plot.rgb("OH", "QUAL.I", 3) +#
	plot.rgb("OH", "QUAL.S", 3) +#
	# plot.rgb("OH", "FAGR.C", 3) +#
	# plot.rgb("OH", "FAGR.D", 3) +#
	# plot.rgb("OH", "FAGR.I", 3) +#
	# plot.rgb("OH", "FAGR.S", 3) +#
	plot.rgb("OH", "ULRU.C", 3) +#
	plot.rgb("OH", "ULRU.D", 3) +#
	plot.rgb("OH", "ULRU.I", 3) +#
	plot.rgb("OH", "ULRU.S", 3) #+#
	# plot.rgb("OH", "CARYA.C", 3) +#
	# plot.rgb("OH", "CARYA.D", 3) +#
	# plot.rgb("OH", "CARYA.I", 3) +#
	# plot.rgb("OH", "CARYA.S", 3) +#
#
	# plot.rgb("OH", "SAAL.C", 3) +#
	# plot.rgb("OH", "SAAL.D", 3) +#
	# plot.rgb("OH", "SAAL.I", 3) +#
	# plot.rgb("OH", "SAAL.S", 3)#
dev.off()	#
# Just plotting the BAI fits#
summary(data.graph)#
ggplot(data.graph) + facet_wrap(group.cc~Site) +#
  scale_x_continuous(expand=c(0,0), name="Year") +#
  scale_y_continuous(expand=c(0,0), name="BAI") +#
  # facet_wrap(~TreeID, scales="free_y", space="free") +#
  # geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
  geom_line(aes(x=Year, y=fit.full), size=2, alpha=0.5) +#
  geom_ribbon(aes(x=Year, ymin=fit.full.lwr, ymax=fit.full.upr), alpha=0.3)#
#
# Plotting the Effects#
pdf("figures/gam3/gam3_influence_in_time_all.pdf", width= 13, height = 8.5)#
ggplot(data.graph) + facet_wrap(group.cc~State) +#
	scale_x_continuous(expand=c(0,0), name="Year") +#
	scale_y_continuous(expand=c(0,0), name="Effect on RW (in mm)") +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_line(aes(x=Year, y=fit.tmean), size=2, color="red") +#
	geom_line(aes(x=Year, y=fit.precip), size=2, color="blue") +#
	geom_line(aes(x=Year, y=fit.dbh.recon), size=2, color="green")#
dev.off()#
#########################################################################
#########################################################################
# Oaks only for Ameridendro#
pdf("figures/gam3/gam3_SPP_CC_BAI_limiting_factors_All_oaks.pdf", width= 13, height = 8.5)#
ggplot(data = data.graph[substr(data.graph$group, 1,2)=="QU",]) + facet_grid(group.cc ~ State) +#
	scale_x_continuous(expand=c(0,0), name="Year") +#
	scale_y_continuous(expand=c(0,0), name="BAI") +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_line(aes(x=Year, y=BA.inc), size=2, alpha=0.5) +#
	geom_ribbon(aes(x=Year, ymin=BA.inc.lwr, ymax=BA.inc.upr), alpha=0.3) +#
	geom_line(aes(x=Year, y = 0), linetype="dashed") +#
	# Harvard#
	plot.rgb("MA", "QURU.C", 3) +#
	plot.rgb("MA", "QURU.D", 3) +#
	plot.rgb("MA", "QURU.I", 3) +#
	plot.rgb("MA", "QURU.S", 3) +#
	plot.rgb("MA", "QUVE.C", 3) +#
	plot.rgb("MA", "QUVE.D", 3) +#
	plot.rgb("MA", "QUVE.I", 3) +#
	plot.rgb("MA", "QUVE.S", 3) +#
	plot.rgb("MA", "QUAL.C", 3) +#
	plot.rgb("MA", "QUAL.D", 3) +#
	plot.rgb("MA", "QUAL.I", 3) +#
	plot.rgb("MA", "QUAL.S", 3) +#
	# Howland#
	plot.rgb("ME", "QURU.C", 3) +#
	plot.rgb("ME", "QURU.D", 3) +#
	plot.rgb("ME", "QURU.I", 3) +#
	plot.rgb("ME", "QURU.S", 3) +#
	plot.rgb("ME", "QUVE.C", 3) +#
	plot.rgb("ME", "QUVE.D", 3) +#
	plot.rgb("ME", "QUVE.I", 3) +#
	plot.rgb("ME", "QUVE.S", 3) +#
	plot.rgb("ME", "QUAL.C", 3) +#
	plot.rgb("ME", "QUAL.D", 3) +#
	plot.rgb("ME", "QUAL.I", 3) +#
	plot.rgb("ME", "QUAL.S", 3) +#
	# Morgan Monroe#
	plot.rgb("IN", "QURU.C", 3) +#
	plot.rgb("IN", "QURU.D", 3) +#
	plot.rgb("IN", "QURU.I", 3) +#
	plot.rgb("IN", "QURU.S", 3) +#
	plot.rgb("IN", "QUVE.C", 3) +#
	plot.rgb("IN", "QUVE.D", 3) +#
	plot.rgb("IN", "QUVE.I", 3) +#
	plot.rgb("IN", "QUVE.S", 3) +#
	plot.rgb("IN", "QUAL.C", 3) +#
	plot.rgb("IN", "QUAL.D", 3) +#
	plot.rgb("IN", "QUAL.I", 3) +#
	plot.rgb("IN", "QUAL.S", 3) +#
	# Missouri Ozark#
	plot.rgb("MO", "QURU.C", 3) +#
	plot.rgb("MO", "QURU.D", 3) +#
	plot.rgb("MO", "QURU.I", 3) +#
	plot.rgb("MO", "QURU.S", 3) +#
	plot.rgb("MO", "QUVE.C", 3) +#
	plot.rgb("MO", "QUVE.D", 3) +#
	plot.rgb("MO", "QUVE.I", 3) +#
	plot.rgb("MO", "QUVE.S", 3) +#
	plot.rgb("MO", "QUAL.C", 3) +#
	plot.rgb("MO", "QUAL.D", 3) +#
	plot.rgb("MO", "QUAL.I", 3) +#
	plot.rgb("MO", "QUAL.S", 3) +#
	# Oak Openings#
	plot.rgb("OH", "QURU.C", 3) +#
	plot.rgb("OH", "QURU.D", 3) +#
	plot.rgb("OH", "QURU.I", 3) +#
	plot.rgb("OH", "QURU.S", 3) +#
	plot.rgb("OH", "QUVE.C", 3) +#
	plot.rgb("OH", "QUVE.D", 3) +#
	plot.rgb("OH", "QUVE.I", 3) +#
	plot.rgb("OH", "QUVE.S", 3) +#
	plot.rgb("OH", "QUAL.C", 3) +#
	plot.rgb("OH", "QUAL.D", 3) +#
	plot.rgb("OH", "QUAL.I", 3) +#
	plot.rgb("OH", "QUAL.S", 3) #
dev.off()	#
# Just plotting the BAI fits#
summary(data.graph)#
ggplot(data.graph) + facet_wrap(group.cc~Site) +#
  scale_x_continuous(expand=c(0,0), name="Year") +#
  scale_y_continuous(expand=c(0,0), name="BAI") +#
  # facet_wrap(~TreeID, scales="free_y", space="free") +#
  # geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
  geom_line(aes(x=Year, y=fit.full), size=2, alpha=0.5) +#
  geom_ribbon(aes(x=Year, ymin=fit.full.lwr, ymax=fit.full.upr), alpha=0.3)#
#
# Plotting the Effects#
pdf("figures/gam3/gam3_influence_in_time_all_oaks.pdf", width= 13, height = 8.5)#
ggplot(data.graph[substr(data.graph$group, 1,2)=="QU",]) + facet_grid(group.cc~State) +#
	scale_x_continuous(expand=c(0,0), name="Year") +#
	scale_y_continuous(expand=c(0,0), name="Effect on RW (in mm)") +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_line(aes(x=Year, y=fit.tmean), size=2, color="red") +#
	geom_line(aes(x=Year, y=fit.precip), size=2, color="blue") +#
	geom_line(aes(x=Year, y=fit.dbh.recon), size=2, color="green")#
dev.off()#
# Separating things out By canopy class to see things better#
#########################################################
#########################################################
# Dominant#
#########################################################
#########################################################
pdf("figures/gam3/gam3_SPP_CC_BAI_limiting_factors_D.pdf", width= 13, height = 8.5)#
ggplot(data = data.graph[data.graph$Canopy.Class=="D" & !data.graph$group.cc %in% c("BETULA.D", "CARYA.D", "FAGR.D", "FRAX.D", "SAAL.D", "ULRU.D", "ACSA.D"),]) + facet_grid(group ~ State) +#
	scale_x_continuous(expand=c(0,0)) +#
	scale_y_continuous(expand=c(0,0)) +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_line(aes(x=Year, y=BA.inc), size=2, alpha=0.5) +#
	geom_ribbon(aes(x=Year, ymin=BA.inc.lwr, ymax=BA.inc.upr), alpha=0.3) +#
	geom_line(aes(x=Year, y = 0), linetype="dashed") +#
	# Harvard#
	plot.rgb("MA", "ACRU.D", 3) +#
	plot.rgb("MA", "PIST.D", 3) +#
	plot.rgb("MA", "TSCA.D", 3) +#
	plot.rgb("MA", "QURU.D", 3) +#
	plot.rgb("MA", "QUVE.D", 3) +#
	# plot.rgb("MA", "FRAX.D", 3) +#
	# plot.rgb("MA", "BETULA.D", 3) +#
	#plot.rgb("MA", "ACSA.D", 3) +#
	plot.rgb("MA", "QUAL.D", 3) +#
	# plot.rgb("MA", "FAGR.D", 3) +#
	#plot.rgb("MA", "ULRU.D", 3) +#
	# plot.rgb("MA", "CARYA.D", 3) +#
	# plot.rgb("MA", "SAAL.D", 3) +#
	# Howland#
	plot.rgb("ME", "ACRU.D", 3) +#
	plot.rgb("ME", "PIST.D", 3) +#
	plot.rgb("ME", "TSCA.D", 3) +#
	plot.rgb("ME", "QURU.D", 3) +#
	plot.rgb("ME", "QUVE.D", 3) +#
	# plot.rgb("ME", "FRAX.D", 3) +#
	# plot.rgb("ME", "BETULA.D", 3) +#
	#plot.rgb("ME", "ACSA.D", 3) +#
	plot.rgb("ME", "QUAL.D", 3) +#
	# plot.rgb("ME", "FAGR.D", 3) +#
	#plot.rgb("ME", "ULRU.D", 3) +#
	# plot.rgb("ME", "CARYA.D", 3) +#
	# plot.rgb("ME", "SAAL.D", 3) +#
	# Morgan Monroe#
	plot.rgb("IN", "ACRU.D", 3) +#
	plot.rgb("IN", "PIST.D", 3) +#
	plot.rgb("IN", "TSCA.D", 3) +#
	plot.rgb("IN", "QURU.D", 3) +#
	plot.rgb("IN", "QUVE.D", 3) +#
	# plot.rgb("IN", "FRAX.D", 3) +#
	# plot.rgb("IN", "BETULA.D", 3) +#
	#plot.rgb("IN", "ACSA.D", 3) +#
	plot.rgb("IN", "QUAL.D", 3) +#
	# plot.rgb("IN", "FAGR.D", 3) +#
	#plot.rgb("IN", "ULRU.D", 3) +#
	# plot.rgb("IN", "CARYA.D", 3) +#
	# plot.rgb("IN", "SAAL.D", 3) +#
	# Missouri Ozark#
	plot.rgb("MO", "ACRU.D", 3) +#
	plot.rgb("MO", "PIST.D", 3) +#
	plot.rgb("MO", "TSCA.D", 3) +#
	plot.rgb("MO", "QURU.D", 3) +#
	plot.rgb("MO", "QUVE.D", 3) +#
	# plot.rgb("MO", "FRAX.D", 3) +#
	# plot.rgb("MO", "BETULA.D", 3) +#
	#plot.rgb("MO", "ACSA.D", 3) +#
	plot.rgb("MO", "QUAL.D", 3) +#
	# plot.rgb("MO", "FAGR.D", 3) +#
	#plot.rgb("MO", "ULRU.D", 3) +#
	# plot.rgb("MO", "CARYA.D", 3) +#
	# plot.rgb("MO", "SAAL.D", 3) +#
	# Oak Openings#
	plot.rgb("OH", "ACRU.D", 3) +#
	plot.rgb("OH", "PIST.D", 3) +#
	plot.rgb("OH", "TSCA.D", 3) +#
	plot.rgb("OH", "QURU.D", 3) +#
	plot.rgb("OH", "QUVE.D", 3) +#
	# plot.rgb("OH", "FRAX.D", 3) +#
	# plot.rgb("OH", "BETULA.D", 3) +#
	#plot.rgb("OH", "ACSA.D", 3) +#
	plot.rgb("OH", "QUAL.D", 3) +#
	# plot.rgb("OH", "FAGR.D", 3) +#
	#plot.rgb("OH", "ULRU.D", 3) +#
	# plot.rgb("OH", "CARYA.D", 3) +#
	# plot.rgb("OH", "SAAL.D", 3) +#
	poster.theme2 +#
	labs(title= "Dominant Trees", x="Year", y = expression(bold(paste("BAI (mm"^"2", "y"^"-1",")"))))#
dev.off()	#
# Just plotting the BAI fits#
summary(data.graph)#
ggplot(data.graph) + facet_wrap(group.cc~Site) +#
  scale_x_continuous(expand=c(0,0), name="Year") +#
  scale_y_continuous(expand=c(0,0), name="BAI") +#
  # facet_wrap(~TreeID, scales="free_y", space="free") +#
  # geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
  geom_line(aes(x=Year, y=fit.full), size=2, alpha=0.5) +#
  geom_ribbon(aes(x=Year, ymin=fit.full.lwr, ymax=fit.full.upr), alpha=0.3)
data.graph$State <- factor(data.graph$State, levels=c("MO", "IN", "OH", "MA", "ME"))
ggplot(data.graph) + facet_grid(group.cc~State) +#
  scale_x_continuous(expand=c(0,0), name="Year") +#
  scale_y_continuous(expand=c(0,0), name="BAI") +#
  # facet_wrap(~TreeID, scales="free_y", space="free") +#
  # geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
  geom_line(aes(x=Year, y=fit.full), size=2, alpha=0.5) +#
  geom_ribbon(aes(x=Year, ymin=fit.full.lwr, ymax=fit.full.upr), alpha=0.3)
ggplot(data.graph[data.graph$Canopy.Class=="D" & !data.graph$group.cc %in% c("BETULA.D", "CARYA.D", "FAGR.D", "FRAX.D", "SAAL.D"),]) + facet_grid(group.cc~State) +#
  scale_x_continuous(expand=c(0,0), name="Year") +#
  scale_y_continuous(expand=c(0,0), name="BAI") +#
  # facet_wrap(~TreeID, scales="free_y", space="free") +#
  # geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
  geom_line(aes(x=Year, y=fit.full), size=2, alpha=0.5) +#
  geom_ribbon(aes(x=Year, ymin=fit.full.lwr, ymax=fit.full.upr), alpha=0.3)
ggplot(data.graph[data.graph$Canopy.Class=="S" & !data.graph$group.cc %in% c("BETULA.S", "CARYA.S", "FAGR.S", "FRAX.S", "SAAL.S"),]) + facet_grid(group.cc~State) +#
  scale_x_continuous(expand=c(0,0), name="Year") +#
  scale_y_continuous(expand=c(0,0), name="BAI") +#
  # facet_wrap(~TreeID, scales="free_y", space="free") +#
  # geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
  geom_line(aes(x=Year, y=fit.full), size=2, alpha=0.5) +#
  geom_ribbon(aes(x=Year, ymin=fit.full.lwr, ymax=fit.full.upr), alpha=0.3)
ggplot(data.graph[data.graph$Canopy.Class=="S" & !data.graph$group.cc %in% c("BETULA.S", "CARYA.S", "FAGR.S", "FRAX.S", "SAAL.S"),]) + facet_grid(group.cc~State) +#
  scale_x_continuous(expand=c(0,0), name="Year") +#
  scale_y_continuous(expand=c(0,0), name="BAI") +#
  # facet_wrap(~TreeID, scales="free_y", space="free") +#
  # geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
  geom_line(aes(x=Year, y=fit.full), size=2, alpha=0.5) +#
  geom_ribbon(aes(x=Year, ymin=fit.full.lwr, ymax=fit.full.upr), alpha=0.3)+#
  ylim(c(-0.5,20))
ggplot(data.graph[data.graph$Canopy.Class=="S" & !data.graph$group.cc %in% c("BETULA.S", "CARYA.S", "FAGR.S", "FRAX.S", "SAAL.S"),]) + facet_grid(group~State) +#
	scale_x_continuous(expand=c(0,0), name="Year") +#
	scale_y_continuous(expand=c(0,0), name="Effect on RW (in mm)") +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_line(aes(x=Year, y=fit.tmean), size=1, color="red") +#
	geom_line(aes(x=Year, y=fit.precip), size=1, color="blue") +#
	geom_line(aes(x=Year, y=fit.dbh.recon), size=1, color="green")+#
	ylim(c(0,3)) +#
	labs(title= "Suppressed Effects (group.cc)")
gam3.data.graph <- data.graph
save(gam3.data.graph, file="processed_data/gam3_graph_data.Rdata")
library(ggplot2)#
#
load(file="processed_data/gamm_weights/gam2_weights.Rdata")#
#
summary(gam2.weights)#
factors.fits <- c("fit.tmean", "fit.precip", "fit.dbh.recon", "fit.full", "BA.inc")#
factors.weights <- c("weight.tmean", "weight.dbh.recon", "weight.precip")#
#
# Transforming things back to BA.inc rather than log#
gam2.weights[,which(substr(names(gam2.weights),1,3)=="fit")] <- exp(gam2.weights[,which(substr(names(gam2.weights),1,3)=="fit")] )#
othervars <- c("Year", "Site", "Canopy.Class", "Model")#
#
data.graph1 <- aggregate(gam2.weights[,factors.fits], by = gam2.weights[,othervars], FUN= mean, na.rm=T)#
#
data.graph1[,paste(factors.fits, "upr", sep=".")] <- aggregate(gam2.weights[,factors.fits], by = gam2.weights[,othervars], FUN= quantile, prob= 0.975, na.rm=T)[,factors.fits]#
#
data.graph1[,paste(factors.fits, "lwr", sep=".")] <- aggregate(gam2.weights[,factors.fits], by = gam2.weights[,othervars], FUN= quantile, prob= 0.025, na.rm=T)[,factors.fits]#
#
summary(data.graph1)#
#
data.graph2 <- aggregate(abs(gam2.weights[,factors.weights]), by = gam2.weights[,othervars], FUN= mean, na.rm=T)#
#
data.graph2[,paste(factors.weights, "upr", sep=".")] <- aggregate(abs(gam2.weights[,factors.weights]), by = gam2.weights[,othervars], FUN= quantile, prob= 0.975, na.rm=T)[,factors.weights]#
#
data.graph2[,paste(factors.weights, "lwr", sep=".")] <- aggregate(abs(gam2.weights[,factors.weights]), by = gam2.weights[,othervars], FUN= quantile, prob= 0.025, na.rm=T)[,factors.weights]#
#
summary(data.graph2)#
#
data.graph <- merge(data.graph1, data.graph2, all.x=T, all.y=T)#
#
# data.graph <- gam2.weights[gam2.weights$TreeID== "MMA014",]#
summary(data.graph)#
gam2.weights$wts.check <- rowSums(abs(gam2.weights[,c("weight.tmean", "weight.precip", "weight.dbh.recon")]))#
data.graph$wts.check <- rowSums(abs(data.graph[,c("weight.tmean", "weight.precip", "weight.dbh.recon")]))#
#
summary(gam2.weights)#
summary(data.graph)#
#
# Ordering the data for graphing#
#
data.graph<- data.graph[order(data.graph$Year, data.graph$Canopy.Class, data.graph$Site, decreasing=F),]#
plot.rgb <- function(STATE, CC, SIZE){	geom_line(data=data.graph[data.graph$State==STATE & data.graph$Canopy.Class==CC,],aes(x=Year, y=fit.full), size=SIZE,#
  		        color=rgb(abs(data.graph[data.graph$State==STATE & data.graph$Canopy.Class==CC,"weight.tmean"     ]), # red#
                        abs(data.graph[data.graph$State==STATE & data.graph$Canopy.Class==CC,"weight.dbh.recon"     ]), # green#
                        abs(data.graph[data.graph$State==STATE & data.graph$Canopy.Class==CC,"weight.precip"   ]))) }   # blue#
# Plotting the Obs and modeled with influence coloring#
data.graph$State <- recode(data.graph$Site, "'Howland' = 'ME';'Harvard' = 'MA';'Morgan Monroe State Park' = 'IN';'Missouri Ozark' = 'MO';'Oak Openings Toledo' = 'OH'")#
data.graph$State <- factor(data.graph$State, levels=c("MO", "IN", "OH", "MA", "ME"))#
#
# Plotting the Obs and modeled with influence coloring#
pdf("figures/gam2_canopyclass_BAI_limiting_factors.pdf", width= 13, height = 8.5)#
ggplot(data.graph) + facet_grid(Canopy.Class~State) +#
	scale_x_continuous(expand=c(0,0)) +#
	scale_y_continuous(expand=c(0,0)) +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_line(aes(x=Year, y=BA.inc), size=2, alpha=0.5) +#
	geom_ribbon(aes(x=Year, ymin=BA.inc.lwr, ymax=BA.inc.upr), alpha=0.3) +#
	geom_line(aes(x=Year, y = 0), linetype="dashed") +#
	plot.rgb("MA", "C", 3) +#
	plot.rgb("MA", "D", 3) +#
	plot.rgb("MA", "I", 3) +#
	plot.rgb("MA", "S", 3) +#
	plot.rgb("ME", "C", 3) +#
	plot.rgb("ME", "D", 3) +#
	plot.rgb("ME", "I", 3) +#
	plot.rgb("ME", "S", 3) +#
	plot.rgb("MO", "C", 3) +#
	plot.rgb("MO", "D", 3) +#
	plot.rgb("MO", "I", 3) +#
	plot.rgb("MO", "S", 3) +#
	plot.rgb("IN", "C", 3) +#
	plot.rgb("IN", "D", 3) +#
	plot.rgb("IN", "I", 3) +#
	plot.rgb("IN", "S", 3) +#
	plot.rgb("OH", "C", 3) +#
	plot.rgb("OH", "D", 3) +#
	plot.rgb("OH", "I", 3) +#
	plot.rgb("OH", "S", 3)+#
	labs(title= "Canopy Class", x="Year", y = expression(bold(paste("BAI (mm"^"2", "y"^"-1",")")))) +#
	poster.theme2#
dev.off()		#
# Just plotting the BAI fits#
summary(data.graph)#
#
ggplot(data.graph) + facet_wrap(group~Site) +#
  scale_x_continuous(expand=c(0,0), name="Year") +#
  scale_y_continuous(expand=c(0,0), name="BAI") +#
  # facet_wrap(~TreeID, scales="free_y", space="free") +#
  # geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
  geom_line(aes(x=Year, y=fit.full), size=2, alpha=0.5) +#
  geom_ribbon(aes(x=Year, ymin=fit.full.lwr, ymax=fit.full.upr), alpha=0.3)#
#
# Plotting the Effects#
data.graph$State <- factor(data.graph$State, levels=c("MO", "IN", "OH", "MA", "ME"))#
#
pdf("figures/gam2_influence_in_time.pdf", width= 13, height = 8.5)#
ggplot(data.graph) + facet_grid(Canopy.Class~State) +#
	scale_x_continuous(expand=c(0,0), name="Year") +#
	scale_y_continuous(expand=c(0,0), name="Effect on RW (in mm)") +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_line(aes(x=Year, y=fit.tmean), size=1, color="red") +#
	geom_line(aes(x=Year, y=fit.precip), size=1, color="blue") +#
	geom_line(aes(x=Year, y=fit.dbh.recon), size=1, color="green")+#
	ylim(c(0,3))#
dev.off()	#
# #---------------------------------------------------#
# # Plotting just MMF and Harvard for Ameridendro#
#
# sites.use2 <- c("Harvard", "Morgan Monroe State Park")#
#
# # Plotting the Obs and modeled with influence coloring#
# pdf("figures/gam2_canopyclass_BAI_limiting_factors_ameridendro.pdf", width= 13, height = 8.5)#
# ggplot(data.graph[data.graph$Site %in% sites.use2,]) + facet_grid(Canopy.Class~Site) +#
	# scale_x_continuous(expand=c(0,0), name="Year") +#
	# scale_y_continuous(expand=c(0,0), name="BAI") +#
	# # facet_wrap(~TreeID, scales="free_y", space="free") +#
	# # geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	# geom_line(aes(x=Year, y=BA.inc), size=2, alpha=0.5) +#
	# geom_ribbon(aes(x=Year, ymin=BA.inc.lwr, ymax=BA.inc.upr), alpha=0.3) +#
	# geom_line(aes(x=Year, y = 0), linetype="dashed") +#
	# plot.rgb("Harvard", "C", 3) +#
	# plot.rgb("Harvard", "D", 3) +#
	# plot.rgb("Harvard", "I", 3) +#
	# plot.rgb("Harvard", "S", 3) +#
	# plot.rgb("Morgan Monroe State Park", "C", 3) +#
	# plot.rgb("Morgan Monroe State Park", "D", 3) +#
	# plot.rgb("Morgan Monroe State Park", "I", 3) +#
	# plot.rgb("Morgan Monroe State Park", "S", 3) +#
	# poster.theme2#
# dev.off()		#
# # Just plotting the BAI fits#
# summary(data.graph)#
#
# ggplot(data.graph) + facet_wrap(group~Site) +#
  # scale_x_continuous(expand=c(0,0), name="Year") +#
  # scale_y_continuous(expand=c(0,0), name="BAI") +#
  # # facet_wrap(~TreeID, scales="free_y", space="free") +#
  # # geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
  # geom_line(aes(x=Year, y=fit.full), size=2, alpha=0.5) +#
  # geom_ribbon(aes(x=Year, ymin=fit.full.lwr, ymax=fit.full.upr), alpha=0.3)#
#
# # Plotting the Effects#
#
# pdf("figures/gam2_influence_in_time_ameridendro.pdf", width= 13, height = 8.5)#
# ggplot(data.graph[data.graph$Site %in% sites.use2,]) + facet_grid(Canopy.Class~Site) +#
	# scale_x_continuous(expand=c(0,0), name="Year") +#
	# scale_y_continuous(expand=c(0,0), name="Effect on RW (in mm)") +#
	# # facet_wrap(~TreeID, scales="free_y", space="free") +#
	# # geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	# geom_line(aes(x=Year, y=fit.tmean), size=2, color="red") +#
	# geom_line(aes(x=Year, y=fit.precip), size=2, color="blue") +#
	# geom_line(aes(x=Year, y=fit.dbh.recon), size=2, color="green") +#
	# poster.theme2#
# dev.off()
save(gam2.data.graph, file="processed_data/gam2_graph_data.Rdata")
gam2.data.graph <- data.graph
save(gam2.data.graph, file="processed_data/gam2_graph_data.Rdata")
library(ggplot2)#
library(car)#
load(file="processed_data/gamm_weights/gam1_weights.Rdata")#
#
summary(gam1.weights)#
factors.fits <- c("fit.tmean", "fit.precip", "fit.dbh.recon", "fit.full", "BA.inc")#
factors.weights <- c("weight.tmean", "weight.dbh.recon", "weight.precip")#
#
# Transforming things back to BA.inc rather than log#
gam1.weights[,which(substr(names(gam1.weights),1,3)=="fit")] <- exp(gam1.weights[,which(substr(names(gam1.weights),1,3)=="fit")] )#
#
othervars <- c("Year", "Site", "group", "Model")#
#
data.graph1 <- aggregate(gam1.weights[,factors.fits], by = gam1.weights[,othervars], FUN= mean, na.rm=T)#
#
data.graph1[,paste(factors.fits, "upr", sep=".")] <- aggregate(gam1.weights[,factors.fits], by = gam1.weights[,othervars], FUN= quantile, prob= 0.975, na.rm=T)[,factors.fits]#
#
data.graph1[,paste(factors.fits, "lwr", sep=".")] <- aggregate(gam1.weights[,factors.fits], by = gam1.weights[,othervars], FUN= quantile, prob= 0.025, na.rm=T)[,factors.fits]#
#
summary(data.graph1)#
#
data.graph2 <- aggregate(abs(gam1.weights[,factors.weights]), by = gam1.weights[,othervars], FUN= mean, na.rm=T)#
#
data.graph2[,paste(factors.weights, "upr", sep=".")] <- aggregate(abs(gam1.weights[,factors.weights]), by = gam1.weights[,othervars], FUN= quantile, prob= 0.975, na.rm=T)[,factors.weights]#
#
data.graph2[,paste(factors.weights, "lwr", sep=".")] <- aggregate(abs(gam1.weights[,factors.weights]), by = gam1.weights[,othervars], FUN= quantile, prob= 0.025, na.rm=T)[,factors.weights]#
#
summary(data.graph2)#
#
data.graph <- merge(data.graph1, data.graph2, all.x=T, all.y=T)#
#
# data.graph <- gam1.weights[gam1.weights$TreeID== "MMA014",]#
summary(data.graph)#
gam1.weights$wts.check <- rowSums(abs(gam1.weights[,c("weight.tmean", "weight.precip", "weight.dbh.recon")]))#
data.graph$wts.check <- rowSums(abs(data.graph[,c("weight.tmean", "weight.precip", "weight.dbh.recon")]))#
#
summary(gam1.weights)#
summary(data.graph)#
#
# Ordering the data for graphing#
#
data.graph<- data.graph[order(data.graph$Year, data.graph$group, data.graph$Site, decreasing=F),]#
summary(data.graph)#
#
plot.rgb <- function(STATE, SPP, SIZE){	geom_line(data=data.graph[data.graph$State==STATE & data.graph$group==SPP,],aes(x=Year, y=fit.full), size=SIZE,#
  		        color=rgb(abs(data.graph[data.graph$State==STATE & data.graph$group==SPP,"weight.tmean"     ]), # red#
                        abs(data.graph[data.graph$State==STATE & data.graph$group==SPP,"weight.dbh.recon"     ]), # green#
                        abs(data.graph[data.graph$State==STATE & data.graph$group==SPP,"weight.precip"   ]))) }   # blue#
#
# Plotting the Obs and modeled with influence coloring#
data.graph$State <- recode(data.graph$Site, "'Howland' = 'ME';'Harvard' = 'MA';'Morgan Monroe State Park' = 'IN';'Missouri Ozark' = 'MO';'Oak Openings Toledo' = 'OH'")#
data.graph$State <- factor(data.graph$State, levels=c("MO", "IN", "OH", "MA", "ME"))#
#
summary(data.graph[!data.graph$group %in% c("BETULA", "CARYA", "FAGR", "FRAX", "SAAL"),])#
#
pdf("figures/gam1_Species_BAI_limiting_factor.pdf", width= 13, height = 8.5)#
ggplot(data.graph[!data.graph$group %in% c("BETULA", "CARYA", "FAGR", "FRAX", "SAAL"),]) + facet_grid(group~State) +#
	scale_x_continuous(expand=c(0,0)) +#
	scale_y_continuous(expand=c(0,0)) +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_line(aes(x=Year, y=BA.inc), size=2, alpha=0.5) +#
	geom_ribbon(aes(x=Year, ymin=BA.inc.lwr, ymax=BA.inc.upr), alpha=0.3) +#
	geom_line(aes(x=Year, y = 0), linetype="dashed") +#
	plot.rgb("MA", "ACRU", 3) +#
	plot.rgb("MA", "PIST", 3) +#
	plot.rgb("MA", "TSCA", 3) +#
	plot.rgb("MA", "QURU", 3) +#
	plot.rgb("MA", "QUVE", 3) +#
	#plot.rgb("MA", "FRAX", 3) +#
	#plot.rgb("MA", "BETULA", 3) +#
	plot.rgb("MA", "ACSA", 3) +#
	plot.rgb("MA", "QUAL", 3) +#
	#plot.rgb("MA", "FAGR", 3) +#
	plot.rgb("MA", "ULRU", 3) +#
	#plot.rgb("MA", "CARYA", 3) +#
	#plot.rgb("MA", "SAAL", 3) +#
	plot.rgb("ME", "ACRU", 3) +#
	plot.rgb("ME", "PIST", 3) +#
	plot.rgb("ME", "TSCA", 3) +#
	plot.rgb("ME", "QURU", 3) +#
	plot.rgb("ME", "QUVE", 3) +#
	#plot.rgb("ME", "FRAX", 3) +#
	#plot.rgb("ME", "BETULA", 3) +#
	plot.rgb("ME", "ACSA", 3) +#
	plot.rgb("ME", "QUAL", 3) +#
	#plot.rgb("ME", "FAGR", 3) +#
	plot.rgb("ME", "ULRU", 3) +#
	#plot.rgb("ME", "CARYA", 3) +#
	#plot.rgb("ME", "SAAL", 3) +#
	plot.rgb("MO", "ACRU", 3) +#
	plot.rgb("MO", "PIST", 3) +#
	plot.rgb("MO", "TSCA", 3) +#
	plot.rgb("MO", "QURU", 3) +#
	plot.rgb("MO", "QUVE", 3) +#
	#plot.rgb("MO", "FRAX", 3) +#
	#plot.rgb("MO", "BETULA", 3) +#
	plot.rgb("MO", "ACSA", 3) +#
	plot.rgb("MO", "QUAL", 3) +#
	#plot.rgb("MO", "FAGR", 3) +#
	plot.rgb("MO", "ULRU", 3) +#
	#plot.rgb("MO", "CARYA", 3) +#
	#plot.rgb("MO", "SAAL", 3) +#
#
	plot.rgb("IN", "ACRU", 3) +#
	plot.rgb("IN", "PIST", 3) +#
	plot.rgb("IN", "TSCA", 3) +#
	plot.rgb("IN", "QURU", 3) +#
	plot.rgb("IN", "QUVE", 3) +#
	#plot.rgb("IN", "FRAX", 3) +#
	#plot.rgb("IN", "BETULA", 3) +#
	plot.rgb("IN", "ACSA", 3) +#
	plot.rgb("IN", "QUAL", 3) +#
	#plot.rgb("IN", "FAGR", 3) +#
	plot.rgb("IN", "ULRU", 3) +#
	#plot.rgb("IN", "CARYA", 3) +#
	#plot.rgb("IN", "SAAL", 3) +#
	plot.rgb("OH", "ACRU", 3) +#
	plot.rgb("OH", "PIST", 3) +#
	plot.rgb("OH", "TSCA", 3) +#
	plot.rgb("OH", "QURU", 3) +#
	plot.rgb("OH", "QUVE", 3) +#
	#plot.rgb("OH", "FRAX", 3) +#
	#plot.rgb("OH", "BETULA", 3) +#
	plot.rgb("OH", "ACSA", 3) +#
	plot.rgb("OH", "QUAL", 3) +#
	plot.rgb("OH", "FAGR", 3) +#
	plot.rgb("OH", "ULRU", 3) +#
	#plot.rgb("OH", "CARYA", 3) +#
	#plot.rgb("OH", "SAAL", 3)+#
	labs(title= "Species", x="Year", y = expression(bold(paste("BAI (mm"^"2", "y"^"-1",")")))) +#
	poster.theme2#
dev.off()#
# Just plotting the BAI fits#
summary(data.graph)#
ggplot(data.graph) + facet_wrap(group~Site) +#
  scale_x_continuous(expand=c(0,0), name="Year") +#
  scale_y_continuous(expand=c(0,0), name="BAI") +#
  # facet_wrap(~TreeID, scales="free_y", space="free") +#
  # geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
  geom_line(aes(x=Year, y=fit.full), size=2, alpha=0.5) +#
  geom_ribbon(aes(x=Year, ymin=fit.full.lwr, ymax=fit.full.upr), alpha=0.3)#
summary(data.graph)#
data.graph$State <- factor(data.graph$State, levels=c("MO", "IN", "OH", "MA", "ME"))#
#
# Plotting the Effects#
pdf("figures/gam1_influence_in_time.pdf", width= 13, height = 8.5)#
#
ggplot(data.graph[!data.graph$group %in% c("BETULA", "CARYA", "FAGR", "FRAX", "SAAL"),]) + facet_grid(group~State) +#
	scale_x_continuous(expand=c(0,0), name="Year") +#
	scale_y_continuous(expand=c(0,0), name="Effect on RW (in mm)") +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_line(aes(x=Year, y=fit.tmean), size=1, color="red") +#
	geom_line(aes(x=Year, y=fit.precip), size=1, color="blue") +#
	geom_line(aes(x=Year, y=fit.dbh.recon), size=1, color="green")+#
	ylim(c(0,3))#
dev.off()#
#
#------------------------------------#
# # Just MMF and Harvard#
# summary(data.graph)#
# sites.use2 <- c("Harvard", "Morgan Monroe State Park")#
#
# pdf("figures/gam1_Species_BAI_limiting_factor_ameridendro.pdf", width= 13, height = 8.5)#
# ggplot(data.graph[data.graph$Site %in% sites.use2,]) + facet_grid(group~Site) +#
	# scale_x_continuous(expand=c(0,0), name="Year") +#
	# scale_y_continuous(expand=c(0,0), name="BAI") +#
	# # facet_wrap(~TreeID, scales="free_y", space="free") +#
	# # geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	# geom_line(aes(x=Year, y=BA.inc), size=2, alpha=0.5) +#
	# geom_ribbon(aes(x=Year, ymin=BA.inc.lwr, ymax=BA.inc.upr), alpha=0.3) +#
	# geom_line(aes(x=Year, y = 0), linetype="dashed") +#
	# plot.rgb("Harvard", "ACRU", 3) +#
	# plot.rgb("Harvard", "PIST", 3) +#
	# plot.rgb("Harvard", "TSCA", 3) +#
	# plot.rgb("Harvard", "QURU", 3) +#
	# plot.rgb("Harvard", "QUVE", 3) +#
	# plot.rgb("Harvard", "FRAX", 3) +#
	# plot.rgb("Harvard", "BETULA", 3) +#
	# plot.rgb("Harvard", "ACSA", 3) +#
	# plot.rgb("Harvard", "QUAL", 3) +#
	# plot.rgb("Harvard", "FAGR", 3) +#
	# plot.rgb("Harvard", "ULRU", 3) +#
	# plot.rgb("Harvard", "CARYA", 3) +#
	# plot.rgb("Harvard", "SAAL", 3) +#
	# plot.rgb("Morgan Monroe State Park", "ACRU", 3) +#
	# plot.rgb("Morgan Monroe State Park", "PIST", 3) +#
	# plot.rgb("Morgan Monroe State Park", "TSCA", 3) +#
	# plot.rgb("Morgan Monroe State Park", "QURU", 3) +#
	# plot.rgb("Morgan Monroe State Park", "QUVE", 3) +#
	# plot.rgb("Morgan Monroe State Park", "FRAX", 3) +#
	# plot.rgb("Morgan Monroe State Park", "BETULA", 3) +#
	# plot.rgb("Morgan Monroe State Park", "ACSA", 3) +#
	# plot.rgb("Morgan Monroe State Park", "QUAL", 3) +#
	# plot.rgb("Morgan Monroe State Park", "FAGR", 3) +#
	# plot.rgb("Morgan Monroe State Park", "ULRU", 3) +#
	# plot.rgb("Morgan Monroe State Park", "CARYA", 3) +#
	# plot.rgb("Morgan Monroe State Park", "SAAL", 3) +#
	# poster.theme2#
# dev.off()#
# # Just plotting the BAI fits#
# summary(data.graph)#
# ggplot(data.graph[data.graph$Site %in% sites.use2,]) + facet_wrap(group~Site) +#
  # scale_x_continuous(expand=c(0,0), name="Year") +#
  # scale_y_continuous(expand=c(0,0), name="BAI") +#
  # # facet_wrap(~TreeID, scales="free_y", space="free") +#
  # # geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
  # geom_line(aes(x=Year, y=fit.full), size=2, alpha=0.5) +#
  # geom_ribbon(aes(x=Year, ymin=fit.full.lwr, ymax=fit.full.upr), alpha=0.3)#
#
# summary(data.graph)#
# # Plotting the Effects#
# pdf("figures/gam1_influence_in_time_ameridendro.pdf", width= 13, height = 8.5)#
#
# ggplot(data.graph[data.graph$Site %in% sites.use2,]) + facet_grid(group~Site) +#
	# scale_x_continuous(expand=c(0,0), name="Year") +#
	# scale_y_continuous(expand=c(0,0), name="Effect on RW (in mm)") +#
	# # facet_wrap(~TreeID, scales="free_y", space="free") +#
	# # geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	# geom_line(aes(x=Year, y=fit.tmean), size=1, color="red") +#
	# geom_line(aes(x=Year, y=fit.precip), size=1, color="blue") +#
	# geom_line(aes(x=Year, y=fit.dbh.recon), size=1, color="green")+ #
	# poster.theme2#
# dev.off()
gam1.data.graph <- data.graph
save(gam1.data.graph, file="processed_data/gam1_graph_data.Rdata")
