ggplot(data.graph[data.graph$Canopy.Class=="D" & !data.graph$group.cc %in% c("BETULA.D", "CARYA.D", "FAGR.D", "FRAX.D", "SAAL.D"),]) + facet_grid(group~State) +#
	scale_x_continuous(expand=c(0,0), name="Year") +#
	scale_y_continuous(expand=c(0,0), name="Effect on RW (in mm)") +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	#geom_ribbon(aes(x=Year, ymin=fit.dbh.recon.lwr, ymax=fit.dbh.recon.upr), alpha=0.4, fill="green")+#
	geom_line(aes(x=Year, y=fit.tmean), size=1, color="red") +#
	geom_line(aes(x=Year, y=fit.precip), size=1, color="blue") +#
	geom_line(aes(x=Year, y=fit.dbh.recon), size=1, color="green")+#
	ylim(c(0,4)) +#
	labs(title= "Dominant Effects (group.cc)")
ggplot(data.graph[data.graph$Canopy.Class=="I" & !data.graph$group.cc %in% c("BETULA.I", "CARYA.I", "FAGR.I", "FRAX.I", "SAAL.I"),]) + facet_grid(group~State) +#
	scale_x_continuous(expand=c(0,0), name="Year") +#
	scale_y_continuous(expand=c(0,0), name="Effect on RW (in mm)") +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_line(aes(x=Year, y=fit.tmean), size=1, color="red") +#
	geom_line(aes(x=Year, y=fit.precip), size=1, color="blue") +#
	geom_line(aes(x=Year, y=fit.dbh.recon), size=1, color="green")+#
	ylim(c(0,4)) +#
	labs(title= "Intermediate Effects (group.cc)")
ggplot(data.graph[data.graph$Canopy.Class=="S" & !data.graph$group.cc %in% c("BETULA.S", "CARYA.S", "FAGR.S", "FRAX.S", "SAAL.S"),]) + facet_grid(group~State) +#
	scale_x_continuous(expand=c(0,0), name="Year") +#
	scale_y_continuous(expand=c(0,0), name="Effect on RW (in mm)") +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_line(aes(x=Year, y=fit.tmean), size=1, color="red") +#
	geom_line(aes(x=Year, y=fit.precip), size=1, color="blue") +#
	geom_line(aes(x=Year, y=fit.dbh.recon), size=1, color="green")+#
	ylim(c(0,4)) +#
	labs(title= "Suppressed Effects (group.cc)")
ggplot(data.graph[data.graph$Canopy.Class=="D" & !data.graph$group.cc %in% c("BETULA.D", "CARYA.D", "FAGR.D", "FRAX.D", "SAAL.D"),]) + facet_grid(group~State) +#
	scale_x_continuous(expand=c(0,0), name="Year") +#
	scale_y_continuous(expand=c(0,0), name="Effect on RW (in mm)") +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	#geom_ribbon(aes(x=Year, ymin=fit.dbh.recon.lwr, ymax=fit.dbh.recon.upr), alpha=0.4, fill="green")+#
	geom_line(aes(x=Year, y=fit.tmean), size=1, color="red") +#
	geom_line(aes(x=Year, y=fit.precip), size=1, color="blue") +#
	geom_line(aes(x=Year, y=fit.dbh.recon), size=1, color="green")+#
	ylim(c(0,3)) +#
	labs(title= "Dominant Effects (group.cc)")
ggplot(data.graph[data.graph$Canopy.Class=="I" & !data.graph$group.cc %in% c("BETULA.I", "CARYA.I", "FAGR.I", "FRAX.I", "SAAL.I"),]) + facet_grid(group~State) +#
	scale_x_continuous(expand=c(0,0), name="Year") +#
	scale_y_continuous(expand=c(0,0), name="Effect on RW (in mm)") +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_line(aes(x=Year, y=fit.tmean), size=1, color="red") +#
	geom_line(aes(x=Year, y=fit.precip), size=1, color="blue") +#
	geom_line(aes(x=Year, y=fit.dbh.recon), size=1, color="green")+#
	ylim(c(0,3)) +#
	labs(title= "Intermediate Effects (group.cc)")
ggplot(data.graph[data.graph$Canopy.Class=="S" & !data.graph$group.cc %in% c("BETULA.S", "CARYA.S", "FAGR.S", "FRAX.S", "SAAL.S"),]) + facet_grid(group~State) +#
	scale_x_continuous(expand=c(0,0), name="Year") +#
	scale_y_continuous(expand=c(0,0), name="Effect on RW (in mm)") +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_line(aes(x=Year, y=fit.tmean), size=1, color="red") +#
	geom_line(aes(x=Year, y=fit.precip), size=1, color="blue") +#
	geom_line(aes(x=Year, y=fit.dbh.recon), size=1, color="green")+#
	ylim(c(0,3)) +#
	labs(title= "Suppressed Effects (group.cc)")
library(ggplot2)#
library(car)#
load(file="processed_data/gamm_weights/gam1_weights.Rdata")#
#
summary(gam1.weights)#
factors.fits <- c("fit.tmean", "fit.precip", "fit.dbh.recon", "fit.full", "BA.inc")#
factors.weights <- c("weight.tmean", "weight.dbh.recon", "weight.precip")#
#
# Transforming things back to BA.inc rather than log#
gam1.weights[,which(substr(names(gam1.weights),1,3)=="fit")] <- exp(gam1.weights[,which(substr(names(gam1.weights),1,3)=="fit")] )#
#
othervars <- c("Year", "Site", "group", "Model")#
#
data.graph1 <- aggregate(gam1.weights[,factors.fits], by = gam1.weights[,othervars], FUN= mean, na.rm=T)#
#
data.graph1[,paste(factors.fits, "upr", sep=".")] <- aggregate(gam1.weights[,factors.fits], by = gam1.weights[,othervars], FUN= quantile, prob= 0.975, na.rm=T)[,factors.fits]#
#
data.graph1[,paste(factors.fits, "lwr", sep=".")] <- aggregate(gam1.weights[,factors.fits], by = gam1.weights[,othervars], FUN= quantile, prob= 0.025, na.rm=T)[,factors.fits]#
#
summary(data.graph1)#
#
data.graph2 <- aggregate(abs(gam1.weights[,factors.weights]), by = gam1.weights[,othervars], FUN= mean, na.rm=T)#
#
data.graph2[,paste(factors.weights, "upr", sep=".")] <- aggregate(abs(gam1.weights[,factors.weights]), by = gam1.weights[,othervars], FUN= quantile, prob= 0.975, na.rm=T)[,factors.weights]#
#
data.graph2[,paste(factors.weights, "lwr", sep=".")] <- aggregate(abs(gam1.weights[,factors.weights]), by = gam1.weights[,othervars], FUN= quantile, prob= 0.025, na.rm=T)[,factors.weights]#
#
summary(data.graph2)#
#
data.graph <- merge(data.graph1, data.graph2, all.x=T, all.y=T)#
#
# data.graph <- gam1.weights[gam1.weights$TreeID== "MMA014",]#
summary(data.graph)#
gam1.weights$wts.check <- rowSums(abs(gam1.weights[,c("weight.tmean", "weight.precip", "weight.dbh.recon")]))#
data.graph$wts.check <- rowSums(abs(data.graph[,c("weight.tmean", "weight.precip", "weight.dbh.recon")]))#
#
summary(gam1.weights)#
summary(data.graph)#
#
# Ordering the data for graphing#
#
data.graph<- data.graph[order(data.graph$Year, data.graph$group, data.graph$Site, decreasing=F),]#
summary(data.graph)#
#
plot.rgb <- function(STATE, SPP, SIZE){	geom_line(data=data.graph[data.graph$State==STATE & data.graph$group==SPP,],aes(x=Year, y=fit.full), size=SIZE,#
  		        color=rgb(abs(data.graph[data.graph$State==STATE & data.graph$group==SPP,"weight.tmean"     ]), # red#
                        abs(data.graph[data.graph$State==STATE & data.graph$group==SPP,"weight.dbh.recon"     ]), # green#
                        abs(data.graph[data.graph$State==STATE & data.graph$group==SPP,"weight.precip"   ]))) }   # blue#
#
# Plotting the Obs and modeled with influence coloring#
data.graph$State <- recode(data.graph$Site, "'Howland' = 'ME';'Harvard' = 'MA';'Morgan Monroe State Park' = 'IN';'Missouri Ozark' = 'MO';'Oak Openings Toledo' = 'OH'")#
data.graph$State <- factor(data.graph$State, levels=c("MO", "IN", "OH", "MA", "ME"))#
#
summary(data.graph[!data.graph$group %in% c("BETULA", "CARYA", "FAGR", "FRAX", "SAAL"),])#
#
pdf("figures/gam1_Species_BAI_limiting_factor.pdf", width= 13, height = 8.5)#
ggplot(data.graph[!data.graph$group %in% c("BETULA", "CARYA", "FAGR", "FRAX", "SAAL"),]) + facet_grid(group~State) +#
	scale_x_continuous(expand=c(0,0)) +#
	scale_y_continuous(expand=c(0,0)) +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_line(aes(x=Year, y=BA.inc), size=2, alpha=0.5) +#
	geom_ribbon(aes(x=Year, ymin=BA.inc.lwr, ymax=BA.inc.upr), alpha=0.3) +#
	geom_line(aes(x=Year, y = 0), linetype="dashed") +#
	plot.rgb("MA", "ACRU", 3) +#
	plot.rgb("MA", "PIST", 3) +#
	plot.rgb("MA", "TSCA", 3) +#
	plot.rgb("MA", "QURU", 3) +#
	plot.rgb("MA", "QUVE", 3) +#
	#plot.rgb("MA", "FRAX", 3) +#
	#plot.rgb("MA", "BETULA", 3) +#
	plot.rgb("MA", "ACSA", 3) +#
	plot.rgb("MA", "QUAL", 3) +#
	#plot.rgb("MA", "FAGR", 3) +#
	plot.rgb("MA", "ULRU", 3) +#
	#plot.rgb("MA", "CARYA", 3) +#
	#plot.rgb("MA", "SAAL", 3) +#
	plot.rgb("ME", "ACRU", 3) +#
	plot.rgb("ME", "PIST", 3) +#
	plot.rgb("ME", "TSCA", 3) +#
	plot.rgb("ME", "QURU", 3) +#
	plot.rgb("ME", "QUVE", 3) +#
	#plot.rgb("ME", "FRAX", 3) +#
	#plot.rgb("ME", "BETULA", 3) +#
	plot.rgb("ME", "ACSA", 3) +#
	plot.rgb("ME", "QUAL", 3) +#
	#plot.rgb("ME", "FAGR", 3) +#
	plot.rgb("ME", "ULRU", 3) +#
	#plot.rgb("ME", "CARYA", 3) +#
	#plot.rgb("ME", "SAAL", 3) +#
	plot.rgb("MO", "ACRU", 3) +#
	plot.rgb("MO", "PIST", 3) +#
	plot.rgb("MO", "TSCA", 3) +#
	plot.rgb("MO", "QURU", 3) +#
	plot.rgb("MO", "QUVE", 3) +#
	#plot.rgb("MO", "FRAX", 3) +#
	#plot.rgb("MO", "BETULA", 3) +#
	plot.rgb("MO", "ACSA", 3) +#
	plot.rgb("MO", "QUAL", 3) +#
	#plot.rgb("MO", "FAGR", 3) +#
	plot.rgb("MO", "ULRU", 3) +#
	#plot.rgb("MO", "CARYA", 3) +#
	#plot.rgb("MO", "SAAL", 3) +#
#
	plot.rgb("IN", "ACRU", 3) +#
	plot.rgb("IN", "PIST", 3) +#
	plot.rgb("IN", "TSCA", 3) +#
	plot.rgb("IN", "QURU", 3) +#
	plot.rgb("IN", "QUVE", 3) +#
	#plot.rgb("IN", "FRAX", 3) +#
	#plot.rgb("IN", "BETULA", 3) +#
	plot.rgb("IN", "ACSA", 3) +#
	plot.rgb("IN", "QUAL", 3) +#
	#plot.rgb("IN", "FAGR", 3) +#
	plot.rgb("IN", "ULRU", 3) +#
	#plot.rgb("IN", "CARYA", 3) +#
	#plot.rgb("IN", "SAAL", 3) +#
	plot.rgb("OH", "ACRU", 3) +#
	plot.rgb("OH", "PIST", 3) +#
	plot.rgb("OH", "TSCA", 3) +#
	plot.rgb("OH", "QURU", 3) +#
	plot.rgb("OH", "QUVE", 3) +#
	#plot.rgb("OH", "FRAX", 3) +#
	#plot.rgb("OH", "BETULA", 3) +#
	plot.rgb("OH", "ACSA", 3) +#
	plot.rgb("OH", "QUAL", 3) +#
	plot.rgb("OH", "FAGR", 3) +#
	plot.rgb("OH", "ULRU", 3) +#
	#plot.rgb("OH", "CARYA", 3) +#
	#plot.rgb("OH", "SAAL", 3)+#
	labs(title= "Species", x="Year", y = expression(bold(paste("BAI (mm"^"2", "y"^"-1",")")))) +#
	poster.theme2#
dev.off()#
# Just plotting the BAI fits#
summary(data.graph)#
ggplot(data.graph) + facet_wrap(group~Site) +#
  scale_x_continuous(expand=c(0,0), name="Year") +#
  scale_y_continuous(expand=c(0,0), name="BAI") +#
  # facet_wrap(~TreeID, scales="free_y", space="free") +#
  # geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
  geom_line(aes(x=Year, y=fit.full), size=2, alpha=0.5) +#
  geom_ribbon(aes(x=Year, ymin=fit.full.lwr, ymax=fit.full.upr), alpha=0.3)#
#
# Plotting the Effects#
pdf("figures/gam1_influence_in_time.pdf", width= 13, height = 8.5)#
#
ggplot(data.graph[!data.graph$group %in% c("BETULA", "CARYA", "FAGR", "FRAX", "SAAL"),]) + facet_grid(group~Site) +#
	scale_x_continuous(expand=c(0,0), name="Year") +#
	scale_y_continuous(expand=c(0,0), name="Effect on RW (in mm)") +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_line(aes(x=Year, y=fit.tmean), size=2, color="red") +#
	geom_line(aes(x=Year, y=fit.precip), size=2, color="blue") +#
	geom_line(aes(x=Year, y=fit.dbh.recon), size=2, color="green")#
dev.off()#
#
#------------------------------------#
# Just MMF and Harvard#
summary(data.graph)#
sites.use2 <- c("Harvard", "Morgan Monroe State Park")#
#
pdf("figures/gam1_Species_BAI_limiting_factor_ameridendro.pdf", width= 13, height = 8.5)#
ggplot(data.graph[data.graph$Site %in% sites.use2,]) + facet_grid(group~Site) +#
	scale_x_continuous(expand=c(0,0), name="Year") +#
	scale_y_continuous(expand=c(0,0), name="BAI") +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_line(aes(x=Year, y=BA.inc), size=2, alpha=0.5) +#
	geom_ribbon(aes(x=Year, ymin=BA.inc.lwr, ymax=BA.inc.upr), alpha=0.3) +#
	geom_line(aes(x=Year, y = 0), linetype="dashed") +#
	plot.rgb("Harvard", "ACRU", 3) +#
	plot.rgb("Harvard", "PIST", 3) +#
	plot.rgb("Harvard", "TSCA", 3) +#
	plot.rgb("Harvard", "QURU", 3) +#
	plot.rgb("Harvard", "QUVE", 3) +#
	plot.rgb("Harvard", "FRAX", 3) +#
	plot.rgb("Harvard", "BETULA", 3) +#
	plot.rgb("Harvard", "ACSA", 3) +#
	plot.rgb("Harvard", "QUAL", 3) +#
	plot.rgb("Harvard", "FAGR", 3) +#
	plot.rgb("Harvard", "ULRU", 3) +#
	plot.rgb("Harvard", "CARYA", 3) +#
	plot.rgb("Harvard", "SAAL", 3) +#
	plot.rgb("Morgan Monroe State Park", "ACRU", 3) +#
	plot.rgb("Morgan Monroe State Park", "PIST", 3) +#
	plot.rgb("Morgan Monroe State Park", "TSCA", 3) +#
	plot.rgb("Morgan Monroe State Park", "QURU", 3) +#
	plot.rgb("Morgan Monroe State Park", "QUVE", 3) +#
	plot.rgb("Morgan Monroe State Park", "FRAX", 3) +#
	plot.rgb("Morgan Monroe State Park", "BETULA", 3) +#
	plot.rgb("Morgan Monroe State Park", "ACSA", 3) +#
	plot.rgb("Morgan Monroe State Park", "QUAL", 3) +#
	plot.rgb("Morgan Monroe State Park", "FAGR", 3) +#
	plot.rgb("Morgan Monroe State Park", "ULRU", 3) +#
	plot.rgb("Morgan Monroe State Park", "CARYA", 3) +#
	plot.rgb("Morgan Monroe State Park", "SAAL", 3) +#
	poster.theme2#
dev.off()#
# Just plotting the BAI fits#
summary(data.graph)#
ggplot(data.graph[data.graph$Site %in% sites.use2,]) + facet_wrap(group~Site) +#
  scale_x_continuous(expand=c(0,0), name="Year") +#
  scale_y_continuous(expand=c(0,0), name="BAI") +#
  # facet_wrap(~TreeID, scales="free_y", space="free") +#
  # geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
  geom_line(aes(x=Year, y=fit.full), size=2, alpha=0.5) +#
  geom_ribbon(aes(x=Year, ymin=fit.full.lwr, ymax=fit.full.upr), alpha=0.3)#
#
# Plotting the Effects#
pdf("figures/gam1_influence_in_time_ameridendro.pdf", width= 13, height = 8.5)#
#
ggplot(data.graph[data.graph$Site %in% sites.use2,]) + facet_grid(group~Site) +#
	scale_x_continuous(expand=c(0,0), name="Year") +#
	scale_y_continuous(expand=c(0,0), name="Effect on RW (in mm)") +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_line(aes(x=Year, y=fit.tmean), size=2, color="red") +#
	geom_line(aes(x=Year, y=fit.precip), size=2, color="blue") +#
	geom_line(aes(x=Year, y=fit.dbh.recon), size=2, color="green")+ #
	poster.theme2#
dev.off()
summary(data.graph)
ggplot(data.graph[data.graph$Site %in% sites.use2,]) + facet_grid(group~Site) +#
	scale_x_continuous(expand=c(0,0), name="Year") +#
	scale_y_continuous(expand=c(0,0), name="Effect on RW (in mm)") +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_line(aes(x=Year, y=fit.tmean), size=1, color="red") +#
	geom_line(aes(x=Year, y=fit.precip), size=1, color="blue") +#
	geom_line(aes(x=Year, y=fit.dbh.recon), size=1, color="green")+ #
	poster.theme2
ggplot(data.graph[!data.graph$group %in% c("BETULA", "CARYA", "FAGR", "FRAX", "SAAL"),]) + facet_grid(group~Site) +#
	scale_x_continuous(expand=c(0,0), name="Year") +#
	scale_y_continuous(expand=c(0,0), name="Effect on RW (in mm)") +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_line(aes(x=Year, y=fit.tmean), size=1, color="red") +#
	geom_line(aes(x=Year, y=fit.precip), size=1, color="blue") +#
	geom_line(aes(x=Year, y=fit.dbh.recon), size=1, color="green")
ggplot(data.graph[!data.graph$group %in% c("BETULA", "CARYA", "FAGR", "FRAX", "SAAL"),]) + facet_grid(group~Site) +#
	scale_x_continuous(expand=c(0,0), name="Year") +#
	scale_y_continuous(expand=c(0,0), name="Effect on RW (in mm)") +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_line(aes(x=Year, y=fit.tmean), size=1, color="red") +#
	geom_line(aes(x=Year, y=fit.precip), size=1, color="blue") +#
	geom_line(aes(x=Year, y=fit.dbh.recon), size=1, color="green")+#
	ylim(c(0,4))
ggplot(data.graph[!data.graph$group %in% c("BETULA", "CARYA", "FAGR", "FRAX", "SAAL"),]) + facet_grid(group~Site) +#
	scale_x_continuous(expand=c(0,0), name="Year") +#
	scale_y_continuous(expand=c(0,0), name="Effect on RW (in mm)") +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_line(aes(x=Year, y=fit.tmean), size=1, color="red") +#
	geom_line(aes(x=Year, y=fit.precip), size=1, color="blue") +#
	geom_line(aes(x=Year, y=fit.dbh.recon), size=1, color="green")+#
	ylim(c(0,3))
summary(data.graph)
data.graph$State <- factor(data.graph$State, levels=c("MO", "IN", "OH", "MA", "ME"))
ggplot(data.graph[!data.graph$group %in% c("BETULA", "CARYA", "FAGR", "FRAX", "SAAL"),]) + facet_grid(group~Site) +#
	scale_x_continuous(expand=c(0,0), name="Year") +#
	scale_y_continuous(expand=c(0,0), name="Effect on RW (in mm)") +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_line(aes(x=Year, y=fit.tmean), size=1, color="red") +#
	geom_line(aes(x=Year, y=fit.precip), size=1, color="blue") +#
	geom_line(aes(x=Year, y=fit.dbh.recon), size=1, color="green")+#
	ylim(c(0,3))
ggplot(data.graph[!data.graph$group %in% c("BETULA", "CARYA", "FAGR", "FRAX", "SAAL"),]) + facet_grid(group~State) +#
	scale_x_continuous(expand=c(0,0), name="Year") +#
	scale_y_continuous(expand=c(0,0), name="Effect on RW (in mm)") +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_line(aes(x=Year, y=fit.tmean), size=1, color="red") +#
	geom_line(aes(x=Year, y=fit.precip), size=1, color="blue") +#
	geom_line(aes(x=Year, y=fit.dbh.recon), size=1, color="green")+#
	ylim(c(0,3))
pdf("figures/gam1_influence_in_time.pdf", width= 13, height = 8.5)#
#
ggplot(data.graph[!data.graph$group %in% c("BETULA", "CARYA", "FAGR", "FRAX", "SAAL"),]) + facet_grid(group~State) +#
	scale_x_continuous(expand=c(0,0), name="Year") +#
	scale_y_continuous(expand=c(0,0), name="Effect on RW (in mm)") +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_line(aes(x=Year, y=fit.tmean), size=1, color="red") +#
	geom_line(aes(x=Year, y=fit.precip), size=1, color="blue") +#
	geom_line(aes(x=Year, y=fit.dbh.recon), size=1, color="green")+#
	ylim(c(0,3))#
dev.off()
library(ggplot2)#
#
load(file="processed_data/gamm_weights/gam2_weights.Rdata")#
#
summary(gam2.weights)#
factors.fits <- c("fit.tmean", "fit.precip", "fit.dbh.recon", "fit.full", "BA.inc")#
factors.weights <- c("weight.tmean", "weight.dbh.recon", "weight.precip")#
#
# Transforming things back to BA.inc rather than log#
gam2.weights[,which(substr(names(gam2.weights),1,3)=="fit")] <- exp(gam2.weights[,which(substr(names(gam2.weights),1,3)=="fit")] )#
othervars <- c("Year", "Site", "Canopy.Class", "Model")#
#
data.graph1 <- aggregate(gam2.weights[,factors.fits], by = gam2.weights[,othervars], FUN= mean, na.rm=T)#
#
data.graph1[,paste(factors.fits, "upr", sep=".")] <- aggregate(gam2.weights[,factors.fits], by = gam2.weights[,othervars], FUN= quantile, prob= 0.975, na.rm=T)[,factors.fits]#
#
data.graph1[,paste(factors.fits, "lwr", sep=".")] <- aggregate(gam2.weights[,factors.fits], by = gam2.weights[,othervars], FUN= quantile, prob= 0.025, na.rm=T)[,factors.fits]#
#
summary(data.graph1)#
#
data.graph2 <- aggregate(abs(gam2.weights[,factors.weights]), by = gam2.weights[,othervars], FUN= mean, na.rm=T)#
#
data.graph2[,paste(factors.weights, "upr", sep=".")] <- aggregate(abs(gam2.weights[,factors.weights]), by = gam2.weights[,othervars], FUN= quantile, prob= 0.975, na.rm=T)[,factors.weights]#
#
data.graph2[,paste(factors.weights, "lwr", sep=".")] <- aggregate(abs(gam2.weights[,factors.weights]), by = gam2.weights[,othervars], FUN= quantile, prob= 0.025, na.rm=T)[,factors.weights]#
#
summary(data.graph2)#
#
data.graph <- merge(data.graph1, data.graph2, all.x=T, all.y=T)#
#
# data.graph <- gam2.weights[gam2.weights$TreeID== "MMA014",]#
summary(data.graph)#
gam2.weights$wts.check <- rowSums(abs(gam2.weights[,c("weight.tmean", "weight.precip", "weight.dbh.recon")]))#
data.graph$wts.check <- rowSums(abs(data.graph[,c("weight.tmean", "weight.precip", "weight.dbh.recon")]))#
#
summary(gam2.weights)#
summary(data.graph)#
#
# Ordering the data for graphing#
#
data.graph<- data.graph[order(data.graph$Year, data.graph$Canopy.Class, data.graph$Site, decreasing=F),]#
plot.rgb <- function(STATE, CC, SIZE){	geom_line(data=data.graph[data.graph$State==STATE & data.graph$Canopy.Class==CC,],aes(x=Year, y=fit.full), size=SIZE,#
  		        color=rgb(abs(data.graph[data.graph$State==STATE & data.graph$Canopy.Class==CC,"weight.tmean"     ]), # red#
                        abs(data.graph[data.graph$State==STATE & data.graph$Canopy.Class==CC,"weight.dbh.recon"     ]), # green#
                        abs(data.graph[data.graph$State==STATE & data.graph$Canopy.Class==CC,"weight.precip"   ]))) }   # blue#
# Plotting the Obs and modeled with influence coloring#
data.graph$State <- recode(data.graph$Site, "'Howland' = 'ME';'Harvard' = 'MA';'Morgan Monroe State Park' = 'IN';'Missouri Ozark' = 'MO';'Oak Openings Toledo' = 'OH'")#
data.graph$State <- factor(data.graph$State, levels=c("MO", "IN", "OH", "MA", "ME"))#
#
# Plotting the Obs and modeled with influence coloring#
pdf("figures/gam2_canopyclass_BAI_limiting_factors.pdf", width= 13, height = 8.5)#
ggplot(data.graph) + facet_grid(Canopy.Class~State) +#
	scale_x_continuous(expand=c(0,0)) +#
	scale_y_continuous(expand=c(0,0)) +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_line(aes(x=Year, y=BA.inc), size=2, alpha=0.5) +#
	geom_ribbon(aes(x=Year, ymin=BA.inc.lwr, ymax=BA.inc.upr), alpha=0.3) +#
	geom_line(aes(x=Year, y = 0), linetype="dashed") +#
	plot.rgb("MA", "C", 3) +#
	plot.rgb("MA", "D", 3) +#
	plot.rgb("MA", "I", 3) +#
	plot.rgb("MA", "S", 3) +#
	plot.rgb("ME", "C", 3) +#
	plot.rgb("ME", "D", 3) +#
	plot.rgb("ME", "I", 3) +#
	plot.rgb("ME", "S", 3) +#
	plot.rgb("MO", "C", 3) +#
	plot.rgb("MO", "D", 3) +#
	plot.rgb("MO", "I", 3) +#
	plot.rgb("MO", "S", 3) +#
	plot.rgb("IN", "C", 3) +#
	plot.rgb("IN", "D", 3) +#
	plot.rgb("IN", "I", 3) +#
	plot.rgb("IN", "S", 3) +#
	plot.rgb("OH", "C", 3) +#
	plot.rgb("OH", "D", 3) +#
	plot.rgb("OH", "I", 3) +#
	plot.rgb("OH", "S", 3)+#
	labs(title= "Canopy Class", x="Year", y = expression(bold(paste("BAI (mm"^"2", "y"^"-1",")")))) +#
	poster.theme2#
dev.off()		#
# Just plotting the BAI fits#
summary(data.graph)#
#
ggplot(data.graph) + facet_wrap(group~Site) +#
  scale_x_continuous(expand=c(0,0), name="Year") +#
  scale_y_continuous(expand=c(0,0), name="BAI") +#
  # facet_wrap(~TreeID, scales="free_y", space="free") +#
  # geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
  geom_line(aes(x=Year, y=fit.full), size=2, alpha=0.5) +#
  geom_ribbon(aes(x=Year, ymin=fit.full.lwr, ymax=fit.full.upr), alpha=0.3)#
#
# Plotting the Effects#
#
pdf("figures/gam2_influence_in_time.pdf", width= 13, height = 8.5)#
ggplot(data.graph) + facet_grid(Canopy.Class~Site) +#
	scale_x_continuous(expand=c(0,0), name="Year") +#
	scale_y_continuous(expand=c(0,0), name="Effect on RW (in mm)") +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_line(aes(x=Year, y=fit.tmean), size=2, color="red") +#
	geom_line(aes(x=Year, y=fit.precip), size=2, color="blue") +#
	geom_line(aes(x=Year, y=fit.dbh.recon), size=2, color="green")#
dev.off()	#
#---------------------------------------------------#
# Plotting just MMF and Harvard for Ameridendro#
#
sites.use2 <- c("Harvard", "Morgan Monroe State Park")#
#
# Plotting the Obs and modeled with influence coloring#
pdf("figures/gam2_canopyclass_BAI_limiting_factors_ameridendro.pdf", width= 13, height = 8.5)#
ggplot(data.graph[data.graph$Site %in% sites.use2,]) + facet_grid(Canopy.Class~Site) +#
	scale_x_continuous(expand=c(0,0), name="Year") +#
	scale_y_continuous(expand=c(0,0), name="BAI") +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_line(aes(x=Year, y=BA.inc), size=2, alpha=0.5) +#
	geom_ribbon(aes(x=Year, ymin=BA.inc.lwr, ymax=BA.inc.upr), alpha=0.3) +#
	geom_line(aes(x=Year, y = 0), linetype="dashed") +#
	plot.rgb("Harvard", "C", 3) +#
	plot.rgb("Harvard", "D", 3) +#
	plot.rgb("Harvard", "I", 3) +#
	plot.rgb("Harvard", "S", 3) +#
	plot.rgb("Morgan Monroe State Park", "C", 3) +#
	plot.rgb("Morgan Monroe State Park", "D", 3) +#
	plot.rgb("Morgan Monroe State Park", "I", 3) +#
	plot.rgb("Morgan Monroe State Park", "S", 3) +#
	poster.theme2#
dev.off()		#
# Just plotting the BAI fits#
summary(data.graph)#
#
ggplot(data.graph) + facet_wrap(group~Site) +#
  scale_x_continuous(expand=c(0,0), name="Year") +#
  scale_y_continuous(expand=c(0,0), name="BAI") +#
  # facet_wrap(~TreeID, scales="free_y", space="free") +#
  # geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
  geom_line(aes(x=Year, y=fit.full), size=2, alpha=0.5) +#
  geom_ribbon(aes(x=Year, ymin=fit.full.lwr, ymax=fit.full.upr), alpha=0.3)#
#
# Plotting the Effects#
#
pdf("figures/gam2_influence_in_time_ameridendro.pdf", width= 13, height = 8.5)#
ggplot(data.graph[data.graph$Site %in% sites.use2,]) + facet_grid(Canopy.Class~Site) +#
	scale_x_continuous(expand=c(0,0), name="Year") +#
	scale_y_continuous(expand=c(0,0), name="Effect on RW (in mm)") +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_line(aes(x=Year, y=fit.tmean), size=2, color="red") +#
	geom_line(aes(x=Year, y=fit.precip), size=2, color="blue") +#
	geom_line(aes(x=Year, y=fit.dbh.recon), size=2, color="green") +#
	poster.theme2#
dev.off()
ggplot(data.graph) + facet_grid(Canopy.Class~Site) +#
	scale_x_continuous(expand=c(0,0), name="Year") +#
	scale_y_continuous(expand=c(0,0), name="Effect on RW (in mm)") +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_line(aes(x=Year, y=fit.tmean), size=2, color="red") +#
	geom_line(aes(x=Year, y=fit.precip), size=2, color="blue") +#
	geom_line(aes(x=Year, y=fit.dbh.recon), size=2, color="green")+#
	ylim(c(0,3))
ggplot(data.graph) + facet_grid(Canopy.Class~Site) +#
	scale_x_continuous(expand=c(0,0), name="Year") +#
	scale_y_continuous(expand=c(0,0), name="Effect on RW (in mm)") +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_line(aes(x=Year, y=fit.tmean), size=1, color="red") +#
	geom_line(aes(x=Year, y=fit.precip), size=1, color="blue") +#
	geom_line(aes(x=Year, y=fit.dbh.recon), size=1, color="green")+#
	ylim(c(0,3))
data.graph$State <- factor(data.graph$State, levels=c("MO", "IN", "OH", "MA", "ME"))
ggplot(data.graph) + facet_grid(Canopy.Class~State) +#
	scale_x_continuous(expand=c(0,0), name="Year") +#
	scale_y_continuous(expand=c(0,0), name="Effect on RW (in mm)") +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_line(aes(x=Year, y=fit.tmean), size=1, color="red") +#
	geom_line(aes(x=Year, y=fit.precip), size=1, color="blue") +#
	geom_line(aes(x=Year, y=fit.dbh.recon), size=1, color="green")+#
	ylim(c(0,3))
pdf("figures/gam2_influence_in_time.pdf", width= 13, height = 8.5)#
ggplot(data.graph) + facet_grid(Canopy.Class~State) +#
	scale_x_continuous(expand=c(0,0), name="Year") +#
	scale_y_continuous(expand=c(0,0), name="Effect on RW (in mm)") +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_line(aes(x=Year, y=fit.tmean), size=1, color="red") +#
	geom_line(aes(x=Year, y=fit.precip), size=1, color="blue") +#
	geom_line(aes(x=Year, y=fit.dbh.recon), size=1, color="green")+#
	ylim(c(0,3))#
dev.off()
ggplot(data.graph[data.graph$Canopy.Class=="D" & !data.graph$group.cc %in% c("BETULA.D", "CARYA.D", "FAGR.D", "FRAX.D", "SAAL.D"),]) + facet_grid(group~State) +#
	scale_x_continuous(expand=c(0,0), name="Year") +#
	scale_y_continuous(expand=c(0,0), name="Effect on RW (in mm)") +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	#geom_ribbon(aes(x=Year, ymin=fit.dbh.recon.lwr, ymax=fit.dbh.recon.upr), alpha=0.4, fill="green")+#
	geom_line(aes(x=Year, y=fit.tmean), size=1, color="red") +#
	geom_line(aes(x=Year, y=fit.precip), size=1, color="blue") +#
	geom_line(aes(x=Year, y=fit.dbh.recon), size=1, color="green")+#
	ylim(c(0,3)) +#
	labs(title= "Dominant Effects (group.cc)")
library(ggplot2)#
library(stringr)#
load(file="processed_data/gamm_weights/gam3_weights.Rdata")#
#
summary(gam3.weights)#
factors.fits <- c("fit.tmean", "fit.precip", "fit.dbh.recon", "fit.full", "BA.inc")#
factors.weights <- c("weight.tmean", "weight.dbh.recon", "weight.precip")#
#
# Transforming things back to BA.inc rather than log#
gam3.weights[,which(substr(names(gam3.weights),1,3)=="fit")] <- exp(gam3.weights[,which(substr(names(gam3.weights),1,3)=="fit")] )#
othervars <- c("Year", "Site", "group.cc", "Model")#
#
data.graph1 <- aggregate(gam3.weights[,factors.fits], by = gam3.weights[,othervars], FUN= mean, na.rm=T)#
#
data.graph1[,paste(factors.fits, "upr", sep=".")] <- aggregate(gam3.weights[,factors.fits], by = gam3.weights[,othervars], FUN= quantile, prob= 0.975, na.rm=T)[,factors.fits]#
#
data.graph1[,paste(factors.fits, "lwr", sep=".")] <- aggregate(gam3.weights[,factors.fits], by = gam3.weights[,othervars], FUN= quantile, prob= 0.025, na.rm=T)[,factors.fits]#
#
summary(data.graph1)#
#
data.graph2 <- aggregate(abs(gam3.weights[,factors.weights]), by = gam3.weights[,othervars], FUN= mean, na.rm=T)#
#
data.graph2[,paste(factors.weights, "upr", sep=".")] <- aggregate(abs(gam3.weights[,factors.weights]), by = gam3.weights[,othervars], FUN= quantile, prob= 0.975, na.rm=T)[,factors.weights]#
#
data.graph2[,paste(factors.weights, "lwr", sep=".")] <- aggregate(abs(gam3.weights[,factors.weights]), by = gam3.weights[,othervars], FUN= quantile, prob= 0.025, na.rm=T)[,factors.weights]#
#
summary(data.graph2)#
#
data.graph <- merge(data.graph1, data.graph2, all.x=T, all.y=T)#
#
# data.graph <- gam3.weights[gam3.weights$TreeID== "MMA014",]#
summary(data.graph)#
gam3.weights$wts.check <- rowSums(abs(gam3.weights[,c("weight.tmean", "weight.precip", "weight.dbh.recon")]))#
data.graph$wts.check <- rowSums(abs(data.graph[,c("weight.tmean", "weight.precip", "weight.dbh.recon")]))#
#
summary(gam3.weights)#
summary(data.graph)#
#
# Ordering the data for graphing#
#
data.graph<- data.graph[order(data.graph$Year, data.graph$group.cc, data.graph$Site, decreasing=F),]#
plot.rgb <- function(STATE, GC, SIZE){	geom_line(data=data.graph[data.graph$State==STATE & data.graph$group.cc==GC,],aes(x=Year, y=fit.full), size=SIZE,#
  		        color=rgb(abs(data.graph[data.graph$State==STATE & data.graph$group.cc==GC,"weight.tmean"     ]), # red#
                        abs(data.graph[data.graph$State==STATE & data.graph$group.cc==GC,"weight.dbh.recon"     ]), # green#
                        abs(data.graph[data.graph$State==STATE & data.graph$group.cc==GC,"weight.precip"   ]))) }   # blue#
# Plotting the Obs and modeled with influence coloring#
data.graph$State <- recode(data.graph$Site, "'Howland' = 'ME';'Harvard' = 'MA';'Morgan Monroe State Park' = 'IN';'Missouri Ozark' = 'MO';'Oak Openings Toledo' = 'OH'")#
data.graph$State <- factor(data.graph$State, levels=c("MO", "IN", "OH", "MA", "ME"))#
#
for(i in unique(data.graph$group.cc)){#
	data.graph[data.graph$group.cc==i,"Canopy.Class"] <- str_sub(data.graph[data.graph$group.cc==i,"group.cc"], -1)#
	data.graph[data.graph$group.cc==i,"group"] <- substr(data.graph[data.graph$group.cc==i,"group.cc"], 1,4)#
}#
data.graph$Canopy.Class <- as.factor(data.graph$Canopy.Class)#
data.graph$group <- as.factor(data.graph$group)#
summary(data.graph)#
# Plotting the Obs and modeled with influence coloring#
pdf("figures/gam3/gam3_SPP_CC_BAI_limiting_factors_All.pdf", width= 13, height = 8.5)#
ggplot(data = data.graph[!data.graph$group.cc %in% c("BETULA.D", "CARYA.D", "FAGR.D", "FRAX.D", "SAAL.D",#
	"BETULA.I", "CARYA.I", "FAGR.I", "FRAX.I", "SAAL.I",#
	"BETULA.S", "CARYA.S", "FAGR.S", "FRAX.S", "SAAL.S"),]) + #
	facet_grid(group.cc ~ State) +#
	scale_x_continuous(expand=c(0,0), name="Year") +#
	scale_y_continuous(expand=c(0,0), name="BAI") +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_line(aes(x=Year, y=BA.inc), size=2, alpha=0.5) +#
	geom_ribbon(aes(x=Year, ymin=BA.inc.lwr, ymax=BA.inc.upr), alpha=0.3) +#
	geom_line(aes(x=Year, y = 0), linetype="dashed") +#
	# Harvard#
	plot.rgb("MA", "ACRU.C", 3) +#
	plot.rgb("MA", "ACRU.D", 3) +#
	plot.rgb("MA", "ACRU.I", 3) +#
	plot.rgb("MA", "ACRU.S", 3) +#
	plot.rgb("MA", "PIST.C", 3) +#
	plot.rgb("MA", "PIST.D", 3) +#
	plot.rgb("MA", "PIST.I", 3) +#
	plot.rgb("MA", "PIST.S", 3) +#
#
	plot.rgb("MA", "TSCA.C", 3) +#
	plot.rgb("MA", "TSCA.D", 3) +#
	plot.rgb("MA", "TSCA.I", 3) +#
	plot.rgb("MA", "TSCA.S", 3) +#
	plot.rgb("MA", "QURU.C", 3) +#
	plot.rgb("MA", "QURU.D", 3) +#
	plot.rgb("MA", "QURU.I", 3) +#
	plot.rgb("MA", "QURU.S", 3) +#
	plot.rgb("MA", "QUVE.C", 3) +#
	plot.rgb("MA", "QUVE.D", 3) +#
	plot.rgb("MA", "QUVE.I", 3) +#
	plot.rgb("MA", "QUVE.S", 3) +#
	# plot.rgb("MA", "FRAX.C", 3) +#
	# plot.rgb("MA", "FRAX.D", 3) +#
	# plot.rgb("MA", "FRAX.I", 3) +#
	# plot.rgb("MA", "FRAX.S", 3) +#
#
	# plot.rgb("MA", "BETULA.C", 3) +#
	# plot.rgb("MA", "BETULA.D", 3) +#
	# plot.rgb("MA", "BETULA.I", 3) +#
	# plot.rgb("MA", "BETULA.S", 3) +#
	plot.rgb("MA", "ACSA.C", 3) +#
	plot.rgb("MA", "ACSA.D", 3) +#
	plot.rgb("MA", "ACSA.I", 3) +#
	plot.rgb("MA", "ACSA.S", 3) +#
	plot.rgb("MA", "QUAL.C", 3) +#
	plot.rgb("MA", "QUAL.D", 3) +#
	plot.rgb("MA", "QUAL.I", 3) +#
	plot.rgb("MA", "QUAL.S", 3) +#
	# plot.rgb("MA", "FAGR.C", 3) +#
	# plot.rgb("MA", "FAGR.D", 3) +#
	# plot.rgb("MA", "FAGR.I", 3) +#
	# plot.rgb("MA", "FAGR.S", 3) +#
	plot.rgb("MA", "ULRU.C", 3) +#
	plot.rgb("MA", "ULRU.D", 3) +#
	plot.rgb("MA", "ULRU.I", 3) +#
	plot.rgb("MA", "ULRU.S", 3) +#
	# plot.rgb("MA", "CARYA.C", 3) +#
	# plot.rgb("MA", "CARYA.D", 3) +#
	# plot.rgb("MA", "CARYA.I", 3) +#
	# plot.rgb("MA", "CARYA.S", 3) +#
#
	# plot.rgb("MA", "SAAL.C", 3) +#
	# plot.rgb("MA", "SAAL.D", 3) +#
	# plot.rgb("MA", "SAAL.I", 3) +#
	# plot.rgb("MA", "SAAL.S", 3) +#
#
	# Howland#
		plot.rgb("ME", "ACRU.C", 3) +#
	plot.rgb("ME", "ACRU.D", 3) +#
	plot.rgb("ME", "ACRU.I", 3) +#
	plot.rgb("ME", "ACRU.S", 3) +#
	plot.rgb("ME", "PIST.C", 3) +#
	plot.rgb("ME", "PIST.D", 3) +#
	plot.rgb("ME", "PIST.I", 3) +#
	plot.rgb("ME", "PIST.S", 3) +#
#
	plot.rgb("ME", "TSCA.C", 3) +#
	plot.rgb("ME", "TSCA.D", 3) +#
	plot.rgb("ME", "TSCA.I", 3) +#
	plot.rgb("ME", "TSCA.S", 3) +#
	plot.rgb("ME", "QURU.C", 3) +#
	plot.rgb("ME", "QURU.D", 3) +#
	plot.rgb("ME", "QURU.I", 3) +#
	plot.rgb("ME", "QURU.S", 3) +#
	plot.rgb("ME", "QUVE.C", 3) +#
	plot.rgb("ME", "QUVE.D", 3) +#
	plot.rgb("ME", "QUVE.I", 3) +#
	plot.rgb("ME", "QUVE.S", 3) +#
	# plot.rgb("ME", "FRAX.C", 3) +#
	# plot.rgb("ME", "FRAX.D", 3) +#
	# plot.rgb("ME", "FRAX.I", 3) +#
	# plot.rgb("ME", "FRAX.S", 3) +#
#
	# plot.rgb("ME", "BETULA.C", 3) +#
	# plot.rgb("ME", "BETULA.D", 3) +#
	# plot.rgb("ME", "BETULA.I", 3) +#
	# plot.rgb("ME", "BETULA.S", 3) +#
	plot.rgb("ME", "ACSA.C", 3) +#
	plot.rgb("ME", "ACSA.D", 3) +#
	plot.rgb("ME", "ACSA.I", 3) +#
	plot.rgb("ME", "ACSA.S", 3) +#
	plot.rgb("ME", "QUAL.C", 3) +#
	plot.rgb("ME", "QUAL.D", 3) +#
	plot.rgb("ME", "QUAL.I", 3) +#
	plot.rgb("ME", "QUAL.S", 3) +#
	# plot.rgb("ME", "FAGR.C", 3) +#
	# plot.rgb("ME", "FAGR.D", 3) +#
	# plot.rgb("ME", "FAGR.I", 3) +#
	# plot.rgb("ME", "FAGR.S", 3) +#
	plot.rgb("ME", "ULRU.C", 3) +#
	plot.rgb("ME", "ULRU.D", 3) +#
	plot.rgb("ME", "ULRU.I", 3) +#
	plot.rgb("ME", "ULRU.S", 3) +#
	# plot.rgb("ME", "CARYA.C", 3) +#
	# plot.rgb("ME", "CARYA.D", 3) +#
	# plot.rgb("ME", "CARYA.I", 3) +#
	# plot.rgb("ME", "CARYA.S", 3) +#
#
	# plot.rgb("ME", "SAAL.C", 3) +#
	# plot.rgb("ME", "SAAL.D", 3) +#
	# plot.rgb("ME", "SAAL.I", 3) +#
	# plot.rgb("ME", "SAAL.S", 3) +#
	# Morgan Monroe#
	plot.rgb("IN", "ACRU.C", 3) +#
	plot.rgb("IN", "ACRU.D", 3) +#
	plot.rgb("IN", "ACRU.I", 3) +#
	plot.rgb("IN", "ACRU.S", 3) +#
	plot.rgb("IN", "PIST.C", 3) +#
	plot.rgb("IN", "PIST.D", 3) +#
	plot.rgb("IN", "PIST.I", 3) +#
	plot.rgb("IN", "PIST.S", 3) +#
#
	plot.rgb("IN", "TSCA.C", 3) +#
	plot.rgb("IN", "TSCA.D", 3) +#
	plot.rgb("IN", "TSCA.I", 3) +#
	plot.rgb("IN", "TSCA.S", 3) +#
	plot.rgb("IN", "QURU.C", 3) +#
	plot.rgb("IN", "QURU.D", 3) +#
	plot.rgb("IN", "QURU.I", 3) +#
	plot.rgb("IN", "QURU.S", 3) +#
	plot.rgb("IN", "QUVE.C", 3) +#
	plot.rgb("IN", "QUVE.D", 3) +#
	plot.rgb("IN", "QUVE.I", 3) +#
	plot.rgb("IN", "QUVE.S", 3) +#
	# plot.rgb("IN", "FRAX.C", 3) +#
	# plot.rgb("IN", "FRAX.D", 3) +#
	# plot.rgb("IN", "FRAX.I", 3) +#
	# plot.rgb("IN", "FRAX.S", 3) +#
#
	# plot.rgb("IN", "BETULA.C", 3) +#
	# plot.rgb("IN", "BETULA.D", 3) +#
	# plot.rgb("IN", "BETULA.I", 3) +#
	# plot.rgb("IN", "BETULA.S", 3) +#
	plot.rgb("IN", "ACSA.C", 3) +#
	plot.rgb("IN", "ACSA.D", 3) +#
	plot.rgb("IN", "ACSA.I", 3) +#
	plot.rgb("IN", "ACSA.S", 3) +#
	plot.rgb("IN", "QUAL.C", 3) +#
	plot.rgb("IN", "QUAL.D", 3) +#
	plot.rgb("IN", "QUAL.I", 3) +#
	plot.rgb("IN", "QUAL.S", 3) +#
	# plot.rgb("IN", "FAGR.C", 3) +#
	# plot.rgb("IN", "FAGR.D", 3) +#
	# plot.rgb("IN", "FAGR.I", 3) +#
	# plot.rgb("IN", "FAGR.S", 3) +#
	plot.rgb("IN", "ULRU.C", 3) +#
	plot.rgb("IN", "ULRU.D", 3) +#
	plot.rgb("IN", "ULRU.I", 3) +#
	plot.rgb("IN", "ULRU.S", 3) +#
	# plot.rgb("IN", "CARYA.C", 3) +#
	# plot.rgb("IN", "CARYA.D", 3) +#
	# plot.rgb("IN", "CARYA.I", 3) +#
	# plot.rgb("IN", "CARYA.S", 3) +#
#
	# plot.rgb("IN", "SAAL.C", 3) +#
	# plot.rgb("IN", "SAAL.D", 3) +#
	# plot.rgb("IN", "SAAL.I", 3) +#
	# plot.rgb("IN", "SAAL.S", 3) +#
	# Missouri Ozark#
		plot.rgb("MO", "ACRU.C", 3) +#
	plot.rgb("MO", "ACRU.D", 3) +#
	plot.rgb("MO", "ACRU.I", 3) +#
	plot.rgb("MO", "ACRU.S", 3) +#
	plot.rgb("MO", "PIST.C", 3) +#
	plot.rgb("MO", "PIST.D", 3) +#
	plot.rgb("MO", "PIST.I", 3) +#
	plot.rgb("MO", "PIST.S", 3) +#
#
	plot.rgb("MO", "TSCA.C", 3) +#
	plot.rgb("MO", "TSCA.D", 3) +#
	plot.rgb("MO", "TSCA.I", 3) +#
	plot.rgb("MO", "TSCA.S", 3) +#
	plot.rgb("MO", "QURU.C", 3) +#
	plot.rgb("MO", "QURU.D", 3) +#
	plot.rgb("MO", "QURU.I", 3) +#
	plot.rgb("MO", "QURU.S", 3) +#
	plot.rgb("MO", "QUVE.C", 3) +#
	plot.rgb("MO", "QUVE.D", 3) +#
	plot.rgb("MO", "QUVE.I", 3) +#
	plot.rgb("MO", "QUVE.S", 3) +#
	# plot.rgb("MO", "FRAX.C", 3) +#
	# plot.rgb("MO", "FRAX.D", 3) +#
	# plot.rgb("MO", "FRAX.I", 3) +#
	# plot.rgb("MO", "FRAX.S", 3) +#
#
	# plot.rgb("MO", "BETULA.C", 3) +#
	# plot.rgb("MO", "BETULA.D", 3) +#
	# plot.rgb("MO", "BETULA.I", 3) +#
	# plot.rgb("MO", "BETULA.S", 3) +#
	plot.rgb("MO", "ACSA.C", 3) +#
	plot.rgb("MO", "ACSA.D", 3) +#
	plot.rgb("MO", "ACSA.I", 3) +#
	plot.rgb("MO", "ACSA.S", 3) +#
	plot.rgb("MO", "QUAL.C", 3) +#
	plot.rgb("MO", "QUAL.D", 3) +#
	plot.rgb("MO", "QUAL.I", 3) +#
	plot.rgb("MO", "QUAL.S", 3) +#
	# plot.rgb("MO", "FAGR.C", 3) +#
	# plot.rgb("MO", "FAGR.D", 3) +#
	# plot.rgb("MO", "FAGR.I", 3) +#
	# plot.rgb("MO", "FAGR.S", 3) +#
	plot.rgb("MO", "ULRU.C", 3) +#
	plot.rgb("MO", "ULRU.D", 3) +#
	plot.rgb("MO", "ULRU.I", 3) +#
	plot.rgb("MO", "ULRU.S", 3) +#
	# plot.rgb("MO", "CARYA.C", 3) +#
	# plot.rgb("MO", "CARYA.D", 3) +#
	# plot.rgb("MO", "CARYA.I", 3) +#
	# plot.rgb("MO", "CARYA.S", 3) +#
#
	# plot.rgb("MO", "SAAL.C", 3) +#
	# plot.rgb("MO", "SAAL.D", 3) +#
	# plot.rgb("MO", "SAAL.I", 3) +#
	# plot.rgb("MO", "SAAL.S", 3) +#
	# Oak Openings#
			plot.rgb("OH", "ACRU.C", 3) +#
	plot.rgb("OH", "ACRU.D", 3) +#
	plot.rgb("OH", "ACRU.I", 3) +#
	plot.rgb("OH", "ACRU.S", 3) +#
	plot.rgb("OH", "PIST.C", 3) +#
	plot.rgb("OH", "PIST.D", 3) +#
	plot.rgb("OH", "PIST.I", 3) +#
	plot.rgb("OH", "PIST.S", 3) +#
#
	plot.rgb("OH", "TSCA.C", 3) +#
	plot.rgb("OH", "TSCA.D", 3) +#
	plot.rgb("OH", "TSCA.I", 3) +#
	plot.rgb("OH", "TSCA.S", 3) +#
	plot.rgb("OH", "QURU.C", 3) +#
	plot.rgb("OH", "QURU.D", 3) +#
	plot.rgb("OH", "QURU.I", 3) +#
	plot.rgb("OH", "QURU.S", 3) +#
	plot.rgb("OH", "QUVE.C", 3) +#
	plot.rgb("OH", "QUVE.D", 3) +#
	plot.rgb("OH", "QUVE.I", 3) +#
	plot.rgb("OH", "QUVE.S", 3) +#
	# plot.rgb("OH", "FRAX.C", 3) +#
	# plot.rgb("OH", "FRAX.D", 3) +#
	# plot.rgb("OH", "FRAX.I", 3) +#
	# plot.rgb("OH", "FRAX.S", 3) +#
#
	# plot.rgb("OH", "BETULA.C", 3) +#
	# plot.rgb("OH", "BETULA.D", 3) +#
	# plot.rgb("OH", "BETULA.I", 3) +#
	# plot.rgb("OH", "BETULA.S", 3) +#
	plot.rgb("OH", "ACSA.C", 3) +#
	plot.rgb("OH", "ACSA.D", 3) +#
	plot.rgb("OH", "ACSA.I", 3) +#
	plot.rgb("OH", "ACSA.S", 3) +#
	plot.rgb("OH", "QUAL.C", 3) +#
	plot.rgb("OH", "QUAL.D", 3) +#
	plot.rgb("OH", "QUAL.I", 3) +#
	plot.rgb("OH", "QUAL.S", 3) +#
	# plot.rgb("OH", "FAGR.C", 3) +#
	# plot.rgb("OH", "FAGR.D", 3) +#
	# plot.rgb("OH", "FAGR.I", 3) +#
	# plot.rgb("OH", "FAGR.S", 3) +#
	plot.rgb("OH", "ULRU.C", 3) +#
	plot.rgb("OH", "ULRU.D", 3) +#
	plot.rgb("OH", "ULRU.I", 3) +#
	plot.rgb("OH", "ULRU.S", 3) #+#
	# plot.rgb("OH", "CARYA.C", 3) +#
	# plot.rgb("OH", "CARYA.D", 3) +#
	# plot.rgb("OH", "CARYA.I", 3) +#
	# plot.rgb("OH", "CARYA.S", 3) +#
#
	# plot.rgb("OH", "SAAL.C", 3) +#
	# plot.rgb("OH", "SAAL.D", 3) +#
	# plot.rgb("OH", "SAAL.I", 3) +#
	# plot.rgb("OH", "SAAL.S", 3)#
dev.off()	#
# Just plotting the BAI fits#
summary(data.graph)#
ggplot(data.graph) + facet_wrap(group.cc~Site) +#
  scale_x_continuous(expand=c(0,0), name="Year") +#
  scale_y_continuous(expand=c(0,0), name="BAI") +#
  # facet_wrap(~TreeID, scales="free_y", space="free") +#
  # geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
  geom_line(aes(x=Year, y=fit.full), size=2, alpha=0.5) +#
  geom_ribbon(aes(x=Year, ymin=fit.full.lwr, ymax=fit.full.upr), alpha=0.3)#
#
# Plotting the Effects#
pdf("figures/gam3/gam3_influence_in_time_all.pdf", width= 13, height = 8.5)#
ggplot(data.graph) + facet_wrap(group.cc~State) +#
	scale_x_continuous(expand=c(0,0), name="Year") +#
	scale_y_continuous(expand=c(0,0), name="Effect on RW (in mm)") +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_line(aes(x=Year, y=fit.tmean), size=2, color="red") +#
	geom_line(aes(x=Year, y=fit.precip), size=2, color="blue") +#
	geom_line(aes(x=Year, y=fit.dbh.recon), size=2, color="green")#
dev.off()#
#########################################################################
#########################################################################
# Oaks only for Ameridendro#
pdf("figures/gam3/gam3_SPP_CC_BAI_limiting_factors_All_oaks.pdf", width= 13, height = 8.5)#
ggplot(data = data.graph[substr(data.graph$group, 1,2)=="QU",]) + facet_grid(group.cc ~ State) +#
	scale_x_continuous(expand=c(0,0), name="Year") +#
	scale_y_continuous(expand=c(0,0), name="BAI") +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_line(aes(x=Year, y=BA.inc), size=2, alpha=0.5) +#
	geom_ribbon(aes(x=Year, ymin=BA.inc.lwr, ymax=BA.inc.upr), alpha=0.3) +#
	geom_line(aes(x=Year, y = 0), linetype="dashed") +#
	# Harvard#
	plot.rgb("MA", "QURU.C", 3) +#
	plot.rgb("MA", "QURU.D", 3) +#
	plot.rgb("MA", "QURU.I", 3) +#
	plot.rgb("MA", "QURU.S", 3) +#
	plot.rgb("MA", "QUVE.C", 3) +#
	plot.rgb("MA", "QUVE.D", 3) +#
	plot.rgb("MA", "QUVE.I", 3) +#
	plot.rgb("MA", "QUVE.S", 3) +#
	plot.rgb("MA", "QUAL.C", 3) +#
	plot.rgb("MA", "QUAL.D", 3) +#
	plot.rgb("MA", "QUAL.I", 3) +#
	plot.rgb("MA", "QUAL.S", 3) +#
	# Howland#
	plot.rgb("ME", "QURU.C", 3) +#
	plot.rgb("ME", "QURU.D", 3) +#
	plot.rgb("ME", "QURU.I", 3) +#
	plot.rgb("ME", "QURU.S", 3) +#
	plot.rgb("ME", "QUVE.C", 3) +#
	plot.rgb("ME", "QUVE.D", 3) +#
	plot.rgb("ME", "QUVE.I", 3) +#
	plot.rgb("ME", "QUVE.S", 3) +#
	plot.rgb("ME", "QUAL.C", 3) +#
	plot.rgb("ME", "QUAL.D", 3) +#
	plot.rgb("ME", "QUAL.I", 3) +#
	plot.rgb("ME", "QUAL.S", 3) +#
	# Morgan Monroe#
	plot.rgb("IN", "QURU.C", 3) +#
	plot.rgb("IN", "QURU.D", 3) +#
	plot.rgb("IN", "QURU.I", 3) +#
	plot.rgb("IN", "QURU.S", 3) +#
	plot.rgb("IN", "QUVE.C", 3) +#
	plot.rgb("IN", "QUVE.D", 3) +#
	plot.rgb("IN", "QUVE.I", 3) +#
	plot.rgb("IN", "QUVE.S", 3) +#
	plot.rgb("IN", "QUAL.C", 3) +#
	plot.rgb("IN", "QUAL.D", 3) +#
	plot.rgb("IN", "QUAL.I", 3) +#
	plot.rgb("IN", "QUAL.S", 3) +#
	# Missouri Ozark#
	plot.rgb("MO", "QURU.C", 3) +#
	plot.rgb("MO", "QURU.D", 3) +#
	plot.rgb("MO", "QURU.I", 3) +#
	plot.rgb("MO", "QURU.S", 3) +#
	plot.rgb("MO", "QUVE.C", 3) +#
	plot.rgb("MO", "QUVE.D", 3) +#
	plot.rgb("MO", "QUVE.I", 3) +#
	plot.rgb("MO", "QUVE.S", 3) +#
	plot.rgb("MO", "QUAL.C", 3) +#
	plot.rgb("MO", "QUAL.D", 3) +#
	plot.rgb("MO", "QUAL.I", 3) +#
	plot.rgb("MO", "QUAL.S", 3) +#
	# Oak Openings#
	plot.rgb("OH", "QURU.C", 3) +#
	plot.rgb("OH", "QURU.D", 3) +#
	plot.rgb("OH", "QURU.I", 3) +#
	plot.rgb("OH", "QURU.S", 3) +#
	plot.rgb("OH", "QUVE.C", 3) +#
	plot.rgb("OH", "QUVE.D", 3) +#
	plot.rgb("OH", "QUVE.I", 3) +#
	plot.rgb("OH", "QUVE.S", 3) +#
	plot.rgb("OH", "QUAL.C", 3) +#
	plot.rgb("OH", "QUAL.D", 3) +#
	plot.rgb("OH", "QUAL.I", 3) +#
	plot.rgb("OH", "QUAL.S", 3) #
dev.off()	#
# Just plotting the BAI fits#
summary(data.graph)#
ggplot(data.graph) + facet_wrap(group.cc~Site) +#
  scale_x_continuous(expand=c(0,0), name="Year") +#
  scale_y_continuous(expand=c(0,0), name="BAI") +#
  # facet_wrap(~TreeID, scales="free_y", space="free") +#
  # geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
  geom_line(aes(x=Year, y=fit.full), size=2, alpha=0.5) +#
  geom_ribbon(aes(x=Year, ymin=fit.full.lwr, ymax=fit.full.upr), alpha=0.3)#
#
# Plotting the Effects#
pdf("figures/gam3/gam3_influence_in_time_all_oaks.pdf", width= 13, height = 8.5)#
ggplot(data.graph[substr(data.graph$group, 1,2)=="QU",]) + facet_grid(group.cc~State) +#
	scale_x_continuous(expand=c(0,0), name="Year") +#
	scale_y_continuous(expand=c(0,0), name="Effect on RW (in mm)") +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_line(aes(x=Year, y=fit.tmean), size=2, color="red") +#
	geom_line(aes(x=Year, y=fit.precip), size=2, color="blue") +#
	geom_line(aes(x=Year, y=fit.dbh.recon), size=2, color="green")#
dev.off()#
# Separating things out By canopy class to see things better#
#########################################################
#########################################################
# Dominant#
#########################################################
#########################################################
pdf("figures/gam3/gam3_SPP_CC_BAI_limiting_factors_D.pdf", width= 13, height = 8.5)#
ggplot(data = data.graph[data.graph$Canopy.Class=="D" & !data.graph$group.cc %in% c("BETULA.D", "CARYA.D", "FAGR.D", "FRAX.D", "SAAL.D", "ULRU.D", "ACSA.D"),]) + facet_grid(group ~ State) +#
	scale_x_continuous(expand=c(0,0)) +#
	scale_y_continuous(expand=c(0,0)) +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_line(aes(x=Year, y=BA.inc), size=2, alpha=0.5) +#
	geom_ribbon(aes(x=Year, ymin=BA.inc.lwr, ymax=BA.inc.upr), alpha=0.3) +#
	geom_line(aes(x=Year, y = 0), linetype="dashed") +#
	# Harvard#
	plot.rgb("MA", "ACRU.D", 3) +#
	plot.rgb("MA", "PIST.D", 3) +#
	plot.rgb("MA", "TSCA.D", 3) +#
	plot.rgb("MA", "QURU.D", 3) +#
	plot.rgb("MA", "QUVE.D", 3) +#
	# plot.rgb("MA", "FRAX.D", 3) +#
	# plot.rgb("MA", "BETULA.D", 3) +#
	#plot.rgb("MA", "ACSA.D", 3) +#
	plot.rgb("MA", "QUAL.D", 3) +#
	# plot.rgb("MA", "FAGR.D", 3) +#
	#plot.rgb("MA", "ULRU.D", 3) +#
	# plot.rgb("MA", "CARYA.D", 3) +#
	# plot.rgb("MA", "SAAL.D", 3) +#
	# Howland#
	plot.rgb("ME", "ACRU.D", 3) +#
	plot.rgb("ME", "PIST.D", 3) +#
	plot.rgb("ME", "TSCA.D", 3) +#
	plot.rgb("ME", "QURU.D", 3) +#
	plot.rgb("ME", "QUVE.D", 3) +#
	# plot.rgb("ME", "FRAX.D", 3) +#
	# plot.rgb("ME", "BETULA.D", 3) +#
	#plot.rgb("ME", "ACSA.D", 3) +#
	plot.rgb("ME", "QUAL.D", 3) +#
	# plot.rgb("ME", "FAGR.D", 3) +#
	#plot.rgb("ME", "ULRU.D", 3) +#
	# plot.rgb("ME", "CARYA.D", 3) +#
	# plot.rgb("ME", "SAAL.D", 3) +#
	# Morgan Monroe#
	plot.rgb("IN", "ACRU.D", 3) +#
	plot.rgb("IN", "PIST.D", 3) +#
	plot.rgb("IN", "TSCA.D", 3) +#
	plot.rgb("IN", "QURU.D", 3) +#
	plot.rgb("IN", "QUVE.D", 3) +#
	# plot.rgb("IN", "FRAX.D", 3) +#
	# plot.rgb("IN", "BETULA.D", 3) +#
	#plot.rgb("IN", "ACSA.D", 3) +#
	plot.rgb("IN", "QUAL.D", 3) +#
	# plot.rgb("IN", "FAGR.D", 3) +#
	#plot.rgb("IN", "ULRU.D", 3) +#
	# plot.rgb("IN", "CARYA.D", 3) +#
	# plot.rgb("IN", "SAAL.D", 3) +#
	# Missouri Ozark#
	plot.rgb("MO", "ACRU.D", 3) +#
	plot.rgb("MO", "PIST.D", 3) +#
	plot.rgb("MO", "TSCA.D", 3) +#
	plot.rgb("MO", "QURU.D", 3) +#
	plot.rgb("MO", "QUVE.D", 3) +#
	# plot.rgb("MO", "FRAX.D", 3) +#
	# plot.rgb("MO", "BETULA.D", 3) +#
	#plot.rgb("MO", "ACSA.D", 3) +#
	plot.rgb("MO", "QUAL.D", 3) +#
	# plot.rgb("MO", "FAGR.D", 3) +#
	#plot.rgb("MO", "ULRU.D", 3) +#
	# plot.rgb("MO", "CARYA.D", 3) +#
	# plot.rgb("MO", "SAAL.D", 3) +#
	# Oak Openings#
	plot.rgb("OH", "ACRU.D", 3) +#
	plot.rgb("OH", "PIST.D", 3) +#
	plot.rgb("OH", "TSCA.D", 3) +#
	plot.rgb("OH", "QURU.D", 3) +#
	plot.rgb("OH", "QUVE.D", 3) +#
	# plot.rgb("OH", "FRAX.D", 3) +#
	# plot.rgb("OH", "BETULA.D", 3) +#
	#plot.rgb("OH", "ACSA.D", 3) +#
	plot.rgb("OH", "QUAL.D", 3) +#
	# plot.rgb("OH", "FAGR.D", 3) +#
	#plot.rgb("OH", "ULRU.D", 3) +#
	# plot.rgb("OH", "CARYA.D", 3) +#
	# plot.rgb("OH", "SAAL.D", 3) +#
	poster.theme2 +#
	labs(title= "Dominant Trees", x="Year", y = expression(bold(paste("BAI (mm"^"2", "y"^"-1",")"))))#
dev.off()	#
# Just plotting the BAI fits#
summary(data.graph)#
ggplot(data.graph) + facet_wrap(group.cc~Site) +#
  scale_x_continuous(expand=c(0,0), name="Year") +#
  scale_y_continuous(expand=c(0,0), name="BAI") +#
  # facet_wrap(~TreeID, scales="free_y", space="free") +#
  # geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
  geom_line(aes(x=Year, y=fit.full), size=2, alpha=0.5) +#
  geom_ribbon(aes(x=Year, ymin=fit.full.lwr, ymax=fit.full.upr), alpha=0.3)
data.graph$State <- factor(data.graph$State, levels=c("MO", "IN", "OH", "MA", "ME"))
ggplot(data.graph) + facet_grid(group.cc~State) +#
  scale_x_continuous(expand=c(0,0), name="Year") +#
  scale_y_continuous(expand=c(0,0), name="BAI") +#
  # facet_wrap(~TreeID, scales="free_y", space="free") +#
  # geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
  geom_line(aes(x=Year, y=fit.full), size=2, alpha=0.5) +#
  geom_ribbon(aes(x=Year, ymin=fit.full.lwr, ymax=fit.full.upr), alpha=0.3)
ggplot(data.graph[data.graph$Canopy.Class=="D" & !data.graph$group.cc %in% c("BETULA.D", "CARYA.D", "FAGR.D", "FRAX.D", "SAAL.D"),]) + facet_grid(group.cc~State) +#
  scale_x_continuous(expand=c(0,0), name="Year") +#
  scale_y_continuous(expand=c(0,0), name="BAI") +#
  # facet_wrap(~TreeID, scales="free_y", space="free") +#
  # geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
  geom_line(aes(x=Year, y=fit.full), size=2, alpha=0.5) +#
  geom_ribbon(aes(x=Year, ymin=fit.full.lwr, ymax=fit.full.upr), alpha=0.3)
ggplot(data.graph[data.graph$Canopy.Class=="S" & !data.graph$group.cc %in% c("BETULA.S", "CARYA.S", "FAGR.S", "FRAX.S", "SAAL.S"),]) + facet_grid(group.cc~State) +#
  scale_x_continuous(expand=c(0,0), name="Year") +#
  scale_y_continuous(expand=c(0,0), name="BAI") +#
  # facet_wrap(~TreeID, scales="free_y", space="free") +#
  # geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
  geom_line(aes(x=Year, y=fit.full), size=2, alpha=0.5) +#
  geom_ribbon(aes(x=Year, ymin=fit.full.lwr, ymax=fit.full.upr), alpha=0.3)
ggplot(data.graph[data.graph$Canopy.Class=="S" & !data.graph$group.cc %in% c("BETULA.S", "CARYA.S", "FAGR.S", "FRAX.S", "SAAL.S"),]) + facet_grid(group.cc~State) +#
  scale_x_continuous(expand=c(0,0), name="Year") +#
  scale_y_continuous(expand=c(0,0), name="BAI") +#
  # facet_wrap(~TreeID, scales="free_y", space="free") +#
  # geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
  geom_line(aes(x=Year, y=fit.full), size=2, alpha=0.5) +#
  geom_ribbon(aes(x=Year, ymin=fit.full.lwr, ymax=fit.full.upr), alpha=0.3)+#
  ylim(c(-0.5,20))
ggplot(data.graph[data.graph$Canopy.Class=="S" & !data.graph$group.cc %in% c("BETULA.S", "CARYA.S", "FAGR.S", "FRAX.S", "SAAL.S"),]) + facet_grid(group~State) +#
	scale_x_continuous(expand=c(0,0), name="Year") +#
	scale_y_continuous(expand=c(0,0), name="Effect on RW (in mm)") +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_line(aes(x=Year, y=fit.tmean), size=1, color="red") +#
	geom_line(aes(x=Year, y=fit.precip), size=1, color="blue") +#
	geom_line(aes(x=Year, y=fit.dbh.recon), size=1, color="green")+#
	ylim(c(0,3)) +#
	labs(title= "Suppressed Effects (group.cc)")
gam3.data.graph <- data.graph
save(gam3.data.graph, file="processed_data/gam3_graph_data.Rdata")
library(ggplot2)#
#
load(file="processed_data/gamm_weights/gam2_weights.Rdata")#
#
summary(gam2.weights)#
factors.fits <- c("fit.tmean", "fit.precip", "fit.dbh.recon", "fit.full", "BA.inc")#
factors.weights <- c("weight.tmean", "weight.dbh.recon", "weight.precip")#
#
# Transforming things back to BA.inc rather than log#
gam2.weights[,which(substr(names(gam2.weights),1,3)=="fit")] <- exp(gam2.weights[,which(substr(names(gam2.weights),1,3)=="fit")] )#
othervars <- c("Year", "Site", "Canopy.Class", "Model")#
#
data.graph1 <- aggregate(gam2.weights[,factors.fits], by = gam2.weights[,othervars], FUN= mean, na.rm=T)#
#
data.graph1[,paste(factors.fits, "upr", sep=".")] <- aggregate(gam2.weights[,factors.fits], by = gam2.weights[,othervars], FUN= quantile, prob= 0.975, na.rm=T)[,factors.fits]#
#
data.graph1[,paste(factors.fits, "lwr", sep=".")] <- aggregate(gam2.weights[,factors.fits], by = gam2.weights[,othervars], FUN= quantile, prob= 0.025, na.rm=T)[,factors.fits]#
#
summary(data.graph1)#
#
data.graph2 <- aggregate(abs(gam2.weights[,factors.weights]), by = gam2.weights[,othervars], FUN= mean, na.rm=T)#
#
data.graph2[,paste(factors.weights, "upr", sep=".")] <- aggregate(abs(gam2.weights[,factors.weights]), by = gam2.weights[,othervars], FUN= quantile, prob= 0.975, na.rm=T)[,factors.weights]#
#
data.graph2[,paste(factors.weights, "lwr", sep=".")] <- aggregate(abs(gam2.weights[,factors.weights]), by = gam2.weights[,othervars], FUN= quantile, prob= 0.025, na.rm=T)[,factors.weights]#
#
summary(data.graph2)#
#
data.graph <- merge(data.graph1, data.graph2, all.x=T, all.y=T)#
#
# data.graph <- gam2.weights[gam2.weights$TreeID== "MMA014",]#
summary(data.graph)#
gam2.weights$wts.check <- rowSums(abs(gam2.weights[,c("weight.tmean", "weight.precip", "weight.dbh.recon")]))#
data.graph$wts.check <- rowSums(abs(data.graph[,c("weight.tmean", "weight.precip", "weight.dbh.recon")]))#
#
summary(gam2.weights)#
summary(data.graph)#
#
# Ordering the data for graphing#
#
data.graph<- data.graph[order(data.graph$Year, data.graph$Canopy.Class, data.graph$Site, decreasing=F),]#
plot.rgb <- function(STATE, CC, SIZE){	geom_line(data=data.graph[data.graph$State==STATE & data.graph$Canopy.Class==CC,],aes(x=Year, y=fit.full), size=SIZE,#
  		        color=rgb(abs(data.graph[data.graph$State==STATE & data.graph$Canopy.Class==CC,"weight.tmean"     ]), # red#
                        abs(data.graph[data.graph$State==STATE & data.graph$Canopy.Class==CC,"weight.dbh.recon"     ]), # green#
                        abs(data.graph[data.graph$State==STATE & data.graph$Canopy.Class==CC,"weight.precip"   ]))) }   # blue#
# Plotting the Obs and modeled with influence coloring#
data.graph$State <- recode(data.graph$Site, "'Howland' = 'ME';'Harvard' = 'MA';'Morgan Monroe State Park' = 'IN';'Missouri Ozark' = 'MO';'Oak Openings Toledo' = 'OH'")#
data.graph$State <- factor(data.graph$State, levels=c("MO", "IN", "OH", "MA", "ME"))#
#
# Plotting the Obs and modeled with influence coloring#
pdf("figures/gam2_canopyclass_BAI_limiting_factors.pdf", width= 13, height = 8.5)#
ggplot(data.graph) + facet_grid(Canopy.Class~State) +#
	scale_x_continuous(expand=c(0,0)) +#
	scale_y_continuous(expand=c(0,0)) +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_line(aes(x=Year, y=BA.inc), size=2, alpha=0.5) +#
	geom_ribbon(aes(x=Year, ymin=BA.inc.lwr, ymax=BA.inc.upr), alpha=0.3) +#
	geom_line(aes(x=Year, y = 0), linetype="dashed") +#
	plot.rgb("MA", "C", 3) +#
	plot.rgb("MA", "D", 3) +#
	plot.rgb("MA", "I", 3) +#
	plot.rgb("MA", "S", 3) +#
	plot.rgb("ME", "C", 3) +#
	plot.rgb("ME", "D", 3) +#
	plot.rgb("ME", "I", 3) +#
	plot.rgb("ME", "S", 3) +#
	plot.rgb("MO", "C", 3) +#
	plot.rgb("MO", "D", 3) +#
	plot.rgb("MO", "I", 3) +#
	plot.rgb("MO", "S", 3) +#
	plot.rgb("IN", "C", 3) +#
	plot.rgb("IN", "D", 3) +#
	plot.rgb("IN", "I", 3) +#
	plot.rgb("IN", "S", 3) +#
	plot.rgb("OH", "C", 3) +#
	plot.rgb("OH", "D", 3) +#
	plot.rgb("OH", "I", 3) +#
	plot.rgb("OH", "S", 3)+#
	labs(title= "Canopy Class", x="Year", y = expression(bold(paste("BAI (mm"^"2", "y"^"-1",")")))) +#
	poster.theme2#
dev.off()		#
# Just plotting the BAI fits#
summary(data.graph)#
#
ggplot(data.graph) + facet_wrap(group~Site) +#
  scale_x_continuous(expand=c(0,0), name="Year") +#
  scale_y_continuous(expand=c(0,0), name="BAI") +#
  # facet_wrap(~TreeID, scales="free_y", space="free") +#
  # geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
  geom_line(aes(x=Year, y=fit.full), size=2, alpha=0.5) +#
  geom_ribbon(aes(x=Year, ymin=fit.full.lwr, ymax=fit.full.upr), alpha=0.3)#
#
# Plotting the Effects#
data.graph$State <- factor(data.graph$State, levels=c("MO", "IN", "OH", "MA", "ME"))#
#
pdf("figures/gam2_influence_in_time.pdf", width= 13, height = 8.5)#
ggplot(data.graph) + facet_grid(Canopy.Class~State) +#
	scale_x_continuous(expand=c(0,0), name="Year") +#
	scale_y_continuous(expand=c(0,0), name="Effect on RW (in mm)") +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_line(aes(x=Year, y=fit.tmean), size=1, color="red") +#
	geom_line(aes(x=Year, y=fit.precip), size=1, color="blue") +#
	geom_line(aes(x=Year, y=fit.dbh.recon), size=1, color="green")+#
	ylim(c(0,3))#
dev.off()	#
# #---------------------------------------------------#
# # Plotting just MMF and Harvard for Ameridendro#
#
# sites.use2 <- c("Harvard", "Morgan Monroe State Park")#
#
# # Plotting the Obs and modeled with influence coloring#
# pdf("figures/gam2_canopyclass_BAI_limiting_factors_ameridendro.pdf", width= 13, height = 8.5)#
# ggplot(data.graph[data.graph$Site %in% sites.use2,]) + facet_grid(Canopy.Class~Site) +#
	# scale_x_continuous(expand=c(0,0), name="Year") +#
	# scale_y_continuous(expand=c(0,0), name="BAI") +#
	# # facet_wrap(~TreeID, scales="free_y", space="free") +#
	# # geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	# geom_line(aes(x=Year, y=BA.inc), size=2, alpha=0.5) +#
	# geom_ribbon(aes(x=Year, ymin=BA.inc.lwr, ymax=BA.inc.upr), alpha=0.3) +#
	# geom_line(aes(x=Year, y = 0), linetype="dashed") +#
	# plot.rgb("Harvard", "C", 3) +#
	# plot.rgb("Harvard", "D", 3) +#
	# plot.rgb("Harvard", "I", 3) +#
	# plot.rgb("Harvard", "S", 3) +#
	# plot.rgb("Morgan Monroe State Park", "C", 3) +#
	# plot.rgb("Morgan Monroe State Park", "D", 3) +#
	# plot.rgb("Morgan Monroe State Park", "I", 3) +#
	# plot.rgb("Morgan Monroe State Park", "S", 3) +#
	# poster.theme2#
# dev.off()		#
# # Just plotting the BAI fits#
# summary(data.graph)#
#
# ggplot(data.graph) + facet_wrap(group~Site) +#
  # scale_x_continuous(expand=c(0,0), name="Year") +#
  # scale_y_continuous(expand=c(0,0), name="BAI") +#
  # # facet_wrap(~TreeID, scales="free_y", space="free") +#
  # # geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
  # geom_line(aes(x=Year, y=fit.full), size=2, alpha=0.5) +#
  # geom_ribbon(aes(x=Year, ymin=fit.full.lwr, ymax=fit.full.upr), alpha=0.3)#
#
# # Plotting the Effects#
#
# pdf("figures/gam2_influence_in_time_ameridendro.pdf", width= 13, height = 8.5)#
# ggplot(data.graph[data.graph$Site %in% sites.use2,]) + facet_grid(Canopy.Class~Site) +#
	# scale_x_continuous(expand=c(0,0), name="Year") +#
	# scale_y_continuous(expand=c(0,0), name="Effect on RW (in mm)") +#
	# # facet_wrap(~TreeID, scales="free_y", space="free") +#
	# # geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	# geom_line(aes(x=Year, y=fit.tmean), size=2, color="red") +#
	# geom_line(aes(x=Year, y=fit.precip), size=2, color="blue") +#
	# geom_line(aes(x=Year, y=fit.dbh.recon), size=2, color="green") +#
	# poster.theme2#
# dev.off()
save(gam2.data.graph, file="processed_data/gam2_graph_data.Rdata")
gam2.data.graph <- data.graph
save(gam2.data.graph, file="processed_data/gam2_graph_data.Rdata")
library(ggplot2)#
library(car)#
load(file="processed_data/gamm_weights/gam1_weights.Rdata")#
#
summary(gam1.weights)#
factors.fits <- c("fit.tmean", "fit.precip", "fit.dbh.recon", "fit.full", "BA.inc")#
factors.weights <- c("weight.tmean", "weight.dbh.recon", "weight.precip")#
#
# Transforming things back to BA.inc rather than log#
gam1.weights[,which(substr(names(gam1.weights),1,3)=="fit")] <- exp(gam1.weights[,which(substr(names(gam1.weights),1,3)=="fit")] )#
#
othervars <- c("Year", "Site", "group", "Model")#
#
data.graph1 <- aggregate(gam1.weights[,factors.fits], by = gam1.weights[,othervars], FUN= mean, na.rm=T)#
#
data.graph1[,paste(factors.fits, "upr", sep=".")] <- aggregate(gam1.weights[,factors.fits], by = gam1.weights[,othervars], FUN= quantile, prob= 0.975, na.rm=T)[,factors.fits]#
#
data.graph1[,paste(factors.fits, "lwr", sep=".")] <- aggregate(gam1.weights[,factors.fits], by = gam1.weights[,othervars], FUN= quantile, prob= 0.025, na.rm=T)[,factors.fits]#
#
summary(data.graph1)#
#
data.graph2 <- aggregate(abs(gam1.weights[,factors.weights]), by = gam1.weights[,othervars], FUN= mean, na.rm=T)#
#
data.graph2[,paste(factors.weights, "upr", sep=".")] <- aggregate(abs(gam1.weights[,factors.weights]), by = gam1.weights[,othervars], FUN= quantile, prob= 0.975, na.rm=T)[,factors.weights]#
#
data.graph2[,paste(factors.weights, "lwr", sep=".")] <- aggregate(abs(gam1.weights[,factors.weights]), by = gam1.weights[,othervars], FUN= quantile, prob= 0.025, na.rm=T)[,factors.weights]#
#
summary(data.graph2)#
#
data.graph <- merge(data.graph1, data.graph2, all.x=T, all.y=T)#
#
# data.graph <- gam1.weights[gam1.weights$TreeID== "MMA014",]#
summary(data.graph)#
gam1.weights$wts.check <- rowSums(abs(gam1.weights[,c("weight.tmean", "weight.precip", "weight.dbh.recon")]))#
data.graph$wts.check <- rowSums(abs(data.graph[,c("weight.tmean", "weight.precip", "weight.dbh.recon")]))#
#
summary(gam1.weights)#
summary(data.graph)#
#
# Ordering the data for graphing#
#
data.graph<- data.graph[order(data.graph$Year, data.graph$group, data.graph$Site, decreasing=F),]#
summary(data.graph)#
#
plot.rgb <- function(STATE, SPP, SIZE){	geom_line(data=data.graph[data.graph$State==STATE & data.graph$group==SPP,],aes(x=Year, y=fit.full), size=SIZE,#
  		        color=rgb(abs(data.graph[data.graph$State==STATE & data.graph$group==SPP,"weight.tmean"     ]), # red#
                        abs(data.graph[data.graph$State==STATE & data.graph$group==SPP,"weight.dbh.recon"     ]), # green#
                        abs(data.graph[data.graph$State==STATE & data.graph$group==SPP,"weight.precip"   ]))) }   # blue#
#
# Plotting the Obs and modeled with influence coloring#
data.graph$State <- recode(data.graph$Site, "'Howland' = 'ME';'Harvard' = 'MA';'Morgan Monroe State Park' = 'IN';'Missouri Ozark' = 'MO';'Oak Openings Toledo' = 'OH'")#
data.graph$State <- factor(data.graph$State, levels=c("MO", "IN", "OH", "MA", "ME"))#
#
summary(data.graph[!data.graph$group %in% c("BETULA", "CARYA", "FAGR", "FRAX", "SAAL"),])#
#
pdf("figures/gam1_Species_BAI_limiting_factor.pdf", width= 13, height = 8.5)#
ggplot(data.graph[!data.graph$group %in% c("BETULA", "CARYA", "FAGR", "FRAX", "SAAL"),]) + facet_grid(group~State) +#
	scale_x_continuous(expand=c(0,0)) +#
	scale_y_continuous(expand=c(0,0)) +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_line(aes(x=Year, y=BA.inc), size=2, alpha=0.5) +#
	geom_ribbon(aes(x=Year, ymin=BA.inc.lwr, ymax=BA.inc.upr), alpha=0.3) +#
	geom_line(aes(x=Year, y = 0), linetype="dashed") +#
	plot.rgb("MA", "ACRU", 3) +#
	plot.rgb("MA", "PIST", 3) +#
	plot.rgb("MA", "TSCA", 3) +#
	plot.rgb("MA", "QURU", 3) +#
	plot.rgb("MA", "QUVE", 3) +#
	#plot.rgb("MA", "FRAX", 3) +#
	#plot.rgb("MA", "BETULA", 3) +#
	plot.rgb("MA", "ACSA", 3) +#
	plot.rgb("MA", "QUAL", 3) +#
	#plot.rgb("MA", "FAGR", 3) +#
	plot.rgb("MA", "ULRU", 3) +#
	#plot.rgb("MA", "CARYA", 3) +#
	#plot.rgb("MA", "SAAL", 3) +#
	plot.rgb("ME", "ACRU", 3) +#
	plot.rgb("ME", "PIST", 3) +#
	plot.rgb("ME", "TSCA", 3) +#
	plot.rgb("ME", "QURU", 3) +#
	plot.rgb("ME", "QUVE", 3) +#
	#plot.rgb("ME", "FRAX", 3) +#
	#plot.rgb("ME", "BETULA", 3) +#
	plot.rgb("ME", "ACSA", 3) +#
	plot.rgb("ME", "QUAL", 3) +#
	#plot.rgb("ME", "FAGR", 3) +#
	plot.rgb("ME", "ULRU", 3) +#
	#plot.rgb("ME", "CARYA", 3) +#
	#plot.rgb("ME", "SAAL", 3) +#
	plot.rgb("MO", "ACRU", 3) +#
	plot.rgb("MO", "PIST", 3) +#
	plot.rgb("MO", "TSCA", 3) +#
	plot.rgb("MO", "QURU", 3) +#
	plot.rgb("MO", "QUVE", 3) +#
	#plot.rgb("MO", "FRAX", 3) +#
	#plot.rgb("MO", "BETULA", 3) +#
	plot.rgb("MO", "ACSA", 3) +#
	plot.rgb("MO", "QUAL", 3) +#
	#plot.rgb("MO", "FAGR", 3) +#
	plot.rgb("MO", "ULRU", 3) +#
	#plot.rgb("MO", "CARYA", 3) +#
	#plot.rgb("MO", "SAAL", 3) +#
#
	plot.rgb("IN", "ACRU", 3) +#
	plot.rgb("IN", "PIST", 3) +#
	plot.rgb("IN", "TSCA", 3) +#
	plot.rgb("IN", "QURU", 3) +#
	plot.rgb("IN", "QUVE", 3) +#
	#plot.rgb("IN", "FRAX", 3) +#
	#plot.rgb("IN", "BETULA", 3) +#
	plot.rgb("IN", "ACSA", 3) +#
	plot.rgb("IN", "QUAL", 3) +#
	#plot.rgb("IN", "FAGR", 3) +#
	plot.rgb("IN", "ULRU", 3) +#
	#plot.rgb("IN", "CARYA", 3) +#
	#plot.rgb("IN", "SAAL", 3) +#
	plot.rgb("OH", "ACRU", 3) +#
	plot.rgb("OH", "PIST", 3) +#
	plot.rgb("OH", "TSCA", 3) +#
	plot.rgb("OH", "QURU", 3) +#
	plot.rgb("OH", "QUVE", 3) +#
	#plot.rgb("OH", "FRAX", 3) +#
	#plot.rgb("OH", "BETULA", 3) +#
	plot.rgb("OH", "ACSA", 3) +#
	plot.rgb("OH", "QUAL", 3) +#
	plot.rgb("OH", "FAGR", 3) +#
	plot.rgb("OH", "ULRU", 3) +#
	#plot.rgb("OH", "CARYA", 3) +#
	#plot.rgb("OH", "SAAL", 3)+#
	labs(title= "Species", x="Year", y = expression(bold(paste("BAI (mm"^"2", "y"^"-1",")")))) +#
	poster.theme2#
dev.off()#
# Just plotting the BAI fits#
summary(data.graph)#
ggplot(data.graph) + facet_wrap(group~Site) +#
  scale_x_continuous(expand=c(0,0), name="Year") +#
  scale_y_continuous(expand=c(0,0), name="BAI") +#
  # facet_wrap(~TreeID, scales="free_y", space="free") +#
  # geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
  geom_line(aes(x=Year, y=fit.full), size=2, alpha=0.5) +#
  geom_ribbon(aes(x=Year, ymin=fit.full.lwr, ymax=fit.full.upr), alpha=0.3)#
summary(data.graph)#
data.graph$State <- factor(data.graph$State, levels=c("MO", "IN", "OH", "MA", "ME"))#
#
# Plotting the Effects#
pdf("figures/gam1_influence_in_time.pdf", width= 13, height = 8.5)#
#
ggplot(data.graph[!data.graph$group %in% c("BETULA", "CARYA", "FAGR", "FRAX", "SAAL"),]) + facet_grid(group~State) +#
	scale_x_continuous(expand=c(0,0), name="Year") +#
	scale_y_continuous(expand=c(0,0), name="Effect on RW (in mm)") +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_line(aes(x=Year, y=fit.tmean), size=1, color="red") +#
	geom_line(aes(x=Year, y=fit.precip), size=1, color="blue") +#
	geom_line(aes(x=Year, y=fit.dbh.recon), size=1, color="green")+#
	ylim(c(0,3))#
dev.off()#
#
#------------------------------------#
# # Just MMF and Harvard#
# summary(data.graph)#
# sites.use2 <- c("Harvard", "Morgan Monroe State Park")#
#
# pdf("figures/gam1_Species_BAI_limiting_factor_ameridendro.pdf", width= 13, height = 8.5)#
# ggplot(data.graph[data.graph$Site %in% sites.use2,]) + facet_grid(group~Site) +#
	# scale_x_continuous(expand=c(0,0), name="Year") +#
	# scale_y_continuous(expand=c(0,0), name="BAI") +#
	# # facet_wrap(~TreeID, scales="free_y", space="free") +#
	# # geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	# geom_line(aes(x=Year, y=BA.inc), size=2, alpha=0.5) +#
	# geom_ribbon(aes(x=Year, ymin=BA.inc.lwr, ymax=BA.inc.upr), alpha=0.3) +#
	# geom_line(aes(x=Year, y = 0), linetype="dashed") +#
	# plot.rgb("Harvard", "ACRU", 3) +#
	# plot.rgb("Harvard", "PIST", 3) +#
	# plot.rgb("Harvard", "TSCA", 3) +#
	# plot.rgb("Harvard", "QURU", 3) +#
	# plot.rgb("Harvard", "QUVE", 3) +#
	# plot.rgb("Harvard", "FRAX", 3) +#
	# plot.rgb("Harvard", "BETULA", 3) +#
	# plot.rgb("Harvard", "ACSA", 3) +#
	# plot.rgb("Harvard", "QUAL", 3) +#
	# plot.rgb("Harvard", "FAGR", 3) +#
	# plot.rgb("Harvard", "ULRU", 3) +#
	# plot.rgb("Harvard", "CARYA", 3) +#
	# plot.rgb("Harvard", "SAAL", 3) +#
	# plot.rgb("Morgan Monroe State Park", "ACRU", 3) +#
	# plot.rgb("Morgan Monroe State Park", "PIST", 3) +#
	# plot.rgb("Morgan Monroe State Park", "TSCA", 3) +#
	# plot.rgb("Morgan Monroe State Park", "QURU", 3) +#
	# plot.rgb("Morgan Monroe State Park", "QUVE", 3) +#
	# plot.rgb("Morgan Monroe State Park", "FRAX", 3) +#
	# plot.rgb("Morgan Monroe State Park", "BETULA", 3) +#
	# plot.rgb("Morgan Monroe State Park", "ACSA", 3) +#
	# plot.rgb("Morgan Monroe State Park", "QUAL", 3) +#
	# plot.rgb("Morgan Monroe State Park", "FAGR", 3) +#
	# plot.rgb("Morgan Monroe State Park", "ULRU", 3) +#
	# plot.rgb("Morgan Monroe State Park", "CARYA", 3) +#
	# plot.rgb("Morgan Monroe State Park", "SAAL", 3) +#
	# poster.theme2#
# dev.off()#
# # Just plotting the BAI fits#
# summary(data.graph)#
# ggplot(data.graph[data.graph$Site %in% sites.use2,]) + facet_wrap(group~Site) +#
  # scale_x_continuous(expand=c(0,0), name="Year") +#
  # scale_y_continuous(expand=c(0,0), name="BAI") +#
  # # facet_wrap(~TreeID, scales="free_y", space="free") +#
  # # geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
  # geom_line(aes(x=Year, y=fit.full), size=2, alpha=0.5) +#
  # geom_ribbon(aes(x=Year, ymin=fit.full.lwr, ymax=fit.full.upr), alpha=0.3)#
#
# summary(data.graph)#
# # Plotting the Effects#
# pdf("figures/gam1_influence_in_time_ameridendro.pdf", width= 13, height = 8.5)#
#
# ggplot(data.graph[data.graph$Site %in% sites.use2,]) + facet_grid(group~Site) +#
	# scale_x_continuous(expand=c(0,0), name="Year") +#
	# scale_y_continuous(expand=c(0,0), name="Effect on RW (in mm)") +#
	# # facet_wrap(~TreeID, scales="free_y", space="free") +#
	# # geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	# geom_line(aes(x=Year, y=fit.tmean), size=1, color="red") +#
	# geom_line(aes(x=Year, y=fit.precip), size=1, color="blue") +#
	# geom_line(aes(x=Year, y=fit.dbh.recon), size=1, color="green")+ #
	# poster.theme2#
# dev.off()
gam1.data.graph <- data.graph
save(gam1.data.graph, file="processed_data/gam1_graph_data.Rdata")
library(mgcv)#
library(ggplot2)#
library(car)#
# Christy's GAMM code#
#
# gam1 <- gamm(Y ~  s(Biomass, bs="cr", k=3, by=PFT) + s(tair, k=k, by=PFT) + s(precipf, k=k, by=PFT) + s(CO2, k=k, by=PFT), random=list(PlotID=~1), data=data) #
#
# Loading in my data#
#
data.use <- read.csv("processed_data/AllSites_tree_plus_climate_and_BA.csv", header=T)#
#
data.use$group <- data.use$Species#
data.use$group <- recode(data.use$group, "'CAOV' = 'CARYA'; 'CACO' = 'CARYA'; #
  							'CATE' = 'CARYA'; 'ACSAC' = 'ACSA'; 'BEAL' = 'BETULA'; 'BELE' = 'BETULA'; 'QUMU' = 'QUAL'")#
#
data.use$group.plot <- as.factor(paste(data.use$group, data.use$PlotID, sep="."))#
#
data.use$Canopy.Class <- recode(data.use$Canopy.Class, "'C' = 'D'")#
summary(data.use)#
# reducing the amount of data for the test runs#
sites.use <- c("Harvard", "Howland", "Morgan Monroe State Park", "Oak Openings Toledo", "Missouri Ozark")#
#
test <- data.use[data.use$Site %in% sites.use & !is.na(data.use$RW) & !is.na(data.use$BA.inc),]#
summary(test)#
#
test$group.cc <- as.factor(paste(test$group, test$Canopy.Class, sep="."))#
summary(test)#
# Get a list of what predictors & responses I'm using#
predictors.all <- c("tmean", "precip", "Species", "dbh.recon", "Canopy.Class", "spp.plot", "group", "group.plot", "group.cc") #
#
# Getting rid of observations that have NAs in the important variables#
test <- test[complete.cases(test[,predictors.all]),]#
test <- test[test$Live.Dead=="LIVE" & !test$Canopy.Class=="F",]#
#
# Subsetting to a set of species that we have enough data to feel good about#
#species.use <- c("TSCA", "QURU", "ACRU", "BEAL", "ACSA", "LITU", "QUAL", "CAOV", "CACO", "CATE", "JUVI", "QUVE", "PCRU", "THOC", "PIST")#
group.use <- c("ACRU", "ACSA", "BETULA", "CARYA", "FAGR", "FRAX", "PIST", "QUAL", "QURU", "QUVE", "SAAL", "TSCA", "ULRU")#
#
test <- test[test$group %in% group.use,]#
#
summary(test)#
#
par(new=F)#
plot(test[test$TreeID=="MMA003", "BA.inc"]~ test[test$TreeID=="MMA003","Year"], type="l")#
test$log.dbh <- log(test$dbh.recon)#
summary(test)#
#
summary(test)#
summary(test$Live.Dead)#
summary(test$Canopy.Class)#
# RW <- test$RW#
# temp <- test$tmean#
# precip <- test$precip#
# canopy <- test$Canopy.Class#
# size <- test$DBH..cm.#
# species <- unique(test$Species)#
# library(ggplot2)#
# ggplot(data=test) +#
   # facet_wrap(~PlotID) +#
   # geom_histogram(aes(x=dbh.recon))#
# ggplot(data=test) +#
   # facet_wrap(~Species) +#
   # geom_histogram(aes(x=dbh.recon))#
# hist(test$dbh.recon)#
# test2 <- test[test$group %in% c("QURU", "ACRU") & test$Year>=1980,]#
# test2 <- test[test$group %in% c("QURU", "ACRU"),]#
test2 <- test[test$Site %in% "Morgan Monroe State Park",]#
# test2$log.dbh <- log(test2$dbh.recon)#
# summary(test2)#
summary(test)#
test[test$BA.inc==0, "BA.inc"] <- 1e-6
save(test, file="ch2_combined_data_use.Rdata")
load("ch2_combined_data_use.Rdata")
summary(test)
summary(test[Site=="Misouri Ozark",])
summary(test[test$Site=="Misouri Ozark",])
summary(test[test$Site=="Missouri Ozark",])
quantile(test[test$Site=="Missouri Ozark", "tmean"], c(0.025, 0.975))
quantile(test[test$Site=="Missouri Ozark", "precip"], c(0.025, 0.975))
summary(test[test$Site=="Missouri Ozark",])
quantile(test[test$Site=="Missouri Ozark", "precip"], c(0.025, 0.975))
quantile(test[test$Site=="Missouri Ozark", "tmean"], c(0.025, 0.5, 0.975))
summary(test)
library(car)
test$state <- recode(test$Site, c("'Missouri Ozark'='MO';'Morgan Monroe State Park'='IN';'Oak Openings Toledo'='OH';'Harvard'='MA';'Howland'='ME'"))
summary(test)
summary(test[test$state=="IN",])
quantile(test[test$state=="IN", "tmean"], c(0.025, 0.975))
quantile(test[test$state=="IN", "precip"], c(0.025, 0.975))
summary(test[test$state=="OH",])
quantile(test[test$state=="OH", "tmean"], c(0.025, 0.975))#
quantile(test[test$state=="OH", "precip"], c(0.025, 0.975))
summary(test[test$state=="MA",])
quantile(test[test$state=="MA", "tmean"], c(0.025, 0.975))
quantile(test[test$state=="MA", "precip"], c(0.025, 0.975))
summary(test[test$state=="ME",])
quantile(test[test$state=="ME", "tmean"], c(0.025, 0.975))
,
quantile(test[test$state=="ME", "precip"], c(0.025, 0.975))
summary(test[test$state=="MO",])
summary(test[test$state=="IN",])
summary(test[test$state=="OH",])
summary(test[test$state=="MA",])
summary(test[test$state=="ME",])
summary(test[test$state=="MO",])
summary(test[test$state=="IN",])
summary(test[test$state=="OH",])
summary(test[test$state=="MA",])
summary(test[test$state=="MO",])
summary(test[test$state=="IN",])
summary(test[test$state=="OH",])
summary(test[test$state=="MA",])
summary(test[test$state=="ME",])
library(ggplot2)#
library(car)#
source("poster_theme.R")#
# Doing some data exploration with the cliamte data.#
#
data.use <- read.csv("processed_data/AllSites_tree_plus_climate_and_BA.csv", header=T)#
summary(data.use)#
#
sites.use <- c("Harvard", "Howland", "Morgan Monroe State Park", "Oak Openings Toledo", "Missouri Ozark")#
#
data.use <- data.use[data.use$Site %in% sites.use,]#
#
summary(data.use[data.use$Site=="Howland","tmean"])#
#
data.use$Site <- factor(data.use$Site, levels = c("Missouri Ozark", "Morgan Monroe State Park", "Oak Openings Toledo", "Harvard", "Howland"))
ggplot(data=data.use[data.use$Year >=1935,]) +#
	geom_point(aes(x=tmean, y=precip, color=Site, shape=Site), size=4)+#
		labs(title = "Site Climate 1935-2012", x = "Mean GS Temp (˚C)", y = expression(bold(paste("Cumulative GS Precip (mm yr"^"-1",")"))))+#
		 theme(axis.line=element_line(color="black", size=0.5), panel.grid.major=element_blank(), panel.grid.minor= element_blank(), panel.border= element_blank(), panel.background= element_blank(), axis.text.x=element_text(angle=0, color="black", size=rel(1.5)), axis.text.y=element_text(color="black", size=rel(1.5)), axis.title.x=element_text(face="bold", size=rel(1.5), vjust=-0.5),  axis.title.y=element_text(face="bold", size=rel(1.5), vjust=1), plot.margin=unit(c(0.1,0.5,0.5,0.1), "lines"))+#
		 theme(legend.position=c(0.85,0.85))+#
		 poster.theme2
ggplot(data=data.use[data.use$Year >=1935,]) +#
	geom_point(aes(x=tmean, y=precip, color=Site, shape=Site), size=4)+#
		labs(title = "Site Climate 1935-2012", x = "Mean GS Temp (˚C)", y = expression(bold(paste("Cumulative GS Precip (mm yr"^"-1",")"))))+#
		 theme(axis.line=element_line(color="black", size=0.5), panel.grid.major=element_blank(), panel.grid.minor= element_blank(), panel.border= element_blank(), panel.background= element_blank(), axis.text.x=element_text(angle=0, color="black", size=rel(1.5)), axis.text.y=element_text(color="black", size=rel(1.5)), axis.title.x=element_text(face="bold", size=rel(1.5), vjust=-0.5),  axis.title.y=element_text(face="bold", size=rel(1.5), vjust=1), plot.margin=unit(c(0.1,0.5,0.5,0.1), "lines"))+#
		 theme(legend.position=c(0.85,0.85))+#
		 poster.theme2+#
		 theme(axis.line.x = element_line(color="black", size = 0.5),#
        axis.line.y = element_line(color="black", size = 0.5))
ggplot(data=data.use[data.use$Year >=1935,]) +#
	geom_point(aes(x=tmean, y=precip, color=Site, shape=Site), size=4)+#
	geom_density2d(alpha=.5)
ggplot(data=data.use[data.use$Year >=1935,]) +#
	geom_point(aes(x=tmean, y=precip, color=Site, shape=Site), size=4)+#
	stat_density2d(alpha=.5)
ggplot(data=data.use[data.use$Year >=1935,]) +#
	geom_point(aes(x=tmean, y=precip, color=Site, shape=Site), size=4)+#
	stat_density2d(mapping=NULL, data=NULL, geom="density2d", position="identity")
ggplot(data=data.use[data.use$Year >=1935,]) +#
	geom_point(aes(x=tmean, y=precip, color=Site, shape=Site), size=4)+#
	geom_density2d(stat="density2d", position="identity")
ggplot(data=data.use[data.use$Year >=1935,]) +#
	geom_point(aes(x=tmean, y=precip, color=Site, shape=Site), size=4)
ggplot(data=data.use[data.use$Year >=1935,]) +#
	geom_point(aes(x=tmean, y=precip, color=Site, shape=Site), size=4)+#
	geom_density2d(alpha=0.5)
ggplot(data=data.use[data.use$Year >=1935,]) +#
	geom_point(aes(x=tmean, y=precip, color=Site, shape=Site), size=4)
ggplot(data=data.use[data.use$Year >=1935,]) +#
	geom_point(aes(x=tmean, y=precip, color=Site, shape=Site), size=4)+#
	geom_density2d(aes(x=tmean, y=precip, color=Site, shape=Site),alpha=0.5)
ggplot(data=data.use[data.use$Year >=1935,]) +#
	geom_point(aes(x=tmean, y=precip, color=Site, shape=Site), size=4)+#
	stat_density2d(aes(x=tmean, y=precip, color=Site, shape=Site),alpha=0.5)
ggplot(data=data.use[data.use$Year >=1935,]) +#
	geom_point(aes(x=tmean, y=precip, color=Site, shape=Site), size=4)+#
	stat_density(aes(x=tmean, y=precip, color=Site, shape=Site),alpha=0.5)
ggplot(data=data.use[data.use$Year >=1935,]) +#
	geom_point(aes(x=tmean, y=precip, color=Site, shape=Site), size=4)
ggplot(data=data.use[data.use$Year >=1935,]) +#
	geom_point(aes(x=tmean, y=precip, color=Site, shape=Site), size=4)+#
	stat_density2d(aes(x=tmean, y=precip, color=Site, shape=Site),alpha=0.5)
ggplot(data=data.use[data.use$Year >=1935,]) +#
	geom_point(aes(x=tmean, y=precip, color=Site, shape=Site), size=4)+#
	geom_polygon(aes(x=tmean, y=precip, color=Site, shape=Site),alpha=0.5)
ggplot(data=data.use[data.use$Year >=1935,]) +#
	geom_point(aes(x=tmean, y=precip, color=Site, shape=Site), size=4)+#
	geom_density2d(aes(x=tmean, y=precip, color=Site, shape=Site),alpha=0.5)
ggplot(data=data.use[data.use$Year >=1935,]) +#
	geom_point(aes(x=tmean, y=precip, color=Site, shape=Site), size=4)+#
	stat_density2d(geom="tile",aes(x=tmean, y=precip, color=Site, shape=Site),alpha=0.5)
ggplot(data=data.use[data.use$Year >=1935,]) +#
	geom_point(aes(x=tmean, y=precip, color=Site, shape=Site), size=4)+#
	stat_density2d(geom="point",aes(x=tmean, y=precip, color=Site, shape=Site),alpha=0.5)
ggplot(data=data.use[data.use$Year >=1935,]) +#
	geom_point(aes(x=tmean, y=precip, color=Site, shape=Site), size=4)+#
	stat_density2d(aes(x=tmean, y=precip, color=Site, shape=Site),alpha=0.5)
library(ggplot2)#
library(car)#
source("poster_theme.R")#
# Doing some data exploration with the cliamte data.#
#
data.use <- read.csv("processed_data/AllSites_tree_plus_climate_and_BA.csv", header=T)#
summary(data.use)#
#
sites.use <- c("Harvard", "Howland", "Morgan Monroe State Park", "Oak Openings Toledo", "Missouri Ozark")#
#
data.use <- data.use[data.use$Site %in% sites.use,]#
#
summary(data.use[data.use$Site=="Howland","tmean"])#
#
data.use$Site <- factor(data.use$Site, levels = c("Missouri Ozark", "Morgan Monroe State Park", "Oak Openings Toledo", "Harvard", "Howland"))
df <- data.use
library(dplyr)
require(dplyr)
require(plyr)
library(ggplot2)#
library(car)#
require(plyr)#
require(ggplot2)#
require(RColorBrewer)#
require(reshape)
find_hull <- function(data.use) data.use[chull(data.use$tmean, data.use$precip),]
huss. <- ddply(df, "issue", find_hull)
library(mgcv)#
library(ggplot2)#
library(car)#
# Christy's GAMM code#
#
# gam1 <- gamm(Y ~  s(Biomass, bs="cr", k=3, by=PFT) + s(tair, k=k, by=PFT) + s(precipf, k=k, by=PFT) + s(CO2, k=k, by=PFT), random=list(PlotID=~1), data=data) #
#
# Loading in my data#
#
data.use <- read.csv("processed_data/AllSites_tree_plus_climate_and_BA.csv", header=T)#
#
data.use$group <- data.use$Species#
data.use$group <- recode(data.use$group, "'CAOV' = 'CARYA'; 'CACO' = 'CARYA'; #
  							'CATE' = 'CARYA'; 'ACSAC' = 'ACSA'; 'BEAL' = 'BETULA'; 'BELE' = 'BETULA'; 'QUMU' = 'QUAL'")#
#
data.use$group.plot <- as.factor(paste(data.use$group, data.use$PlotID, sep="."))#
#
data.use$Canopy.Class <- recode(data.use$Canopy.Class, "'C' = 'D'")#
summary(data.use)#
# reducing the amount of data for the test runs#
sites.use <- c("Harvard", "Howland", "Morgan Monroe State Park", "Oak Openings Toledo", "Missouri Ozark")#
#
test <- data.use[data.use$Site %in% sites.use & !is.na(data.use$RW) & !is.na(data.use$BA.inc),]#
summary(test)#
#
test$group.cc <- as.factor(paste(test$group, test$Canopy.Class, sep="."))#
summary(test)#
# Get a list of what predictors & responses I'm using#
predictors.all <- c("tmean", "precip", "Species", "dbh.recon", "Canopy.Class", "spp.plot", "group", "group.plot", "group.cc") #
#
# Getting rid of observations that have NAs in the important variables#
test <- test[complete.cases(test[,predictors.all]),]#
test <- test[test$Live.Dead=="LIVE" & !test$Canopy.Class=="F",]#
#
# Subsetting to a set of species that we have enough data to feel good about#
#species.use <- c("TSCA", "QURU", "ACRU", "BEAL", "ACSA", "LITU", "QUAL", "CAOV", "CACO", "CATE", "JUVI", "QUVE", "PCRU", "THOC", "PIST")#
group.use <- c("ACRU", "ACSA", "BETULA", "CARYA", "FAGR", "FRAX", "PIST", "QUAL", "QURU", "QUVE", "SAAL", "TSCA", "ULRU")#
#
test <- test[test$group %in% group.use,]#
#
summary(test)#
#
par(new=F)#
plot(test[test$TreeID=="MMA003", "BA.inc"]~ test[test$TreeID=="MMA003","Year"], type="l")#
test$log.dbh <- log(test$dbh.recon)#
summary(test)#
#
summary(test)#
summary(test$Live.Dead)#
summary(test$Canopy.Class)#
# RW <- test$RW#
# temp <- test$tmean#
# precip <- test$precip#
# canopy <- test$Canopy.Class#
# size <- test$DBH..cm.#
# species <- unique(test$Species)#
# library(ggplot2)#
# ggplot(data=test) +#
   # facet_wrap(~PlotID) +#
   # geom_histogram(aes(x=dbh.recon))#
# ggplot(data=test) +#
   # facet_wrap(~Species) +#
   # geom_histogram(aes(x=dbh.recon))#
# hist(test$dbh.recon)#
# test2 <- test[test$group %in% c("QURU", "ACRU") & test$Year>=1980,]#
# test2 <- test[test$group %in% c("QURU", "ACRU"),]#
test2 <- test[test$Site %in% "Morgan Monroe State Park",]#
# test2$log.dbh <- log(test2$dbh.recon)#
# summary(test2)#
summary(test)#
test[test$BA.inc==0, "BA.inc"] <- 1e-6#
save(test, file="ch2_combined_data_use.Rdata")#
# test.gam3 <- test#
# test.gam3$Canopy.Class <- recode(test.gam3$Canopy.Class, "'C' = 'D'")#
# summary(test.gam3)#
################################################### #
# HERE'S THE GAMM!!!#
################################################### #
# RW ~ CLIMATE(Species) + Size
gam4 <- gamm(log(BA.inc)~ s(tmean, k=3, by=Site) +#
                  s(precip, k=3, by=Site) +#
                  s(dbh.recon, k=3, by=Site) +#
                  group,#
                  random=list(PlotID=~1, Canopy.Class=~1),#
                  data=test)
save(gam4, file="processed_data/gam_results/gam4_Site_level_model.Rdata")
load("processed_data/gam_results/gam4_Site_leevl_analysis.Rdata")
n <- 100#
data <- test#
		n.out = n#
#
		new.dat <- data.frame(Model="species_response",#
							  Extent=as.factor(paste(min(data$Year), max(data$Year), sep="-")))#
		# Figure out which vars are numeric vs. factor#
		vars.num <- vector()#
		for(v in predictors.all){#
			if(class(data[,v]) %in% c("numeric", "integer")) vars.num <- c(vars.num, v)#
		}#
		# Getting the unique values of our factor variables and adding them to the data frame#
		# need to skip group & group.cc so we aren't trying to match Carya & Quercus etc#
		predictors.all <- predictors.all[!predictors.all %in% c("Species", "spp.plot")]#
		for(v in predictors.all[!predictors.all %in% vars.num & !(predictors.all %in% c("group", "group.cc"))]){#
			# if v is a factor, merge all unique values into the dataframe#
			var.temp <- data.frame(x=unique(data[,v])) #
			names(var.temp) <- v#
			new.dat <- merge(new.dat, var.temp, all.x=T, all.y=T)#
		}#
		# getting species from species.plot#
		new.dat$group <- as.factor(substr(new.dat$group.plot, 1, 4))#
		# Adding in the group.canopy class then getting rid of combinations we don't actually have in our data#
		new.dat$group.cc <- as.factor(paste(new.dat$group, new.dat$Canopy.Class, sep="."))#
		new.dat <- new.dat[new.dat$group.cc %in% unique(test$group.cc),]#
		summary(new.dat)#
		# Putting the numerical variables into an array and adding it in #
		var.temp <- data.frame(array(dim=c(n.out, length(vars.num))))#
		names(var.temp) <- vars.num#
		for(v in vars.num){#
			var.temp[,v] <- seq(min(data[,v], na.rm=T), max(data[,v], na.rm=T), length.out=n.out)#
		}								#
		new.dat <- merge(new.dat, var.temp, all.x=T, all.y=T)#
		summary(new.dat)#
write.csv(new.dat, file="processed_data/sensitivity_extaction_dataframe.csv", row.names=F)								#
# Change which gamm you look at here!
load("processed_data/gam_results/gam4_Site_level_model.Rdata")
source("0_Calculate_GAMM_Posteriors.R")#
g4.ci.terms.pred <- post.distns(model.gam=gam3, model.name="harv_mmf_cc.test", n=n, newdata=new.dat, vars=predictors.all, terms=T)#
		g4.ci.out <- g4.ci.terms.pred$ci # separting out the confidence interval #
		g4.ci.out[,predictors.all[!predictors.all %in% vars.num]] <- new.dat[,predictors.all[!predictors.all %in% vars.num]] # copying over our factor labels#
		g4.ci.out$x <- as.numeric(g4.ci.out$x) # making x numeric; will make factors NA#
		summary(g4.ci.out)
source("0_Calculate_GAMM_Posteriors.R")
g4.ci.terms.pred <- post.distns(model.gam=gam4, model.name="Site_level", n=n, newdata=new.dat, vars=predictors.all, terms=T)
#----------------------------------------------#
# Gam1 graphs#
n <- 100#
data <- test#
		n.out = n#
#
		new.dat <- data.frame(Model="species_response",#
							  Extent=as.factor(paste(min(data$Year), max(data$Year), sep="-")))#
		# Figure out which vars are numeric vs. factor#
		vars.num <- vector()#
		for(v in predictors.all){#
			if(class(data[,v]) %in% c("numeric", "integer")) vars.num <- c(vars.num, v)#
		}#
		# Getting the unique values of our factor variables and adding them to the data frame#
		# need to skip group & group.cc so we aren't trying to match Carya & Quercus etc#
		predictors.all <- predictors.all[!predictors.all %in% c("Species", "spp.plot")]#
		for(v in predictors.all[!predictors.all %in% vars.num & !(predictors.all %in% c("group", "group.cc"))]){#
			# if v is a factor, merge all unique values into the dataframe#
			var.temp <- data.frame(x=unique(data[,v])) #
			names(var.temp) <- v#
			new.dat <- merge(new.dat, var.temp, all.x=T, all.y=T)#
		}#
		# getting species from species.plot#
		new.dat$group <- as.factor(substr(new.dat$group.plot, 1, 4))#
		# Adding in the group.canopy class then getting rid of combinations we don't actually have in our data#
		new.dat$group.cc <- as.factor(paste(new.dat$group, new.dat$Canopy.Class, sep="."))#
		new.dat <- new.dat[new.dat$group.cc %in% unique(test$group.cc),]#
		summary(new.dat)#
		# Putting the numerical variables into an array and adding it in #
		var.temp <- data.frame(array(dim=c(n.out, length(vars.num))))#
		names(var.temp) <- vars.num#
		for(v in vars.num){#
			var.temp[,v] <- seq(min(data[,v], na.rm=T), max(data[,v], na.rm=T), length.out=n.out)#
		}								#
		new.dat <- merge(new.dat, var.temp, all.x=T, all.y=T)#
		summary(new.dat)
write.csv(new.dat, file="processed_data/sensitivity_extaction_dataframe.csv", row.names=F)								#
# Change which gamm you look at here!#
n <- 100						#
		# SOurce & run the function#
		source("0_Calculate_GAMM_Posteriors.R")#
		g1.ci.terms.pred <- post.distns(model.gam=gam1, model.name="species_response", n=n, newdata=new.dat, vars=predictors.all, terms=T)#
		g1.ci.out <- g1.ci.terms.pred$ci # separting out the confidence interval #
		g1.ci.out[,predictors.all[!predictors.all %in% vars.num]] <- new.dat[,predictors.all[!predictors.all %in% vars.num]] # copying over our factor labels#
		g1.ci.out$x <- as.numeric(g1.ci.out$x) # making x numeric; will make factors NA#
		summary(g1.ci.out)#
spp.colors <- read.csv("spp.Colors.csv", header=T)	#
summary(spp.colors)	#
#
group.fig <- unique(g1.ci.out$group)#
group.fig <- group.fig[order(group.fig)]#
colors.use <- as.vector(c(paste(spp.colors[spp.colors$Species %in% group.fig, "color"])))#
#
ci.terms.graph <- g1.ci.out#
ci.terms.graph[ci.terms.graph$mean<(-15),"mean"] <- NA #
ci.terms.graph[ci.terms.graph$lwr<(-15),"lwr"] <- -15#
ci.terms.graph[ci.terms.graph$upr<(-15),"upr"] <- -15 #
ci.terms.graph[which(ci.terms.graph$mean>10),"mean"] <- NA #
ci.terms.graph[ci.terms.graph$lwr>(10),"lwr"] <- 10 #
ci.terms.graph[ci.terms.graph$upr>(10),"upr"] <- 10
# SOurce & run the function#
		source("0_Calculate_GAMM_Posteriors.R")#
		g2.ci.terms.pred2 <- post.distns(model.gam=gam2, model.name="harv_mmf_cc.test", n=n, newdata=new.dat, vars=predictors.all, terms=T)#
		g2.ci.out2 <- g2.ci.terms.pred2$ci # separting out the confidence interval #
		g2.ci.out2[,predictors.all[!predictors.all %in% vars.num]] <- new.dat[,predictors.all[!predictors.all %in% vars.num]] # copying over our factor labels#
		g2.ci.out2$x <- as.numeric(g2.ci.out2$x) # making x numeric; will make factors NA#
		summary(g2.ci.out2)
load("processed_data/gam_results/gam3_climate_by_canopyclass_interactions.Rdata")
source("0_Calculate_GAMM_Posteriors.R")#
		g3.ci.terms.pred <- post.distns(model.gam=gam3, model.name="harv_mmf_cc.test", n=n, newdata=new.dat, vars=predictors.all, terms=T)
load("processed_data/gam_results/gam4_Site_level_model.Rdata")
g4.ci.terms.pred <- post.distns(model.gam=gam4, model.name="Site_level", n=n, newdata=new.dat, vars=predictors.all, terms=T)
summary(gam4)
summary(new.dat)
predictors.all <- c("tmean", "precip", "Species", "dbh.recon", "Canopy.Class", "spp.plot", "group", "group.plot", "group.cc", "Site")
load("processed_data/gam_results/gam4_Site_level_model.Rdata")		#
#
source("0_Calculate_GAMM_Posteriors.R")#
g4.ci.terms.pred <- post.distns(model.gam=gam4, model.name="Site_level", n=n, newdata=new.dat, vars=predictors.all, terms=T)
# Gam1 graphs#
n <- 100#
data <- test#
		n.out = n#
#
		new.dat <- data.frame(Model="species_response",#
							  Extent=as.factor(paste(min(data$Year), max(data$Year), sep="-")))#
		# Figure out which vars are numeric vs. factor#
		vars.num <- vector()#
		for(v in predictors.all){#
			if(class(data[,v]) %in% c("numeric", "integer")) vars.num <- c(vars.num, v)#
		}#
		# Getting the unique values of our factor variables and adding them to the data frame#
		# need to skip group & group.cc so we aren't trying to match Carya & Quercus etc#
		predictors.all <- predictors.all[!predictors.all %in% c("Species", "spp.plot")]#
		for(v in predictors.all[!predictors.all %in% vars.num & !(predictors.all %in% c("group", "group.cc"))]){#
			# if v is a factor, merge all unique values into the dataframe#
			var.temp <- data.frame(x=unique(data[,v])) #
			names(var.temp) <- v#
			new.dat <- merge(new.dat, var.temp, all.x=T, all.y=T)#
		}#
		# getting species from species.plot#
		new.dat$group <- as.factor(substr(new.dat$group.plot, 1, 4))#
		# Adding in the group.canopy class then getting rid of combinations we don't actually have in our data#
		new.dat$group.cc <- as.factor(paste(new.dat$group, new.dat$Canopy.Class, sep="."))#
		new.dat <- new.dat[new.dat$group.cc %in% unique(test$group.cc),]#
		summary(new.dat)#
		# Putting the numerical variables into an array and adding it in #
		var.temp <- data.frame(array(dim=c(n.out, length(vars.num))))#
		names(var.temp) <- vars.num#
		for(v in vars.num){#
			var.temp[,v] <- seq(min(data[,v], na.rm=T), max(data[,v], na.rm=T), length.out=n.out)#
		}								#
		new.dat <- merge(new.dat, var.temp, all.x=T, all.y=T)#
		summary(new.dat)#
write.csv(new.dat, file="processed_data/sensitivity_extaction_dataframe.csv", row.names=F)
load("processed_data/gam_results/gam4_Site_level_model.Rdata")		#
#
source("0_Calculate_GAMM_Posteriors.R")#
g4.ci.terms.pred <- post.distns(model.gam=gam4, model.name="Site_level", n=n, newdata=new.dat, vars=predictors.all, terms=T)
g4.ci.out <- g4.ci.terms.pred$ci # separting out the confidence interval #
		g4.ci.out[,predictors.all[!predictors.all %in% vars.num]] <- new.dat[,predictors.all[!predictors.all %in% vars.num]] # copying over our factor labels#
		g4.ci.out$x <- as.numeric(g4.ci.out$x) # making x numeric; will make factors NA#
		summary(g4.ci.out)
ci.terms.graph <- g4.ci.out#
ci.terms.graph[ci.terms.graph$mean<(-2.5),"mean"] <- NA #
ci.terms.graph[ci.terms.graph$lwr<(-2.5),"lwr"] <- -2.5#
ci.terms.graph[ci.terms.graph$upr<(-2.5),"upr"] <- -2.5 #
ci.terms.graph[which(ci.terms.graph$mean>2.5),"mean"] <- NA #
ci.terms.graph[ci.terms.graph$lwr>(2.5),"lwr"] <- 2.5 #
ci.terms.graph[ci.terms.graph$upr>(2.5),"upr"] <- 2.5
ggplot(data=ci.terms.graph[ci.terms.graph$Effect %in% c("tmean", "precip"), ]) + #
			facet_grid(Canopy.Class~Effect, scales="free_x") +#
			geom_ribbon(aes(x=x, ymin=lwr, ymax=upr, fill=group), alpha=0.5) +#
			geom_line(aes(x=x, y=mean, color=group))+#
			poster.theme2+#
			labs(x = "Climate Variable", y = expression(bold(paste("Effect on BAI (mm"^"2","y"^"-1",")"))))
source("poster_theme.R")
ggplot(data=ci.terms.graph[ci.terms.graph$Effect %in% c("tmean", "precip"), ]) + #
			facet_grid(Canopy.Class~Effect, scales="free_x") +#
			geom_ribbon(aes(x=x, ymin=lwr, ymax=upr, fill=group), alpha=0.5) +#
			geom_line(aes(x=x, y=mean, color=group))+#
			poster.theme2+#
			labs(x = "Climate Variable", y = expression(bold(paste("Effect on BAI (mm"^"2","y"^"-1",")"))))
ggplot(data=ci.terms.graph[ci.terms.graph$Effect %in% c("tmean", "precip"), ]) + #
			facet_grid(Site, scales="free_x") +#
			geom_ribbon(aes(x=x, ymin=lwr, ymax=upr, fill=group), alpha=0.5) +#
			geom_line(aes(x=x, y=mean, color=group))+#
			poster.theme2+#
			labs(x = "Climate Variable", y = expression(bold(paste("Effect on BAI (mm"^"2","y"^"-1",")"))))
summary(ci.terms.graph)
ggplot(data=ci.terms.graph[ci.terms.graph$Effect %in% c("tmean", "precip"), ]) + #
			facet_grid(Site~., scales="free_x") +#
			geom_ribbon(aes(x=x, ymin=lwr, ymax=upr, fill=group), alpha=0.5) +#
			geom_line(aes(x=x, y=mean, color=group))+#
			poster.theme2+#
			labs(x = "Climate Variable", y = expression(bold(paste("Effect on BAI (mm"^"2","y"^"-1",")"))))
ggplot(data=ci.terms.graph[ci.terms.graph$Effect %in% c("tmean", "precip"), ]) + #
			facet_grid(Site~., scales="free_x") +#
			geom_ribbon(aes(x=x, ymin=lwr, ymax=upr, fill=Site), alpha=0.5) +#
			geom_line(aes(x=x, y=mean, color=Site))+#
			poster.theme2+#
			labs(x = "Climate Variable", y = expression(bold(paste("Effect on BAI (mm"^"2","y"^"-1",")"))))
ggplot(data=ci.terms.graph[ci.terms.graph$Effect %in% c("tmean", "precip"), ]) + #
			facet_grid(Effect~., scales="free_x") +#
			geom_ribbon(aes(x=x, ymin=lwr, ymax=upr, fill=Site), alpha=0.5) +#
			geom_line(aes(x=x, y=mean, color=Site))+#
			poster.theme2+#
			labs(x = "Climate Variable", y = expression(bold(paste("Effect on BAI (mm"^"2","y"^"-1",")"))))
ggplot(data=ci.terms.graph[ci.terms.graph$Effect %in% c("tmean", "precip"), ]) + #
			facet_grid(~Effect, scales="free_x") +#
			geom_ribbon(aes(x=x, ymin=lwr, ymax=upr, fill=Site), alpha=0.5) +#
			geom_line(aes(x=x, y=mean, color=Site))+#
			poster.theme2+#
			labs(x = "Climate Variable", y = expression(bold(paste("Effect on BAI (mm"^"2","y"^"-1",")"))))
ggplot(data=ci.terms.graph[ci.terms.graph$Effect %in% c("tmean", "precip"), ]) + #
			facet_grid(~Effect, scales="free_x") +#
			geom_ribbon(aes(x=x, ymin=lwr, ymax=upr, fill=Site), alpha=0.5) +#
			geom_line(aes(x=x, y=mean, color=Site))+#
			poster.theme2+#
			labs(x = "Climate Variable", y = expression(bold(paste("Effect on BAI (mm"^"2","y"^"-1",")"))))+#
			 theme(axis.line.x = element_line(color="black", size = 0.5),#
        axis.line.y = element_line(color="black", size = 0.5))
ggplot(data=ci.terms.graph[ci.terms.graph$Effect %in% "dbh.recon" & ci.terms.graph$x<=50, ]) + #
			facet_wrap(~Site, scales="free_x") +#
			geom_ribbon(aes(x=x, ymin=lwr, ymax=upr, fill=Site), alpha=0.5) +#
			geom_line(aes(x=x, y=mean, color=Site))+#
			#poster.theme2+#
			scale_color_manual(values=colors.use) +#
			scale_fill_manual(values=colors.use)+#
			labs(x = "Climate Variable", y = expression(bold(paste("Effect on BAI (mm"^"2","y"^"-1",")"))))
ggplot(data=ci.terms.graph[ci.terms.graph$Effect %in% "dbh.recon" & ci.terms.graph$x<=50, ]) + #
			facet_wrap(~Site, scales="free_x") +#
			geom_ribbon(aes(x=x, ymin=lwr, ymax=upr, fill=Site), alpha=0.5) +#
			geom_line(aes(x=x, y=mean, color=Site))+#
			#poster.theme2+#
			# scale_color_manual(values=colors.use) +#
			# scale_fill_manual(values=colors.use)+#
			labs(x = "Climate Variable", y = expression(bold(paste("Effect on BAI (mm"^"2","y"^"-1",")"))))
ggplot(data=ci.terms.graph[ci.terms.graph$Effect %in% "dbh.recon" & ci.terms.graph$x<=50, ]) + #
			#facet_wrap(~Site, scales="free_x") +#
			geom_ribbon(aes(x=x, ymin=lwr, ymax=upr, fill=Site), alpha=0.5) +#
			geom_line(aes(x=x, y=mean, color=Site))+#
			#poster.theme2+#
			# scale_color_manual(values=colors.use) +#
			# scale_fill_manual(values=colors.use)+#
			labs(x = "Climate Variable", y = expression(bold(paste("Effect on BAI (mm"^"2","y"^"-1",")"))))
ggplot(data=ci.terms.graph[ci.terms.graph$Effect %in% c("tmean", "precip"), ]) + #
			facet_grid(~Effect, scales="free_x") +#
			geom_ribbon(aes(x=x, ymin=lwr, ymax=upr, fill=Site), alpha=0.5) +#
			geom_line(aes(x=x, y=mean, color=Site))+#
			poster.theme2+#
			labs(x = "Climate Variable", y = expression(bold(paste("Effect on BAI (mm"^"2","y"^"-1",")"))))+#
			 theme(axis.line.x = element_line(color="black", size = 0.5),#
        axis.line.y = element_line(color="black", size = 0.5))
ggplot(data=ci.terms.graph[ci.terms.graph$Effect %in% c("tmean", "precip"), ]) + #
			facet_grid(~Effect, scales="free_x") +#
			geom_ribbon(aes(x=x, ymin=lwr, ymax=upr, fill=Site), alpha=0.5) +#
			geom_line(aes(x=x, y=mean, color=Site))+#
			geom_line(aes(y=0), line_type="dashed")
ggplot(data=ci.terms.graph[ci.terms.graph$Effect %in% c("tmean", "precip"), ]) + #
			facet_grid(~Effect, scales="free_x") +#
			geom_ribbon(aes(x=x, ymin=lwr, ymax=upr, fill=Site), alpha=0.5) +#
			geom_line(aes(x=x, y=mean, color=Site))+#
			geom_line(aes(y=0), type="dashed")
ggplot(data=ci.terms.graph[ci.terms.graph$Effect %in% c("tmean", "precip"), ]) + #
			facet_grid(~Effect, scales="free_x") +#
			geom_ribbon(aes(x=x, ymin=lwr, ymax=upr, fill=Site), alpha=0.5) +#
			geom_line(aes(x=x, y=mean, color=Site))+#
			geom_hline(yintercept=0, linetype="solid")
ggplot(data=ci.terms.graph[ci.terms.graph$Effect %in% c("tmean", "precip"), ]) + #
			facet_grid(~Effect, scales="free_x") +#
			geom_ribbon(aes(x=x, ymin=lwr, ymax=upr, fill=Site), alpha=0.5) +#
			geom_line(aes(x=x, y=mean, color=Site))+#
			geom_hline(yintercept=0, linetype="solid") +#
			poster.theme2+#
			labs(x = "Climate Variable", y = expression(bold(paste("Effect on BAI (mm"^"2","y"^"-1",")"))))+#
			 theme(axis.line.x = element_line(color="black", size = 0.5),#
        axis.line.y = element_line(color="black", size = 0.5))
ggplot(data=ci.terms.graph[ci.terms.graph$Effect %in% c("tmean", "precip"), ]) + #
			facet_grid(~Effect, scales="free_x") +#
			geom_ribbon(aes(x=x, ymin=lwr, ymax=upr, fill=Site), alpha=0.5) +#
			geom_line(aes(x=x, y=mean, color=Site))+#
			geom_hline(yintercept=0, linetype="dashed") +#
			poster.theme2+#
			labs(x = "Climate Variable", y = expression(bold(paste("Effect on BAI (mm"^"2","y"^"-1",")"))))+#
			 theme(axis.line.x = element_line(color="black", size = 0.5),#
        axis.line.y = element_line(color="black", size = 0.5))
pdf("figures/gam4_sensitivities.pdf", width= 13, height = 8.5)#
		ggplot(data=ci.terms.graph[ci.terms.graph$Effect %in% c("tmean", "precip"), ]) + #
			facet_grid(~Effect, scales="free_x") +#
			geom_ribbon(aes(x=x, ymin=lwr, ymax=upr, fill=Site), alpha=0.5) +#
			geom_line(aes(x=x, y=mean, color=Site))+#
			geom_hline(yintercept=0, linetype="dashed") +#
			poster.theme2+#
			labs(x = "Climate Variable", y = expression(bold(paste("Effect on BAI (mm"^"2","y"^"-1",")"))))+#
			 theme(axis.line.x = element_line(color="black", size = 0.5),#
        axis.line.y = element_line(color="black", size = 0.5))#
dev.off()
ggplot(data=ci.terms.graph[ci.terms.graph$Effect %in% "dbh.recon" & ci.terms.graph$x<=50, ]) + #
			#facet_wrap(~Site, scales="free_x") +#
			geom_ribbon(aes(x=x, ymin=lwr, ymax=upr, fill=Site), alpha=0.5) +#
			geom_line(aes(x=x, y=mean, color=Site))+#
			geom_hline(yintercept=0, linetype="dashed") +#
			#poster.theme2+#
			# scale_color_manual(values=colors.use) +#
			# scale_fill_manual(values=colors.use)+#
			labs(x = "Climate Variable", y = expression(bold(paste("Effect on BAI (mm"^"2","y"^"-1",")"))))
ggplot(data=ci.terms.graph[ci.terms.graph$Effect %in% "dbh.recon" & ci.terms.graph$x<=50, ]) + #
			#facet_wrap(~Site, scales="free_x") +#
			geom_ribbon(aes(x=x, ymin=lwr, ymax=upr, fill=Site), alpha=0.5) +#
			geom_line(aes(x=x, y=mean, color=Site))+#
			geom_hline(yintercept=0, linetype="dashed") +#
			#poster.theme2+#
			# scale_color_manual(values=colors.use) +#
			# scale_fill_manual(values=colors.use)+#
			labs(x = "Climate Variable", y = expression(bold(paste("Effect on BAI (mm"^"2","y"^"-1",")"))))+#
				poster.theme2+#
			labs(x = "Climate Variable", y = expression(bold(paste("Effect on BAI (mm"^"2","y"^"-1",")"))))+#
			 theme(axis.line.x = element_line(color="black", size = 0.5),#
        axis.line.y = element_line(color="black", size = 0.5))
pdf("figures/gam4_sensitivities.pdf", width= 13, height = 8.5)#
		ggplot(data=ci.terms.graph[ci.terms.graph$Effect %in% c("tmean", "precip"), ]) + #
			facet_grid(~Effect, scales="free_x") +#
			geom_ribbon(aes(x=x, ymin=lwr, ymax=upr, fill=Site), alpha=0.5) +#
			geom_line(aes(x=x, y=mean, color=Site))+#
			geom_hline(yintercept=0, linetype="dashed") +#
			poster.theme2+#
			labs(x = "Climate Variable", y = expression(bold(paste("Effect on BAI (mm"^"2","y"^"-1",")"))))+#
			 theme(axis.line.x = element_line(color="black", size = 0.5),#
        axis.line.y = element_line(color="black", size = 0.5))#
dev.off()#
#
pdf("figures/gam4_sensitivities_size.pdf", width= 13, height = 8.5)#
		ggplot(data=ci.terms.graph[ci.terms.graph$Effect %in% "dbh.recon" & ci.terms.graph$x<=50, ]) + #
			#facet_wrap(~Site, scales="free_x") +#
			geom_ribbon(aes(x=x, ymin=lwr, ymax=upr, fill=Site), alpha=0.5) +#
			geom_line(aes(x=x, y=mean, color=Site))+#
			geom_hline(yintercept=0, linetype="dashed") +#
			#poster.theme2+#
			# scale_color_manual(values=colors.use) +#
			# scale_fill_manual(values=colors.use)+#
			labs(x = "Climate Variable", y = expression(bold(paste("Effect on BAI (mm"^"2","y"^"-1",")"))))+#
				poster.theme2+#
			labs(x = "Climate Variable", y = expression(bold(paste("Effect on BAI (mm"^"2","y"^"-1",")"))))+#
			 theme(axis.line.x = element_line(color="black", size = 0.5),#
        axis.line.y = element_line(color="black", size = 0.5))#
dev.off()
load("processed_data/gam_results/gam4_Site_level_model.Rdata")
n <- 100#
model.pred <- post.distns(model.gam=gam4, model.name="species_response", newdata=test, vars=predictors.all, n=n, terms=F)#
summary(model.pred$ci)
source("0_Calculate_GAMM_Posteriors.R")
n <- 100#
model.pred <- post.distns(model.gam=gam4, model.name="species_response", newdata=test, vars=predictors.all, n=n, terms=F)#
summary(model.pred$ci)
# Need help dealing with the list that is set up here.  Need help with the aggregation#
model.pred2 <- model.pred$ci#
summary(model.pred2)#
dim(model.pred2)
mean.model <- aggregate(model.pred2$mean, by = model.pred2[, c("Site", "Year")], FUN=mean, na.rm=T)
names(mean.model)[names(mean.model)=="x"] <- c("BAI.mean") #
mean.model[,"BAI.lwr"] <- aggregate(model.pred2$mean, by=model.pred2[,c("Site", "Year")], FUN=quantile, probs=0.025, na.rm=T)[,"x"]#
mean.model[,"BAI.upr"] <- aggregate(model.pred2$mean, by=model.pred2[,c("Site", "Year")], FUN=quantile, probs=0.975, na.rm=T)[,"x"]#
head(mean.model)
# aggregating the raw data for graphing#
mean.rw <- aggregate(test$BA.inc, by=test[, c("Site", "Year")], FUN=mean, na.rm=T)#
names(mean.rw)[names(mean.rw)=="x"]<- c("BAI.mean")                  #
# mean.rw[,"rw.lwr"] <- aggregate(test$RW, by=test[,c("group", "Site", "Year")], FUN=quantile, probs=0.025, na.rm=T)[,"x"]#
# mean.rw[,"rw.upr"] <- aggregate(test$RW, by=test[,c("group", "Site", "Year")], FUN=quantile, probs=0.975, na.rm=T)[,"x"]#
# mean.rw[,"BAI.mean"] <- aggregate(test$BA.inc, by=test[,c("group", "Site", "Year")], FUN=mean, na.rm=T)[,"x"]#
mean.rw[,"BAI.lwr"] <- aggregate(test$BA.inc, by=test[,c("Site", "Year")], FUN=quantile, probs=0.025, na.rm=T)[,"x"]#
mean.rw[,"BAI.upr"] <- aggregate(test$BA.inc, by=test[,c("Site", "Year")], FUN=quantile, probs=0.975, na.rm=T)[,"x"]
head(mean.rw)
mean.rw <- mean.rw[mean.rw$Site %in% sites.use,]#
#
#mean.rw$Species <- mean.rw$group#
#
# Setting up lm between the modeled values and the observed	#
dim(mean.rw)#
dim(mean.model)#
#
# mean.rw <- mean.rw[mean.rw$group %in% mean.model$group,]#
# mean.rw <- mean.rw[mean.rw$Year %in% mean.model$Year,]#
#
summary(mean.rw); #
summary(mean.model)#
#
mean.model2 <- mean.model
names(mean.model2)[3:5] <- c("mod.mean", "mod.lwr", "mod.up")
sanity.gam3.df <- merge(mean.model2, mean.rw, all.x=T, all.y=T)#
summary(sanity.gam3.df)#
summary(sanity.gam3.df[is.na(sanity.gam3.df$mod.mean),])#
head(sanity.gam3.df[is.na(sanity.gam3.df$mod.mean),])
sanity.gam3.df <- merge(mean.model2, mean.rw, all.x=T, all.y=T)
summary(sanity.gam3.df)
summary(sanity.gam3.df[is.na(sanity.gam3.df$mod.mean),])
summary(sanity.gam3.df)
summary(sanity.gam3.df[is.na(sanity.gam3.df$mod.mean),])
head(sanity.gam3.df[is.na(sanity.gam3.df$mod.mean),])
sanity.gam3.df$log.BAI <- log(sanity.gam3.df$BAI.mean)
# LM on aggregated BAI#
sanity.lm3 <- lm(mod.mean ~ log.BAI, data=sanity.gam3.df)#
lm3.resid <- resid(sanity.lm3)#
#
summary(sanity.lm3)
sanity.lm3 <- lm(mod.mean ~ log.BAI, data=sanity.gam3.df)#
lm3.resid <- resid(sanity.lm3)#
#
summary(sanity.lm3)
plot(sanity.gam3.df$log.BAI ~ lm3.resid, xlab="Log.BAI", ylab="Residuals", main="GAM3 residuals", ylim=c(-4,4))#
abline(0,0)
ggplot(data=mean.rw) + facet_wrap(group.cc ~ Site, scales="fixed") + theme_bw() +#
	# plot the data#
	geom_ribbon(aes(x=Year, ymin=BAI.lwr, ymax=BAI.upr), alpha=0.5) +#
	geom_line(aes(x=Year, y=BAI.mean), size=1) +#
	# Plot our model#
	geom_ribbon(data=mean.model, aes(x=Year, ymin=exp(BAI.lwr), ymax=exp(BAI.upr)), fill="red3", alpha=0.3) +#
	geom_line(data=mean.model, aes(x=Year, y=exp(BAI.mean)), color="red3", alpha=0.8, size=1) +#
	labs(title="Gamm Model vs. Data", x="Year", y="BAI")
ggplot(data=mean.rw) + facet_wrap(Site~., scales="fixed") + theme_bw() +#
	# plot the data#
	geom_ribbon(aes(x=Year, ymin=BAI.lwr, ymax=BAI.upr), alpha=0.5) +#
	geom_line(aes(x=Year, y=BAI.mean), size=1) +#
	# Plot our model#
	geom_ribbon(data=mean.model, aes(x=Year, ymin=exp(BAI.lwr), ymax=exp(BAI.upr)), fill="red3", alpha=0.3) +#
	geom_line(data=mean.model, aes(x=Year, y=exp(BAI.mean)), color="red3", alpha=0.8, size=1) +#
	labs(title="Gamm Model vs. Data", x="Year", y="BAI")
ggplot(data=mean.rw) + facet_wrap(~Site, scales="fixed") + theme_bw() +#
	# plot the data#
	geom_ribbon(aes(x=Year, ymin=BAI.lwr, ymax=BAI.upr), alpha=0.5) +#
	geom_line(aes(x=Year, y=BAI.mean), size=1) +#
	# Plot our model#
	geom_ribbon(data=mean.model, aes(x=Year, ymin=exp(BAI.lwr), ymax=exp(BAI.upr)), fill="red3", alpha=0.3) +#
	geom_line(data=mean.model, aes(x=Year, y=exp(BAI.mean)), color="red3", alpha=0.8, size=1) +#
	labs(title="Gamm Model vs. Data", x="Year", y="BAI")
n <- 10#
data.use2 <- data.use[data.use$Site %in% sites.use,]#
data.use2 <- data.use2[data.use2$group %in% group.use,]#
#
sanity2.trees <- sample(test2$TreeID, size=n, replace=F) #
summary(sanity2.trees)#
#
summary(mean.rw)#
summary(data.use)#
summary(model.pred2)
ggplot(data=test[test$TreeID %in% sanity2.trees,]) + facet_wrap(TreeID~ Site, scales="fixed") + theme_bw() +#
	# plot the data#
	#geom_ribbon(aes(x=Year, ymin=rw.lwr, ymax=rw.upr), alpha=0.5) +#
	geom_line(aes(x=Year, y=BA.inc), size=1) +#
	# Plot our model#
	#geom_ribbon(data=model.pred2[model.pred2$TreeID %in% sanity2.trees,], aes(x=Year, ymin=rw.lwr, ymax=rw.upr), fill="red3", alpha=0.3) +#
	geom_line(data=model.pred2[model.pred2$TreeID %in% sanity2.trees,], aes(x=Year, y= exp(mean)), color="red3", alpha=0.8, size=1) +#
	labs(title="Gamm Model vs. Data Indiv. Trees", x="Year", y="RW")
ggplot(data=test[test$TreeID %in% sanity2.trees,]) + facet_wrap(TreeID~ Site, scales="fixed") + theme_bw() +#
	# plot the data#
	#geom_ribbon(aes(x=Year, ymin=rw.lwr, ymax=rw.upr), alpha=0.5) +#
	geom_line(aes(x=Year, y=BA.inc), size=1) +#
	# Plot our model#
	#geom_ribbon(data=model.pred2[model.pred2$TreeID %in% sanity2.trees,], aes(x=Year, ymin=rw.lwr, ymax=rw.upr), fill="red3", alpha=0.3) +#
	geom_line(data=model.pred2[model.pred2$TreeID %in% sanity2.trees,], aes(x=Year, y= exp(mean)), color="red3", alpha=0.8, size=1) +#
	labs(title="Gamm Model vs. Data Indiv. Trees", x="Year", y="RW")
# lm2 for sanity check 2#
summary(model.pred2)#
summary(data.use)#
summary(test)#
#
model.pred2$RW <- test$RW#
model.pred2$BAI <- test$BA.inc#
#
# LM for indiv. trees#
sanity.lm2 <- lm(BAI ~ mean, data=model.pred2)#
summary(sanity.lm2)#
#
# sanity.lm2.quru <- lm(RW ~ mean, data=model.pred2[model.pred2$group=="quru",])#
# summary(sanity.lm2)#
# running scripts to get the weights#
source("0_Calculate_GAMM_Weights.R")#
# test2 <- test[test$group %in% c("QURU", "ACRU") & test$Year>=1980,]#
# test2 <- test[test$group %in% c("QURU") & test$Year>=1980,]#
# summary(test2)#
# gam1.test <- gamm(RW ~ s(tmean, k=3, by=group) + # tmean*Species #
#                   s(precip, k=3, by=group) +#
#                   s(dbh.recon, k=3, by=group.plot) +#
#                   Canopy.Class, #
#                   random=list(Site=~1, PlotID=~1),#
#                   data=test2)#
#
predictors.all#
vars <- c("tmean", "precip", "dbh.recon", "Canopy.Class", "group.plot", "group", "group.cc")#
gam4.weights <- factor.weights(model.gam = gam4, model.name = "species_response", newdata = test, extent = "", vars = vars, limiting=T)#
#
summary(gam4.weights)#
summary(test2)#
gam4.weights[,c("BA.inc", "group", "group.cc")] <- test[,c("BA.inc", "group", "group.cc")] # Adding in factors we forgot
# Just the weights of tmean and Precip, ignoring size#
vars2 <- c("fit.tmean", "fit.precip")#
fit.spline2 <- rowSums(abs(gam4.weights[,vars2]), na.rm=T)#
for(v in vars2){#
	gam4.weights[,paste("weight", v, "2", sep=".")] <- gam4.weights[,v]/fit.spline2#
}#
summary(gam4.weights)
cols.weights <- c("weight.fit.tmean.2", "weight.fit.precip.2")#
for(i in 1:nrow(gam4.weights)){#
	fweight <- abs(gam4.weights[i,cols.weights])#
	gam4.weights[i,"max2"] <- max(fweight, na.rm=T)#
	gam4.weights[i,"factor.max2"] <- c("tmean", "precip")[which(fweight==max(fweight))]#
}#
gam4.weights$factor.max2 <- as.factor(gam4.weights$factor.max2)#
summary(gam4.weights)
save(gam4.weights, file="processed_data/gamm_weights/gam4_weights.Rdata")
library(ggplot2)#
library(stringr)#
load(file="processed_data/gamm_weights/gam4_weights.Rdata")#
#
summary(gam4.weights)#
factors.fits <- c("fit.tmean", "fit.precip", "fit.dbh.recon", "fit.full", "BA.inc")#
factors.weights <- c("weight.tmean", "weight.dbh.recon", "weight.precip")
# Transforming things back to BA.inc rather than log#
gam4.weights[,which(substr(names(gam4.weights),1,3)=="fit")] <- exp(gam4.weights[,which(substr(names(gam4.weights),1,3)=="fit")] )#
othervars <- c("Year", "Site", "group.cc", "Model")#
#
data.graph1 <- aggregate(gam4.weights[,factors.fits], by = gam4.weights[,othervars], FUN= mean, na.rm=T)#
#
data.graph1[,paste(factors.fits, "upr", sep=".")] <- aggregate(gam4.weights[,factors.fits], by = gam4.weights[,othervars], FUN= quantile, prob= 0.975, na.rm=T)[,factors.fits]#
#
data.graph1[,paste(factors.fits, "lwr", sep=".")] <- aggregate(gam4.weights[,factors.fits], by = gam4.weights[,othervars], FUN= quantile, prob= 0.025, na.rm=T)[,factors.fits]#
#
summary(data.graph1)#
#
data.graph2 <- aggregate(abs(gam4.weights[,factors.weights]), by = gam4.weights[,othervars], FUN= mean, na.rm=T)#
#
data.graph2[,paste(factors.weights, "upr", sep=".")] <- aggregate(abs(gam4.weights[,factors.weights]), by = gam4.weights[,othervars], FUN= quantile, prob= 0.975, na.rm=T)[,factors.weights]#
#
data.graph2[,paste(factors.weights, "lwr", sep=".")] <- aggregate(abs(gam4.weights[,factors.weights]), by = gam4.weights[,othervars], FUN= quantile, prob= 0.025, na.rm=T)[,factors.weights]#
#
summary(data.graph2)#
#
data.graph <- merge(data.graph1, data.graph2, all.x=T, all.y=T)#
#
# data.graph <- gam4.weights[gam4.weights$TreeID== "MMA014",]#
summary(data.graph)#
gam4.weights$wts.check <- rowSums(abs(gam4.weights[,c("weight.tmean", "weight.precip", "weight.dbh.recon")]))#
data.graph$wts.check <- rowSums(abs(data.graph[,c("weight.tmean", "weight.precip", "weight.dbh.recon")]))#
#
summary(gam4.weights)#
summary(data.graph)
data.graph<- data.graph[order(data.graph$Year, data.graph$group.cc, data.graph$Site, decreasing=F),]
plot.rgb <- function(STATE, GC, SIZE){	geom_line(data=data.graph[data.graph$State==STATE,],aes(x=Year, y=fit.full), size=SIZE,#
  		        color=rgb(abs(data.graph[data.graph$State==STATE,"weight.tmean"     ]), # red#
                        abs(data.graph[data.graph$State==STATE,"weight.dbh.recon"     ]), # green#
                        abs(data.graph[data.graph$State==STATE,"weight.precip"   ]))) }   # blue
# Plotting the Obs and modeled with influence coloring#
data.graph$State <- recode(data.graph$Site, "'Howland' = 'ME';'Harvard' = 'MA';'Morgan Monroe State Park' = 'IN';'Missouri Ozark' = 'MO';'Oak Openings Toledo' = 'OH'")#
data.graph$State <- factor(data.graph$State, levels=c("MO", "IN", "OH", "MA", "ME"))#
#
for(i in unique(data.graph$group.cc)){#
	data.graph[data.graph$group.cc==i,"Canopy.Class"] <- str_sub(data.graph[data.graph$group.cc==i,"group.cc"], -1)#
	data.graph[data.graph$group.cc==i,"group"] <- substr(data.graph[data.graph$group.cc==i,"group.cc"], 1,4)#
}#
data.graph$Canopy.Class <- as.factor(data.graph$Canopy.Class)#
data.graph$group <- as.factor(data.graph$group)#
summary(data.graph)
ggplot(data = data.graph) + #
	facet_grid( ~ State) +#
	scale_x_continuous(expand=c(0,0), name="Year") +#
	scale_y_continuous(expand=c(0,0), name="BAI") +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_line(aes(x=Year, y=BA.inc), size=2, alpha=0.5) +#
	geom_ribbon(aes(x=Year, ymin=BA.inc.lwr, ymax=BA.inc.upr), alpha=0.3) +#
	geom_line(aes(x=Year, y = 0), linetype="dashed")
summary(data.graph)
load(file="processed_data/gamm_weights/gam4_weights.Rdata")
summary(gam4.weights)
factors.fits <- c("fit.tmean", "fit.precip", "fit.dbh.recon", "fit.full", "BA.inc")#
factors.weights <- c("weight.tmean", "weight.dbh.recon", "weight.precip")
gam4.weights[,which(substr(names(gam4.weights),1,3)=="fit")] <- exp(gam4.weights[,which(substr(names(gam4.weights),1,3)=="fit")] )#
othervars <- c("Year", "Site", "group.cc", "Model")#
#
data.graph1 <- aggregate(gam4.weights[,factors.fits], by = gam4.weights[,othervars], FUN= mean, na.rm=T)#
#
data.graph1[,paste(factors.fits, "upr", sep=".")] <- aggregate(gam4.weights[,factors.fits], by = gam4.weights[,othervars], FUN= quantile, prob= 0.975, na.rm=T)[,factors.fits]#
#
data.graph1[,paste(factors.fits, "lwr", sep=".")] <- aggregate(gam4.weights[,factors.fits], by = gam4.weights[,othervars], FUN= quantile, prob= 0.025, na.rm=T)[,factors.fits]#
#
summary(data.graph1)
data.graph2 <- aggregate(abs(gam4.weights[,factors.weights]), by = gam4.weights[,othervars], FUN= mean, na.rm=T)#
#
data.graph2[,paste(factors.weights, "upr", sep=".")] <- aggregate(abs(gam4.weights[,factors.weights]), by = gam4.weights[,othervars], FUN= quantile, prob= 0.975, na.rm=T)[,factors.weights]#
#
data.graph2[,paste(factors.weights, "lwr", sep=".")] <- aggregate(abs(gam4.weights[,factors.weights]), by = gam4.weights[,othervars], FUN= quantile, prob= 0.025, na.rm=T)[,factors.weights]#
#
summary(data.graph2)
data.graph <- merge(data.graph1, data.graph2, all.x=T, all.y=T)#
#
# data.graph <- gam4.weights[gam4.weights$TreeID== "MMA014",]#
summary(data.graph)#
gam4.weights$wts.check <- rowSums(abs(gam4.weights[,c("weight.tmean", "weight.precip", "weight.dbh.recon")]))#
data.graph$wts.check <- rowSums(abs(data.graph[,c("weight.tmean", "weight.precip", "weight.dbh.recon")]))#
#
summary(gam4.weights)#
summary(data.graph)
data.graph<- data.graph[order(data.graph$Year, data.graph$group.cc, data.graph$Site, decreasing=F),]
plot.rgb <- function(STATE, GC, SIZE){	geom_line(data=data.graph[data.graph$State==STATE,],aes(x=Year, y=fit.full), size=SIZE,#
  		        color=rgb(abs(data.graph[data.graph$State==STATE,"weight.tmean"     ]), # red#
                        abs(data.graph[data.graph$State==STATE,"weight.dbh.recon"     ]), # green#
                        abs(data.graph[data.graph$State==STATE,"weight.precip"   ]))) }   # blue
data.graph$State <- recode(data.graph$Site, "'Howland' = 'ME';'Harvard' = 'MA';'Morgan Monroe State Park' = 'IN';'Missouri Ozark' = 'MO';'Oak Openings Toledo' = 'OH'")#
data.graph$State <- factor(data.graph$State, levels=c("MO", "IN", "OH", "MA", "ME"))
for(i in unique(data.graph$group.cc)){#
	data.graph[data.graph$group.cc==i,"Canopy.Class"] <- str_sub(data.graph[data.graph$group.cc==i,"group.cc"], -1)#
	data.graph[data.graph$group.cc==i,"group"] <- substr(data.graph[data.graph$group.cc==i,"group.cc"], 1,4)#
}#
data.graph$Canopy.Class <- as.factor(data.graph$Canopy.Class)#
data.graph$group <- as.factor(data.graph$group)#
summary(data.graph)
ggplot(data = data.graph) + #
	facet_grid( ~ State) +#
	scale_x_continuous(expand=c(0,0), name="Year") +#
	scale_y_continuous(expand=c(0,0), name="BAI") +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_line(aes(x=Year, y=BA.inc), size=2, alpha=0.5)
ggplot(data = data.graph) + #
	facet_grid(State~.) +#
	scale_x_continuous(expand=c(0,0), name="Year") +#
	scale_y_continuous(expand=c(0,0), name="BAI") +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_line(aes(x=Year, y=BA.inc), size=2, alpha=0.5)
ggplot(data=mean.rw) + facet_wrap(~Site, scales="fixed") + theme_bw() +#
	# plot the data#
	geom_ribbon(aes(x=Year, ymin=BAI.lwr, ymax=BAI.upr), alpha=0.5) +#
	geom_line(aes(x=Year, y=BAI.mean), size=1) +#
	# Plot our model#
	geom_ribbon(data=mean.model, aes(x=Year, ymin=exp(BAI.lwr), ymax=exp(BAI.upr)), fill="red3", alpha=0.3) +#
	geom_line(data=mean.model, aes(x=Year, y=exp(BAI.mean)), color="red3", alpha=0.8, size=1) +#
	labs(title="Gamm Model vs. Data", x="Year", y="BAI")
summary(gam4.weights)
ggplot(data = data.graph) + #
	facet_grid(State~.) +#
	scale_x_continuous(expand=c(0,0), name="Year") +#
	scale_y_continuous(expand=c(0,0), name="BAI") +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam1.weights[gam1.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_line(aes(x=Year, y=mean(BA.inc)), size=2, alpha=0.5)
load(file="processed_data/gamm_weights/gam4_weights.Rdata")
library(ggplot2)#
library(car)#
load(file="processed_data/gamm_weights/gam4_weights.Rdata")#
#
summary(gam4.weights)#
factors.fits <- c("fit.tmean", "fit.precip", "fit.dbh.recon", "fit.full", "BA.inc")#
factors.weights <- c("weight.tmean", "weight.dbh.recon", "weight.precip")#
#
# Transforming things back to BA.inc rather than log#
gam4.weights[,which(substr(names(gam4.weights),1,3)=="fit")] <- exp(gam4.weights[,which(substr(names(gam4.weights),1,3)=="fit")] )#
#
othervars <- c("Year", "Site", "group", "Model")#
#
data.graph1 <- aggregate(gam4.weights[,factors.fits], by = gam4.weights[,othervars], FUN= mean, na.rm=T)#
#
data.graph1[,paste(factors.fits, "upr", sep=".")] <- aggregate(gam4.weights[,factors.fits], by = gam4.weights[,othervars], FUN= quantile, prob= 0.975, na.rm=T)[,factors.fits]#
#
data.graph1[,paste(factors.fits, "lwr", sep=".")] <- aggregate(gam4.weights[,factors.fits], by = gam4.weights[,othervars], FUN= quantile, prob= 0.025, na.rm=T)[,factors.fits]#
#
summary(data.graph1)#
#
data.graph2 <- aggregate(abs(gam4.weights[,factors.weights]), by = gam4.weights[,othervars], FUN= mean, na.rm=T)#
#
data.graph2[,paste(factors.weights, "upr", sep=".")] <- aggregate(abs(gam4.weights[,factors.weights]), by = gam4.weights[,othervars], FUN= quantile, prob= 0.975, na.rm=T)[,factors.weights]#
#
data.graph2[,paste(factors.weights, "lwr", sep=".")] <- aggregate(abs(gam4.weights[,factors.weights]), by = gam4.weights[,othervars], FUN= quantile, prob= 0.025, na.rm=T)[,factors.weights]#
#
summary(data.graph2)#
#
data.graph <- merge(data.graph1, data.graph2, all.x=T, all.y=T)#
#
# data.graph <- gam4.weights[gam4.weights$TreeID== "MMA014",]#
summary(data.graph)#
gam4.weights$wts.check <- rowSums(abs(gam4.weights[,c("weight.tmean", "weight.precip", "weight.dbh.recon")]))#
data.graph$wts.check <- rowSums(abs(data.graph[,c("weight.tmean", "weight.precip", "weight.dbh.recon")]))#
#
summary(gam4.weights)#
summary(data.graph)
plot.rgb <- function(STATE, SPP, SIZE){	geom_line(data=data.graph[data.graph$State==STATE,],aes(x=Year, y=fit.full), size=SIZE,#
  		        color=rgb(abs(data.graph[data.graph$State==STATE,"weight.tmean"     ]), # red#
                        abs(data.graph[data.graph$State==STATE,"weight.dbh.recon"     ]), # green#
                        abs(data.graph[data.graph$State==STATE,"weight.precip"   ]))) }   # blue
library(ggplot2)#
library(car)#
load(file="processed_data/gamm_weights/gam4_weights.Rdata")#
#
summary(gam4.weights)#
factors.fits <- c("fit.tmean", "fit.precip", "fit.dbh.recon", "fit.full", "BA.inc")#
factors.weights <- c("weight.tmean", "weight.dbh.recon", "weight.precip")#
#
# Transforming things back to BA.inc rather than log#
gam4.weights[,which(substr(names(gam4.weights),1,3)=="fit")] <- exp(gam4.weights[,which(substr(names(gam4.weights),1,3)=="fit")] )#
#
othervars <- c("Year", "Site", "group", "Model")#
#
data.graph1 <- aggregate(gam4.weights[,factors.fits], by = gam4.weights[,othervars], FUN= mean, na.rm=T)#
#
data.graph1[,paste(factors.fits, "upr", sep=".")] <- aggregate(gam4.weights[,factors.fits], by = gam4.weights[,othervars], FUN= quantile, prob= 0.975, na.rm=T)[,factors.fits]#
#
data.graph1[,paste(factors.fits, "lwr", sep=".")] <- aggregate(gam4.weights[,factors.fits], by = gam4.weights[,othervars], FUN= quantile, prob= 0.025, na.rm=T)[,factors.fits]#
#
summary(data.graph1)#
#
data.graph2 <- aggregate(abs(gam4.weights[,factors.weights]), by = gam4.weights[,othervars], FUN= mean, na.rm=T)#
#
data.graph2[,paste(factors.weights, "upr", sep=".")] <- aggregate(abs(gam4.weights[,factors.weights]), by = gam4.weights[,othervars], FUN= quantile, prob= 0.975, na.rm=T)[,factors.weights]#
#
data.graph2[,paste(factors.weights, "lwr", sep=".")] <- aggregate(abs(gam4.weights[,factors.weights]), by = gam4.weights[,othervars], FUN= quantile, prob= 0.025, na.rm=T)[,factors.weights]#
#
summary(data.graph2)#
#
data.graph <- merge(data.graph1, data.graph2, all.x=T, all.y=T)#
#
# data.graph <- gam4.weights[gam4.weights$TreeID== "MMA014",]#
summary(data.graph)#
gam4.weights$wts.check <- rowSums(abs(gam4.weights[,c("weight.tmean", "weight.precip", "weight.dbh.recon")]))#
data.graph$wts.check <- rowSums(abs(data.graph[,c("weight.tmean", "weight.precip", "weight.dbh.recon")]))#
#
summary(gam4.weights)#
summary(data.graph)#
#
# Ordering the data for graphing#
#
data.graph<- data.graph[order(data.graph$Year, data.graph$group, data.graph$Site, decreasing=F),]#
summary(data.graph)#
#
plot.rgb <- function(STATE, SPP, SIZE){	geom_line(data=data.graph[data.graph$State==STATE,],aes(x=Year, y=fit.full), size=SIZE,#
  		        color=rgb(abs(data.graph[data.graph$State==STATE,"weight.tmean"     ]), # red#
                        abs(data.graph[data.graph$State==STATE,"weight.dbh.recon"     ]), # green#
                        abs(data.graph[data.graph$State==STATE,"weight.precip"   ]))) }   # blue
# Plotting the Obs and modeled with influence coloring#
data.graph$State <- recode(data.graph$Site, "'Howland' = 'ME';'Harvard' = 'MA';'Morgan Monroe State Park' = 'IN';'Missouri Ozark' = 'MO';'Oak Openings Toledo' = 'OH'")#
data.graph$State <- factor(data.graph$State, levels=c("MO", "IN", "OH", "MA", "ME"))
ggplot(data.graph) + facet_grid(group~State) +#
	scale_x_continuous(expand=c(0,0)) +#
	scale_y_continuous(expand=c(0,0)) +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam4.weights[gam4.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_line(aes(x=Year, y=BA.inc), size=2, alpha=0.5) +#
	geom_ribbon(aes(x=Year, ymin=BA.inc.lwr, ymax=BA.inc.upr), alpha=0.3)
ggplot(data.graph) + facet_grid(group~State) +#
	scale_x_continuous(expand=c(0,0)) +#
	scale_y_continuous(expand=c(0,0)) +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam4.weights[gam4.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_line(aes(x=Year, y=BA.inc), size=2, alpha=0.5) +#
	geom_ribbon(aes(x=Year, ymin=BA.inc.lwr, ymax=BA.inc.upr), alpha=0.3) +#
	geom_line(aes(x=Year, y = 0), linetype="dashed") +#
	plot.rgb("MA", 3) +#
	plot.rgb("ME", 3) +#
	plot.rgb("OH", 3) +#
	plot.rgb("IN", 3) +#
	plot.rgb("MO", 3) +#
	labs(title= "Site", x="Year", y = expression(bold(paste("BAI (mm"^"2", "y"^"-1",")")))) +#
	poster.theme2
plot.rgb <- function(STATE,SIZE){	geom_line(data=data.graph[data.graph$State==STATE,],aes(x=Year, y=fit.full), size=SIZE,#
  		        color=rgb(abs(data.graph[data.graph$State==STATE,"weight.tmean"     ]), # red#
                        abs(data.graph[data.graph$State==STATE,"weight.dbh.recon"     ]), # green#
                        abs(data.graph[data.graph$State==STATE,"weight.precip"   ]))) }   # blue
ggplot(data.graph) + facet_grid(group~State) +#
	scale_x_continuous(expand=c(0,0)) +#
	scale_y_continuous(expand=c(0,0)) +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam4.weights[gam4.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_line(aes(x=Year, y=BA.inc), size=2, alpha=0.5) +#
	geom_ribbon(aes(x=Year, ymin=BA.inc.lwr, ymax=BA.inc.upr), alpha=0.3) +#
	geom_line(aes(x=Year, y = 0), linetype="dashed") +#
	plot.rgb("MA", 3) +#
	plot.rgb("ME", 3) +#
	plot.rgb("OH", 3) +#
	plot.rgb("IN", 3) +#
	plot.rgb("MO", 3) +#
	labs(title= "Site", x="Year", y = expression(bold(paste("BAI (mm"^"2", "y"^"-1",")")))) +#
	poster.theme2
ggplot(data.graph) + facet_grid(~State) +#
	scale_x_continuous(expand=c(0,0)) +#
	scale_y_continuous(expand=c(0,0)) +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam4.weights[gam4.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_line(aes(x=Year, y=BA.inc), size=2, alpha=0.5) +#
	geom_ribbon(aes(x=Year, ymin=BA.inc.lwr, ymax=BA.inc.upr), alpha=0.3) +#
	geom_line(aes(x=Year, y = 0), linetype="dashed") +#
	plot.rgb("MA", 3) +#
	plot.rgb("ME", 3) +#
	plot.rgb("OH", 3) +#
	plot.rgb("IN", 3) +#
	plot.rgb("MO", 3) +#
	labs(title= "Site", x="Year", y = expression(bold(paste("BAI (mm"^"2", "y"^"-1",")")))) +#
	poster.theme2
othervars <- c("Year", "Site","Model")
library(ggplot2)#
library(car)#
load(file="processed_data/gamm_weights/gam4_weights.Rdata")#
#
summary(gam4.weights)#
factors.fits <- c("fit.tmean", "fit.precip", "fit.dbh.recon", "fit.full", "BA.inc")#
factors.weights <- c("weight.tmean", "weight.dbh.recon", "weight.precip")#
#
# Transforming things back to BA.inc rather than log#
gam4.weights[,which(substr(names(gam4.weights),1,3)=="fit")] <- exp(gam4.weights[,which(substr(names(gam4.weights),1,3)=="fit")] )#
#
othervars <- c("Year", "Site","Model")#
#
data.graph1 <- aggregate(gam4.weights[,factors.fits], by = gam4.weights[,othervars], FUN= mean, na.rm=T)#
#
data.graph1[,paste(factors.fits, "upr", sep=".")] <- aggregate(gam4.weights[,factors.fits], by = gam4.weights[,othervars], FUN= quantile, prob= 0.975, na.rm=T)[,factors.fits]#
#
data.graph1[,paste(factors.fits, "lwr", sep=".")] <- aggregate(gam4.weights[,factors.fits], by = gam4.weights[,othervars], FUN= quantile, prob= 0.025, na.rm=T)[,factors.fits]#
#
summary(data.graph1)#
#
data.graph2 <- aggregate(abs(gam4.weights[,factors.weights]), by = gam4.weights[,othervars], FUN= mean, na.rm=T)#
#
data.graph2[,paste(factors.weights, "upr", sep=".")] <- aggregate(abs(gam4.weights[,factors.weights]), by = gam4.weights[,othervars], FUN= quantile, prob= 0.975, na.rm=T)[,factors.weights]#
#
data.graph2[,paste(factors.weights, "lwr", sep=".")] <- aggregate(abs(gam4.weights[,factors.weights]), by = gam4.weights[,othervars], FUN= quantile, prob= 0.025, na.rm=T)[,factors.weights]#
#
summary(data.graph2)#
#
data.graph <- merge(data.graph1, data.graph2, all.x=T, all.y=T)#
#
# data.graph <- gam4.weights[gam4.weights$TreeID== "MMA014",]#
summary(data.graph)#
gam4.weights$wts.check <- rowSums(abs(gam4.weights[,c("weight.tmean", "weight.precip", "weight.dbh.recon")]))#
data.graph$wts.check <- rowSums(abs(data.graph[,c("weight.tmean", "weight.precip", "weight.dbh.recon")]))#
#
summary(gam4.weights)#
summary(data.graph)#
#
# Ordering the data for graphing#
#
data.graph<- data.graph[order(data.graph$Year, data.graph$group, data.graph$Site, decreasing=F),]#
summary(data.graph)#
#
plot.rgb <- function(STATE,SIZE){	geom_line(data=data.graph[data.graph$State==STATE,],aes(x=Year, y=fit.full), size=SIZE,#
  		        color=rgb(abs(data.graph[data.graph$State==STATE,"weight.tmean"     ]), # red#
                        abs(data.graph[data.graph$State==STATE,"weight.dbh.recon"     ]), # green#
                        abs(data.graph[data.graph$State==STATE,"weight.precip"   ]))) }   # blue#
#
# Plotting the Obs and modeled with influence coloring#
data.graph$State <- recode(data.graph$Site, "'Howland' = 'ME';'Harvard' = 'MA';'Morgan Monroe State Park' = 'IN';'Missouri Ozark' = 'MO';'Oak Openings Toledo' = 'OH'")#
data.graph$State <- factor(data.graph$State, levels=c("MO", "IN", "OH", "MA", "ME"))
ggplot(data.graph) + facet_grid(~State) +#
	scale_x_continuous(expand=c(0,0)) +#
	scale_y_continuous(expand=c(0,0)) +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam4.weights[gam4.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_line(aes(x=Year, y=BA.inc), size=2, alpha=0.5) +#
	geom_ribbon(aes(x=Year, ymin=BA.inc.lwr, ymax=BA.inc.upr), alpha=0.3) +#
	geom_line(aes(x=Year, y = 0), linetype="dashed") +#
	plot.rgb("MA", 3) +#
	plot.rgb("ME", 3) +#
	plot.rgb("OH", 3) +#
	plot.rgb("IN", 3) +#
	plot.rgb("MO", 3) +#
	labs(title= "Site", x="Year", y = expression(bold(paste("BAI (mm"^"2", "y"^"-1",")")))) +#
	poster.theme2
ggplot(data.graph) + facet_grid(State~.) +#
	scale_x_continuous(expand=c(0,0)) +#
	scale_y_continuous(expand=c(0,0)) +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam4.weights[gam4.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_line(aes(x=Year, y=BA.inc), size=2, alpha=0.5) +#
	geom_ribbon(aes(x=Year, ymin=BA.inc.lwr, ymax=BA.inc.upr), alpha=0.3) +#
	geom_line(aes(x=Year, y = 0), linetype="dashed") +#
	plot.rgb("MA", 3) +#
	plot.rgb("ME", 3) +#
	plot.rgb("OH", 3) +#
	plot.rgb("IN", 3) +#
	plot.rgb("MO", 3) +#
	labs(title= "Site", x="Year", y = expression(bold(paste("BAI (mm"^"2", "y"^"-1",")")))) +#
	poster.theme2
pdf("figures/gam4_SITE_limiting_factor.pdf", width= 13, height = 8.5)#
ggplot(data.graph) + facet_grid(State~.) +#
	scale_x_continuous(expand=c(0,0)) +#
	scale_y_continuous(expand=c(0,0)) +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam4.weights[gam4.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_line(aes(x=Year, y=BA.inc), size=2, alpha=0.5) +#
	geom_ribbon(aes(x=Year, ymin=BA.inc.lwr, ymax=BA.inc.upr), alpha=0.3) +#
	geom_line(aes(x=Year, y = 0), linetype="dashed") +#
	plot.rgb("MA", 3) +#
	plot.rgb("ME", 3) +#
	plot.rgb("OH", 3) +#
	plot.rgb("IN", 3) +#
	plot.rgb("MO", 3) +#
	labs(title= "Site", x="Year", y = expression(bold(paste("BAI (mm"^"2", "y"^"-1",")")))) +#
	poster.theme2#
dev.off()
ggplot(data.graph[!data.graph$group %in% c("BETULA", "CARYA", "FAGR", "FRAX", "SAAL"),]) + facet_grid(group~State) +#
	scale_x_continuous(expand=c(0,0), name="Year") +#
	scale_y_continuous(expand=c(0,0), name="Effect on RW (in mm)") +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam4.weights[gam4.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_line(aes(x=Year, y=fit.tmean), size=1, color="red") +#
	geom_line(aes(x=Year, y=fit.precip), size=1, color="blue") +#
	geom_line(aes(x=Year, y=fit.dbh.recon), size=1, color="green")+#
	ylim(c(0,3))
ggplot(data.graph) + facet_grid(State~.) +#
	scale_x_continuous(expand=c(0,0), name="Year") +#
	scale_y_continuous(expand=c(0,0), name="Effect on RW (in mm)") +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam4.weights[gam4.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_line(aes(x=Year, y=fit.tmean), size=1, color="red") +#
	geom_line(aes(x=Year, y=fit.precip), size=1, color="blue") +#
	geom_line(aes(x=Year, y=fit.dbh.recon), size=1, color="green")+#
	ylim(c(0,3))
summary(data.graph)
ggplot(data.graph[data.graph$State=="MA"])
ggplot(data.graph[data.graph$State=="MA",]) +
scale_x_continuous(expand=c(0,0), name="Year") +#
	scale_y_continuous(expand=c(0,0), name="Effect on RW (in mm)") +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam4.weights[gam4.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_line(aes(x=Year, y=fit.tmean), size=1, color="red") +#
	geom_line(aes(x=Year, y=fit.precip), size=1, color="blue") +#
	geom_line(aes(x=Year, y=fit.dbh.recon), size=1, color="green")+#
	ylim(c(0,3))
summary(data.graph[data.graph$State=="MA","fit.tmean"])
summary(data.graph[data.graph$State=="MA",])
plot(fit.tmean~Year, data=data.graph[data.graph$State=="MA",], type="l")
ggplot(data.graph[data.graph$State=="MA",]) + facet_grid(State~.) +#
	scale_x_continuous(expand=c(0,0), name="Year") +#
	scale_y_continuous(expand=c(0,0), name="Effect on RW (in mm)") +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam4.weights[gam4.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_line(aes(x=Year, y=fit.tmean), size=1, color="red") +#
	geom_line(aes(x=Year, y=fit.precip), size=1, color="blue") +#
	geom_line(aes(x=Year, y=fit.dbh.recon), size=1, color="green")+#
	ylim(c(0,5))
ggplot(data.graph) + facet_grid(State~.) +#
	scale_x_continuous(expand=c(0,0), name="Year") +#
	scale_y_continuous(expand=c(0,0), name="Effect on RW (in mm)") +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam4.weights[gam4.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_line(aes(x=Year, y=fit.tmean), size=1, color="red") +#
	geom_line(aes(x=Year, y=fit.precip), size=1, color="blue") +#
	geom_line(aes(x=Year, y=fit.dbh.recon), size=1, color="green")+#
	ylim(c(0,5))
ggplot(data.graph) + facet_grid(State~.) +#
	scale_x_continuous(expand=c(0,0), name="Year") +#
	scale_y_continuous(expand=c(0,0), name="Effect on RW (in mm)") +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam4.weights[gam4.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_line(aes(x=Year, y=fit.tmean), size=1, color="red") +#
	geom_line(aes(x=Year, y=fit.precip), size=1, color="blue") +#
	geom_line(aes(x=Year, y=fit.dbh.recon), size=1, color="green")+#
	ylim(c(0,5))+#
	poster.theme2
ggplot(data.graph) + facet_grid(State~.) +#
	scale_x_continuous(expand=c(0,0), name="Year") +#
	scale_y_continuous(expand=c(0,0), name="Effect on RW (in mm)") +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam4.weights[gam4.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_line(aes(x=Year, y=fit.tmean), size=1, color="red") +#
	geom_line(aes(x=Year, y=fit.precip), size=1, color="blue") +#
	geom_line(aes(x=Year, y=fit.dbh.recon), size=1, color="green")+#
	ylim(c(0,5))+#
	labs(title= "Site", x="Year", y = "Model Fits") +#
	poster.theme2
pdf("figures/gam4_influence_in_time.pdf", width= 13, height = 8.5)#
#
ggplot(data.graph) + facet_grid(State~.) +#
	scale_x_continuous(expand=c(0,0), name="Year") +#
	scale_y_continuous(expand=c(0,0), name="Effect on RW (in mm)") +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam4.weights[gam4.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_line(aes(x=Year, y=fit.tmean), size=1, color="red") +#
	geom_line(aes(x=Year, y=fit.precip), size=1, color="blue") +#
	geom_line(aes(x=Year, y=fit.dbh.recon), size=1, color="green")+#
	ylim(c(0,5))+#
	labs(title= "Site", x="Year", y = "Model Fits") +#
	poster.theme2#
dev.off()
pdf("figures/gam4_SITE_limiting_factor.pdf", width= 13, height = 8.5)#
ggplot(data.graph) + facet_grid(State~.) +#
	scale_x_continuous(expand=c(0,0)) +#
	scale_y_continuous(expand=c(0,0)) +#
	# facet_wrap(~TreeID, scales="free_y", space="free") +#
	# geom_ribbon(data=gam4.weights[gam4.weights$data.type=="Model",], aes(x=Year, ymin=Y.rel.10.lo*100, ymax=Y.rel.10.hi*100), 	alpha=0.5) +#
	geom_line(aes(x=Year, y=BA.inc), size=2, alpha=0.5) +#
	geom_ribbon(aes(x=Year, ymin=BA.inc.lwr, ymax=BA.inc.upr), alpha=0.3) +#
	geom_line(aes(x=Year, y = 0), linetype="dashed") +#
	plot.rgb("MA", 3) +#
	plot.rgb("ME", 3) +#
	plot.rgb("OH", 3) +#
	plot.rgb("IN", 3) +#
	plot.rgb("MO", 3) +#
	labs(title= "Site", x="Year", y = expression(bold(paste("BAI (mm"^"2", "y"^"-1",")")))) +#
	poster.theme2#
dev.off()
summary(sanity.lm3)
plot(sanity.gam4.df$log.BAI ~ lm3.resid, xlab="Log.BAI", ylab="Residuals", main="gam4 residuals", ylim=c(-4,4))
################################################### #
# Copied over from 0_process_gamm.R#
# This will give us the sensitivities of RW in a pretty format.#
#
# Set up a dummy dataset for the script to run correctly#
# number of simulations to run#
#
load("processed_data/gam_results/gam4_Site_level_model.Rdata")#
source("0_Calculate_GAMM_Posteriors.R")#
# Fitting our model to the data to see if we're doing a pasable job of capturing the variance#
# If things don't match, we shoudl take our sensitiivty curves with a grain of salt#
#
n <- 100#
model.pred <- post.distns(model.gam=gam4, model.name="species_response", newdata=test, vars=predictors.all, n=n, terms=F)#
summary(model.pred$ci)#
#
# Need help dealing with the list that is set up here.  Need help with the aggregation#
model.pred2 <- model.pred$ci#
summary(model.pred2)#
dim(model.pred2)#
# Aggregating to the group level in teh same way we do below with the ring widths#
# We can then compare our modeled RW to our measured RW and see how things look#
# Sanity Check #1#
#
mean.model <- aggregate(model.pred2$mean, by = model.pred2[, c("Site", "Year")], FUN=mean, na.rm=T)#
names(mean.model)[names(mean.model)=="x"] <- c("BAI.mean") #
mean.model[,"BAI.lwr"] <- aggregate(model.pred2$mean, by=model.pred2[,c("Site", "Year")], FUN=quantile, probs=0.025, na.rm=T)[,"x"]#
mean.model[,"BAI.upr"] <- aggregate(model.pred2$mean, by=model.pred2[,c("Site", "Year")], FUN=quantile, probs=0.975, na.rm=T)[,"x"]#
head(mean.model)#
# aggregating the raw data for graphing#
mean.rw <- aggregate(test$BA.inc, by=test[, c("Site", "Year")], FUN=mean, na.rm=T)#
names(mean.rw)[names(mean.rw)=="x"]<- c("BAI.mean")                  #
# mean.rw[,"rw.lwr"] <- aggregate(test$RW, by=test[,c("group", "Site", "Year")], FUN=quantile, probs=0.025, na.rm=T)[,"x"]#
# mean.rw[,"rw.upr"] <- aggregate(test$RW, by=test[,c("group", "Site", "Year")], FUN=quantile, probs=0.975, na.rm=T)[,"x"]#
# mean.rw[,"BAI.mean"] <- aggregate(test$BA.inc, by=test[,c("group", "Site", "Year")], FUN=mean, na.rm=T)[,"x"]#
mean.rw[,"BAI.lwr"] <- aggregate(test$BA.inc, by=test[,c("Site", "Year")], FUN=quantile, probs=0.025, na.rm=T)[,"x"]#
mean.rw[,"BAI.upr"] <- aggregate(test$BA.inc, by=test[,c("Site", "Year")], FUN=quantile, probs=0.975, na.rm=T)[,"x"]#
head(mean.rw)#
#
mean.rw <- mean.rw[mean.rw$Site %in% sites.use,]#
#
#mean.rw$Species <- mean.rw$group#
#
# Setting up lm between the modeled values and the observed	#
dim(mean.rw)#
dim(mean.model)#
#
# mean.rw <- mean.rw[mean.rw$group %in% mean.model$group,]#
# mean.rw <- mean.rw[mean.rw$Year %in% mean.model$Year,]#
#
summary(mean.rw); #
summary(mean.model)#
#
mean.model2 <- mean.model#
names(mean.model2)[3:5] <- c("mod.mean", "mod.lwr", "mod.up")#
#
sanity.gam4.df <- merge(mean.model2, mean.rw, all.x=T, all.y=T)#
summary(sanity.gam4.df)#
summary(sanity.gam4.df[is.na(sanity.gam4.df$mod.mean),])#
head(sanity.gam4.df[is.na(sanity.gam4.df$mod.mean),])#
#
sanity.gam4.df$log.BAI <- log(sanity.gam4.df$BAI.mean)#
#
# LM on aggregated BAI#
sanity.lm3 <- lm(mod.mean ~ log.BAI, data=sanity.gam4.df)#
lm3.resid <- resid(sanity.lm3)#
#
summary(sanity.lm3)
plot(sanity.gam4.df$log.BAI ~ lm3.resid, xlab="Log.BAI", ylab="Residuals", main="gam4 residuals", ylim=c(-4,4))#
abline(0,0)
sanity.gam4.df$log.BAI <- log(sanity.gam4.df$BAI.mean)
sanity.lm4 <- lm(mod.mean ~ log.BAI, data=sanity.gam4.df)#
lm4.resid <- resid(sanity.lm3)#
#
summary(sanity.lm4)#
#
# Graphing residuals#
#
plot(sanity.gam4.df$log.BAI ~ lm4.resid, xlab="Log.BAI", ylab="Residuals", main="gam4 residuals", ylim=c(-4,4))#
abline(0,0)
ggplot(data=mean.rw) + facet_wrap(~Site, scales="fixed") + theme_bw() +#
	# plot the data#
	geom_ribbon(aes(x=Year, ymin=BAI.lwr, ymax=BAI.upr), alpha=0.5) +#
	geom_line(aes(x=Year, y=BAI.mean), size=1) +#
	# Plot our model#
	geom_ribbon(data=mean.model, aes(x=Year, ymin=exp(BAI.lwr), ymax=exp(BAI.upr)), fill="red3", alpha=0.3) +#
	geom_line(data=mean.model, aes(x=Year, y=exp(BAI.mean)), color="red3", alpha=0.8, size=1) +#
	labs(title="Gamm Model vs. Data", x="Year", y="BAI")
ggplot(data=mean.rw) + facet_grid(Site~.), scales="fixed") + theme_bw() +#
	# plot the data#
	geom_ribbon(aes(x=Year, ymin=BAI.lwr, ymax=BAI.upr), alpha=0.5) +#
	geom_line(aes(x=Year, y=BAI.mean), size=1) +#
	# Plot our model#
	geom_ribbon(data=mean.model, aes(x=Year, ymin=exp(BAI.lwr), ymax=exp(BAI.upr)), fill="red3", alpha=0.3) +#
	geom_line(data=mean.model, aes(x=Year, y=exp(BAI.mean)), color="red3", alpha=0.8, size=1) +#
	labs(title="Gamm Model vs. Data", x="Year", y="BAI")
ggplot(data=mean.rw) + facet_grid(Site~., scales="fixed") + theme_bw() +#
	# plot the data#
	geom_ribbon(aes(x=Year, ymin=BAI.lwr, ymax=BAI.upr), alpha=0.5) +#
	geom_line(aes(x=Year, y=BAI.mean), size=1) +#
	# Plot our model#
	geom_ribbon(data=mean.model, aes(x=Year, ymin=exp(BAI.lwr), ymax=exp(BAI.upr)), fill="red3", alpha=0.3) +#
	geom_line(data=mean.model, aes(x=Year, y=exp(BAI.mean)), color="red3", alpha=0.8, size=1) +#
	labs(title="Gamm Model vs. Data", x="Year", y="BAI")
