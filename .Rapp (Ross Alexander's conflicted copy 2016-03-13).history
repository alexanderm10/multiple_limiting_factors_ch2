for(v in predictors.all[!predictors.all %in% vars.num]){#
			# if v is a factor, merge all unique values into the dataframe#
			var.temp <- data.frame(x=unique(data[,v])) #
			names(var.temp) <- v#
			new.dat <- merge(new.dat, var.temp, all.x=T, all.y=T)#
		}
summary(new.dat)
dim(new.dat)
new.dat <- data.frame(Model="Harvard.test",#
							  Extent=as.factor(paste(min(data$Year), max(data$Year), sep="-")))#
		# Figure out which vars are numeric vs. factor#
		vars.num <- vector()#
		for(v in predictors.all){#
			if(class(data[,v]) %in% c("numeric", "integer")) vars.num <- c(vars.num, v)#
		}#
		# Getting the unique values of our factor variables and adding them to the data frame#
		for(v in predictors.all[!predictors.all %in% vars.num & !predictors.all=="Species"]){#
			# if v is a factor, merge all unique values into the dataframe#
			var.temp <- data.frame(x=unique(data[,v])) #
			names(var.temp) <- v#
			new.dat <- merge(new.dat, var.temp, all.x=T, all.y=T)#
		}#
		# getting species from species.plot#
		new.dat$Species <- as.factor(substr(new.dat$spp.plot, 1, 4))
summary(new.dat)
# Putting the numerical variables into an array and adding it in #
		var.temp <- data.frame(array(dim=c(n.out, length(vars.num))))#
		names(var.temp) <- vars.num#
		for(v in vars.num){#
			var.temp[,v] <- seq(min(data[,v], na.rm=T), max(data[,v], na.rm=T), length.out=n.out)#
		}								#
		new.dat <- merge(new.dat, var.temp, all.x=T, all.y=T)
summary(new.dat)
dim(new.dat)
ci.terms.pred <- post.distns(model.gam=gamm.model, model.name=model.name, n=n, newdata=new.dat, vars=vars, terms=T)
summary(ci.terms.pred)
ci.terms.pred <- post.distns(model.gam=gamm.model, model.name=model.name, n=n, newdata=new.dat, vars=vars, terms=T)
# SOurce & run the function
source("R/0_Calculate_GAMM_Posteriors.R")
source("0_Calculate_GAMM_Posteriors.R")
ci.terms.pred <- post.distns(model.gam=gamm.model, model.name=model.name, n=n, newdata=new.dat, vars=vars, terms=T)
ci.terms.pred <- post.distns(model.gam=gam1, model.name=model.name, n=n, newdata=new.dat, vars=vars, terms=T)
ci.terms.pred <- post.distns(model.gam=gam1, model.name=model.name, n=n, newdata=new.dat, vars=predictors.all, terms=T)
ci.terms.pred <- post.distns(model.gam=gam1, model.name="Harvard.test", n=n, newdata=new.dat, vars=predictors.all, terms=T)
summary(ci.terms.pred)
summary(ci.terms.pred$ci)
ci.out <- ci.terms.pred$ci # separting out the confidence interval
ci.out$x.fac <- as.factor(paste(ci.out$x))
summary(ci.out)
ci.out[ci.out$Effect %in% vars.num, "x.fac"] <- NA # getting rid of continuous levels
ci.out$x <- as.numeric(ci.out$x) # making x numeric; will make factors NA
summary(ci.out)
ci.out[,predictors.all[!predictors.all %in% vars.num]] <- new.dat[,predictors.all[!predictors.all %in% vars.num]] # copying over our factor labels
ci.out <- ci.terms.pred$ci # separting out the confidence interval #
		ci.out[,predictors.all[!predictors.all %in% vars.num]] <- new.dat[,predictors.all[!predictors.all %in% vars.num]] # copying over our factor labels#
		ci.out$x <- as.numeric(ci.out$x) # making x numeric; will make factors NA#
		summary(ci.out)
vars.num
ggplot(data=ci.out[ci.out$Effect %in% c("tmean", "precip"), ]) + #
			facet_wrap(~Effect, scales="free_x") +#
			geom_ribbon(aes(x=x, ymin=lwr, ymax=upr, fill=Species), alpha=0.5) +#
			geom_line(aes(x=x, y=mean, color=Species))
ggplot(data=ci.out[ci.out$Effect == "dbh.recon", ]) + #
			facet_wrap(~PlotID) +#
			geom_ribbon(aes(x=x, ymin=lwr, ymax=upr, fill=Species), alpha=0.5) +#
			geom_line(aes(x=x, y=mean, color=Species))
summary(ci.out)
ci.out$PlotID <- substr(ci.out$spp.plot, 6, nchar(paste(ci.out$spp.plot)))
summary(ci.out)
ci.out$PlotID <- as.factor(substr(ci.out$spp.plot, 6, nchar(paste(ci.out$spp.plot)))) # adding a plotID factor
summary(ci.out)
ggplot(data=ci.out[ci.out$Effect == "dbh.recon", ]) + #
			facet_wrap(~PlotID) +#
			geom_ribbon(aes(x=x, ymin=lwr, ymax=upr, fill=Species), alpha=0.5) +#
			geom_line(aes(x=x, y=mean, color=Species))
library(mgcv)#
# Christy's GAMM code#
#
# gam1 <- gamm(Y ~  s(Biomass, bs="cr", k=3, by=PFT) + s(tair, k=k, by=PFT) + s(precipf, k=k, by=PFT) + s(CO2, k=k, by=PFT), random=list(PlotID=~1), data=data) #
#
# Loading in my data#
#
data.use <- read.csv("processed_data/AllSites_tree_plus_climate.csv", header=T)#
summary(data.use)
unique(data.use$site)
unique(data.use$Site)
test <- data.use[data.use$Site=="Harvard" & data.use$Site== "Morgan Monroe State Park" & data.use$Year > 1980,]
summary(test)
test <- data.use[data.use$Site==c("Harvard","Morgan Monroe State Park") & data.use$Year > 1980,]#
summary(test)
predictors.all <- c("RW", "tmean", "precip", "Species", "dbh.recon", "Canopy.Class", "spp.plot")
test <- test[complete.cases(test[,predictors.all]),]#
test <- test[test$Live.Dead=="LIVE" & !test$Canopy.Class=="F",]
'unique(test$Species)
unique(test$Species)
species.use <- c("TSCA", "QURU", "ACRU", "BEAL", "ACSA", "LITU", )
test <- test[test$Species %in% species.use,]
predictors.all <- c("RW", "tmean", "precip", "Species", "dbh.recon", "Canopy.Class", "spp.plot", "Site")
# Getting rid of observations that have NAs in the important variables#
test <- test[complete.cases(test[,predictors.all]),]#
test <- test[test$Live.Dead=="LIVE" & !test$Canopy.Class=="F",]#
#
# Subsetting to a set of species that we have enough data to feel good about#
species.use <- c("TSCA", "QURU", "ACRU", "BEAL", "ACSA", "LITU", )#
test <- test[test$Species %in% species.use,]
species.use <- c("TSCA", "QURU", "ACRU", "BEAL", "ACSA", "LITU")
test <- test[test$Species %in% species.use,]
predictors.all <- c("RW", "tmean", "precip", "Species", "dbh.recon", "Canopy.Class", "spp.plot", "Site")
test <- test[complete.cases(test[,predictors.all]),]
test <- test[test$Live.Dead=="LIVE" & !test$Canopy.Class=="F",]
species.use <- c("TSCA", "QURU", "ACRU", "BEAL", "ACSA", "LITU")#
test <- test[test$Species %in% species.use,]
summary(test)
summary(test$Live.Dead)
summary(test$Canopy.Class)
gam1 <- gamm(RW ~ s(tmean, k=3, by=Species) +#
                  s(precip, k=3, by=Species) +#
                  s(dbh.recon, k=3, by=spp.plot) +#
                  Canopy.Class,#
                  random=list(Site=~1),#
                  data=test)
gam1 <- gamm(RW ~ s(tmean, k=3, by=Species) +#
                  s(precip, k=3, by=Species) +#
                  #s(dbh.recon, k=3, by=spp.plot) +#
                  Canopy.Class,#
                  random=list(Site=~1),#
                  data=test)
gam1 <- gamm(RW ~ s(tmean, k=3, by=Species) +#
                  s(precip, k=3, by=Species) +#
                  s(dbh.recon, k=3, by=Species) +#
                  Canopy.Class,#
                  random=list(Site=~1),#
                  data=test)
gam2 <- gamm(RW ~ s(tmean, k=3, by=Canopy.Class) +#
                  s(precip, k=3, by=Canopy.Class) +#
                  s(dbh.recon, k=3, by=Canopy.Class),#
                  random=list(Site=~1),#
                  data=test)
par(mfrow=c(4,2)); plot(gam1$gam, ylim=c(-0.025, 0.025))
par(mfrow=c(4,2)); plot(gam2$gam, ylim=c(-0.025, 0.025))
gam1 <- gamm(RW ~ s(tmean, k=3, by=Species) +#
                  s(precip, k=3, by=Species) +#
                  s(dbh.recon, k=3, by=Species) +#
                  Canopy.Class,#
                  random=list(Site=~1, PlotID=~1),#
                  data=test)
gam2 <- gamm(RW ~ s(tmean, k=3, by=Canopy.Class) +#
                  s(precip, k=3, by=Canopy.Class) +#
                  s(dbh.recon, k=3, by=Canopy.Class),#
                  random=list(Site=~1, PlotID=~1),#
                  data=test)
par(mfrow=c(4,2)); plot(gam1$gam, ylim=c(-0.025, 0.025))#
 par(mfrow=c(4,2)); plot(gam2$gam, ylim=c(-0.025, 0.025))
par(mfrow=c(4,2)); plot(gam1$gam, ylim=c(-0.025, 0.025))
summary(gam1)
n <- 25 #
data <- test#
		n.out = n#
#
		new.dat <- data.frame(Model="harv_mmf.test",#
							  Extent=as.factor(paste(min(data$Year), max(data$Year), sep="-")))#
		# Figure out which vars are numeric vs. factor#
		vars.num <- vector()#
		for(v in predictors.all){#
			if(class(data[,v]) %in% c("numeric", "integer")) vars.num <- c(vars.num, v)#
		}#
		# Getting the unique values of our factor variables and adding them to the data frame#
		for(v in predictors.all[!predictors.all %in% vars.num & !predictors.all=="Species"]){#
			# if v is a factor, merge all unique values into the dataframe#
			var.temp <- data.frame(x=unique(data[,v])) #
			names(var.temp) <- v#
			new.dat <- merge(new.dat, var.temp, all.x=T, all.y=T)#
		}#
		# getting species from species.plot#
		new.dat$Species <- as.factor(substr(new.dat$spp.plot, 1, 4))#
		# Putting the numerical variables into an array and adding it in #
		var.temp <- data.frame(array(dim=c(n.out, length(vars.num))))#
		names(var.temp) <- vars.num#
		for(v in vars.num){#
			var.temp[,v] <- seq(min(data[,v], na.rm=T), max(data[,v], na.rm=T), length.out=n.out)#
		}								#
		new.dat <- merge(new.dat, var.temp, all.x=T, all.y=T)#
		summary(new.dat)#
		# SOurce & run the function#
		source("0_Calculate_GAMM_Posteriors.R")#
		ci.terms.pred <- post.distns(model.gam=gam1, model.name="Harvard.test", n=n, newdata=new.dat, vars=predictors.all, terms=T)#
		ci.out <- ci.terms.pred$ci # separting out the confidence interval #
		ci.out[,predictors.all[!predictors.all %in% vars.num]] <- new.dat[,predictors.all[!predictors.all %in% vars.num]] # copying over our factor labels#
		ci.out$x <- as.numeric(ci.out$x) # making x numeric; will make factors NA#
		summary(ci.out)#
		ggplot(data=ci.out[ci.out$Effect %in% c("tmean", "precip"), ]) + #
			facet_wrap(~Effect, scales="free_x") +#
			geom_ribbon(aes(x=x, ymin=lwr, ymax=upr, fill=Species), alpha=0.5) +#
			geom_line(aes(x=x, y=mean, color=Species))#
		ci.out$PlotID <- as.factor(substr(ci.out$spp.plot, 6, nchar(paste(ci.out$spp.plot)))) # adding a plotID factor#
		summary(ci.out)#
		ggplot(data=ci.out[ci.out$Effect == "dbh.recon", ]) + #
			facet_wrap(~PlotID) +#
			geom_ribbon(aes(x=x, ymin=lwr, ymax=upr, fill=Species), alpha=0.5) +#
			geom_line(aes(x=x, y=mean, color=Species))
library(ggplot2)
ggplot(data=ci.out[ci.out$Effect %in% c("tmean", "precip"), ]) + #
			facet_wrap(~Effect, scales="free_x") +#
			geom_ribbon(aes(x=x, ymin=lwr, ymax=upr, fill=Species), alpha=0.5) +#
			geom_line(aes(x=x, y=mean, color=Species))
ci.out$PlotID <- as.factor(substr(ci.out$spp.plot, 6, nchar(paste(ci.out$spp.plot)))) # adding a plotID factor#
		summary(ci.out)
ggplot(data=ci.out[ci.out$Effect == "dbh.recon", ]) + #
			facet_wrap(~PlotID) +#
			geom_ribbon(aes(x=x, ymin=lwr, ymax=upr, fill=Species), alpha=0.5) +#
			geom_line(aes(x=x, y=mean, color=Species))
ggplot(data=ci.out[ci.out$Effect == "RW", ]) + #
			facet_wrap(~PlotID) +#
			geom_ribbon(aes(x=x, ymin=lwr, ymax=upr, fill=Species), alpha=0.5) +#
			geom_line(aes(x=x, y=mean, color=Species))
ggplot(data=ci.out[ci.out$Effect == "Canopy.Class", ]) + #
			facet_wrap(~PlotID) +#
			geom_ribbon(aes(x=x, ymin=lwr, ymax=upr, fill=Species), alpha=0.5) +#
			geom_line(aes(x=x, y=mean, color=Species))
ggplot(data=ci.out[ci.out$Effect == "dbh.recon", ]) + #
			facet_wrap(~PlotID) +#
			geom_ribbon(aes(x=x, ymin=lwr, ymax=upr, fill=Species), alpha=0.5) +#
			geom_line(aes(x=x, y=mean, color=Species))
n <- 100#
data <- test
n.out = n#
#
		new.dat <- data.frame(Model="harv_mmf_species.test",#
							  Extent=as.factor(paste(min(data$Year), max(data$Year), sep="-")))#
		# Figure out which vars are numeric vs. factor#
		vars.num <- vector()#
		for(v in predictors.all){#
			if(class(data[,v]) %in% c("numeric", "integer")) vars.num <- c(vars.num, v)#
		}#
		# Getting the unique values of our factor variables and adding them to the data frame#
		for(v in predictors.all[!predictors.all %in% vars.num & !predictors.all=="Species"]){#
			# if v is a factor, merge all unique values into the dataframe#
			var.temp <- data.frame(x=unique(data[,v])) #
			names(var.temp) <- v#
			new.dat <- merge(new.dat, var.temp, all.x=T, all.y=T)#
		}#
		# getting species from species.plot#
		new.dat$Species <- as.factor(substr(new.dat$spp.plot, 1, 4))#
		# Putting the numerical variables into an array and adding it in #
		var.temp <- data.frame(array(dim=c(n.out, length(vars.num))))#
		names(var.temp) <- vars.num#
		for(v in vars.num){#
			var.temp[,v] <- seq(min(data[,v], na.rm=T), max(data[,v], na.rm=T), length.out=n.out)#
		}								#
		new.dat <- merge(new.dat, var.temp, all.x=T, all.y=T)#
		summary(new.dat)#
		# SOurce & run the function#
		source("0_Calculate_GAMM_Posteriors.R")#
		ci.terms.pred <- post.distns(model.gam=gam1, model.name="harv_mmf_species.test", n=n, newdata=new.dat, vars=predictors.all, terms=T)#
		ci.out <- ci.terms.pred$ci # separting out the confidence interval #
		ci.out[,predictors.all[!predictors.all %in% vars.num]] <- new.dat[,predictors.all[!predictors.all %in% vars.num]] # copying over our factor labels#
		ci.out$x <- as.numeric(ci.out$x) # making x numeric; will make factors NA#
		summary(ci.out)#
		ggplot(data=ci.out[ci.out$Effect %in% c("tmean", "precip"), ]) + #
			facet_wrap(~Effect, scales="free_x") +#
			geom_ribbon(aes(x=x, ymin=lwr, ymax=upr, fill=Species), alpha=0.5) +#
			geom_line(aes(x=x, y=mean, color=Species))#
		ci.out$PlotID <- as.factor(substr(ci.out$spp.plot, 6, nchar(paste(ci.out$spp.plot)))) # adding a plotID factor#
		summary(ci.out)
ggplot(data=ci.out[ci.out$Effect %in% c("tmean", "precip"), ]) + #
			facet_wrap(~Effect, scales="free_x") +#
			geom_ribbon(aes(x=x, ymin=lwr, ymax=upr, fill=Species), alpha=0.5) +#
			geom_line(aes(x=x, y=mean, color=Species))
ci.out$PlotID <- as.factor(substr(ci.out$spp.plot, 6, nchar(paste(ci.out$spp.plot)))) # adding a plotID factor#
		summary(ci.out)
ggplot(data=ci.out[ci.out$Effect == "dbh.recon", ]) + #
			facet_wrap(~PlotID) +#
			geom_ribbon(aes(x=x, ymin=lwr, ymax=upr, fill=Species), alpha=0.5) +#
			geom_line(aes(x=x, y=mean, color=Species))
n <- 100 #
data <- test#
		n.out = n#
#
		new.dat <- data.frame(Model="harv_mmf_cc.test",#
							  Extent=as.factor(paste(min(data$Year), max(data$Year), sep="-")))#
		# Figure out which vars are numeric vs. factor#
		vars.num <- vector()#
		for(v in predictors.all){#
			if(class(data[,v]) %in% c("numeric", "integer")) vars.num <- c(vars.num, v)#
		}#
		# Getting the unique values of our factor variables and adding them to the data frame#
		for(v in predictors.all[!predictors.all %in% vars.num & !predictors.all=="Species"]){#
			# if v is a factor, merge all unique values into the dataframe#
			var.temp <- data.frame(x=unique(data[,v])) #
			names(var.temp) <- v#
			new.dat <- merge(new.dat, var.temp, all.x=T, all.y=T)#
		}#
		# getting species from species.plot#
		new.dat$Species <- as.factor(substr(new.dat$spp.plot, 1, 4))#
		# Putting the numerical variables into an array and adding it in #
		var.temp <- data.frame(array(dim=c(n.out, length(vars.num))))#
		names(var.temp) <- vars.num#
		for(v in vars.num){#
			var.temp[,v] <- seq(min(data[,v], na.rm=T), max(data[,v], na.rm=T), length.out=n.out)#
		}								#
		new.dat <- merge(new.dat, var.temp, all.x=T, all.y=T)#
		summary(new.dat)#
		# SOurce & run the function#
		source("0_Calculate_GAMM_Posteriors.R")#
		ci.terms.pred <- post.distns(model.gam=gam2, model.name="harv_mmf_cc.test", n=n, newdata=new.dat, vars=predictors.all, terms=T)#
		ci.out <- ci.terms.pred$ci # separting out the confidence interval #
		ci.out[,predictors.all[!predictors.all %in% vars.num]] <- new.dat[,predictors.all[!predictors.all %in% vars.num]] # copying over our factor labels#
		ci.out$x <- as.numeric(ci.out$x) # making x numeric; will make factors NA#
		summary(ci.out)
ggplot(data=ci.out[ci.out$Effect %in% c("tmean", "precip"), ]) + #
			facet_wrap(~Effect, scales="free_x") +#
			geom_ribbon(aes(x=x, ymin=lwr, ymax=upr, fill=Species), alpha=0.5) +#
			geom_line(aes(x=x, y=mean, color=Species))
ci.out$PlotID <- as.factor(substr(ci.out$spp.plot, 6, nchar(paste(ci.out$spp.plot)))) # adding a plotID factor#
		summary(ci.out)
ggplot(data=ci.out[ci.out$Effect == "dbh.recon", ]) + #
			facet_wrap(~PlotID) +#
			geom_ribbon(aes(x=x, ymin=lwr, ymax=upr, fill=Species), alpha=0.5) +#
			geom_line(aes(x=x, y=mean, color=Species))
gam2 <- gamm(RW ~ s(tmean, k=3, by=Canopy.Class) +#
                  s(precip, k=3, by=Canopy.Class) +#
                  s(dbh.recon, k=3, by=Canopy.Class)+#
                  Species,#
                  random=list(Site=~1, PlotID=~1),#
                  data=test)
#----------------------------------------------#
# Gam2 graphs#
n <- 100 #
data <- test#
		n.out = n#
#
		new.dat <- data.frame(Model="harv_mmf_cc.test",#
							  Extent=as.factor(paste(min(data$Year), max(data$Year), sep="-")))#
		# Figure out which vars are numeric vs. factor#
		vars.num <- vector()#
		for(v in predictors.all){#
			if(class(data[,v]) %in% c("numeric", "integer")) vars.num <- c(vars.num, v)#
		}#
		# Getting the unique values of our factor variables and adding them to the data frame#
		for(v in predictors.all[!predictors.all %in% vars.num & !predictors.all=="Species"]){#
			# if v is a factor, merge all unique values into the dataframe#
			var.temp <- data.frame(x=unique(data[,v])) #
			names(var.temp) <- v#
			new.dat <- merge(new.dat, var.temp, all.x=T, all.y=T)#
		}#
		# getting species from species.plot#
		new.dat$Species <- as.factor(substr(new.dat$spp.plot, 1, 4))#
		# Putting the numerical variables into an array and adding it in #
		var.temp <- data.frame(array(dim=c(n.out, length(vars.num))))#
		names(var.temp) <- vars.num#
		for(v in vars.num){#
			var.temp[,v] <- seq(min(data[,v], na.rm=T), max(data[,v], na.rm=T), length.out=n.out)#
		}								#
		new.dat <- merge(new.dat, var.temp, all.x=T, all.y=T)#
		summary(new.dat)#
		# SOurce & run the function#
		source("0_Calculate_GAMM_Posteriors.R")#
		ci.terms.pred <- post.distns(model.gam=gam2, model.name="harv_mmf_cc.test", n=n, newdata=new.dat, vars=predictors.all, terms=T)#
		ci.out <- ci.terms.pred$ci # separting out the confidence interval #
		ci.out[,predictors.all[!predictors.all %in% vars.num]] <- new.dat[,predictors.all[!predictors.all %in% vars.num]] # copying over our factor labels#
		ci.out$x <- as.numeric(ci.out$x) # making x numeric; will make factors NA#
		summary(ci.out)
ggplot(data=ci.out[ci.out$Effect %in% c("tmean", "precip"), ]) + #
			facet_wrap(~Effect, scales="free_x") +#
			geom_ribbon(aes(x=x, ymin=lwr, ymax=upr, fill=Species), alpha=0.5) +#
			geom_line(aes(x=x, y=mean, color=Species))
ci.out$PlotID <- as.factor(substr(ci.out$spp.plot, 6, nchar(paste(ci.out$spp.plot)))) # adding a plotID factor#
		summary(ci.out)
ggplot(data=ci.out[ci.out$Effect == "dbh.recon", ]) + #
			facet_wrap(~PlotID) +#
			geom_ribbon(aes(x=x, ymin=lwr, ymax=upr, fill=Species), alpha=0.5) +#
			geom_line(aes(x=x, y=mean, color=Species))
summary(test)
unique(data.use$Species)
unique(data.use$Site)
test <- data.use[data.use$Site==c("Harvard",#
								  "Morgan Monroe State Park", #
								  "Missouri Ozark", #
								  "Oak Openings",#
								  "Howland"),]
test <- data.use[data.use$Site==c("Harvard", "Morgan Monroe State Park", "Missouri Ozark", "Oak Openings", "Howland"),]
test <- data.use[data.use$Site==c("Harvard", "Morgan Monroe State Park", "Missouri Ozark"),]
library(mgcv)#
# Christy's GAMM code#
#
# gam1 <- gamm(Y ~  s(Biomass, bs="cr", k=3, by=PFT) + s(tair, k=k, by=PFT) + s(precipf, k=k, by=PFT) + s(CO2, k=k, by=PFT), random=list(PlotID=~1), data=data) #
#
# Loading in my data#
#
data.use <- read.csv("processed_data/AllSites_tree_plus_climate.csv", header=T)#
summary(data.use)
test <- data.use[data.use$Site==c("Harvard", "Morgan Monroe State Park", "Missouri Ozark"),]
test <- data.use[data.use$Site==c("Harvard", "Morgan Monroe State Park"),]
test <- data.use[data.use$Site==c("Harvard", "Morgan Monroe State Park", "Missouri Ozark", "Oak Openings", "Howland") & data.use$Year > 1905,]
test <- data.use[data.use$Site==c("Harvard", "Morgan Monroe State Park", "Missouri Ozark", "Oak Openings", "Howland") & data.use$Year > 1920,]
test <- data.use[data.use$Site==c("Harvard", "Morgan Monroe State Park", "Missouri Ozark", "Oak Openings", "Howland") & data.use$Year > 1980,]
test <- data.use[data.use$Site==c("Harvard","Morgan Monroe State Park") & data.use$Year > 1980,]
library(mgcv)#
# Christy's GAMM code#
#
# gam1 <- gamm(Y ~  s(Biomass, bs="cr", k=3, by=PFT) + s(tair, k=k, by=PFT) + s(precipf, k=k, by=PFT) + s(CO2, k=k, by=PFT), random=list(PlotID=~1), data=data) #
#
# Loading in my data#
#
data.use <- read.csv("processed_data/AllSites_tree_plus_climate.csv", header=T)#
summary(data.use)
test <- data.use[data.use$Site==c("Harvard","Morgan Monroe State Park") & data.use$Year > 1980,]
library(mgcv)#
# Christy's GAMM code#
#
# gam1 <- gamm(Y ~  s(Biomass, bs="cr", k=3, by=PFT) + s(tair, k=k, by=PFT) + s(precipf, k=k, by=PFT) + s(CO2, k=k, by=PFT), random=list(PlotID=~1), data=data) #
#
# Loading in my data#
#
data.use <- read.csv("processed_data/AllSites_tree_plus_climate.csv", header=T)#
summary(data.use)#
#
# reducing the amount of data for the test runs#
#
test <- data.use[data.use$Site==c("Harvard","Morgan Monroe State Park") & data.use$Year > 1980,]#
summary(test)
test <- data.use[data.use$Site=="Harvard" & data.use$Year > 1980,]
summary(test)
test <- data.use[data.use$Site=="Harvard" & data.use$Year > 1950,]#
summary(test)
test <- data.use[data.use$Site=="Harvard",]
summary(test)
# Get a list of what predictors & responses I'm using#
predictors.all <- c("RW", "tmean", "precip", "Species", "dbh.recon", "Canopy.Class", "spp.plot", "Site")#
#
# Getting rid of observations that have NAs in the important variables#
test <- test[complete.cases(test[,predictors.all]),]#
test <- test[test$Live.Dead=="LIVE" & !test$Canopy.Class=="F",]#
#
# Subsetting to a set of species that we have enough data to feel good about#
species.use <- c("TSCA", "QURU", "ACRU", "BEAL", "ACSA", "LITU")#
test <- test[test$Species %in% species.use,]
gam1 <- gamm(RW ~ s(tmean, k=3, by=Species) +#
                  s(precip, k=3, by=Species) +#
                  s(dbh.recon, k=3, by=Species) +#
                  Canopy.Class,#
                  random=list(Site=~1, PlotID=~1),#
                  data=test)#
#
gam2 <- gamm(RW ~ s(tmean, k=3, by=Canopy.Class) +#
                  s(precip, k=3, by=Canopy.Class) +#
                  s(dbh.recon, k=3, by=Canopy.Class)+#
                  Species,#
                  random=list(Site=~1, PlotID=~1),#
                  data=test)
# Gam2 graphs#
n <- 100 #
data <- test#
		n.out = n#
#
		new.dat <- data.frame(Model="harv_mmf_cc.test",#
							  Extent=as.factor(paste(min(data$Year), max(data$Year), sep="-")))#
		# Figure out which vars are numeric vs. factor#
		vars.num <- vector()#
		for(v in predictors.all){#
			if(class(data[,v]) %in% c("numeric", "integer")) vars.num <- c(vars.num, v)#
		}#
		# Getting the unique values of our factor variables and adding them to the data frame#
		for(v in predictors.all[!predictors.all %in% vars.num & !predictors.all=="Species"]){#
			# if v is a factor, merge all unique values into the dataframe#
			var.temp <- data.frame(x=unique(data[,v])) #
			names(var.temp) <- v#
			new.dat <- merge(new.dat, var.temp, all.x=T, all.y=T)#
		}#
		# getting species from species.plot#
		new.dat$Species <- as.factor(substr(new.dat$spp.plot, 1, 4))#
		# Putting the numerical variables into an array and adding it in #
		var.temp <- data.frame(array(dim=c(n.out, length(vars.num))))#
		names(var.temp) <- vars.num#
		for(v in vars.num){#
			var.temp[,v] <- seq(min(data[,v], na.rm=T), max(data[,v], na.rm=T), length.out=n.out)#
		}								#
		new.dat <- merge(new.dat, var.temp, all.x=T, all.y=T)#
		summary(new.dat)#
		# SOurce & run the function#
		source("0_Calculate_GAMM_Posteriors.R")#
		ci.terms.pred <- post.distns(model.gam=gam2, model.name="harv_mmf_cc.test", n=n, newdata=new.dat, vars=predictors.all, terms=T)#
		ci.out <- ci.terms.pred$ci # separting out the confidence interval #
		ci.out[,predictors.all[!predictors.all %in% vars.num]] <- new.dat[,predictors.all[!predictors.all %in% vars.num]] # copying over our factor labels#
		ci.out$x <- as.numeric(ci.out$x) # making x numeric; will make factors NA#
		summary(ci.out)
ggplot(data=ci.out[ci.out$Effect %in% c("tmean", "precip"), ]) + #
			facet_wrap(~Effect, scales="free_x") +#
			geom_ribbon(aes(x=x, ymin=lwr, ymax=upr, fill=Species), alpha=0.5) +#
			geom_line(aes(x=x, y=mean, color=Species))
library(ggplot2)
ggplot(data=ci.out[ci.out$Effect %in% c("tmean", "precip"), ]) + #
			facet_wrap(~Effect, scales="free_x") +#
			geom_ribbon(aes(x=x, ymin=lwr, ymax=upr, fill=Species), alpha=0.5) +#
			geom_line(aes(x=x, y=mean, color=Species))
ggplot(data=ci.out[ci.out$Effect == "dbh.recon", ]) + #
			facet_wrap(~PlotID) +#
			geom_ribbon(aes(x=x, ymin=lwr, ymax=upr, fill=Species), alpha=0.5) +#
			geom_line(aes(x=x, y=mean, color=Species))
ci.out$PlotID <- as.factor(substr(ci.out$spp.plot, 6, nchar(paste(ci.out$spp.plot)))) # adding a plotID factor#
		summary(ci.out)#
		ggplot(data=ci.out[ci.out$Effect == "dbh.recon", ]) + #
			facet_wrap(~PlotID) +#
			geom_ribbon(aes(x=x, ymin=lwr, ymax=upr, fill=Species), alpha=0.5) +#
			geom_line(aes(x=x, y=mean, color=Species))
n <- 100 #
data <- test#
		n.out = n#
#
		new.dat <- data.frame(Model="harv_mmf_cc.test",#
							  Extent=as.factor(paste(min(data$Year), max(data$Year), sep="-")))#
		# Figure out which vars are numeric vs. factor#
		vars.num <- vector()#
		for(v in predictors.all){#
			if(class(data[,v]) %in% c("numeric", "integer")) vars.num <- c(vars.num, v)#
		}#
		# Getting the unique values of our factor variables and adding them to the data frame#
		for(v in predictors.all[!predictors.all %in% vars.num & !predictors.all=="Species"]){#
			# if v is a factor, merge all unique values into the dataframe#
			var.temp <- data.frame(x=unique(data[,v])) #
			names(var.temp) <- v#
			new.dat <- merge(new.dat, var.temp, all.x=T, all.y=T)#
		}#
		# getting species from species.plot#
		new.dat$Species <- as.factor(substr(new.dat$spp.plot, 1, 4))#
		# Putting the numerical variables into an array and adding it in #
		var.temp <- data.frame(array(dim=c(n.out, length(vars.num))))#
		names(var.temp) <- vars.num#
		for(v in vars.num){#
			var.temp[,v] <- seq(min(data[,v], na.rm=T), max(data[,v], na.rm=T), length.out=n.out)#
		}								#
		new.dat <- merge(new.dat, var.temp, all.x=T, all.y=T)#
		summary(new.dat)#
		# SOurce & run the function#
		source("0_Calculate_GAMM_Posteriors.R")#
		ci.terms.pred <- post.distns(model.gam=gam2, model.name="harv_mmf_cc.test", n=n, newdata=new.dat, vars=predictors.all, terms=T)#
		ci.out <- ci.terms.pred$ci # separting out the confidence interval #
		ci.out[,predictors.all[!predictors.all %in% vars.num]] <- new.dat[,predictors.all[!predictors.all %in% vars.num]] # copying over our factor labels#
		ci.out$x <- as.numeric(ci.out$x) # making x numeric; will make factors NA#
		summary(ci.out)#
		ggplot(data=ci.out[ci.out$Effect %in% c("tmean", "precip"), ]) + #
			facet_wrap(~Effect, scales="free_x") +#
			geom_ribbon(aes(x=x, ymin=lwr, ymax=upr, fill=Species), alpha=0.5) +#
			geom_line(aes(x=x, y=mean, color=Species))
ci.out$PlotID <- as.factor(substr(ci.out$spp.plot, 6, nchar(paste(ci.out$spp.plot)))) # adding a plotID factor#
		summary(ci.out)#
		ggplot(data=ci.out[ci.out$Effect == "dbh.recon", ]) + #
			facet_wrap(~PlotID) +#
			geom_ribbon(aes(x=x, ymin=lwr, ymax=upr, fill=Species), alpha=0.5) +#
			geom_line(aes(x=x, y=mean, color=Species))
library(mgcv)#
library(ggplot2)#
# Christy's GAMM code#
#
# gam1 <- gamm(Y ~  s(Biomass, bs="cr", k=3, by=PFT) + s(tair, k=k, by=PFT) + s(precipf, k=k, by=PFT) + s(CO2, k=k, by=PFT), random=list(PlotID=~1), data=data) #
#
# Loading in my data#
#
data.use <- read.csv("processed_data/AllSites_tree_plus_climate.csv", header=T)#
summary(data.use)#
#
# reducing the amount of data for the test runs#
#
test <- data.use[data.use$Site=="Harvard",]#
summary(test)#
#
# Get a list of what predictors & responses I'm using#
predictors.all <- c("RW", "tmean", "precip", "Species", "dbh.recon", "Canopy.Class", "spp.plot", "Site")
unique(data.use$Site)
test <- data.use[data.use$Site==c("Harvard", "Morgan Monroe State Forest"),]
summary(test)
test <- data.use[data.use$Site==c("Harvard", "Morgan Monroe State Forest"),]
test <- data.use[data.use$Site==c("Harvard", "Morgan Monroe State Forest") $ data.use$Year > 1980,]
test <- data.use[data.use$Site==c("Harvard", "Morgan Monroe State Forest") & data.use$Year > 1980,]#
summary(test)
test <- data.use[data.use$Site==c("Harvard", "Morgan Monroe State Forest") & data.use$Year > 1980,]
ls()
rm(ls())
rm(list=ls())
library(mgcv)#
library(ggplot2)#
# Christy's GAMM code#
#
# gam1 <- gamm(Y ~  s(Biomass, bs="cr", k=3, by=PFT) + s(tair, k=k, by=PFT) + s(precipf, k=k, by=PFT) + s(CO2, k=k, by=PFT), random=list(PlotID=~1), data=data) #
#
# Loading in my data#
#
data.use <- read.csv("processed_data/AllSites_tree_plus_climate.csv", header=T)#
summary(data.use)#
#
# reducing the amount of data for the test runs
test <- data.use[data.use$Site==c("Harvard", "Morgan Monroe State Forest") & data.use$Year > 1980,]
test <- data.use[data.use$Site==c("Harvard", "Oak Openings") & data.use$Year > 1980,]#
summary(test)
test <- data.use[data.use$Site==c("Harvard", "Oak Openings") & data.use$Year > 1980,]
data.use$Site==c("Harvard", "Oak Openings")
data.use$Site==c("Harvard", "Oak Openings")
test <- data.use[data.use$Site==c("Harvard", "Oak Openings", "Missouri Ozarks") & data.use$Year > 1980,]
unique(data.use$Site)
test <- data.use[data.use$Site==c("Harvard", "Oak Openings Toledo", "Missouri Ozark", "Morgan Monroe State Park") & data.use$Year > 1980,]
data.use$Site==c("Harvard", "Oak Openings Toledo", "Missouri Ozark", "Morgan Monroe State Park")
unique(data.use$Site)
test <- data.use[data.use$Site==c("Harvard", "Oak Openings Toledo", "Missouri Ozark", "Morgan Monroe State Park") & data.use$Year > 1980,]
data.use$Site==c("Harvard", "Oak Openings Toledo", "Missouri Ozark", "Morgan Monroe State Park")
test <- data.use[data.use$Site== "Morgan Monroe State Park" & data.use$Year > 1980,]
summary(test)
summary(test)#
#
# Get a list of what predictors & responses I'm using#
predictors.all <- c("RW", "tmean", "precip", "Species", "dbh.recon", "Canopy.Class", "spp.plot", "Site")#
#
# Getting rid of observations that have NAs in the important variables#
test <- test[complete.cases(test[,predictors.all]),]#
test <- test[test$Live.Dead=="LIVE" & !test$Canopy.Class=="F",]#
#
# Subsetting to a set of species that we have enough data to feel good about#
species.use <- c("TSCA", "QURU", "ACRU", "BEAL", "ACSA", "LITU")#
test <- test[test$Species %in% species.use,]#
#
summary(test)#
summary(test$Live.Dead)#
summary(test$Canopy.Class)
gam1 <- gamm(RW ~ s(tmean, k=3, by=Species) +#
                  s(precip, k=3, by=Species) +#
                  s(dbh.recon, k=3, by=Species) +#
                  Canopy.Class,#
                  random=list(Site=~1, PlotID=~1),#
                  data=test)#
#
gam2 <- gamm(RW ~ s(tmean, k=3, by=Canopy.Class) +#
                  s(precip, k=3, by=Canopy.Class) +#
                  s(dbh.recon, k=3, by=Canopy.Class)+#
                  Species,#
                  random=list(Site=~1, PlotID=~1),#
                  data=test)
n <- 100#
data <- test#
		n.out = n#
#
		new.dat <- data.frame(Model="harv_mmf_species.test",#
							  Extent=as.factor(paste(min(data$Year), max(data$Year), sep="-")))#
		# Figure out which vars are numeric vs. factor#
		vars.num <- vector()#
		for(v in predictors.all){#
			if(class(data[,v]) %in% c("numeric", "integer")) vars.num <- c(vars.num, v)#
		}#
		# Getting the unique values of our factor variables and adding them to the data frame#
		for(v in predictors.all[!predictors.all %in% vars.num & !predictors.all=="Species"]){#
			# if v is a factor, merge all unique values into the dataframe#
			var.temp <- data.frame(x=unique(data[,v])) #
			names(var.temp) <- v#
			new.dat <- merge(new.dat, var.temp, all.x=T, all.y=T)#
		}#
		# getting species from species.plot#
		new.dat$Species <- as.factor(substr(new.dat$spp.plot, 1, 4))#
		# Putting the numerical variables into an array and adding it in #
		var.temp <- data.frame(array(dim=c(n.out, length(vars.num))))#
		names(var.temp) <- vars.num#
		for(v in vars.num){#
			var.temp[,v] <- seq(min(data[,v], na.rm=T), max(data[,v], na.rm=T), length.out=n.out)#
		}								#
		new.dat <- merge(new.dat, var.temp, all.x=T, all.y=T)#
		summary(new.dat)#
		# SOurce & run the function#
		source("0_Calculate_GAMM_Posteriors.R")#
		ci.terms.pred <- post.distns(model.gam=gam1, model.name="harv_mmf_species.test", n=n, newdata=new.dat, vars=predictors.all, terms=T)#
		ci.out <- ci.terms.pred$ci # separting out the confidence interval #
		ci.out[,predictors.all[!predictors.all %in% vars.num]] <- new.dat[,predictors.all[!predictors.all %in% vars.num]] # copying over our factor labels#
		ci.out$x <- as.numeric(ci.out$x) # making x numeric; will make factors NA#
		summary(ci.out)
ggplot(data=ci.out[ci.out$Effect %in% c("tmean", "precip"), ]) + #
			facet_wrap(~Effect, scales="free_x") +#
			geom_ribbon(aes(x=x, ymin=lwr, ymax=upr, fill=Species), alpha=0.5) +#
			geom_line(aes(x=x, y=mean, color=Species))
ci.out$PlotID <- as.factor(substr(ci.out$spp.plot, 6, nchar(paste(ci.out$spp.plot)))) # adding a plotID factor#
		summary(ci.out)#
		ggplot(data=ci.out[ci.out$Effect == "dbh.recon", ]) + #
			facet_wrap(~PlotID) +#
			geom_ribbon(aes(x=x, ymin=lwr, ymax=upr, fill=Species), alpha=0.5) +#
			geom_line(aes(x=x, y=mean, color=Species))
#----------------------------------------------#
# Gam2 graphs#
n <- 100 #
data <- test#
		n.out = n#
#
		new.dat <- data.frame(Model="harv_mmf_cc.test",#
							  Extent=as.factor(paste(min(data$Year), max(data$Year), sep="-")))#
		# Figure out which vars are numeric vs. factor#
		vars.num <- vector()#
		for(v in predictors.all){#
			if(class(data[,v]) %in% c("numeric", "integer")) vars.num <- c(vars.num, v)#
		}#
		# Getting the unique values of our factor variables and adding them to the data frame#
		for(v in predictors.all[!predictors.all %in% vars.num & !predictors.all=="Species"]){#
			# if v is a factor, merge all unique values into the dataframe#
			var.temp <- data.frame(x=unique(data[,v])) #
			names(var.temp) <- v#
			new.dat <- merge(new.dat, var.temp, all.x=T, all.y=T)#
		}#
		# getting species from species.plot#
		new.dat$Species <- as.factor(substr(new.dat$spp.plot, 1, 4))#
		# Putting the numerical variables into an array and adding it in #
		var.temp <- data.frame(array(dim=c(n.out, length(vars.num))))#
		names(var.temp) <- vars.num#
		for(v in vars.num){#
			var.temp[,v] <- seq(min(data[,v], na.rm=T), max(data[,v], na.rm=T), length.out=n.out)#
		}								#
		new.dat <- merge(new.dat, var.temp, all.x=T, all.y=T)#
		summary(new.dat)#
		# SOurce & run the function#
		source("0_Calculate_GAMM_Posteriors.R")#
		ci.terms.pred <- post.distns(model.gam=gam2, model.name="harv_mmf_cc.test", n=n, newdata=new.dat, vars=predictors.all, terms=T)#
		ci.out <- ci.terms.pred$ci # separting out the confidence interval #
		ci.out[,predictors.all[!predictors.all %in% vars.num]] <- new.dat[,predictors.all[!predictors.all %in% vars.num]] # copying over our factor labels#
		ci.out$x <- as.numeric(ci.out$x) # making x numeric; will make factors NA#
		summary(ci.out)#
		ggplot(data=ci.out[ci.out$Effect %in% c("tmean", "precip"), ]) + #
			facet_wrap(~Effect, scales="free_x") +#
			geom_ribbon(aes(x=x, ymin=lwr, ymax=upr, fill=Species), alpha=0.5) +#
			geom_line(aes(x=x, y=mean, color=Species))#
		ci.out$PlotID <- as.factor(substr(ci.out$spp.plot, 6, nchar(paste(ci.out$spp.plot)))) # adding a plotID factor#
		summary(ci.out)#
		ggplot(data=ci.out[ci.out$Effect == "dbh.recon", ]) + #
			facet_wrap(~PlotID) +#
			geom_ribbon(aes(x=x, ymin=lwr, ymax=upr, fill=Species), alpha=0.5) +#
			geom_line(aes(x=x, y=mean, color=Species))
test <- data.use[data.use$Site== "Missouri Ozark" & data.use$Year > 1980,]#
summary(test)
# Get a list of what predictors & responses I'm using#
predictors.all <- c("RW", "tmean", "precip", "Species", "dbh.recon", "Canopy.Class", "spp.plot", "Site")#
#
# Getting rid of observations that have NAs in the important variables#
test <- test[complete.cases(test[,predictors.all]),]#
test <- test[test$Live.Dead=="LIVE" & !test$Canopy.Class=="F",]#
#
# Subsetting to a set of species that we have enough data to feel good about#
species.use <- c("TSCA", "QURU", "ACRU", "BEAL", "ACSA", "LITU")#
test <- test[test$Species %in% species.use,]
gam1 <- gamm(RW ~ s(tmean, k=3, by=Species) +#
                  s(precip, k=3, by=Species) +#
                  s(dbh.recon, k=3, by=Species) +#
                  Canopy.Class,#
                  random=list(Site=~1, PlotID=~1),#
                  data=test)#
#
gam2 <- gamm(RW ~ s(tmean, k=3, by=Canopy.Class) +#
                  s(precip, k=3, by=Canopy.Class) +#
                  s(dbh.recon, k=3, by=Canopy.Class)+#
                  Species,#
                  random=list(Site=~1, PlotID=~1),#
                  data=test)
n <- 100#
data <- test#
		n.out = n#
#
		new.dat <- data.frame(Model="harv_mmf_species.test",#
							  Extent=as.factor(paste(min(data$Year), max(data$Year), sep="-")))#
		# Figure out which vars are numeric vs. factor#
		vars.num <- vector()#
		for(v in predictors.all){#
			if(class(data[,v]) %in% c("numeric", "integer")) vars.num <- c(vars.num, v)#
		}#
		# Getting the unique values of our factor variables and adding them to the data frame#
		for(v in predictors.all[!predictors.all %in% vars.num & !predictors.all=="Species"]){#
			# if v is a factor, merge all unique values into the dataframe#
			var.temp <- data.frame(x=unique(data[,v])) #
			names(var.temp) <- v#
			new.dat <- merge(new.dat, var.temp, all.x=T, all.y=T)#
		}#
		# getting species from species.plot#
		new.dat$Species <- as.factor(substr(new.dat$spp.plot, 1, 4))#
		# Putting the numerical variables into an array and adding it in #
		var.temp <- data.frame(array(dim=c(n.out, length(vars.num))))#
		names(var.temp) <- vars.num#
		for(v in vars.num){#
			var.temp[,v] <- seq(min(data[,v], na.rm=T), max(data[,v], na.rm=T), length.out=n.out)#
		}								#
		new.dat <- merge(new.dat, var.temp, all.x=T, all.y=T)#
		summary(new.dat)#
		# SOurce & run the function#
		source("0_Calculate_GAMM_Posteriors.R")#
		ci.terms.pred <- post.distns(model.gam=gam1, model.name="harv_mmf_species.test", n=n, newdata=new.dat, vars=predictors.all, terms=T)#
		ci.out <- ci.terms.pred$ci # separting out the confidence interval #
		ci.out[,predictors.all[!predictors.all %in% vars.num]] <- new.dat[,predictors.all[!predictors.all %in% vars.num]] # copying over our factor labels#
		ci.out$x <- as.numeric(ci.out$x) # making x numeric; will make factors NA#
		summary(ci.out)
ggplot(data=ci.out[ci.out$Effect %in% c("tmean", "precip"), ]) + #
			facet_wrap(~Effect, scales="free_x") +#
			geom_ribbon(aes(x=x, ymin=lwr, ymax=upr, fill=Species), alpha=0.5) +#
			geom_line(aes(x=x, y=mean, color=Species))
ci.out$PlotID <- as.factor(substr(ci.out$spp.plot, 6, nchar(paste(ci.out$spp.plot)))) # adding a plotID factor#
		summary(ci.out)#
		ggplot(data=ci.out[ci.out$Effect == "dbh.recon", ]) + #
			facet_wrap(~PlotID) +#
			geom_ribbon(aes(x=x, ymin=lwr, ymax=upr, fill=Species), alpha=0.5) +#
			geom_line(aes(x=x, y=mean, color=Species))
summary(test)
test <- data.use[data.use$Site== "Missouri Ozark" & data.use$Year > 1980,]#
summary(test)#
#
# Get a list of what predictors & responses I'm using#
predictors.all <- c("RW", "tmean", "precip", "Species", "dbh.recon", "Canopy.Class", "spp.plot", "Site")#
#
# Getting rid of observations that have NAs in the important variables#
test <- test[complete.cases(test[,predictors.all]),]#
test <- test[test$Live.Dead=="LIVE" & !test$Canopy.Class=="F",]
species.use <- c("TSCA", "QURU", "ACRU", "BEAL", "ACSA", "LITU", "QUAL", "CAOV", "CACO", "CATE", "JUVI")
test <- test[test$Species %in% species.use,]
summary(test)#
summary(test$Live.Dead)#
summary(test$Canopy.Class)#
# RW <- test$RW#
# temp <- test$tmean#
# precip <- test$precip#
# canopy <- test$Canopy.Class#
# size <- test$DBH..cm.#
# species <- unique(test$Species)#
# library(ggplot2)#
# ggplot(data=test) +#
   # facet_wrap(~PlotID) +#
   # geom_histogram(aes(x=dbh.recon))#
# ggplot(data=test) +#
   # facet_wrap(~Species) +#
   # geom_histogram(aes(x=dbh.recon))#
# hist(test$dbh.recon)#
#
################################################### #
# HERE'S THE GAMM!!!#
################################################### #
#
gam1 <- gamm(RW ~ s(tmean, k=3, by=Species) +#
                  s(precip, k=3, by=Species) +#
                  s(dbh.recon, k=3, by=Species) +#
                  Canopy.Class,#
                  random=list(Site=~1, PlotID=~1),#
                  data=test)#
#
gam2 <- gamm(RW ~ s(tmean, k=3, by=Canopy.Class) +#
                  s(precip, k=3, by=Canopy.Class) +#
                  s(dbh.recon, k=3, by=Canopy.Class)+#
                  Species,#
                  random=list(Site=~1, PlotID=~1),#
                  data=test)#
 par(mfrow=c(4,2)); plot(gam1$gam, ylim=c(-0.025, 0.025))#
 par(mfrow=c(4,2)); plot(gam2$gam, ylim=c(-0.025, 0.025))
gam1 <- gamm(RW ~ s(tmean, k=3, by=Species) +#
                  s(precip, k=3, by=Species) +#
                  s(dbh.recon, k=3, by=Species),#
                  random=list(Canopy.Class~=1),#
                  data=test)
gam1 <- gamm(RW ~ s(tmean, k=3, by=Species) +#
                  s(precip, k=3, by=Species) +#
                  s(dbh.recon, k=3, by=Species),#
                  random=list(Canopy.Class=~1),#
                  data=test)
gam1 <- gamm(RW ~ s(tmean, k=3, by=Species) +#
                  s(precip, k=3, by=Species) +#
                  s(dbh.recon, k=3, by=spp.plot),#
                  random=list(Canopy.Class=~1),#
                  data=test)
n <- 100#
data <- test#
		n.out = n#
#
		new.dat <- data.frame(Model="harv_mmf_species.test",#
							  Extent=as.factor(paste(min(data$Year), max(data$Year), sep="-")))#
		# Figure out which vars are numeric vs. factor#
		vars.num <- vector()#
		for(v in predictors.all){#
			if(class(data[,v]) %in% c("numeric", "integer")) vars.num <- c(vars.num, v)#
		}#
		# Getting the unique values of our factor variables and adding them to the data frame#
		for(v in predictors.all[!predictors.all %in% vars.num & !predictors.all=="Species"]){#
			# if v is a factor, merge all unique values into the dataframe#
			var.temp <- data.frame(x=unique(data[,v])) #
			names(var.temp) <- v#
			new.dat <- merge(new.dat, var.temp, all.x=T, all.y=T)#
		}#
		# getting species from species.plot#
		new.dat$Species <- as.factor(substr(new.dat$spp.plot, 1, 4))#
		# Putting the numerical variables into an array and adding it in #
		var.temp <- data.frame(array(dim=c(n.out, length(vars.num))))#
		names(var.temp) <- vars.num#
		for(v in vars.num){#
			var.temp[,v] <- seq(min(data[,v], na.rm=T), max(data[,v], na.rm=T), length.out=n.out)#
		}								#
		new.dat <- merge(new.dat, var.temp, all.x=T, all.y=T)#
		summary(new.dat)#
		# SOurce & run the function#
		source("0_Calculate_GAMM_Posteriors.R")#
		ci.terms.pred <- post.distns(model.gam=gam1, model.name="harv_mmf_species.test", n=n, newdata=new.dat, vars=predictors.all, terms=T)#
		ci.out <- ci.terms.pred$ci # separting out the confidence interval #
		ci.out[,predictors.all[!predictors.all %in% vars.num]] <- new.dat[,predictors.all[!predictors.all %in% vars.num]] # copying over our factor labels#
		ci.out$x <- as.numeric(ci.out$x) # making x numeric; will make factors NA#
		summary(ci.out)#
		ggplot(data=ci.out[ci.out$Effect %in% c("tmean", "precip"), ]) + #
			facet_wrap(~Effect, scales="free_x") +#
			geom_ribbon(aes(x=x, ymin=lwr, ymax=upr, fill=Species), alpha=0.5) +#
			geom_line(aes(x=x, y=mean, color=Species))
ci.out$PlotID <- as.factor(substr(ci.out$spp.plot, 6, nchar(paste(ci.out$spp.plot)))) # adding a plotID factor#
		summary(ci.out)#
		ggplot(data=ci.out[ci.out$Effect == "dbh.recon", ]) + #
			facet_wrap(~PlotID) +#
			geom_ribbon(aes(x=x, ymin=lwr, ymax=upr, fill=Species), alpha=0.5) +#
			geom_line(aes(x=x, y=mean, color=Species))
test <- data.use[data.use$Site== "Oak Openings" & data.use$Year > 1980,]
summary(test)
test <- data.use[data.use$Site== "Oak Openings Toledo" & data.use$Year > 1980,]
summary(test)
test <- data.use[data.use$Site== "Oak Openings Toledo" & data.use$Year > 1980,]#
summary(test)#
#
# Get a list of what predictors & responses I'm using#
predictors.all <- c("RW", "tmean", "precip", "Species", "dbh.recon", "Canopy.Class", "spp.plot", "Site")#
#
# Getting rid of observations that have NAs in the important variables#
test <- test[complete.cases(test[,predictors.all]),]#
test <- test[test$Live.Dead=="LIVE" & !test$Canopy.Class=="F",]#
#
# Subsetting to a set of species that we have enough data to feel good about#
species.use <- c("TSCA", "QURU", "ACRU", "BEAL", "ACSA", "LITU", "QUAL", "CAOV", "CACO", "CATE", "JUVI", "QUVE")#
test <- test[test$Species %in% species.use,]
summary(test)#
summary(test$Live.Dead)#
summary(test$Canopy.Class)#
# RW <- test$RW#
# temp <- test$tmean#
# precip <- test$precip#
# canopy <- test$Canopy.Class#
# size <- test$DBH..cm.#
# species <- unique(test$Species)#
# library(ggplot2)#
# ggplot(data=test) +#
   # facet_wrap(~PlotID) +#
   # geom_histogram(aes(x=dbh.recon))#
# ggplot(data=test) +#
   # facet_wrap(~Species) +#
   # geom_histogram(aes(x=dbh.recon))#
# hist(test$dbh.recon)#
#
################################################### #
# HERE'S THE GAMM!!!#
################################################### #
#
gam1 <- gamm(RW ~ s(tmean, k=3, by=Species) +#
                  s(precip, k=3, by=Species) +#
                  s(dbh.recon, k=3, by=spp.plot),#
                  random=list(Canopy.Class=~1),#
                  data=test)
n <- 100#
data <- test#
		n.out = n#
#
		new.dat <- data.frame(Model="harv_mmf_species.test",#
							  Extent=as.factor(paste(min(data$Year), max(data$Year), sep="-")))#
		# Figure out which vars are numeric vs. factor#
		vars.num <- vector()#
		for(v in predictors.all){#
			if(class(data[,v]) %in% c("numeric", "integer")) vars.num <- c(vars.num, v)#
		}#
		# Getting the unique values of our factor variables and adding them to the data frame#
		for(v in predictors.all[!predictors.all %in% vars.num & !predictors.all=="Species"]){#
			# if v is a factor, merge all unique values into the dataframe#
			var.temp <- data.frame(x=unique(data[,v])) #
			names(var.temp) <- v#
			new.dat <- merge(new.dat, var.temp, all.x=T, all.y=T)#
		}#
		# getting species from species.plot#
		new.dat$Species <- as.factor(substr(new.dat$spp.plot, 1, 4))#
		# Putting the numerical variables into an array and adding it in #
		var.temp <- data.frame(array(dim=c(n.out, length(vars.num))))#
		names(var.temp) <- vars.num#
		for(v in vars.num){#
			var.temp[,v] <- seq(min(data[,v], na.rm=T), max(data[,v], na.rm=T), length.out=n.out)#
		}								#
		new.dat <- merge(new.dat, var.temp, all.x=T, all.y=T)#
		summary(new.dat)#
		# SOurce & run the function#
		source("0_Calculate_GAMM_Posteriors.R")#
		ci.terms.pred <- post.distns(model.gam=gam1, model.name="harv_mmf_species.test", n=n, newdata=new.dat, vars=predictors.all, terms=T)#
		ci.out <- ci.terms.pred$ci # separting out the confidence interval #
		ci.out[,predictors.all[!predictors.all %in% vars.num]] <- new.dat[,predictors.all[!predictors.all %in% vars.num]] # copying over our factor labels#
		ci.out$x <- as.numeric(ci.out$x) # making x numeric; will make factors NA#
		summary(ci.out)#
		ggplot(data=ci.out[ci.out$Effect %in% c("tmean", "precip"), ]) + #
			facet_wrap(~Effect, scales="free_x") +#
			geom_ribbon(aes(x=x, ymin=lwr, ymax=upr, fill=Species), alpha=0.5) +#
			geom_line(aes(x=x, y=mean, color=Species))
summary(data.use)
test <- data.use[data.use$Site== "Howland" & data.use$Year > 1980,]
summary(test)
predictors.all <- c("RW", "tmean", "precip", "Species", "dbh.recon", "Canopy.Class", "spp.plot", "Site")
test <- test[complete.cases(test[,predictors.all]),]#
test <- test[test$Live.Dead=="LIVE" & !test$Canopy.Class=="F",]
species.use <- c("TSCA", "QURU", "ACRU", "BEAL", "ACSA", "LITU", "QUAL", "CAOV", "CACO", "CATE", "JUVI", "QUVE", "PCRU", "THOC", "PIST")#
test <- test[test$Species %in% species.use,]
summary(test)#
summary(test$Live.Dead)#
summary(test$Canopy.Class)
gam1 <- gamm(RW ~ s(tmean, k=3, by=Species) +#
                  s(precip, k=3, by=Species) +#
                  s(dbh.recon, k=3, by=spp.plot),#
                  random=list(Canopy.Class=~1),#
                  data=test)
n <- 100#
data <- test#
		n.out = n#
#
		new.dat <- data.frame(Model="harv_mmf_species.test",#
							  Extent=as.factor(paste(min(data$Year), max(data$Year), sep="-")))#
		# Figure out which vars are numeric vs. factor#
		vars.num <- vector()#
		for(v in predictors.all){#
			if(class(data[,v]) %in% c("numeric", "integer")) vars.num <- c(vars.num, v)#
		}#
		# Getting the unique values of our factor variables and adding them to the data frame#
		for(v in predictors.all[!predictors.all %in% vars.num & !predictors.all=="Species"]){#
			# if v is a factor, merge all unique values into the dataframe#
			var.temp <- data.frame(x=unique(data[,v])) #
			names(var.temp) <- v#
			new.dat <- merge(new.dat, var.temp, all.x=T, all.y=T)#
		}#
		# getting species from species.plot#
		new.dat$Species <- as.factor(substr(new.dat$spp.plot, 1, 4))#
		# Putting the numerical variables into an array and adding it in #
		var.temp <- data.frame(array(dim=c(n.out, length(vars.num))))#
		names(var.temp) <- vars.num#
		for(v in vars.num){#
			var.temp[,v] <- seq(min(data[,v], na.rm=T), max(data[,v], na.rm=T), length.out=n.out)#
		}								#
		new.dat <- merge(new.dat, var.temp, all.x=T, all.y=T)#
		summary(new.dat)#
		# SOurce & run the function#
		source("0_Calculate_GAMM_Posteriors.R")#
		ci.terms.pred <- post.distns(model.gam=gam1, model.name="harv_mmf_species.test", n=n, newdata=new.dat, vars=predictors.all, terms=T)#
		ci.out <- ci.terms.pred$ci # separting out the confidence interval #
		ci.out[,predictors.all[!predictors.all %in% vars.num]] <- new.dat[,predictors.all[!predictors.all %in% vars.num]] # copying over our factor labels#
		ci.out$x <- as.numeric(ci.out$x) # making x numeric; will make factors NA#
		summary(ci.out)
ggplot(data=ci.out[ci.out$Effect %in% c("tmean", "precip"), ]) + #
			facet_wrap(~Effect, scales="free_x") +#
			geom_ribbon(aes(x=x, ymin=lwr, ymax=upr, fill=Species), alpha=0.5) +#
			geom_line(aes(x=x, y=mean, color=Species))
ggplot(data=ci.out[ci.out$Effect == "dbh.recon", ]) + #
			facet_wrap(~PlotID) +#
			geom_ribbon(aes(x=x, ymin=lwr, ymax=upr, fill=Species), alpha=0.5) +#
			geom_line(aes(x=x, y=mean, color=Species))
ci.out$PlotID <- as.factor(substr(ci.out$spp.plot, 6, nchar(paste(ci.out$spp.plot)))) # adding a plotID factor#
		summary(ci.out)#
		ggplot(data=ci.out[ci.out$Effect == "dbh.recon", ]) + #
			facet_wrap(~PlotID) +#
			geom_ribbon(aes(x=x, ymin=lwr, ymax=upr, fill=Species), alpha=0.5) +#
			geom_line(aes(x=x, y=mean, color=Species))
test <- data.use[data.use$Site== c("Howland", "Harvard") & data.use$Year > 1980,]
test <- data.use[data.use$Site== "Howland" | data.use$Site== "Harvard" & data.use$Year > 1980,]
summary(test)
sites.use <- c("Harvard", "Howland", "Morgan Monroe State Park", "Oak Openings Toledo", "Missouri Ozark")
test <- data.use[data.use$Site %in% sites.use  & data.use$Year > 1980,]
summary(test)
# Get a list of what predictors & responses I'm using#
predictors.all <- c("RW", "tmean", "precip", "Species", "dbh.recon", "Canopy.Class", "spp.plot", "Site")#
#
# Getting rid of observations that have NAs in the important variables#
test <- test[complete.cases(test[,predictors.all]),]#
test <- test[test$Live.Dead=="LIVE" & !test$Canopy.Class=="F",]#
#
# Subsetting to a set of species that we have enough data to feel good about#
species.use <- c("TSCA", "QURU", "ACRU", "BEAL", "ACSA", "LITU", "QUAL", "CAOV", "CACO", "CATE", "JUVI", "QUVE", "PCRU", "THOC", "PIST")#
test <- test[test$Species %in% species.use,]
summary(test)#
summary(test$Live.Dead)#
summary(test$Canopy.Class)
gam1 <- gamm(RW ~ s(tmean, k=3, by=Species) +#
                  s(precip, k=3, by=Species) +#
                  s(dbh.recon, k=3, by=spp.plot)+#
                  Canopy.Class,#
                  random=list(Site=~1),#
                  data=test)
gam2 <- gamm(RW ~ s(tmean, k=3, by=Canopy.Class) +#
                  s(precip, k=3, by=Canopy.Class) +#
                  s(dbh.recon, k=3, by=Canopy.Class)+#
                  Species, by=Canopy.Class,#
                  random=list(Site=~1, PlotID=~1),#
                  data=test)
gam1 <- gamm(RW ~ s(tmean, k=3, by=Species) +#
                  s(precip, k=3, by=Species) +#
                  s(dbh.recon, k=3, by=Species)+#
                  Canopy.Class, by= Species,#
                  random=list(Site=~1, PlotID=~1),#
                  data=test)
gam1 <- gamm(RW ~ s(tmean, k=3, by=Species) +#
                  s(precip, k=3, by=Species) +#
                  s(dbh.recon, k=3, by=spp.plot)+#
                  Canopy.Class, by= Species,#
                  random=list(Site=~1, PlotID=~1),#
                  data=test)
gam1 <- gamm(RW ~ s(tmean, k=3, by=Species) +#
                  s(precip, k=3, by=Species) +#
                  s(dbh.recon, k=3, by=spp.plot)+#
                  Canopy.Class,#
                  random=list(Site=~1, PlotID=~1),#
                  data=test)
gam1 <- gamm(RW ~ s(tmean, k=3, by=Species) +#
                  s(precip, k=3, by=Species) +#
                  s(dbh.recon, k=3, by=spp.plot),#
                  random=list(Site=~1, PlotID=~1),#
                  data=test)
n <- 100#
data <- test#
		n.out = n#
#
		new.dat <- data.frame(Model="harv_mmf_species.test",#
							  Extent=as.factor(paste(min(data$Year), max(data$Year), sep="-")))#
		# Figure out which vars are numeric vs. factor#
		vars.num <- vector()#
		for(v in predictors.all){#
			if(class(data[,v]) %in% c("numeric", "integer")) vars.num <- c(vars.num, v)#
		}#
		# Getting the unique values of our factor variables and adding them to the data frame#
		for(v in predictors.all[!predictors.all %in% vars.num & !predictors.all=="Species"]){#
			# if v is a factor, merge all unique values into the dataframe#
			var.temp <- data.frame(x=unique(data[,v])) #
			names(var.temp) <- v#
			new.dat <- merge(new.dat, var.temp, all.x=T, all.y=T)#
		}#
		# getting species from species.plot#
		new.dat$Species <- as.factor(substr(new.dat$spp.plot, 1, 4))#
		# Putting the numerical variables into an array and adding it in #
		var.temp <- data.frame(array(dim=c(n.out, length(vars.num))))#
		names(var.temp) <- vars.num#
		for(v in vars.num){#
			var.temp[,v] <- seq(min(data[,v], na.rm=T), max(data[,v], na.rm=T), length.out=n.out)#
		}								#
		new.dat <- merge(new.dat, var.temp, all.x=T, all.y=T)#
		summary(new.dat)#
		# SOurce & run the function#
		source("0_Calculate_GAMM_Posteriors.R")#
		ci.terms.pred <- post.distns(model.gam=gam1, model.name="harv_mmf_species.test", n=n, newdata=new.dat, vars=predictors.all, terms=T)#
		ci.out <- ci.terms.pred$ci # separting out the confidence interval #
		ci.out[,predictors.all[!predictors.all %in% vars.num]] <- new.dat[,predictors.all[!predictors.all %in% vars.num]] # copying over our factor labels#
		ci.out$x <- as.numeric(ci.out$x) # making x numeric; will make factors NA#
		summary(ci.out)
ggplot(data=ci.out[ci.out$Effect %in% c("tmean", "precip"), ]) + #
			facet_wrap(~Effect, scales="free_x") +#
			geom_ribbon(aes(x=x, ymin=lwr, ymax=upr, fill=Species), alpha=0.5) +#
			geom_line(aes(x=x, y=mean, color=Species))
ggplot(data=ci.out[ci.out$Effect %in% c("tmean", "precip"), ]) + #
			facet_wrap(Site~Effect, scales="free_x") +#
			geom_ribbon(aes(x=x, ymin=lwr, ymax=upr, fill=Species), alpha=0.5) +#
			geom_line(aes(x=x, y=mean, color=Species))
ci.out$PlotID <- as.factor(substr(ci.out$spp.plot, 6, nchar(paste(ci.out$spp.plot)))) # adding a plotID factor#
		summary(ci.out)#
		ggplot(data=ci.out[ci.out$Effect == "dbh.recon", ]) + #
			facet_wrap(~PlotID) +#
			geom_ribbon(aes(x=x, ymin=lwr, ymax=upr, fill=Species), alpha=0.5) +#
			geom_line(aes(x=x, y=mean, color=Species))
ggplot(data=ci.out[ci.out$Effect == "dbh.recon", ]) + #
			facet_wrap(Site~PlotID) +#
			geom_ribbon(aes(x=x, ymin=lwr, ymax=upr, fill=Species), alpha=0.5) +#
			geom_line(aes(x=x, y=mean, color=Species))
ggplot(data=ci.out[ci.out$Effect == "dbh.recon", ]) + #
			facet_wrap(~Site*PlotID) +#
			geom_ribbon(aes(x=x, ymin=lwr, ymax=upr, fill=Species), alpha=0.5) +#
			geom_line(aes(x=x, y=mean, color=Species))
ggplot(data=ci.out[ci.out$Effect == "dbh.recon", ]) + #
			facet_wrap(~Site) +#
			geom_ribbon(aes(x=x, ymin=lwr, ymax=upr, fill=Species), alpha=0.5) +#
			geom_line(aes(x=x, y=mean, color=Species))
ggplot(data=ci.out[ci.out$Effect == "dbh.recon", ]) + #
			facet_wrap(~PlotID) +#
			geom_ribbon(aes(x=x, ymin=lwr, ymax=upr, fill=Species), alpha=0.5) +#
			geom_line(aes(x=x, y=mean, color=Species))
ggplot(data=ci.out[ci.out$Effect %in% c("tmean", "precip"), ]) + #
			facet_wrap(Site~Effect, scales="free_x") +#
			geom_ribbon(aes(x=x, ymin=lwr, ymax=upr, fill=Species), alpha=0.5) +#
			geom_line(aes(x=x, y=mean, color=Species))
ggplot(data=ci.out[ci.out$Effect %in% c("tmean", "precip"), ]) + #
			facet_wrap(~Effect, scales="free_x") +#
			geom_ribbon(aes(x=x, ymin=lwr, ymax=upr, fill=Species), alpha=0.5) +#
			geom_line(aes(x=x, y=mean, color=Species))
n <- 100 #
data <- test#
		n.out = n#
#
		new.dat <- data.frame(Model="harv_mmf_cc.test",#
							  Extent=as.factor(paste(min(data$Year), max(data$Year), sep="-")))#
		# Figure out which vars are numeric vs. factor#
		vars.num <- vector()#
		for(v in predictors.all){#
			if(class(data[,v]) %in% c("numeric", "integer")) vars.num <- c(vars.num, v)#
		}#
		# Getting the unique values of our factor variables and adding them to the data frame#
		for(v in predictors.all[!predictors.all %in% vars.num & !predictors.all=="Species"]){#
			# if v is a factor, merge all unique values into the dataframe#
			var.temp <- data.frame(x=unique(data[,v])) #
			names(var.temp) <- v#
			new.dat <- merge(new.dat, var.temp, all.x=T, all.y=T)#
		}#
		# getting species from species.plot#
		new.dat$Species <- as.factor(substr(new.dat$spp.plot, 1, 4))#
		# Putting the numerical variables into an array and adding it in #
		var.temp <- data.frame(array(dim=c(n.out, length(vars.num))))#
		names(var.temp) <- vars.num#
		for(v in vars.num){#
			var.temp[,v] <- seq(min(data[,v], na.rm=T), max(data[,v], na.rm=T), length.out=n.out)#
		}								#
		new.dat <- merge(new.dat, var.temp, all.x=T, all.y=T)#
		summary(new.dat)#
		# SOurce & run the function#
		source("0_Calculate_GAMM_Posteriors.R")#
		ci.terms.pred <- post.distns(model.gam=gam2, model.name="harv_mmf_cc.test", n=n, newdata=new.dat, vars=predictors.all, terms=T)#
		ci.out <- ci.terms.pred$ci # separting out the confidence interval #
		ci.out[,predictors.all[!predictors.all %in% vars.num]] <- new.dat[,predictors.all[!predictors.all %in% vars.num]] # copying over our factor labels#
		ci.out$x <- as.numeric(ci.out$x) # making x numeric; will make factors NA#
		summary(ci.out)
ggplot(data=ci.out[ci.out$Effect %in% c("tmean", "precip"), ]) + #
			facet_wrap(~Effect, scales="free_x") +#
			geom_ribbon(aes(x=x, ymin=lwr, ymax=upr, fill=Species), alpha=0.5) +#
			geom_line(aes(x=x, y=mean, color=Species))
gam2 <- gamm(RW ~ s(tmean, k=3, by=Canopy.Class) +#
                  s(precip, k=3, by=Canopy.Class) +#
                  s(dbh.recon, k=3, by=Canopy.Class)+#
                  Species, by=Canopy.Class,#
                  random=list(Site=~1, PlotID=~1),#
                  data=test)
n <- 100 #
data <- test#
		n.out = n#
#
		new.dat <- data.frame(Model="harv_mmf_cc.test",#
							  Extent=as.factor(paste(min(data$Year), max(data$Year), sep="-")))#
		# Figure out which vars are numeric vs. factor#
		vars.num <- vector()#
		for(v in predictors.all){#
			if(class(data[,v]) %in% c("numeric", "integer")) vars.num <- c(vars.num, v)#
		}#
		# Getting the unique values of our factor variables and adding them to the data frame#
		for(v in predictors.all[!predictors.all %in% vars.num & !predictors.all=="Species"]){#
			# if v is a factor, merge all unique values into the dataframe#
			var.temp <- data.frame(x=unique(data[,v])) #
			names(var.temp) <- v#
			new.dat <- merge(new.dat, var.temp, all.x=T, all.y=T)#
		}#
		# getting species from species.plot#
		new.dat$Species <- as.factor(substr(new.dat$spp.plot, 1, 4))#
		# Putting the numerical variables into an array and adding it in #
		var.temp <- data.frame(array(dim=c(n.out, length(vars.num))))#
		names(var.temp) <- vars.num#
		for(v in vars.num){#
			var.temp[,v] <- seq(min(data[,v], na.rm=T), max(data[,v], na.rm=T), length.out=n.out)#
		}								#
		new.dat <- merge(new.dat, var.temp, all.x=T, all.y=T)#
		summary(new.dat)#
		# SOurce & run the function#
		source("0_Calculate_GAMM_Posteriors.R")#
		ci.terms.pred <- post.distns(model.gam=gam2, model.name="harv_mmf_cc.test", n=n, newdata=new.dat, vars=predictors.all, terms=T)#
		ci.out <- ci.terms.pred$ci # separting out the confidence interval #
		ci.out[,predictors.all[!predictors.all %in% vars.num]] <- new.dat[,predictors.all[!predictors.all %in% vars.num]] # copying over our factor labels#
		ci.out$x <- as.numeric(ci.out$x) # making x numeric; will make factors NA#
		summary(ci.out)
ggplot(data=ci.out[ci.out$Effect %in% c("tmean", "precip"), ]) + #
			facet_wrap(~Effect, scales="free_x") +#
			geom_ribbon(aes(x=x, ymin=lwr, ymax=upr, fill=Species), alpha=0.5) +#
			geom_line(aes(x=x, y=mean, color=Species))
ggplot(data=ci.out[ci.out$Effect %in% c("tmean", "precip"), ]) + #
			facet_wrap(~Site, scales="free_x") +#
			geom_ribbon(aes(x=x, ymin=lwr, ymax=upr, fill=Species), alpha=0.5) +#
			geom_line(aes(x=x, y=mean, color=Species))
ggplot(data=ci.out[ci.out$Effect %in% c("tmean", "precip"), ]) + #
			facet_wrap(~Canopy Class scales="free_x") +#
			geom_ribbon(aes(x=x, ymin=lwr, ymax=upr, fill=Species), alpha=0.5) +#
			geom_line(aes(x=x, y=mean, color=Species))
ggplot(data=ci.out[ci.out$Effect %in% c("tmean", "precip"), ]) + #
			facet_wrap(~Canopy.Class scales="free_x") +#
			geom_ribbon(aes(x=x, ymin=lwr, ymax=upr, fill=Species), alpha=0.5) +#
			geom_line(aes(x=x, y=mean, color=Species))
ggplot(data=ci.out[ci.out$Effect %in% c("tmean", "precip"), ]) + #
			facet_wrap(~Canopy.Class, scales="free_x") +#
			geom_ribbon(aes(x=x, ymin=lwr, ymax=upr, fill=Species), alpha=0.5) +#
			geom_line(aes(x=x, y=mean, color=Species))
ggplot(data=ci.out[ci.out$Effect %in% c("tmean", "precip"), ]) + #
			facet_wrap(~Effect*Species, scales="free_x") +#
			geom_ribbon(aes(x=x, ymin=lwr, ymax=upr, fill=Canopy.Class), alpha=0.5) +#
			geom_line(aes(x=x, y=mean, color=Species))
ggplot(data=ci.out[ci.out$Effect %in% c("tmean", "precip"), ]) + #
			facet_wrap(~Effect, scales="free_x") +#
			geom_ribbon(aes(x=x, ymin=lwr, ymax=upr, fill=Canopy.Class), alpha=0.5) +#
			geom_line(aes(x=x, y=mean, color=Species))
ggplot(data=ci.out[ci.out$Effect %in% c("tmean", "precip"), ]) + #
			facet_wrap(~Effect, scales="free_x") +#
			geom_ribbon(aes(x=x, ymin=lwr, ymax=upr, fill=Canopy.Class), alpha=0.5) +#
			geom_line(aes(x=x, y=mean, color=Canopy.Class))
ci.terms.pred2 <- post.distns(model.gam=gam2, model.name="harv_mmf_cc.test", n=n, newdata=new.dat, vars=predictors.all, terms=T)#
		ci.out2 <- ci.terms.pred2$ci # separting out the confidence interval
ci.out2[,predictors.all[!predictors.all %in% vars.num]] <- new.dat[,predictors.all[!predictors.all %in% vars.num]] # copying over our factor labels#
		ci.out2$x <- as.numeric(ci.out$x) # making x numeric; will make factors NA#
		summary(ci.out2)
ggplot(data=ci.out2[ci.out2$Effect %in% c("tmean", "precip"), ]) + #
			facet_wrap(~Effect, scales="free_x") +#
			geom_ribbon(aes(x=x, ymin=lwr, ymax=upr, fill=Canopy.Class), alpha=0.5) +#
			geom_line(aes(x=x, y=mean, color=Canopy.Class))
ci.out2$PlotID <- as.factor(substr(ci.out$spp.plot, 6, nchar(paste(ci.out$spp.plot)))) # adding a plotID factor
summary(ci.out2)
ggplot(data=ci.out2[ci.out2$Effect == "dbh.recon", ]) + #
			facet_wrap(~PlotID) +#
			geom_ribbon(aes(x=x, ymin=lwr, ymax=upr, fill=Species), alpha=0.5) +#
			geom_line(aes(x=x, y=mean, color=Species))
ggplot(data=ci.out2[ci.out2$Effect == "dbh.recon", ]) + #
			facet_wrap(~PlotID) +#
			geom_ribbon(aes(x=x, ymin=lwr, ymax=upr, fill=Canopy.Class), alpha=0.5) +#
			geom_line(aes(x=x, y=mean, color=Canopy.Class))
ggplot(data=ci.out2[ci.out2$Effect == "dbh.recon", ]) + #
			#facet_wrap(~PlotID) +#
			geom_ribbon(aes(x=x, ymin=lwr, ymax=upr, fill=Canopy.Class), alpha=0.5) +#
			geom_line(aes(x=x, y=mean, color=Canopy.Class))
library(mgcv)#
library(ggplot2)#
# Christy's GAMM code#
#
# gam1 <- gamm(Y ~  s(Biomass, bs="cr", k=3, by=PFT) + s(tair, k=k, by=PFT) + s(precipf, k=k, by=PFT) + s(CO2, k=k, by=PFT), random=list(PlotID=~1), data=data) #
#
# Loading in my data#
#
data.use <- read.csv("processed_data/AllSites_tree_plus_climate.csv", header=T)#
summary(data.use)#
#
# reducing the amount of data for the test runs#
sites.use <- c("Harvard", "Howland", "Morgan Monroe State Park", "Oak Openings Toledo", "Missouri Ozark")
test <- data.use[data.use$Site %in% sites.use,]
summary(test)
# Get a list of what predictors & responses I'm using#
predictors.all <- c("RW", "tmean", "precip", "Species", "dbh.recon", "Canopy.Class", "spp.plot", "Site")#
#
# Getting rid of observations that have NAs in the important variables#
test <- test[complete.cases(test[,predictors.all]),]#
test <- test[test$Live.Dead=="LIVE" & !test$Canopy.Class=="F",]#
#
# Subsetting to a set of species that we have enough data to feel good about#
species.use <- c("TSCA", "QURU", "ACRU", "BEAL", "ACSA", "LITU", "QUAL", "CAOV", "CACO", "CATE", "JUVI", "QUVE", "PCRU", "THOC", "PIST")#
test <- test[test$Species %in% species.use,]
gam1 <- gamm(RW ~ s(tmean, k=3, by=Species) +#
                  s(precip, k=3, by=Species) +#
                  s(dbh.recon, k=3, by=spp.plot)+#
                  Density..stems.ha.,#
                  random=list(Site=~1, PlotID=~1),#
                  data=test)
gam1 <- gamm(RW ~ s(tmean, k=3, by=Species) +#
                  s(precip, k=3, by=Species) +#
                  s(dbh.recon, k=3, by=spp.plot)+#
                  s(Density..stems.ha., k=3, by=Species),#
                  random=list(Site=~1, PlotID=~1),#
                  data=test)
gam1 <- gamm(RW ~ s(tmean, k=3, by=Species) +#
                  s(precip, k=3, by=Species) +#
                  s(dbh.recon, k=3, by=spp.plot)+#
                  s(Density..stems.ha., k=3, by=spp.plot),#
                  random=list(Site=~1, PlotID=~1),#
                  data=test)
gam1 <- gamm(RW ~ s(tmean, k=3, by=Species) +#
                  s(precip, k=3, by=Species) +#
                  s(dbh.recon, k=3, by=spp.plot)+#
                  s(basal.area..m2.ha., k=3, by=spp.plot),#
                  random=list(Site=~1, PlotID=~1),#
                  data=test)
gam1 <- gamm(RW ~ s(tmean, k=3, by=Species) +#
                  s(precip, k=3, by=Species) +#
                  s(dbh.recon, k=3, by=spp.plot)+#
                  s(basal.area..m2.ha., k=3, by=Species),#
                  random=list(Site=~1, PlotID=~1),#
                  data=test)
gam1 <- gamm(RW ~ s(tmean, k=3, by=Species) +#
                  s(precip, k=3, by=Species) +#
                  s(dbh.recon, k=3, by=spp.plot),#
                  random=list(Site=~1, PlotID=~1),#
                  data=test)
gam1 <- gamm(RW ~ s(tmean, k=3, by=Species) +#
                  s(precip, k=3, by=Species) +#
                  s(dbh.recon, k=3, by=spp.plot)+#
                  Canopy.Class, by=Species,#
                  random=list(Site=~1, PlotID=~1),#
                  data=test)
gam1 <- gamm(RW ~ s(tmean, k=3, by=Species) +#
                  s(precip, k=3, by=Species) +#
                  s(dbh.recon, k=3, by=spp.plot)+#
                  Canopy.Class, by=spp.plot,#
                  random=list(Site=~1, PlotID=~1),#
                  data=test)
# Gam1 graphs#
n <- 100#
data <- test#
		n.out = n#
#
		new.dat <- data.frame(Model="harv_mmf_species.test",#
							  Extent=as.factor(paste(min(data$Year), max(data$Year), sep="-")))#
		# Figure out which vars are numeric vs. factor#
		vars.num <- vector()#
		for(v in predictors.all){#
			if(class(data[,v]) %in% c("numeric", "integer")) vars.num <- c(vars.num, v)#
		}#
		# Getting the unique values of our factor variables and adding them to the data frame#
		for(v in predictors.all[!predictors.all %in% vars.num & !predictors.all=="Species"]){#
			# if v is a factor, merge all unique values into the dataframe#
			var.temp <- data.frame(x=unique(data[,v])) #
			names(var.temp) <- v#
			new.dat <- merge(new.dat, var.temp, all.x=T, all.y=T)#
		}#
		# getting species from species.plot#
		new.dat$Species <- as.factor(substr(new.dat$spp.plot, 1, 4))#
		# Putting the numerical variables into an array and adding it in #
		var.temp <- data.frame(array(dim=c(n.out, length(vars.num))))#
		names(var.temp) <- vars.num#
		for(v in vars.num){#
			var.temp[,v] <- seq(min(data[,v], na.rm=T), max(data[,v], na.rm=T), length.out=n.out)#
		}								#
		new.dat <- merge(new.dat, var.temp, all.x=T, all.y=T)#
		summary(new.dat)#
		# SOurce & run the function#
		source("0_Calculate_GAMM_Posteriors.R")#
		ci.terms.pred <- post.distns(model.gam=gam1, model.name="harv_mmf_species.test", n=n, newdata=new.dat, vars=predictors.all, terms=T)#
		ci.out <- ci.terms.pred$ci # separting out the confidence interval #
		ci.out[,predictors.all[!predictors.all %in% vars.num]] <- new.dat[,predictors.all[!predictors.all %in% vars.num]] # copying over our factor labels#
		ci.out$x <- as.numeric(ci.out$x) # making x numeric; will make factors NA#
		summary(ci.out)
ggplot(data=ci.out[ci.out$Effect %in% c("tmean", "precip"), ]) + #
			facet_wrap(~Effect, scales="free_x") +#
			geom_ribbon(aes(x=x, ymin=lwr, ymax=upr, fill=Species), alpha=0.5) +#
			geom_line(aes(x=x, y=mean, color=Species))
ci.out$PlotID <- as.factor(substr(ci.out$spp.plot, 6, nchar(paste(ci.out$spp.plot)))) # adding a plotID factor#
		summary(ci.out)#
		ggplot(data=ci.out[ci.out$Effect == "dbh.recon", ]) + #
			facet_wrap(~PlotID) +#
			geom_ribbon(aes(x=x, ymin=lwr, ymax=upr, fill=Species), alpha=0.5) +#
			geom_line(aes(x=x, y=mean, color=Species))
